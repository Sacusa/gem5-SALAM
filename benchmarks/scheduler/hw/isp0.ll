; ModuleID = 'isp0.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@isp.ccm = private unnamed_addr constant [3 x float] [float 1.000000e+00, float 0.000000e+00, float 1.000000e+00], align 4

; Function Attrs: norecurse nounwind uwtable
define void @isp(i32 %img_height, i32 %img_width, i32 %output_spm_addr) #0 {
entry:
  %conv = zext i32 %output_spm_addr to i64
  %0 = inttoptr i64 %conv to i8*
  %cmp71 = icmp eq i32 %img_height, 0
  br i1 %cmp71, label %for.end565, label %for.cond2.preheader.lr.ph

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %cmp369 = icmp eq i32 %img_width, 0
  %add = add i32 %img_width, 3
  %add6 = add i32 %img_width, 2
  %1 = zext i32 %img_width to i64
  %2 = add i32 %img_height, -1
  %3 = lshr i32 %2, 1
  %4 = and i32 %3, 1
  %lcmp.mod.not = icmp ne i32 %4, 0
  %brmerge = or i1 %lcmp.mod.not, %cmp369
  %5 = shl nuw nsw i32 %4, 1
  %6 = xor i32 %5, 2
  br i1 %brmerge, label %for.cond2.preheader.lr.ph.split, label %for.body5.lr.ph.prol

for.body5.lr.ph.prol:                             ; preds = %for.cond2.preheader.lr.ph
  %add26.prol = add i32 %add6, %add
  %add58.prol = add i32 %img_width, 3
  %add313.prol = add i32 %img_width, 3
  %mul321.prol = shl i32 %add6, 1
  %add322.prol = add i32 %mul321.prol, %add
  br label %for.body5.prol

for.body5.prol:                                   ; preds = %for.body5.prol, %for.body5.lr.ph.prol
  %indvars.iv.prol = phi i64 [ 0, %for.body5.lr.ph.prol ], [ %indvars.iv.next.prol, %for.body5.prol ]
  %7 = trunc i64 %indvars.iv.prol to i32
  %sub8.prol = add nsw i32 %7, -1
  %idxprom.prol = and i64 %indvars.iv.prol, 4294967294
  %arrayidx.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom.prol
  %8 = load i8, i8* %arrayidx.prol, align 2
  %conv10.prol = zext i8 %8 to i32
  %9 = or i64 %indvars.iv.prol, 1
  %add17.prol = add i64 %9, 1
  %idxprom18.prol = and i64 %add17.prol, 4294967294
  %arrayidx19.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom18.prol
  %10 = load i8, i8* %arrayidx19.prol, align 2
  %conv20.prol = zext i8 %10 to i32
  %add21.prol = add nuw nsw i32 %conv20.prol, %conv10.prol
  %add28.prol = add i32 %sub8.prol, %add26.prol
  %idxprom29.prol = zext i32 %add28.prol to i64
  %arrayidx30.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom29.prol
  %11 = load i8, i8* %arrayidx30.prol, align 1
  %conv31.prol = zext i8 %11 to i32
  %add32.prol = add nuw nsw i32 %add21.prol, %conv31.prol
  %12 = trunc i64 %9 to i32
  %add39.prol = add i32 %12, %add26.prol
  %idxprom40.prol = zext i32 %add39.prol to i64
  %arrayidx41.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom40.prol
  %13 = load i8, i8* %arrayidx41.prol, align 1
  %conv42.prol = zext i8 %13 to i32
  %add43.prol = add nuw nsw i32 %add32.prol, %conv42.prol
  %shr1.prol = lshr i32 %add43.prol, 2
  %conv44.prol = sitofp i32 %shr1.prol to float
  %add51.prol = and i64 %indvars.iv.prol, 4294967294
  %idxprom52.prol = or i64 %add51.prol, 1
  %arrayidx53.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom52.prol
  %14 = load i8, i8* %arrayidx53.prol, align 1
  %conv54.prol = zext i8 %14 to i32
  %add60.prol = add i32 %sub8.prol, %add58.prol
  %idxprom61.prol = zext i32 %add60.prol to i64
  %arrayidx62.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom61.prol
  %15 = load i8, i8* %arrayidx62.prol, align 1
  %conv63.prol = zext i8 %15 to i32
  %add64.prol = add nuw nsw i32 %conv63.prol, %conv54.prol
  %16 = trunc i64 %indvars.iv.prol to i32
  %add70.prol = add i32 %16, %add26.prol
  %idxprom71.prol = zext i32 %add70.prol to i64
  %arrayidx72.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom71.prol
  %17 = load i8, i8* %arrayidx72.prol, align 1
  %conv73.prol = zext i8 %17 to i32
  %add74.prol = add nuw nsw i32 %add64.prol, %conv73.prol
  %18 = trunc i64 %9 to i32
  %add80.prol = add i32 %18, %add58.prol
  %idxprom81.prol = zext i32 %add80.prol to i64
  %arrayidx82.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom81.prol
  %19 = load i8, i8* %arrayidx82.prol, align 1
  %conv83.prol = zext i8 %19 to i32
  %add84.prol = add nuw nsw i32 %add74.prol, %conv83.prol
  %shr852.prol = lshr i32 %add84.prol, 2
  %conv86.prol = sitofp i32 %shr852.prol to float
  %20 = trunc i64 %indvars.iv.prol to i32
  %add92.prol = add i32 %20, %add58.prol
  %idxprom93.prol = zext i32 %add92.prol to i64
  %arrayidx94.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom93.prol
  %21 = load i8, i8* %arrayidx94.prol, align 1
  %conv95.prol = uitofp i8 %21 to float
  %div.prol = fdiv float %conv44.prol, 2.550000e+02
  %mul.i.prol = fmul float %div.prol, 5.000000e-01
  %.cast.prol = bitcast float %div.prol to i32
  %shr.i.prol = lshr i32 %.cast.prol, 1
  %sub.i.prol = sub nsw i32 1597463007, %shr.i.prol
  %.cast3.prol = bitcast i32 %sub.i.prol to float
  %mul3.i.prol = fmul float %mul.i.prol, %.cast3.prol
  %mul5.i.prol = fmul float %.cast3.prol, %mul3.i.prol
  %sub6.i.prol = fsub float 1.500000e+00, %mul5.i.prol
  %mul8.i.prol = fmul float %.cast3.prol, %sub6.i.prol
  %mul10.i.prol = fmul float %mul.i.prol, %mul8.i.prol
  %mul12.i.prol = fmul float %mul8.i.prol, %mul10.i.prol
  %sub13.i.prol = fsub float 1.500000e+00, %mul12.i.prol
  %mul15.i.prol = fmul float %mul8.i.prol, %sub13.i.prol
  %mul17.i.prol = fmul float %mul.i.prol, %mul15.i.prol
  %mul19.i.prol = fmul float %mul15.i.prol, %mul17.i.prol
  %sub20.i.prol = fsub float 1.500000e+00, %mul19.i.prol
  %mul22.i.prol = fmul float %mul15.i.prol, %sub20.i.prol
  %div.i.prol = fdiv float 1.000000e+00, %mul22.i.prol
  %mul100.prol = fmul float %div.i.prol, 2.550000e+02
  %mul104.prol = fmul float %conv86.prol, 0.000000e+00
  %div105.prol = fdiv float %mul104.prol, 2.550000e+02
  %mul.i900.prol = fmul float %div105.prol, 5.000000e-01
  %.cast5.prol = bitcast float %div105.prol to i32
  %shr.i903.prol = lshr i32 %.cast5.prol, 1
  %sub.i904.prol = sub nsw i32 1597463007, %shr.i903.prol
  %.cast6.prol = bitcast i32 %sub.i904.prol to float
  %mul3.i907.prol = fmul float %mul.i900.prol, %.cast6.prol
  %mul5.i909.prol = fmul float %.cast6.prol, %mul3.i907.prol
  %sub6.i910.prol = fsub float 1.500000e+00, %mul5.i909.prol
  %mul8.i912.prol = fmul float %.cast6.prol, %sub6.i910.prol
  %mul10.i914.prol = fmul float %mul.i900.prol, %mul8.i912.prol
  %mul12.i916.prol = fmul float %mul8.i912.prol, %mul10.i914.prol
  %sub13.i917.prol = fsub float 1.500000e+00, %mul12.i916.prol
  %mul15.i919.prol = fmul float %mul8.i912.prol, %sub13.i917.prol
  %mul17.i921.prol = fmul float %mul.i900.prol, %mul15.i919.prol
  %mul19.i923.prol = fmul float %mul15.i919.prol, %mul17.i921.prol
  %sub20.i924.prol = fsub float 1.500000e+00, %mul19.i923.prol
  %mul22.i926.prol = fmul float %mul15.i919.prol, %sub20.i924.prol
  %div.i928.prol = fdiv float 1.000000e+00, %mul22.i926.prol
  %mul107.prol = fmul float %div.i928.prol, 2.550000e+02
  %div112.prol = fdiv float %conv95.prol, 2.550000e+02
  %mul.i867.prol = fmul float %div112.prol, 5.000000e-01
  %.cast8.prol = bitcast float %div112.prol to i32
  %shr.i870.prol = lshr i32 %.cast8.prol, 1
  %sub.i871.prol = sub nsw i32 1597463007, %shr.i870.prol
  %.cast9.prol = bitcast i32 %sub.i871.prol to float
  %mul3.i874.prol = fmul float %mul.i867.prol, %.cast9.prol
  %mul5.i876.prol = fmul float %.cast9.prol, %mul3.i874.prol
  %sub6.i877.prol = fsub float 1.500000e+00, %mul5.i876.prol
  %mul8.i879.prol = fmul float %.cast9.prol, %sub6.i877.prol
  %mul10.i881.prol = fmul float %mul.i867.prol, %mul8.i879.prol
  %mul12.i883.prol = fmul float %mul8.i879.prol, %mul10.i881.prol
  %sub13.i884.prol = fsub float 1.500000e+00, %mul12.i883.prol
  %mul15.i886.prol = fmul float %mul8.i879.prol, %sub13.i884.prol
  %mul17.i888.prol = fmul float %mul.i867.prol, %mul15.i886.prol
  %mul19.i890.prol = fmul float %mul15.i886.prol, %mul17.i888.prol
  %sub20.i891.prol = fsub float 1.500000e+00, %mul19.i890.prol
  %mul22.i893.prol = fmul float %mul15.i886.prol, %sub20.i891.prol
  %div.i895.prol = fdiv float 1.000000e+00, %mul22.i893.prol
  %mul114.prol = fmul float %div.i895.prol, 2.550000e+02
  %cmp117.prol = fcmp ogt float %mul100.prol, 2.550000e+02
  %cond.prol = select i1 %cmp117.prol, float 2.550000e+02, float %mul100.prol
  %conv120.prol = fptoui float %cond.prol to i8
  %22 = trunc i64 %indvars.iv.prol to i32
  %mul123.prol = mul i32 %22, 3
  %idxprom125.prol = zext i32 %mul123.prol to i64
  %arrayidx126.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom125.prol
  store i8 %conv120.prol, i8* %arrayidx126.prol, align 1
  %cmp128.prol = fcmp ogt float %mul107.prol, 2.550000e+02
  %cond134.prol = select i1 %cmp128.prol, float 2.550000e+02, float %mul107.prol
  %conv135.prol = fptoui float %cond134.prol to i8
  %add139.prol = or i32 %mul123.prol, 1
  %idxprom140.prol = zext i32 %add139.prol to i64
  %arrayidx141.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom140.prol
  store i8 %conv135.prol, i8* %arrayidx141.prol, align 1
  %cmp143.prol = fcmp ogt float %mul114.prol, 2.550000e+02
  %cond149.prol = select i1 %cmp143.prol, float 2.550000e+02, float %mul114.prol
  %conv150.prol = fptoui float %cond149.prol to i8
  %add154.prol = add i32 %mul123.prol, 2
  %idxprom155.prol = zext i32 %add154.prol to i64
  %arrayidx156.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom155.prol
  store i8 %conv150.prol, i8* %arrayidx156.prol, align 1
  %23 = load i8, i8* %arrayidx19.prol, align 2
  %conv166.prol = zext i8 %23 to i32
  %24 = load i8, i8* %arrayidx41.prol, align 1
  %conv175.prol = zext i8 %24 to i32
  %add176.prol = add nuw nsw i32 %conv175.prol, %conv166.prol
  %shr17711.prol = lshr i32 %add176.prol, 1
  %conv178.prol = sitofp i32 %shr17711.prol to float
  %25 = load i8, i8* %arrayidx82.prol, align 1
  %conv187.prol = uitofp i8 %25 to float
  %26 = add nsw i64 %9, -1
  %27 = trunc i64 %26 to i32
  %add194.prol = add i32 %27, %add58.prol
  %idxprom195.prol = zext i32 %add194.prol to i64
  %arrayidx196.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom195.prol
  %28 = load i8, i8* %arrayidx196.prol, align 1
  %conv197.prol = zext i8 %28 to i32
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 2
  %29 = trunc i64 %indvars.iv.next.prol to i32
  %add203.prol = add i32 %29, %add58.prol
  %idxprom204.prol = zext i32 %add203.prol to i64
  %arrayidx205.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom204.prol
  %30 = load i8, i8* %arrayidx205.prol, align 1
  %conv206.prol = zext i8 %30 to i32
  %add207.prol = add nuw nsw i32 %conv206.prol, %conv197.prol
  %shr20812.prol = lshr i32 %add207.prol, 1
  %conv209.prol = sitofp i32 %shr20812.prol to float
  %div214.prol = fdiv float %conv178.prol, 2.550000e+02
  %mul.i834.prol = fmul float %div214.prol, 5.000000e-01
  %.cast13.prol = bitcast float %div214.prol to i32
  %shr.i837.prol = lshr i32 %.cast13.prol, 1
  %sub.i838.prol = sub nsw i32 1597463007, %shr.i837.prol
  %.cast14.prol = bitcast i32 %sub.i838.prol to float
  %mul3.i841.prol = fmul float %mul.i834.prol, %.cast14.prol
  %mul5.i843.prol = fmul float %.cast14.prol, %mul3.i841.prol
  %sub6.i844.prol = fsub float 1.500000e+00, %mul5.i843.prol
  %mul8.i846.prol = fmul float %.cast14.prol, %sub6.i844.prol
  %mul10.i848.prol = fmul float %mul.i834.prol, %mul8.i846.prol
  %mul12.i850.prol = fmul float %mul8.i846.prol, %mul10.i848.prol
  %sub13.i851.prol = fsub float 1.500000e+00, %mul12.i850.prol
  %mul15.i853.prol = fmul float %mul8.i846.prol, %sub13.i851.prol
  %mul17.i855.prol = fmul float %mul.i834.prol, %mul15.i853.prol
  %mul19.i857.prol = fmul float %mul15.i853.prol, %mul17.i855.prol
  %sub20.i858.prol = fsub float 1.500000e+00, %mul19.i857.prol
  %mul22.i860.prol = fmul float %mul15.i853.prol, %sub20.i858.prol
  %div.i862.prol = fdiv float 1.000000e+00, %mul22.i860.prol
  %mul216.prol = fmul float %div.i862.prol, 2.550000e+02
  %mul220.prol = fmul float %conv187.prol, 0.000000e+00
  %div221.prol = fdiv float %mul220.prol, 2.550000e+02
  %mul.i801.prol = fmul float %div221.prol, 5.000000e-01
  %.cast16.prol = bitcast float %div221.prol to i32
  %shr.i804.prol = lshr i32 %.cast16.prol, 1
  %sub.i805.prol = sub nsw i32 1597463007, %shr.i804.prol
  %.cast17.prol = bitcast i32 %sub.i805.prol to float
  %mul3.i808.prol = fmul float %mul.i801.prol, %.cast17.prol
  %mul5.i810.prol = fmul float %.cast17.prol, %mul3.i808.prol
  %sub6.i811.prol = fsub float 1.500000e+00, %mul5.i810.prol
  %mul8.i813.prol = fmul float %.cast17.prol, %sub6.i811.prol
  %mul10.i815.prol = fmul float %mul.i801.prol, %mul8.i813.prol
  %mul12.i817.prol = fmul float %mul8.i813.prol, %mul10.i815.prol
  %sub13.i818.prol = fsub float 1.500000e+00, %mul12.i817.prol
  %mul15.i820.prol = fmul float %mul8.i813.prol, %sub13.i818.prol
  %mul17.i822.prol = fmul float %mul.i801.prol, %mul15.i820.prol
  %mul19.i824.prol = fmul float %mul15.i820.prol, %mul17.i822.prol
  %sub20.i825.prol = fsub float 1.500000e+00, %mul19.i824.prol
  %mul22.i827.prol = fmul float %mul15.i820.prol, %sub20.i825.prol
  %div.i829.prol = fdiv float 1.000000e+00, %mul22.i827.prol
  %mul223.prol = fmul float %div.i829.prol, 2.550000e+02
  %div228.prol = fdiv float %conv209.prol, 2.550000e+02
  %mul.i768.prol = fmul float %div228.prol, 5.000000e-01
  %.cast19.prol = bitcast float %div228.prol to i32
  %shr.i771.prol = lshr i32 %.cast19.prol, 1
  %sub.i772.prol = sub nsw i32 1597463007, %shr.i771.prol
  %.cast20.prol = bitcast i32 %sub.i772.prol to float
  %mul3.i775.prol = fmul float %mul.i768.prol, %.cast20.prol
  %mul5.i777.prol = fmul float %.cast20.prol, %mul3.i775.prol
  %sub6.i778.prol = fsub float 1.500000e+00, %mul5.i777.prol
  %mul8.i780.prol = fmul float %.cast20.prol, %sub6.i778.prol
  %mul10.i782.prol = fmul float %mul.i768.prol, %mul8.i780.prol
  %mul12.i784.prol = fmul float %mul8.i780.prol, %mul10.i782.prol
  %sub13.i785.prol = fsub float 1.500000e+00, %mul12.i784.prol
  %mul15.i787.prol = fmul float %mul8.i780.prol, %sub13.i785.prol
  %mul17.i789.prol = fmul float %mul.i768.prol, %mul15.i787.prol
  %mul19.i791.prol = fmul float %mul15.i787.prol, %mul17.i789.prol
  %sub20.i792.prol = fsub float 1.500000e+00, %mul19.i791.prol
  %mul22.i794.prol = fmul float %mul15.i787.prol, %sub20.i792.prol
  %div.i796.prol = fdiv float 1.000000e+00, %mul22.i794.prol
  %mul230.prol = fmul float %div.i796.prol, 2.550000e+02
  %cmp233.prol = fcmp ogt float %mul216.prol, 2.550000e+02
  %cond239.prol = select i1 %cmp233.prol, float 2.550000e+02, float %mul216.prol
  %conv240.prol = fptoui float %cond239.prol to i8
  %31 = trunc i64 %9 to i32
  %mul243.prol = mul i32 %31, 3
  %idxprom245.prol = zext i32 %mul243.prol to i64
  %arrayidx246.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom245.prol
  store i8 %conv240.prol, i8* %arrayidx246.prol, align 1
  %cmp248.prol = fcmp ogt float %mul223.prol, 2.550000e+02
  %cond254.prol = select i1 %cmp248.prol, float 2.550000e+02, float %mul223.prol
  %conv255.prol = fptoui float %cond254.prol to i8
  %add259.prol = add i32 %mul243.prol, 1
  %idxprom260.prol = zext i32 %add259.prol to i64
  %arrayidx261.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom260.prol
  store i8 %conv255.prol, i8* %arrayidx261.prol, align 1
  %cmp263.prol = fcmp ogt float %mul230.prol, 2.550000e+02
  %cond269.prol = select i1 %cmp263.prol, float 2.550000e+02, float %mul230.prol
  %conv270.prol = fptoui float %cond269.prol to i8
  %add274.prol = add i32 %mul243.prol, 2
  %idxprom275.prol = zext i32 %add274.prol to i64
  %arrayidx276.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom275.prol
  store i8 %conv270.prol, i8* %arrayidx276.prol, align 1
  %32 = load i8, i8* %arrayidx30.prol, align 1
  %conv286.prol = zext i8 %32 to i32
  %33 = load i8, i8* %arrayidx41.prol, align 1
  %conv295.prol = zext i8 %33 to i32
  %add296.prol = add nuw nsw i32 %conv295.prol, %conv286.prol
  %shr29722.prol = lshr i32 %add296.prol, 1
  %conv298.prol = sitofp i32 %shr29722.prol to float
  %34 = load i8, i8* %arrayidx72.prol, align 1
  %conv307.prol = uitofp i8 %34 to float
  %35 = trunc i64 %indvars.iv.prol to i32
  %add314.prol = add i32 %35, %add313.prol
  %idxprom315.prol = zext i32 %add314.prol to i64
  %arrayidx316.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom315.prol
  %36 = load i8, i8* %arrayidx316.prol, align 1
  %conv317.prol = zext i8 %36 to i32
  %37 = trunc i64 %indvars.iv.prol to i32
  %add323.prol = add i32 %37, %add322.prol
  %idxprom324.prol = zext i32 %add323.prol to i64
  %arrayidx325.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom324.prol
  %38 = load i8, i8* %arrayidx325.prol, align 1
  %conv326.prol = zext i8 %38 to i32
  %add327.prol = add nuw nsw i32 %conv326.prol, %conv317.prol
  %shr32823.prol = lshr i32 %add327.prol, 1
  %conv329.prol = sitofp i32 %shr32823.prol to float
  %div334.prol = fdiv float %conv298.prol, 2.550000e+02
  %mul.i735.prol = fmul float %div334.prol, 5.000000e-01
  %.cast24.prol = bitcast float %div334.prol to i32
  %shr.i738.prol = lshr i32 %.cast24.prol, 1
  %sub.i739.prol = sub nsw i32 1597463007, %shr.i738.prol
  %.cast25.prol = bitcast i32 %sub.i739.prol to float
  %mul3.i742.prol = fmul float %mul.i735.prol, %.cast25.prol
  %mul5.i744.prol = fmul float %.cast25.prol, %mul3.i742.prol
  %sub6.i745.prol = fsub float 1.500000e+00, %mul5.i744.prol
  %mul8.i747.prol = fmul float %.cast25.prol, %sub6.i745.prol
  %mul10.i749.prol = fmul float %mul.i735.prol, %mul8.i747.prol
  %mul12.i751.prol = fmul float %mul8.i747.prol, %mul10.i749.prol
  %sub13.i752.prol = fsub float 1.500000e+00, %mul12.i751.prol
  %mul15.i754.prol = fmul float %mul8.i747.prol, %sub13.i752.prol
  %mul17.i756.prol = fmul float %mul.i735.prol, %mul15.i754.prol
  %mul19.i758.prol = fmul float %mul15.i754.prol, %mul17.i756.prol
  %sub20.i759.prol = fsub float 1.500000e+00, %mul19.i758.prol
  %mul22.i761.prol = fmul float %mul15.i754.prol, %sub20.i759.prol
  %div.i763.prol = fdiv float 1.000000e+00, %mul22.i761.prol
  %mul336.prol = fmul float %div.i763.prol, 2.550000e+02
  %mul340.prol = fmul float %conv307.prol, 0.000000e+00
  %div341.prol = fdiv float %mul340.prol, 2.550000e+02
  %mul.i702.prol = fmul float %div341.prol, 5.000000e-01
  %.cast27.prol = bitcast float %div341.prol to i32
  %shr.i705.prol = lshr i32 %.cast27.prol, 1
  %sub.i706.prol = sub nsw i32 1597463007, %shr.i705.prol
  %.cast28.prol = bitcast i32 %sub.i706.prol to float
  %mul3.i709.prol = fmul float %mul.i702.prol, %.cast28.prol
  %mul5.i711.prol = fmul float %.cast28.prol, %mul3.i709.prol
  %sub6.i712.prol = fsub float 1.500000e+00, %mul5.i711.prol
  %mul8.i714.prol = fmul float %.cast28.prol, %sub6.i712.prol
  %mul10.i716.prol = fmul float %mul.i702.prol, %mul8.i714.prol
  %mul12.i718.prol = fmul float %mul8.i714.prol, %mul10.i716.prol
  %sub13.i719.prol = fsub float 1.500000e+00, %mul12.i718.prol
  %mul15.i721.prol = fmul float %mul8.i714.prol, %sub13.i719.prol
  %mul17.i723.prol = fmul float %mul.i702.prol, %mul15.i721.prol
  %mul19.i725.prol = fmul float %mul15.i721.prol, %mul17.i723.prol
  %sub20.i726.prol = fsub float 1.500000e+00, %mul19.i725.prol
  %mul22.i728.prol = fmul float %mul15.i721.prol, %sub20.i726.prol
  %div.i730.prol = fdiv float 1.000000e+00, %mul22.i728.prol
  %mul343.prol = fmul float %div.i730.prol, 2.550000e+02
  %div348.prol = fdiv float %conv329.prol, 2.550000e+02
  %mul.i669.prol = fmul float %div348.prol, 5.000000e-01
  %.cast30.prol = bitcast float %div348.prol to i32
  %shr.i672.prol = lshr i32 %.cast30.prol, 1
  %sub.i673.prol = sub nsw i32 1597463007, %shr.i672.prol
  %.cast31.prol = bitcast i32 %sub.i673.prol to float
  %mul3.i676.prol = fmul float %mul.i669.prol, %.cast31.prol
  %mul5.i678.prol = fmul float %.cast31.prol, %mul3.i676.prol
  %sub6.i679.prol = fsub float 1.500000e+00, %mul5.i678.prol
  %mul8.i681.prol = fmul float %.cast31.prol, %sub6.i679.prol
  %mul10.i683.prol = fmul float %mul.i669.prol, %mul8.i681.prol
  %mul12.i685.prol = fmul float %mul8.i681.prol, %mul10.i683.prol
  %sub13.i686.prol = fsub float 1.500000e+00, %mul12.i685.prol
  %mul15.i688.prol = fmul float %mul8.i681.prol, %sub13.i686.prol
  %mul17.i690.prol = fmul float %mul.i669.prol, %mul15.i688.prol
  %mul19.i692.prol = fmul float %mul15.i688.prol, %mul17.i690.prol
  %sub20.i693.prol = fsub float 1.500000e+00, %mul19.i692.prol
  %mul22.i695.prol = fmul float %mul15.i688.prol, %sub20.i693.prol
  %div.i697.prol = fdiv float 1.000000e+00, %mul22.i695.prol
  %mul350.prol = fmul float %div.i697.prol, 2.550000e+02
  %cmp353.prol = fcmp ogt float %mul336.prol, 2.550000e+02
  %cond359.prol = select i1 %cmp353.prol, float 2.550000e+02, float %mul336.prol
  %conv360.prol = fptoui float %cond359.prol to i8
  %39 = trunc i64 %indvars.iv.prol to i32
  %add362.prol = add i32 %39, %img_width
  %mul363.prol = mul i32 %add362.prol, 3
  %idxprom365.prol = zext i32 %mul363.prol to i64
  %arrayidx366.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom365.prol
  store i8 %conv360.prol, i8* %arrayidx366.prol, align 1
  %cmp368.prol = fcmp ogt float %mul343.prol, 2.550000e+02
  %cond374.prol = select i1 %cmp368.prol, float 2.550000e+02, float %mul343.prol
  %conv375.prol = fptoui float %cond374.prol to i8
  %add379.prol = add i32 %mul363.prol, 1
  %idxprom380.prol = zext i32 %add379.prol to i64
  %arrayidx381.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom380.prol
  store i8 %conv375.prol, i8* %arrayidx381.prol, align 1
  %cmp383.prol = fcmp ogt float %mul350.prol, 2.550000e+02
  %cond389.prol = select i1 %cmp383.prol, float 2.550000e+02, float %mul350.prol
  %conv390.prol = fptoui float %cond389.prol to i8
  %add394.prol = add i32 %mul363.prol, 2
  %idxprom395.prol = zext i32 %add394.prol to i64
  %arrayidx396.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom395.prol
  store i8 %conv390.prol, i8* %arrayidx396.prol, align 1
  %40 = load i8, i8* %arrayidx41.prol, align 1
  %conv406.prol = uitofp i8 %40 to float
  %41 = trunc i64 %9 to i32
  %add413.prol = add i32 %41, %add313.prol
  %idxprom414.prol = zext i32 %add413.prol to i64
  %arrayidx415.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom414.prol
  %42 = load i8, i8* %arrayidx415.prol, align 1
  %conv416.prol = zext i8 %42 to i32
  %43 = trunc i64 %26 to i32
  %add422.prol = add i32 %43, %add26.prol
  %idxprom423.prol = zext i32 %add422.prol to i64
  %arrayidx424.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom423.prol
  %44 = load i8, i8* %arrayidx424.prol, align 1
  %conv425.prol = zext i8 %44 to i32
  %add426.prol = add nuw nsw i32 %conv425.prol, %conv416.prol
  %45 = trunc i64 %9 to i32
  %add432.prol = add i32 %45, %add322.prol
  %idxprom433.prol = zext i32 %add432.prol to i64
  %arrayidx434.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom433.prol
  %46 = load i8, i8* %arrayidx434.prol, align 1
  %conv435.prol = zext i8 %46 to i32
  %add436.prol = add nuw nsw i32 %add426.prol, %conv435.prol
  %47 = trunc i64 %indvars.iv.next.prol to i32
  %add442.prol = add i32 %47, %add26.prol
  %idxprom443.prol = zext i32 %add442.prol to i64
  %arrayidx444.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom443.prol
  %48 = load i8, i8* %arrayidx444.prol, align 1
  %conv445.prol = zext i8 %48 to i32
  %add446.prol = add nuw nsw i32 %add436.prol, %conv445.prol
  %shr44733.prol = lshr i32 %add446.prol, 2
  %conv448.prol = sitofp i32 %shr44733.prol to float
  %49 = trunc i64 %26 to i32
  %add456.prol = add i32 %49, %add313.prol
  %idxprom457.prol = zext i32 %add456.prol to i64
  %arrayidx458.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom457.prol
  %50 = load i8, i8* %arrayidx458.prol, align 1
  %conv459.prol = zext i8 %50 to i32
  %51 = trunc i64 %indvars.iv.next.prol to i32
  %add466.prol = add i32 %51, %add313.prol
  %idxprom467.prol = zext i32 %add466.prol to i64
  %arrayidx468.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom467.prol
  %52 = load i8, i8* %arrayidx468.prol, align 1
  %conv469.prol = zext i8 %52 to i32
  %add470.prol = add nuw nsw i32 %conv469.prol, %conv459.prol
  %53 = trunc i64 %26 to i32
  %add477.prol = add i32 %53, %add322.prol
  %idxprom478.prol = zext i32 %add477.prol to i64
  %arrayidx479.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom478.prol
  %54 = load i8, i8* %arrayidx479.prol, align 1
  %conv480.prol = zext i8 %54 to i32
  %add481.prol = add nuw nsw i32 %add470.prol, %conv480.prol
  %55 = trunc i64 %indvars.iv.next.prol to i32
  %add488.prol = add i32 %55, %add322.prol
  %idxprom489.prol = zext i32 %add488.prol to i64
  %arrayidx490.prol = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom489.prol
  %56 = load i8, i8* %arrayidx490.prol, align 1
  %conv491.prol = zext i8 %56 to i32
  %add492.prol = add nuw nsw i32 %add481.prol, %conv491.prol
  %shr49334.prol = lshr i32 %add492.prol, 2
  %conv494.prol = sitofp i32 %shr49334.prol to float
  %div499.prol = fdiv float %conv406.prol, 2.550000e+02
  %mul.i636.prol = fmul float %div499.prol, 5.000000e-01
  %.cast35.prol = bitcast float %div499.prol to i32
  %shr.i639.prol = lshr i32 %.cast35.prol, 1
  %sub.i640.prol = sub nsw i32 1597463007, %shr.i639.prol
  %.cast36.prol = bitcast i32 %sub.i640.prol to float
  %mul3.i643.prol = fmul float %mul.i636.prol, %.cast36.prol
  %mul5.i645.prol = fmul float %.cast36.prol, %mul3.i643.prol
  %sub6.i646.prol = fsub float 1.500000e+00, %mul5.i645.prol
  %mul8.i648.prol = fmul float %.cast36.prol, %sub6.i646.prol
  %mul10.i650.prol = fmul float %mul.i636.prol, %mul8.i648.prol
  %mul12.i652.prol = fmul float %mul8.i648.prol, %mul10.i650.prol
  %sub13.i653.prol = fsub float 1.500000e+00, %mul12.i652.prol
  %mul15.i655.prol = fmul float %mul8.i648.prol, %sub13.i653.prol
  %mul17.i657.prol = fmul float %mul.i636.prol, %mul15.i655.prol
  %mul19.i659.prol = fmul float %mul15.i655.prol, %mul17.i657.prol
  %sub20.i660.prol = fsub float 1.500000e+00, %mul19.i659.prol
  %mul22.i662.prol = fmul float %mul15.i655.prol, %sub20.i660.prol
  %div.i664.prol = fdiv float 1.000000e+00, %mul22.i662.prol
  %mul501.prol = fmul float %div.i664.prol, 2.550000e+02
  %mul505.prol = fmul float %conv448.prol, 0.000000e+00
  %div506.prol = fdiv float %mul505.prol, 2.550000e+02
  %mul.i603.prol = fmul float %div506.prol, 5.000000e-01
  %.cast38.prol = bitcast float %div506.prol to i32
  %shr.i606.prol = lshr i32 %.cast38.prol, 1
  %sub.i607.prol = sub nsw i32 1597463007, %shr.i606.prol
  %.cast39.prol = bitcast i32 %sub.i607.prol to float
  %mul3.i610.prol = fmul float %mul.i603.prol, %.cast39.prol
  %mul5.i612.prol = fmul float %.cast39.prol, %mul3.i610.prol
  %sub6.i613.prol = fsub float 1.500000e+00, %mul5.i612.prol
  %mul8.i615.prol = fmul float %.cast39.prol, %sub6.i613.prol
  %mul10.i617.prol = fmul float %mul.i603.prol, %mul8.i615.prol
  %mul12.i619.prol = fmul float %mul8.i615.prol, %mul10.i617.prol
  %sub13.i620.prol = fsub float 1.500000e+00, %mul12.i619.prol
  %mul15.i622.prol = fmul float %mul8.i615.prol, %sub13.i620.prol
  %mul17.i624.prol = fmul float %mul.i603.prol, %mul15.i622.prol
  %mul19.i626.prol = fmul float %mul15.i622.prol, %mul17.i624.prol
  %sub20.i627.prol = fsub float 1.500000e+00, %mul19.i626.prol
  %mul22.i629.prol = fmul float %mul15.i622.prol, %sub20.i627.prol
  %div.i631.prol = fdiv float 1.000000e+00, %mul22.i629.prol
  %mul508.prol = fmul float %div.i631.prol, 2.550000e+02
  %div513.prol = fdiv float %conv494.prol, 2.550000e+02
  %mul.i570.prol = fmul float %div513.prol, 5.000000e-01
  %.cast41.prol = bitcast float %div513.prol to i32
  %shr.i573.prol = lshr i32 %.cast41.prol, 1
  %sub.i574.prol = sub nsw i32 1597463007, %shr.i573.prol
  %.cast42.prol = bitcast i32 %sub.i574.prol to float
  %mul3.i577.prol = fmul float %mul.i570.prol, %.cast42.prol
  %mul5.i579.prol = fmul float %.cast42.prol, %mul3.i577.prol
  %sub6.i580.prol = fsub float 1.500000e+00, %mul5.i579.prol
  %mul8.i582.prol = fmul float %.cast42.prol, %sub6.i580.prol
  %mul10.i584.prol = fmul float %mul.i570.prol, %mul8.i582.prol
  %mul12.i586.prol = fmul float %mul8.i582.prol, %mul10.i584.prol
  %sub13.i587.prol = fsub float 1.500000e+00, %mul12.i586.prol
  %mul15.i589.prol = fmul float %mul8.i582.prol, %sub13.i587.prol
  %mul17.i591.prol = fmul float %mul.i570.prol, %mul15.i589.prol
  %mul19.i593.prol = fmul float %mul15.i589.prol, %mul17.i591.prol
  %sub20.i594.prol = fsub float 1.500000e+00, %mul19.i593.prol
  %mul22.i596.prol = fmul float %mul15.i589.prol, %sub20.i594.prol
  %div.i598.prol = fdiv float 1.000000e+00, %mul22.i596.prol
  %mul515.prol = fmul float %div.i598.prol, 2.550000e+02
  %cmp518.prol = fcmp ogt float %mul501.prol, 2.550000e+02
  %cond524.prol = select i1 %cmp518.prol, float 2.550000e+02, float %mul501.prol
  %conv525.prol = fptoui float %cond524.prol to i8
  %57 = trunc i64 %9 to i32
  %add527.prol = add i32 %57, %img_width
  %mul528.prol = mul i32 %add527.prol, 3
  %idxprom530.prol = zext i32 %mul528.prol to i64
  %arrayidx531.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom530.prol
  store i8 %conv525.prol, i8* %arrayidx531.prol, align 1
  %cmp533.prol = fcmp ogt float %mul508.prol, 2.550000e+02
  %cond539.prol = select i1 %cmp533.prol, float 2.550000e+02, float %mul508.prol
  %conv540.prol = fptoui float %cond539.prol to i8
  %add544.prol = add i32 %mul528.prol, 1
  %idxprom545.prol = zext i32 %add544.prol to i64
  %arrayidx546.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom545.prol
  store i8 %conv540.prol, i8* %arrayidx546.prol, align 1
  %cmp548.prol = fcmp ogt float %mul515.prol, 2.550000e+02
  %cond554.prol = select i1 %cmp548.prol, float 2.550000e+02, float %mul515.prol
  %conv555.prol = fptoui float %cond554.prol to i8
  %add559.prol = add i32 %mul528.prol, 2
  %idxprom560.prol = zext i32 %add559.prol to i64
  %arrayidx561.prol = getelementptr inbounds i8, i8* %0, i64 %idxprom560.prol
  store i8 %conv555.prol, i8* %arrayidx561.prol, align 1
  %cmp3.prol = icmp ult i64 %indvars.iv.next.prol, %1
  br i1 %cmp3.prol, label %for.body5.prol, label %for.cond2.preheader.lr.ph.split.loopexit, !llvm.loop !1

for.cond2.preheader.lr.ph.split.loopexit:         ; preds = %for.body5.prol
  br label %for.cond2.preheader.lr.ph.split

for.cond2.preheader.lr.ph.split:                  ; preds = %for.cond2.preheader.lr.ph.split.loopexit, %for.cond2.preheader.lr.ph
  %i.072.unr = phi i32 [ %6, %for.cond2.preheader.lr.ph ], [ 2, %for.cond2.preheader.lr.ph.split.loopexit ]
  %58 = icmp eq i32 %3, 0
  br i1 %58, label %for.end565, label %for.cond2.preheader.preheader

for.cond2.preheader.preheader:                    ; preds = %for.cond2.preheader.lr.ph.split
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.cond2.preheader.preheader, %for.inc563.1
  %i.072 = phi i32 [ %add564.1, %for.inc563.1 ], [ %i.072.unr, %for.cond2.preheader.preheader ]
  br i1 %cmp369, label %for.inc563.1, label %for.body5.lr.ph

for.body5.lr.ph:                                  ; preds = %for.cond2.preheader
  %sub = add nsw i32 %i.072, -1
  %mul = mul i32 %sub, %add6
  %add7 = add i32 %mul, %add
  %add23 = or i32 %i.072, 1
  %mul25 = mul i32 %add23, %add6
  %add26 = add i32 %mul25, %add
  %mul57 = mul i32 %i.072, %add6
  %add58 = add i32 %mul57, %add
  %mul121 = mul i32 %i.072, %img_width
  %sub310 = add nsw i32 %add23, -1
  %mul312 = mul i32 %sub310, %add6
  %add313 = add i32 %mul312, %add
  %add319 = add nuw nsw i32 %add23, 1
  %mul321 = mul i32 %add319, %add6
  %add322 = add i32 %mul321, %add
  %mul361 = mul i32 %add23, %img_width
  br label %for.body5

for.body5:                                        ; preds = %for.body5.lr.ph, %for.body5
  %indvars.iv = phi i64 [ 0, %for.body5.lr.ph ], [ %indvars.iv.next, %for.body5 ]
  %59 = trunc i64 %indvars.iv to i32
  %sub8 = add nsw i32 %59, -1
  %add9 = add i32 %sub8, %add7
  %idxprom = zext i32 %add9 to i64
  %arrayidx = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom
  %60 = load i8, i8* %arrayidx, align 1
  %conv10 = zext i8 %60 to i32
  %61 = or i64 %indvars.iv, 1
  %62 = trunc i64 %61 to i32
  %add17 = add i32 %62, %add7
  %idxprom18 = zext i32 %add17 to i64
  %arrayidx19 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom18
  %63 = load i8, i8* %arrayidx19, align 1
  %conv20 = zext i8 %63 to i32
  %add21 = add nuw nsw i32 %conv20, %conv10
  %add28 = add i32 %sub8, %add26
  %idxprom29 = zext i32 %add28 to i64
  %arrayidx30 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom29
  %64 = load i8, i8* %arrayidx30, align 1
  %conv31 = zext i8 %64 to i32
  %add32 = add nuw nsw i32 %add21, %conv31
  %65 = trunc i64 %61 to i32
  %add39 = add i32 %65, %add26
  %idxprom40 = zext i32 %add39 to i64
  %arrayidx41 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom40
  %66 = load i8, i8* %arrayidx41, align 1
  %conv42 = zext i8 %66 to i32
  %add43 = add nuw nsw i32 %add32, %conv42
  %shr1 = lshr i32 %add43, 2
  %conv44 = sitofp i32 %shr1 to float
  %67 = trunc i64 %indvars.iv to i32
  %add51 = add i32 %67, %add7
  %idxprom52 = zext i32 %add51 to i64
  %arrayidx53 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom52
  %68 = load i8, i8* %arrayidx53, align 1
  %conv54 = zext i8 %68 to i32
  %add60 = add i32 %sub8, %add58
  %idxprom61 = zext i32 %add60 to i64
  %arrayidx62 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom61
  %69 = load i8, i8* %arrayidx62, align 1
  %conv63 = zext i8 %69 to i32
  %add64 = add nuw nsw i32 %conv63, %conv54
  %70 = trunc i64 %indvars.iv to i32
  %add70 = add i32 %70, %add26
  %idxprom71 = zext i32 %add70 to i64
  %arrayidx72 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom71
  %71 = load i8, i8* %arrayidx72, align 1
  %conv73 = zext i8 %71 to i32
  %add74 = add nuw nsw i32 %add64, %conv73
  %72 = trunc i64 %61 to i32
  %add80 = add i32 %72, %add58
  %idxprom81 = zext i32 %add80 to i64
  %arrayidx82 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom81
  %73 = load i8, i8* %arrayidx82, align 1
  %conv83 = zext i8 %73 to i32
  %add84 = add nuw nsw i32 %add74, %conv83
  %shr852 = lshr i32 %add84, 2
  %conv86 = sitofp i32 %shr852 to float
  %74 = trunc i64 %indvars.iv to i32
  %add92 = add i32 %74, %add58
  %idxprom93 = zext i32 %add92 to i64
  %arrayidx94 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom93
  %75 = load i8, i8* %arrayidx94, align 1
  %conv95 = uitofp i8 %75 to float
  %div = fdiv float %conv44, 2.550000e+02
  %mul.i = fmul float %div, 5.000000e-01
  %.cast = bitcast float %div to i32
  %shr.i = lshr i32 %.cast, 1
  %sub.i = sub nsw i32 1597463007, %shr.i
  %.cast3 = bitcast i32 %sub.i to float
  %mul3.i = fmul float %mul.i, %.cast3
  %mul5.i = fmul float %.cast3, %mul3.i
  %sub6.i = fsub float 1.500000e+00, %mul5.i
  %mul8.i = fmul float %.cast3, %sub6.i
  %mul10.i = fmul float %mul.i, %mul8.i
  %mul12.i = fmul float %mul8.i, %mul10.i
  %sub13.i = fsub float 1.500000e+00, %mul12.i
  %mul15.i = fmul float %mul8.i, %sub13.i
  %mul17.i = fmul float %mul.i, %mul15.i
  %mul19.i = fmul float %mul15.i, %mul17.i
  %sub20.i = fsub float 1.500000e+00, %mul19.i
  %mul22.i = fmul float %mul15.i, %sub20.i
  %div.i = fdiv float 1.000000e+00, %mul22.i
  %mul100 = fmul float %div.i, 2.550000e+02
  %mul104 = fmul float %conv86, 0.000000e+00
  %div105 = fdiv float %mul104, 2.550000e+02
  %mul.i900 = fmul float %div105, 5.000000e-01
  %.cast5 = bitcast float %div105 to i32
  %shr.i903 = lshr i32 %.cast5, 1
  %sub.i904 = sub nsw i32 1597463007, %shr.i903
  %.cast6 = bitcast i32 %sub.i904 to float
  %mul3.i907 = fmul float %mul.i900, %.cast6
  %mul5.i909 = fmul float %.cast6, %mul3.i907
  %sub6.i910 = fsub float 1.500000e+00, %mul5.i909
  %mul8.i912 = fmul float %.cast6, %sub6.i910
  %mul10.i914 = fmul float %mul.i900, %mul8.i912
  %mul12.i916 = fmul float %mul8.i912, %mul10.i914
  %sub13.i917 = fsub float 1.500000e+00, %mul12.i916
  %mul15.i919 = fmul float %mul8.i912, %sub13.i917
  %mul17.i921 = fmul float %mul.i900, %mul15.i919
  %mul19.i923 = fmul float %mul15.i919, %mul17.i921
  %sub20.i924 = fsub float 1.500000e+00, %mul19.i923
  %mul22.i926 = fmul float %mul15.i919, %sub20.i924
  %div.i928 = fdiv float 1.000000e+00, %mul22.i926
  %mul107 = fmul float %div.i928, 2.550000e+02
  %div112 = fdiv float %conv95, 2.550000e+02
  %mul.i867 = fmul float %div112, 5.000000e-01
  %.cast8 = bitcast float %div112 to i32
  %shr.i870 = lshr i32 %.cast8, 1
  %sub.i871 = sub nsw i32 1597463007, %shr.i870
  %.cast9 = bitcast i32 %sub.i871 to float
  %mul3.i874 = fmul float %mul.i867, %.cast9
  %mul5.i876 = fmul float %.cast9, %mul3.i874
  %sub6.i877 = fsub float 1.500000e+00, %mul5.i876
  %mul8.i879 = fmul float %.cast9, %sub6.i877
  %mul10.i881 = fmul float %mul.i867, %mul8.i879
  %mul12.i883 = fmul float %mul8.i879, %mul10.i881
  %sub13.i884 = fsub float 1.500000e+00, %mul12.i883
  %mul15.i886 = fmul float %mul8.i879, %sub13.i884
  %mul17.i888 = fmul float %mul.i867, %mul15.i886
  %mul19.i890 = fmul float %mul15.i886, %mul17.i888
  %sub20.i891 = fsub float 1.500000e+00, %mul19.i890
  %mul22.i893 = fmul float %mul15.i886, %sub20.i891
  %div.i895 = fdiv float 1.000000e+00, %mul22.i893
  %mul114 = fmul float %div.i895, 2.550000e+02
  %cmp117 = fcmp ogt float %mul100, 2.550000e+02
  %cond = select i1 %cmp117, float 2.550000e+02, float %mul100
  %conv120 = fptoui float %cond to i8
  %76 = trunc i64 %indvars.iv to i32
  %add122 = add i32 %76, %mul121
  %mul123 = mul i32 %add122, 3
  %idxprom125 = zext i32 %mul123 to i64
  %arrayidx126 = getelementptr inbounds i8, i8* %0, i64 %idxprom125
  store i8 %conv120, i8* %arrayidx126, align 1
  %cmp128 = fcmp ogt float %mul107, 2.550000e+02
  %cond134 = select i1 %cmp128, float 2.550000e+02, float %mul107
  %conv135 = fptoui float %cond134 to i8
  %add139 = or i32 %mul123, 1
  %idxprom140 = zext i32 %add139 to i64
  %arrayidx141 = getelementptr inbounds i8, i8* %0, i64 %idxprom140
  store i8 %conv135, i8* %arrayidx141, align 1
  %cmp143 = fcmp ogt float %mul114, 2.550000e+02
  %cond149 = select i1 %cmp143, float 2.550000e+02, float %mul114
  %conv150 = fptoui float %cond149 to i8
  %add154 = add i32 %mul123, 2
  %idxprom155 = zext i32 %add154 to i64
  %arrayidx156 = getelementptr inbounds i8, i8* %0, i64 %idxprom155
  store i8 %conv150, i8* %arrayidx156, align 1
  %77 = load i8, i8* %arrayidx19, align 1
  %conv166 = zext i8 %77 to i32
  %78 = load i8, i8* %arrayidx41, align 1
  %conv175 = zext i8 %78 to i32
  %add176 = add nuw nsw i32 %conv175, %conv166
  %shr17711 = lshr i32 %add176, 1
  %conv178 = sitofp i32 %shr17711 to float
  %79 = load i8, i8* %arrayidx82, align 1
  %conv187 = uitofp i8 %79 to float
  %80 = add nsw i64 %61, -1
  %81 = trunc i64 %80 to i32
  %add194 = add i32 %81, %add58
  %idxprom195 = zext i32 %add194 to i64
  %arrayidx196 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom195
  %82 = load i8, i8* %arrayidx196, align 1
  %conv197 = zext i8 %82 to i32
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 2
  %83 = trunc i64 %indvars.iv.next to i32
  %add203 = add i32 %83, %add58
  %idxprom204 = zext i32 %add203 to i64
  %arrayidx205 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom204
  %84 = load i8, i8* %arrayidx205, align 1
  %conv206 = zext i8 %84 to i32
  %add207 = add nuw nsw i32 %conv206, %conv197
  %shr20812 = lshr i32 %add207, 1
  %conv209 = sitofp i32 %shr20812 to float
  %div214 = fdiv float %conv178, 2.550000e+02
  %mul.i834 = fmul float %div214, 5.000000e-01
  %.cast13 = bitcast float %div214 to i32
  %shr.i837 = lshr i32 %.cast13, 1
  %sub.i838 = sub nsw i32 1597463007, %shr.i837
  %.cast14 = bitcast i32 %sub.i838 to float
  %mul3.i841 = fmul float %mul.i834, %.cast14
  %mul5.i843 = fmul float %.cast14, %mul3.i841
  %sub6.i844 = fsub float 1.500000e+00, %mul5.i843
  %mul8.i846 = fmul float %.cast14, %sub6.i844
  %mul10.i848 = fmul float %mul.i834, %mul8.i846
  %mul12.i850 = fmul float %mul8.i846, %mul10.i848
  %sub13.i851 = fsub float 1.500000e+00, %mul12.i850
  %mul15.i853 = fmul float %mul8.i846, %sub13.i851
  %mul17.i855 = fmul float %mul.i834, %mul15.i853
  %mul19.i857 = fmul float %mul15.i853, %mul17.i855
  %sub20.i858 = fsub float 1.500000e+00, %mul19.i857
  %mul22.i860 = fmul float %mul15.i853, %sub20.i858
  %div.i862 = fdiv float 1.000000e+00, %mul22.i860
  %mul216 = fmul float %div.i862, 2.550000e+02
  %mul220 = fmul float %conv187, 0.000000e+00
  %div221 = fdiv float %mul220, 2.550000e+02
  %mul.i801 = fmul float %div221, 5.000000e-01
  %.cast16 = bitcast float %div221 to i32
  %shr.i804 = lshr i32 %.cast16, 1
  %sub.i805 = sub nsw i32 1597463007, %shr.i804
  %.cast17 = bitcast i32 %sub.i805 to float
  %mul3.i808 = fmul float %mul.i801, %.cast17
  %mul5.i810 = fmul float %.cast17, %mul3.i808
  %sub6.i811 = fsub float 1.500000e+00, %mul5.i810
  %mul8.i813 = fmul float %.cast17, %sub6.i811
  %mul10.i815 = fmul float %mul.i801, %mul8.i813
  %mul12.i817 = fmul float %mul8.i813, %mul10.i815
  %sub13.i818 = fsub float 1.500000e+00, %mul12.i817
  %mul15.i820 = fmul float %mul8.i813, %sub13.i818
  %mul17.i822 = fmul float %mul.i801, %mul15.i820
  %mul19.i824 = fmul float %mul15.i820, %mul17.i822
  %sub20.i825 = fsub float 1.500000e+00, %mul19.i824
  %mul22.i827 = fmul float %mul15.i820, %sub20.i825
  %div.i829 = fdiv float 1.000000e+00, %mul22.i827
  %mul223 = fmul float %div.i829, 2.550000e+02
  %div228 = fdiv float %conv209, 2.550000e+02
  %mul.i768 = fmul float %div228, 5.000000e-01
  %.cast19 = bitcast float %div228 to i32
  %shr.i771 = lshr i32 %.cast19, 1
  %sub.i772 = sub nsw i32 1597463007, %shr.i771
  %.cast20 = bitcast i32 %sub.i772 to float
  %mul3.i775 = fmul float %mul.i768, %.cast20
  %mul5.i777 = fmul float %.cast20, %mul3.i775
  %sub6.i778 = fsub float 1.500000e+00, %mul5.i777
  %mul8.i780 = fmul float %.cast20, %sub6.i778
  %mul10.i782 = fmul float %mul.i768, %mul8.i780
  %mul12.i784 = fmul float %mul8.i780, %mul10.i782
  %sub13.i785 = fsub float 1.500000e+00, %mul12.i784
  %mul15.i787 = fmul float %mul8.i780, %sub13.i785
  %mul17.i789 = fmul float %mul.i768, %mul15.i787
  %mul19.i791 = fmul float %mul15.i787, %mul17.i789
  %sub20.i792 = fsub float 1.500000e+00, %mul19.i791
  %mul22.i794 = fmul float %mul15.i787, %sub20.i792
  %div.i796 = fdiv float 1.000000e+00, %mul22.i794
  %mul230 = fmul float %div.i796, 2.550000e+02
  %cmp233 = fcmp ogt float %mul216, 2.550000e+02
  %cond239 = select i1 %cmp233, float 2.550000e+02, float %mul216
  %conv240 = fptoui float %cond239 to i8
  %85 = trunc i64 %61 to i32
  %add242 = add i32 %85, %mul121
  %mul243 = mul i32 %add242, 3
  %idxprom245 = zext i32 %mul243 to i64
  %arrayidx246 = getelementptr inbounds i8, i8* %0, i64 %idxprom245
  store i8 %conv240, i8* %arrayidx246, align 1
  %cmp248 = fcmp ogt float %mul223, 2.550000e+02
  %cond254 = select i1 %cmp248, float 2.550000e+02, float %mul223
  %conv255 = fptoui float %cond254 to i8
  %add259 = add i32 %mul243, 1
  %idxprom260 = zext i32 %add259 to i64
  %arrayidx261 = getelementptr inbounds i8, i8* %0, i64 %idxprom260
  store i8 %conv255, i8* %arrayidx261, align 1
  %cmp263 = fcmp ogt float %mul230, 2.550000e+02
  %cond269 = select i1 %cmp263, float 2.550000e+02, float %mul230
  %conv270 = fptoui float %cond269 to i8
  %add274 = add i32 %mul243, 2
  %idxprom275 = zext i32 %add274 to i64
  %arrayidx276 = getelementptr inbounds i8, i8* %0, i64 %idxprom275
  store i8 %conv270, i8* %arrayidx276, align 1
  %86 = load i8, i8* %arrayidx30, align 1
  %conv286 = zext i8 %86 to i32
  %87 = load i8, i8* %arrayidx41, align 1
  %conv295 = zext i8 %87 to i32
  %add296 = add nuw nsw i32 %conv295, %conv286
  %shr29722 = lshr i32 %add296, 1
  %conv298 = sitofp i32 %shr29722 to float
  %88 = load i8, i8* %arrayidx72, align 1
  %conv307 = uitofp i8 %88 to float
  %89 = trunc i64 %indvars.iv to i32
  %add314 = add i32 %89, %add313
  %idxprom315 = zext i32 %add314 to i64
  %arrayidx316 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom315
  %90 = load i8, i8* %arrayidx316, align 1
  %conv317 = zext i8 %90 to i32
  %91 = trunc i64 %indvars.iv to i32
  %add323 = add i32 %91, %add322
  %idxprom324 = zext i32 %add323 to i64
  %arrayidx325 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom324
  %92 = load i8, i8* %arrayidx325, align 1
  %conv326 = zext i8 %92 to i32
  %add327 = add nuw nsw i32 %conv326, %conv317
  %shr32823 = lshr i32 %add327, 1
  %conv329 = sitofp i32 %shr32823 to float
  %div334 = fdiv float %conv298, 2.550000e+02
  %mul.i735 = fmul float %div334, 5.000000e-01
  %.cast24 = bitcast float %div334 to i32
  %shr.i738 = lshr i32 %.cast24, 1
  %sub.i739 = sub nsw i32 1597463007, %shr.i738
  %.cast25 = bitcast i32 %sub.i739 to float
  %mul3.i742 = fmul float %mul.i735, %.cast25
  %mul5.i744 = fmul float %.cast25, %mul3.i742
  %sub6.i745 = fsub float 1.500000e+00, %mul5.i744
  %mul8.i747 = fmul float %.cast25, %sub6.i745
  %mul10.i749 = fmul float %mul.i735, %mul8.i747
  %mul12.i751 = fmul float %mul8.i747, %mul10.i749
  %sub13.i752 = fsub float 1.500000e+00, %mul12.i751
  %mul15.i754 = fmul float %mul8.i747, %sub13.i752
  %mul17.i756 = fmul float %mul.i735, %mul15.i754
  %mul19.i758 = fmul float %mul15.i754, %mul17.i756
  %sub20.i759 = fsub float 1.500000e+00, %mul19.i758
  %mul22.i761 = fmul float %mul15.i754, %sub20.i759
  %div.i763 = fdiv float 1.000000e+00, %mul22.i761
  %mul336 = fmul float %div.i763, 2.550000e+02
  %mul340 = fmul float %conv307, 0.000000e+00
  %div341 = fdiv float %mul340, 2.550000e+02
  %mul.i702 = fmul float %div341, 5.000000e-01
  %.cast27 = bitcast float %div341 to i32
  %shr.i705 = lshr i32 %.cast27, 1
  %sub.i706 = sub nsw i32 1597463007, %shr.i705
  %.cast28 = bitcast i32 %sub.i706 to float
  %mul3.i709 = fmul float %mul.i702, %.cast28
  %mul5.i711 = fmul float %.cast28, %mul3.i709
  %sub6.i712 = fsub float 1.500000e+00, %mul5.i711
  %mul8.i714 = fmul float %.cast28, %sub6.i712
  %mul10.i716 = fmul float %mul.i702, %mul8.i714
  %mul12.i718 = fmul float %mul8.i714, %mul10.i716
  %sub13.i719 = fsub float 1.500000e+00, %mul12.i718
  %mul15.i721 = fmul float %mul8.i714, %sub13.i719
  %mul17.i723 = fmul float %mul.i702, %mul15.i721
  %mul19.i725 = fmul float %mul15.i721, %mul17.i723
  %sub20.i726 = fsub float 1.500000e+00, %mul19.i725
  %mul22.i728 = fmul float %mul15.i721, %sub20.i726
  %div.i730 = fdiv float 1.000000e+00, %mul22.i728
  %mul343 = fmul float %div.i730, 2.550000e+02
  %div348 = fdiv float %conv329, 2.550000e+02
  %mul.i669 = fmul float %div348, 5.000000e-01
  %.cast30 = bitcast float %div348 to i32
  %shr.i672 = lshr i32 %.cast30, 1
  %sub.i673 = sub nsw i32 1597463007, %shr.i672
  %.cast31 = bitcast i32 %sub.i673 to float
  %mul3.i676 = fmul float %mul.i669, %.cast31
  %mul5.i678 = fmul float %.cast31, %mul3.i676
  %sub6.i679 = fsub float 1.500000e+00, %mul5.i678
  %mul8.i681 = fmul float %.cast31, %sub6.i679
  %mul10.i683 = fmul float %mul.i669, %mul8.i681
  %mul12.i685 = fmul float %mul8.i681, %mul10.i683
  %sub13.i686 = fsub float 1.500000e+00, %mul12.i685
  %mul15.i688 = fmul float %mul8.i681, %sub13.i686
  %mul17.i690 = fmul float %mul.i669, %mul15.i688
  %mul19.i692 = fmul float %mul15.i688, %mul17.i690
  %sub20.i693 = fsub float 1.500000e+00, %mul19.i692
  %mul22.i695 = fmul float %mul15.i688, %sub20.i693
  %div.i697 = fdiv float 1.000000e+00, %mul22.i695
  %mul350 = fmul float %div.i697, 2.550000e+02
  %cmp353 = fcmp ogt float %mul336, 2.550000e+02
  %cond359 = select i1 %cmp353, float 2.550000e+02, float %mul336
  %conv360 = fptoui float %cond359 to i8
  %93 = trunc i64 %indvars.iv to i32
  %add362 = add i32 %93, %mul361
  %mul363 = mul i32 %add362, 3
  %idxprom365 = zext i32 %mul363 to i64
  %arrayidx366 = getelementptr inbounds i8, i8* %0, i64 %idxprom365
  store i8 %conv360, i8* %arrayidx366, align 1
  %cmp368 = fcmp ogt float %mul343, 2.550000e+02
  %cond374 = select i1 %cmp368, float 2.550000e+02, float %mul343
  %conv375 = fptoui float %cond374 to i8
  %add379 = add i32 %mul363, 1
  %idxprom380 = zext i32 %add379 to i64
  %arrayidx381 = getelementptr inbounds i8, i8* %0, i64 %idxprom380
  store i8 %conv375, i8* %arrayidx381, align 1
  %cmp383 = fcmp ogt float %mul350, 2.550000e+02
  %cond389 = select i1 %cmp383, float 2.550000e+02, float %mul350
  %conv390 = fptoui float %cond389 to i8
  %add394 = add i32 %mul363, 2
  %idxprom395 = zext i32 %add394 to i64
  %arrayidx396 = getelementptr inbounds i8, i8* %0, i64 %idxprom395
  store i8 %conv390, i8* %arrayidx396, align 1
  %94 = load i8, i8* %arrayidx41, align 1
  %conv406 = uitofp i8 %94 to float
  %95 = trunc i64 %61 to i32
  %add413 = add i32 %95, %add313
  %idxprom414 = zext i32 %add413 to i64
  %arrayidx415 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom414
  %96 = load i8, i8* %arrayidx415, align 1
  %conv416 = zext i8 %96 to i32
  %97 = trunc i64 %80 to i32
  %add422 = add i32 %97, %add26
  %idxprom423 = zext i32 %add422 to i64
  %arrayidx424 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom423
  %98 = load i8, i8* %arrayidx424, align 1
  %conv425 = zext i8 %98 to i32
  %add426 = add nuw nsw i32 %conv425, %conv416
  %99 = trunc i64 %61 to i32
  %add432 = add i32 %99, %add322
  %idxprom433 = zext i32 %add432 to i64
  %arrayidx434 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom433
  %100 = load i8, i8* %arrayidx434, align 1
  %conv435 = zext i8 %100 to i32
  %add436 = add nuw nsw i32 %add426, %conv435
  %101 = trunc i64 %indvars.iv.next to i32
  %add442 = add i32 %101, %add26
  %idxprom443 = zext i32 %add442 to i64
  %arrayidx444 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom443
  %102 = load i8, i8* %arrayidx444, align 1
  %conv445 = zext i8 %102 to i32
  %add446 = add nuw nsw i32 %add436, %conv445
  %shr44733 = lshr i32 %add446, 2
  %conv448 = sitofp i32 %shr44733 to float
  %103 = trunc i64 %80 to i32
  %add456 = add i32 %103, %add313
  %idxprom457 = zext i32 %add456 to i64
  %arrayidx458 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom457
  %104 = load i8, i8* %arrayidx458, align 1
  %conv459 = zext i8 %104 to i32
  %105 = trunc i64 %indvars.iv.next to i32
  %add466 = add i32 %105, %add313
  %idxprom467 = zext i32 %add466 to i64
  %arrayidx468 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom467
  %106 = load i8, i8* %arrayidx468, align 1
  %conv469 = zext i8 %106 to i32
  %add470 = add nuw nsw i32 %conv469, %conv459
  %107 = trunc i64 %80 to i32
  %add477 = add i32 %107, %add322
  %idxprom478 = zext i32 %add477 to i64
  %arrayidx479 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom478
  %108 = load i8, i8* %arrayidx479, align 1
  %conv480 = zext i8 %108 to i32
  %add481 = add nuw nsw i32 %add470, %conv480
  %109 = trunc i64 %indvars.iv.next to i32
  %add488 = add i32 %109, %add322
  %idxprom489 = zext i32 %add488 to i64
  %arrayidx490 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom489
  %110 = load i8, i8* %arrayidx490, align 1
  %conv491 = zext i8 %110 to i32
  %add492 = add nuw nsw i32 %add481, %conv491
  %shr49334 = lshr i32 %add492, 2
  %conv494 = sitofp i32 %shr49334 to float
  %div499 = fdiv float %conv406, 2.550000e+02
  %mul.i636 = fmul float %div499, 5.000000e-01
  %.cast35 = bitcast float %div499 to i32
  %shr.i639 = lshr i32 %.cast35, 1
  %sub.i640 = sub nsw i32 1597463007, %shr.i639
  %.cast36 = bitcast i32 %sub.i640 to float
  %mul3.i643 = fmul float %mul.i636, %.cast36
  %mul5.i645 = fmul float %.cast36, %mul3.i643
  %sub6.i646 = fsub float 1.500000e+00, %mul5.i645
  %mul8.i648 = fmul float %.cast36, %sub6.i646
  %mul10.i650 = fmul float %mul.i636, %mul8.i648
  %mul12.i652 = fmul float %mul8.i648, %mul10.i650
  %sub13.i653 = fsub float 1.500000e+00, %mul12.i652
  %mul15.i655 = fmul float %mul8.i648, %sub13.i653
  %mul17.i657 = fmul float %mul.i636, %mul15.i655
  %mul19.i659 = fmul float %mul15.i655, %mul17.i657
  %sub20.i660 = fsub float 1.500000e+00, %mul19.i659
  %mul22.i662 = fmul float %mul15.i655, %sub20.i660
  %div.i664 = fdiv float 1.000000e+00, %mul22.i662
  %mul501 = fmul float %div.i664, 2.550000e+02
  %mul505 = fmul float %conv448, 0.000000e+00
  %div506 = fdiv float %mul505, 2.550000e+02
  %mul.i603 = fmul float %div506, 5.000000e-01
  %.cast38 = bitcast float %div506 to i32
  %shr.i606 = lshr i32 %.cast38, 1
  %sub.i607 = sub nsw i32 1597463007, %shr.i606
  %.cast39 = bitcast i32 %sub.i607 to float
  %mul3.i610 = fmul float %mul.i603, %.cast39
  %mul5.i612 = fmul float %.cast39, %mul3.i610
  %sub6.i613 = fsub float 1.500000e+00, %mul5.i612
  %mul8.i615 = fmul float %.cast39, %sub6.i613
  %mul10.i617 = fmul float %mul.i603, %mul8.i615
  %mul12.i619 = fmul float %mul8.i615, %mul10.i617
  %sub13.i620 = fsub float 1.500000e+00, %mul12.i619
  %mul15.i622 = fmul float %mul8.i615, %sub13.i620
  %mul17.i624 = fmul float %mul.i603, %mul15.i622
  %mul19.i626 = fmul float %mul15.i622, %mul17.i624
  %sub20.i627 = fsub float 1.500000e+00, %mul19.i626
  %mul22.i629 = fmul float %mul15.i622, %sub20.i627
  %div.i631 = fdiv float 1.000000e+00, %mul22.i629
  %mul508 = fmul float %div.i631, 2.550000e+02
  %div513 = fdiv float %conv494, 2.550000e+02
  %mul.i570 = fmul float %div513, 5.000000e-01
  %.cast41 = bitcast float %div513 to i32
  %shr.i573 = lshr i32 %.cast41, 1
  %sub.i574 = sub nsw i32 1597463007, %shr.i573
  %.cast42 = bitcast i32 %sub.i574 to float
  %mul3.i577 = fmul float %mul.i570, %.cast42
  %mul5.i579 = fmul float %.cast42, %mul3.i577
  %sub6.i580 = fsub float 1.500000e+00, %mul5.i579
  %mul8.i582 = fmul float %.cast42, %sub6.i580
  %mul10.i584 = fmul float %mul.i570, %mul8.i582
  %mul12.i586 = fmul float %mul8.i582, %mul10.i584
  %sub13.i587 = fsub float 1.500000e+00, %mul12.i586
  %mul15.i589 = fmul float %mul8.i582, %sub13.i587
  %mul17.i591 = fmul float %mul.i570, %mul15.i589
  %mul19.i593 = fmul float %mul15.i589, %mul17.i591
  %sub20.i594 = fsub float 1.500000e+00, %mul19.i593
  %mul22.i596 = fmul float %mul15.i589, %sub20.i594
  %div.i598 = fdiv float 1.000000e+00, %mul22.i596
  %mul515 = fmul float %div.i598, 2.550000e+02
  %cmp518 = fcmp ogt float %mul501, 2.550000e+02
  %cond524 = select i1 %cmp518, float 2.550000e+02, float %mul501
  %conv525 = fptoui float %cond524 to i8
  %111 = trunc i64 %61 to i32
  %add527 = add i32 %111, %mul361
  %mul528 = mul i32 %add527, 3
  %idxprom530 = zext i32 %mul528 to i64
  %arrayidx531 = getelementptr inbounds i8, i8* %0, i64 %idxprom530
  store i8 %conv525, i8* %arrayidx531, align 1
  %cmp533 = fcmp ogt float %mul508, 2.550000e+02
  %cond539 = select i1 %cmp533, float 2.550000e+02, float %mul508
  %conv540 = fptoui float %cond539 to i8
  %add544 = add i32 %mul528, 1
  %idxprom545 = zext i32 %add544 to i64
  %arrayidx546 = getelementptr inbounds i8, i8* %0, i64 %idxprom545
  store i8 %conv540, i8* %arrayidx546, align 1
  %cmp548 = fcmp ogt float %mul515, 2.550000e+02
  %cond554 = select i1 %cmp548, float 2.550000e+02, float %mul515
  %conv555 = fptoui float %cond554 to i8
  %add559 = add i32 %mul528, 2
  %idxprom560 = zext i32 %add559 to i64
  %arrayidx561 = getelementptr inbounds i8, i8* %0, i64 %idxprom560
  store i8 %conv555, i8* %arrayidx561, align 1
  %cmp3 = icmp ult i64 %indvars.iv.next, %1
  br i1 %cmp3, label %for.body5, label %for.inc563, !llvm.loop !1

for.inc563:                                       ; preds = %for.body5
  %add564 = add nuw nsw i32 %i.072, 2
  br i1 %cmp369, label %for.inc563.1, label %for.body5.lr.ph.1

for.end565.loopexit:                              ; preds = %for.inc563.1
  br label %for.end565

for.end565:                                       ; preds = %for.end565.loopexit, %for.cond2.preheader.lr.ph.split, %entry
  ret void

for.body5.lr.ph.1:                                ; preds = %for.inc563
  %sub.1 = or i32 %i.072, 1
  %mul.1 = mul i32 %sub.1, %add6
  %add7.1 = add i32 %mul.1, %add
  %add23.1 = or i32 %add564, 1
  %mul25.1 = mul i32 %add23.1, %add6
  %add26.1 = add i32 %mul25.1, %add
  %mul57.1 = mul i32 %add564, %add6
  %add58.1 = add i32 %mul57.1, %add
  %mul121.1 = mul i32 %add564, %img_width
  %sub310.1 = add nsw i32 %add23.1, -1
  %mul312.1 = mul i32 %sub310.1, %add6
  %add313.1 = add i32 %mul312.1, %add
  %add319.1 = add nuw nsw i32 %add23.1, 1
  %mul321.1 = mul i32 %add319.1, %add6
  %add322.1 = add i32 %mul321.1, %add
  %mul361.1 = mul i32 %add23.1, %img_width
  br label %for.body5.1

for.body5.1:                                      ; preds = %for.body5.1, %for.body5.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body5.lr.ph.1 ], [ %indvars.iv.next.1, %for.body5.1 ]
  %112 = trunc i64 %indvars.iv.1 to i32
  %sub8.1 = add nsw i32 %112, -1
  %add9.1 = add i32 %sub8.1, %add7.1
  %idxprom.1 = zext i32 %add9.1 to i64
  %arrayidx.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom.1
  %113 = load i8, i8* %arrayidx.1, align 1
  %conv10.1 = zext i8 %113 to i32
  %114 = or i64 %indvars.iv.1, 1
  %115 = trunc i64 %114 to i32
  %add17.1 = add i32 %115, %add7.1
  %idxprom18.1 = zext i32 %add17.1 to i64
  %arrayidx19.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom18.1
  %116 = load i8, i8* %arrayidx19.1, align 1
  %conv20.1 = zext i8 %116 to i32
  %add21.1 = add nuw nsw i32 %conv20.1, %conv10.1
  %add28.1 = add i32 %sub8.1, %add26.1
  %idxprom29.1 = zext i32 %add28.1 to i64
  %arrayidx30.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom29.1
  %117 = load i8, i8* %arrayidx30.1, align 1
  %conv31.1 = zext i8 %117 to i32
  %add32.1 = add nuw nsw i32 %add21.1, %conv31.1
  %118 = trunc i64 %114 to i32
  %add39.1 = add i32 %118, %add26.1
  %idxprom40.1 = zext i32 %add39.1 to i64
  %arrayidx41.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom40.1
  %119 = load i8, i8* %arrayidx41.1, align 1
  %conv42.1 = zext i8 %119 to i32
  %add43.1 = add nuw nsw i32 %add32.1, %conv42.1
  %shr1.1 = lshr i32 %add43.1, 2
  %conv44.1 = sitofp i32 %shr1.1 to float
  %120 = trunc i64 %indvars.iv.1 to i32
  %add51.1 = add i32 %120, %add7.1
  %idxprom52.1 = zext i32 %add51.1 to i64
  %arrayidx53.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom52.1
  %121 = load i8, i8* %arrayidx53.1, align 1
  %conv54.1 = zext i8 %121 to i32
  %add60.1 = add i32 %sub8.1, %add58.1
  %idxprom61.1 = zext i32 %add60.1 to i64
  %arrayidx62.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom61.1
  %122 = load i8, i8* %arrayidx62.1, align 1
  %conv63.1 = zext i8 %122 to i32
  %add64.1 = add nuw nsw i32 %conv63.1, %conv54.1
  %123 = trunc i64 %indvars.iv.1 to i32
  %add70.1 = add i32 %123, %add26.1
  %idxprom71.1 = zext i32 %add70.1 to i64
  %arrayidx72.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom71.1
  %124 = load i8, i8* %arrayidx72.1, align 1
  %conv73.1 = zext i8 %124 to i32
  %add74.1 = add nuw nsw i32 %add64.1, %conv73.1
  %125 = trunc i64 %114 to i32
  %add80.1 = add i32 %125, %add58.1
  %idxprom81.1 = zext i32 %add80.1 to i64
  %arrayidx82.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom81.1
  %126 = load i8, i8* %arrayidx82.1, align 1
  %conv83.1 = zext i8 %126 to i32
  %add84.1 = add nuw nsw i32 %add74.1, %conv83.1
  %shr852.1 = lshr i32 %add84.1, 2
  %conv86.1 = sitofp i32 %shr852.1 to float
  %127 = trunc i64 %indvars.iv.1 to i32
  %add92.1 = add i32 %127, %add58.1
  %idxprom93.1 = zext i32 %add92.1 to i64
  %arrayidx94.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom93.1
  %128 = load i8, i8* %arrayidx94.1, align 1
  %conv95.1 = uitofp i8 %128 to float
  %div.1 = fdiv float %conv44.1, 2.550000e+02
  %mul.i.1 = fmul float %div.1, 5.000000e-01
  %.cast.1 = bitcast float %div.1 to i32
  %shr.i.1 = lshr i32 %.cast.1, 1
  %sub.i.1 = sub nsw i32 1597463007, %shr.i.1
  %.cast3.1 = bitcast i32 %sub.i.1 to float
  %mul3.i.1 = fmul float %mul.i.1, %.cast3.1
  %mul5.i.1 = fmul float %.cast3.1, %mul3.i.1
  %sub6.i.1 = fsub float 1.500000e+00, %mul5.i.1
  %mul8.i.1 = fmul float %.cast3.1, %sub6.i.1
  %mul10.i.1 = fmul float %mul.i.1, %mul8.i.1
  %mul12.i.1 = fmul float %mul8.i.1, %mul10.i.1
  %sub13.i.1 = fsub float 1.500000e+00, %mul12.i.1
  %mul15.i.1 = fmul float %mul8.i.1, %sub13.i.1
  %mul17.i.1 = fmul float %mul.i.1, %mul15.i.1
  %mul19.i.1 = fmul float %mul15.i.1, %mul17.i.1
  %sub20.i.1 = fsub float 1.500000e+00, %mul19.i.1
  %mul22.i.1 = fmul float %mul15.i.1, %sub20.i.1
  %div.i.1 = fdiv float 1.000000e+00, %mul22.i.1
  %mul100.1 = fmul float %div.i.1, 2.550000e+02
  %mul104.1 = fmul float %conv86.1, 0.000000e+00
  %div105.1 = fdiv float %mul104.1, 2.550000e+02
  %mul.i900.1 = fmul float %div105.1, 5.000000e-01
  %.cast5.1 = bitcast float %div105.1 to i32
  %shr.i903.1 = lshr i32 %.cast5.1, 1
  %sub.i904.1 = sub nsw i32 1597463007, %shr.i903.1
  %.cast6.1 = bitcast i32 %sub.i904.1 to float
  %mul3.i907.1 = fmul float %mul.i900.1, %.cast6.1
  %mul5.i909.1 = fmul float %.cast6.1, %mul3.i907.1
  %sub6.i910.1 = fsub float 1.500000e+00, %mul5.i909.1
  %mul8.i912.1 = fmul float %.cast6.1, %sub6.i910.1
  %mul10.i914.1 = fmul float %mul.i900.1, %mul8.i912.1
  %mul12.i916.1 = fmul float %mul8.i912.1, %mul10.i914.1
  %sub13.i917.1 = fsub float 1.500000e+00, %mul12.i916.1
  %mul15.i919.1 = fmul float %mul8.i912.1, %sub13.i917.1
  %mul17.i921.1 = fmul float %mul.i900.1, %mul15.i919.1
  %mul19.i923.1 = fmul float %mul15.i919.1, %mul17.i921.1
  %sub20.i924.1 = fsub float 1.500000e+00, %mul19.i923.1
  %mul22.i926.1 = fmul float %mul15.i919.1, %sub20.i924.1
  %div.i928.1 = fdiv float 1.000000e+00, %mul22.i926.1
  %mul107.1 = fmul float %div.i928.1, 2.550000e+02
  %div112.1 = fdiv float %conv95.1, 2.550000e+02
  %mul.i867.1 = fmul float %div112.1, 5.000000e-01
  %.cast8.1 = bitcast float %div112.1 to i32
  %shr.i870.1 = lshr i32 %.cast8.1, 1
  %sub.i871.1 = sub nsw i32 1597463007, %shr.i870.1
  %.cast9.1 = bitcast i32 %sub.i871.1 to float
  %mul3.i874.1 = fmul float %mul.i867.1, %.cast9.1
  %mul5.i876.1 = fmul float %.cast9.1, %mul3.i874.1
  %sub6.i877.1 = fsub float 1.500000e+00, %mul5.i876.1
  %mul8.i879.1 = fmul float %.cast9.1, %sub6.i877.1
  %mul10.i881.1 = fmul float %mul.i867.1, %mul8.i879.1
  %mul12.i883.1 = fmul float %mul8.i879.1, %mul10.i881.1
  %sub13.i884.1 = fsub float 1.500000e+00, %mul12.i883.1
  %mul15.i886.1 = fmul float %mul8.i879.1, %sub13.i884.1
  %mul17.i888.1 = fmul float %mul.i867.1, %mul15.i886.1
  %mul19.i890.1 = fmul float %mul15.i886.1, %mul17.i888.1
  %sub20.i891.1 = fsub float 1.500000e+00, %mul19.i890.1
  %mul22.i893.1 = fmul float %mul15.i886.1, %sub20.i891.1
  %div.i895.1 = fdiv float 1.000000e+00, %mul22.i893.1
  %mul114.1 = fmul float %div.i895.1, 2.550000e+02
  %cmp117.1 = fcmp ogt float %mul100.1, 2.550000e+02
  %cond.1 = select i1 %cmp117.1, float 2.550000e+02, float %mul100.1
  %conv120.1 = fptoui float %cond.1 to i8
  %129 = trunc i64 %indvars.iv.1 to i32
  %add122.1 = add i32 %129, %mul121.1
  %mul123.1 = mul i32 %add122.1, 3
  %idxprom125.1 = zext i32 %mul123.1 to i64
  %arrayidx126.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom125.1
  store i8 %conv120.1, i8* %arrayidx126.1, align 1
  %cmp128.1 = fcmp ogt float %mul107.1, 2.550000e+02
  %cond134.1 = select i1 %cmp128.1, float 2.550000e+02, float %mul107.1
  %conv135.1 = fptoui float %cond134.1 to i8
  %add139.1 = or i32 %mul123.1, 1
  %idxprom140.1 = zext i32 %add139.1 to i64
  %arrayidx141.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom140.1
  store i8 %conv135.1, i8* %arrayidx141.1, align 1
  %cmp143.1 = fcmp ogt float %mul114.1, 2.550000e+02
  %cond149.1 = select i1 %cmp143.1, float 2.550000e+02, float %mul114.1
  %conv150.1 = fptoui float %cond149.1 to i8
  %add154.1 = add i32 %mul123.1, 2
  %idxprom155.1 = zext i32 %add154.1 to i64
  %arrayidx156.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom155.1
  store i8 %conv150.1, i8* %arrayidx156.1, align 1
  %130 = load i8, i8* %arrayidx19.1, align 1
  %conv166.1 = zext i8 %130 to i32
  %131 = load i8, i8* %arrayidx41.1, align 1
  %conv175.1 = zext i8 %131 to i32
  %add176.1 = add nuw nsw i32 %conv175.1, %conv166.1
  %shr17711.1 = lshr i32 %add176.1, 1
  %conv178.1 = sitofp i32 %shr17711.1 to float
  %132 = load i8, i8* %arrayidx82.1, align 1
  %conv187.1 = uitofp i8 %132 to float
  %133 = add nsw i64 %114, -1
  %134 = trunc i64 %133 to i32
  %add194.1 = add i32 %134, %add58.1
  %idxprom195.1 = zext i32 %add194.1 to i64
  %arrayidx196.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom195.1
  %135 = load i8, i8* %arrayidx196.1, align 1
  %conv197.1 = zext i8 %135 to i32
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 2
  %136 = trunc i64 %indvars.iv.next.1 to i32
  %add203.1 = add i32 %136, %add58.1
  %idxprom204.1 = zext i32 %add203.1 to i64
  %arrayidx205.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom204.1
  %137 = load i8, i8* %arrayidx205.1, align 1
  %conv206.1 = zext i8 %137 to i32
  %add207.1 = add nuw nsw i32 %conv206.1, %conv197.1
  %shr20812.1 = lshr i32 %add207.1, 1
  %conv209.1 = sitofp i32 %shr20812.1 to float
  %div214.1 = fdiv float %conv178.1, 2.550000e+02
  %mul.i834.1 = fmul float %div214.1, 5.000000e-01
  %.cast13.1 = bitcast float %div214.1 to i32
  %shr.i837.1 = lshr i32 %.cast13.1, 1
  %sub.i838.1 = sub nsw i32 1597463007, %shr.i837.1
  %.cast14.1 = bitcast i32 %sub.i838.1 to float
  %mul3.i841.1 = fmul float %mul.i834.1, %.cast14.1
  %mul5.i843.1 = fmul float %.cast14.1, %mul3.i841.1
  %sub6.i844.1 = fsub float 1.500000e+00, %mul5.i843.1
  %mul8.i846.1 = fmul float %.cast14.1, %sub6.i844.1
  %mul10.i848.1 = fmul float %mul.i834.1, %mul8.i846.1
  %mul12.i850.1 = fmul float %mul8.i846.1, %mul10.i848.1
  %sub13.i851.1 = fsub float 1.500000e+00, %mul12.i850.1
  %mul15.i853.1 = fmul float %mul8.i846.1, %sub13.i851.1
  %mul17.i855.1 = fmul float %mul.i834.1, %mul15.i853.1
  %mul19.i857.1 = fmul float %mul15.i853.1, %mul17.i855.1
  %sub20.i858.1 = fsub float 1.500000e+00, %mul19.i857.1
  %mul22.i860.1 = fmul float %mul15.i853.1, %sub20.i858.1
  %div.i862.1 = fdiv float 1.000000e+00, %mul22.i860.1
  %mul216.1 = fmul float %div.i862.1, 2.550000e+02
  %mul220.1 = fmul float %conv187.1, 0.000000e+00
  %div221.1 = fdiv float %mul220.1, 2.550000e+02
  %mul.i801.1 = fmul float %div221.1, 5.000000e-01
  %.cast16.1 = bitcast float %div221.1 to i32
  %shr.i804.1 = lshr i32 %.cast16.1, 1
  %sub.i805.1 = sub nsw i32 1597463007, %shr.i804.1
  %.cast17.1 = bitcast i32 %sub.i805.1 to float
  %mul3.i808.1 = fmul float %mul.i801.1, %.cast17.1
  %mul5.i810.1 = fmul float %.cast17.1, %mul3.i808.1
  %sub6.i811.1 = fsub float 1.500000e+00, %mul5.i810.1
  %mul8.i813.1 = fmul float %.cast17.1, %sub6.i811.1
  %mul10.i815.1 = fmul float %mul.i801.1, %mul8.i813.1
  %mul12.i817.1 = fmul float %mul8.i813.1, %mul10.i815.1
  %sub13.i818.1 = fsub float 1.500000e+00, %mul12.i817.1
  %mul15.i820.1 = fmul float %mul8.i813.1, %sub13.i818.1
  %mul17.i822.1 = fmul float %mul.i801.1, %mul15.i820.1
  %mul19.i824.1 = fmul float %mul15.i820.1, %mul17.i822.1
  %sub20.i825.1 = fsub float 1.500000e+00, %mul19.i824.1
  %mul22.i827.1 = fmul float %mul15.i820.1, %sub20.i825.1
  %div.i829.1 = fdiv float 1.000000e+00, %mul22.i827.1
  %mul223.1 = fmul float %div.i829.1, 2.550000e+02
  %div228.1 = fdiv float %conv209.1, 2.550000e+02
  %mul.i768.1 = fmul float %div228.1, 5.000000e-01
  %.cast19.1 = bitcast float %div228.1 to i32
  %shr.i771.1 = lshr i32 %.cast19.1, 1
  %sub.i772.1 = sub nsw i32 1597463007, %shr.i771.1
  %.cast20.1 = bitcast i32 %sub.i772.1 to float
  %mul3.i775.1 = fmul float %mul.i768.1, %.cast20.1
  %mul5.i777.1 = fmul float %.cast20.1, %mul3.i775.1
  %sub6.i778.1 = fsub float 1.500000e+00, %mul5.i777.1
  %mul8.i780.1 = fmul float %.cast20.1, %sub6.i778.1
  %mul10.i782.1 = fmul float %mul.i768.1, %mul8.i780.1
  %mul12.i784.1 = fmul float %mul8.i780.1, %mul10.i782.1
  %sub13.i785.1 = fsub float 1.500000e+00, %mul12.i784.1
  %mul15.i787.1 = fmul float %mul8.i780.1, %sub13.i785.1
  %mul17.i789.1 = fmul float %mul.i768.1, %mul15.i787.1
  %mul19.i791.1 = fmul float %mul15.i787.1, %mul17.i789.1
  %sub20.i792.1 = fsub float 1.500000e+00, %mul19.i791.1
  %mul22.i794.1 = fmul float %mul15.i787.1, %sub20.i792.1
  %div.i796.1 = fdiv float 1.000000e+00, %mul22.i794.1
  %mul230.1 = fmul float %div.i796.1, 2.550000e+02
  %cmp233.1 = fcmp ogt float %mul216.1, 2.550000e+02
  %cond239.1 = select i1 %cmp233.1, float 2.550000e+02, float %mul216.1
  %conv240.1 = fptoui float %cond239.1 to i8
  %138 = trunc i64 %114 to i32
  %add242.1 = add i32 %138, %mul121.1
  %mul243.1 = mul i32 %add242.1, 3
  %idxprom245.1 = zext i32 %mul243.1 to i64
  %arrayidx246.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom245.1
  store i8 %conv240.1, i8* %arrayidx246.1, align 1
  %cmp248.1 = fcmp ogt float %mul223.1, 2.550000e+02
  %cond254.1 = select i1 %cmp248.1, float 2.550000e+02, float %mul223.1
  %conv255.1 = fptoui float %cond254.1 to i8
  %add259.1 = add i32 %mul243.1, 1
  %idxprom260.1 = zext i32 %add259.1 to i64
  %arrayidx261.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom260.1
  store i8 %conv255.1, i8* %arrayidx261.1, align 1
  %cmp263.1 = fcmp ogt float %mul230.1, 2.550000e+02
  %cond269.1 = select i1 %cmp263.1, float 2.550000e+02, float %mul230.1
  %conv270.1 = fptoui float %cond269.1 to i8
  %add274.1 = add i32 %mul243.1, 2
  %idxprom275.1 = zext i32 %add274.1 to i64
  %arrayidx276.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom275.1
  store i8 %conv270.1, i8* %arrayidx276.1, align 1
  %139 = load i8, i8* %arrayidx30.1, align 1
  %conv286.1 = zext i8 %139 to i32
  %140 = load i8, i8* %arrayidx41.1, align 1
  %conv295.1 = zext i8 %140 to i32
  %add296.1 = add nuw nsw i32 %conv295.1, %conv286.1
  %shr29722.1 = lshr i32 %add296.1, 1
  %conv298.1 = sitofp i32 %shr29722.1 to float
  %141 = load i8, i8* %arrayidx72.1, align 1
  %conv307.1 = uitofp i8 %141 to float
  %142 = trunc i64 %indvars.iv.1 to i32
  %add314.1 = add i32 %142, %add313.1
  %idxprom315.1 = zext i32 %add314.1 to i64
  %arrayidx316.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom315.1
  %143 = load i8, i8* %arrayidx316.1, align 1
  %conv317.1 = zext i8 %143 to i32
  %144 = trunc i64 %indvars.iv.1 to i32
  %add323.1 = add i32 %144, %add322.1
  %idxprom324.1 = zext i32 %add323.1 to i64
  %arrayidx325.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom324.1
  %145 = load i8, i8* %arrayidx325.1, align 1
  %conv326.1 = zext i8 %145 to i32
  %add327.1 = add nuw nsw i32 %conv326.1, %conv317.1
  %shr32823.1 = lshr i32 %add327.1, 1
  %conv329.1 = sitofp i32 %shr32823.1 to float
  %div334.1 = fdiv float %conv298.1, 2.550000e+02
  %mul.i735.1 = fmul float %div334.1, 5.000000e-01
  %.cast24.1 = bitcast float %div334.1 to i32
  %shr.i738.1 = lshr i32 %.cast24.1, 1
  %sub.i739.1 = sub nsw i32 1597463007, %shr.i738.1
  %.cast25.1 = bitcast i32 %sub.i739.1 to float
  %mul3.i742.1 = fmul float %mul.i735.1, %.cast25.1
  %mul5.i744.1 = fmul float %.cast25.1, %mul3.i742.1
  %sub6.i745.1 = fsub float 1.500000e+00, %mul5.i744.1
  %mul8.i747.1 = fmul float %.cast25.1, %sub6.i745.1
  %mul10.i749.1 = fmul float %mul.i735.1, %mul8.i747.1
  %mul12.i751.1 = fmul float %mul8.i747.1, %mul10.i749.1
  %sub13.i752.1 = fsub float 1.500000e+00, %mul12.i751.1
  %mul15.i754.1 = fmul float %mul8.i747.1, %sub13.i752.1
  %mul17.i756.1 = fmul float %mul.i735.1, %mul15.i754.1
  %mul19.i758.1 = fmul float %mul15.i754.1, %mul17.i756.1
  %sub20.i759.1 = fsub float 1.500000e+00, %mul19.i758.1
  %mul22.i761.1 = fmul float %mul15.i754.1, %sub20.i759.1
  %div.i763.1 = fdiv float 1.000000e+00, %mul22.i761.1
  %mul336.1 = fmul float %div.i763.1, 2.550000e+02
  %mul340.1 = fmul float %conv307.1, 0.000000e+00
  %div341.1 = fdiv float %mul340.1, 2.550000e+02
  %mul.i702.1 = fmul float %div341.1, 5.000000e-01
  %.cast27.1 = bitcast float %div341.1 to i32
  %shr.i705.1 = lshr i32 %.cast27.1, 1
  %sub.i706.1 = sub nsw i32 1597463007, %shr.i705.1
  %.cast28.1 = bitcast i32 %sub.i706.1 to float
  %mul3.i709.1 = fmul float %mul.i702.1, %.cast28.1
  %mul5.i711.1 = fmul float %.cast28.1, %mul3.i709.1
  %sub6.i712.1 = fsub float 1.500000e+00, %mul5.i711.1
  %mul8.i714.1 = fmul float %.cast28.1, %sub6.i712.1
  %mul10.i716.1 = fmul float %mul.i702.1, %mul8.i714.1
  %mul12.i718.1 = fmul float %mul8.i714.1, %mul10.i716.1
  %sub13.i719.1 = fsub float 1.500000e+00, %mul12.i718.1
  %mul15.i721.1 = fmul float %mul8.i714.1, %sub13.i719.1
  %mul17.i723.1 = fmul float %mul.i702.1, %mul15.i721.1
  %mul19.i725.1 = fmul float %mul15.i721.1, %mul17.i723.1
  %sub20.i726.1 = fsub float 1.500000e+00, %mul19.i725.1
  %mul22.i728.1 = fmul float %mul15.i721.1, %sub20.i726.1
  %div.i730.1 = fdiv float 1.000000e+00, %mul22.i728.1
  %mul343.1 = fmul float %div.i730.1, 2.550000e+02
  %div348.1 = fdiv float %conv329.1, 2.550000e+02
  %mul.i669.1 = fmul float %div348.1, 5.000000e-01
  %.cast30.1 = bitcast float %div348.1 to i32
  %shr.i672.1 = lshr i32 %.cast30.1, 1
  %sub.i673.1 = sub nsw i32 1597463007, %shr.i672.1
  %.cast31.1 = bitcast i32 %sub.i673.1 to float
  %mul3.i676.1 = fmul float %mul.i669.1, %.cast31.1
  %mul5.i678.1 = fmul float %.cast31.1, %mul3.i676.1
  %sub6.i679.1 = fsub float 1.500000e+00, %mul5.i678.1
  %mul8.i681.1 = fmul float %.cast31.1, %sub6.i679.1
  %mul10.i683.1 = fmul float %mul.i669.1, %mul8.i681.1
  %mul12.i685.1 = fmul float %mul8.i681.1, %mul10.i683.1
  %sub13.i686.1 = fsub float 1.500000e+00, %mul12.i685.1
  %mul15.i688.1 = fmul float %mul8.i681.1, %sub13.i686.1
  %mul17.i690.1 = fmul float %mul.i669.1, %mul15.i688.1
  %mul19.i692.1 = fmul float %mul15.i688.1, %mul17.i690.1
  %sub20.i693.1 = fsub float 1.500000e+00, %mul19.i692.1
  %mul22.i695.1 = fmul float %mul15.i688.1, %sub20.i693.1
  %div.i697.1 = fdiv float 1.000000e+00, %mul22.i695.1
  %mul350.1 = fmul float %div.i697.1, 2.550000e+02
  %cmp353.1 = fcmp ogt float %mul336.1, 2.550000e+02
  %cond359.1 = select i1 %cmp353.1, float 2.550000e+02, float %mul336.1
  %conv360.1 = fptoui float %cond359.1 to i8
  %146 = trunc i64 %indvars.iv.1 to i32
  %add362.1 = add i32 %146, %mul361.1
  %mul363.1 = mul i32 %add362.1, 3
  %idxprom365.1 = zext i32 %mul363.1 to i64
  %arrayidx366.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom365.1
  store i8 %conv360.1, i8* %arrayidx366.1, align 1
  %cmp368.1 = fcmp ogt float %mul343.1, 2.550000e+02
  %cond374.1 = select i1 %cmp368.1, float 2.550000e+02, float %mul343.1
  %conv375.1 = fptoui float %cond374.1 to i8
  %add379.1 = add i32 %mul363.1, 1
  %idxprom380.1 = zext i32 %add379.1 to i64
  %arrayidx381.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom380.1
  store i8 %conv375.1, i8* %arrayidx381.1, align 1
  %cmp383.1 = fcmp ogt float %mul350.1, 2.550000e+02
  %cond389.1 = select i1 %cmp383.1, float 2.550000e+02, float %mul350.1
  %conv390.1 = fptoui float %cond389.1 to i8
  %add394.1 = add i32 %mul363.1, 2
  %idxprom395.1 = zext i32 %add394.1 to i64
  %arrayidx396.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom395.1
  store i8 %conv390.1, i8* %arrayidx396.1, align 1
  %147 = load i8, i8* %arrayidx41.1, align 1
  %conv406.1 = uitofp i8 %147 to float
  %148 = trunc i64 %114 to i32
  %add413.1 = add i32 %148, %add313.1
  %idxprom414.1 = zext i32 %add413.1 to i64
  %arrayidx415.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom414.1
  %149 = load i8, i8* %arrayidx415.1, align 1
  %conv416.1 = zext i8 %149 to i32
  %150 = trunc i64 %133 to i32
  %add422.1 = add i32 %150, %add26.1
  %idxprom423.1 = zext i32 %add422.1 to i64
  %arrayidx424.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom423.1
  %151 = load i8, i8* %arrayidx424.1, align 1
  %conv425.1 = zext i8 %151 to i32
  %add426.1 = add nuw nsw i32 %conv425.1, %conv416.1
  %152 = trunc i64 %114 to i32
  %add432.1 = add i32 %152, %add322.1
  %idxprom433.1 = zext i32 %add432.1 to i64
  %arrayidx434.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom433.1
  %153 = load i8, i8* %arrayidx434.1, align 1
  %conv435.1 = zext i8 %153 to i32
  %add436.1 = add nuw nsw i32 %add426.1, %conv435.1
  %154 = trunc i64 %indvars.iv.next.1 to i32
  %add442.1 = add i32 %154, %add26.1
  %idxprom443.1 = zext i32 %add442.1 to i64
  %arrayidx444.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom443.1
  %155 = load i8, i8* %arrayidx444.1, align 1
  %conv445.1 = zext i8 %155 to i32
  %add446.1 = add nuw nsw i32 %add436.1, %conv445.1
  %shr44733.1 = lshr i32 %add446.1, 2
  %conv448.1 = sitofp i32 %shr44733.1 to float
  %156 = trunc i64 %133 to i32
  %add456.1 = add i32 %156, %add313.1
  %idxprom457.1 = zext i32 %add456.1 to i64
  %arrayidx458.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom457.1
  %157 = load i8, i8* %arrayidx458.1, align 1
  %conv459.1 = zext i8 %157 to i32
  %158 = trunc i64 %indvars.iv.next.1 to i32
  %add466.1 = add i32 %158, %add313.1
  %idxprom467.1 = zext i32 %add466.1 to i64
  %arrayidx468.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom467.1
  %159 = load i8, i8* %arrayidx468.1, align 1
  %conv469.1 = zext i8 %159 to i32
  %add470.1 = add nuw nsw i32 %conv469.1, %conv459.1
  %160 = trunc i64 %133 to i32
  %add477.1 = add i32 %160, %add322.1
  %idxprom478.1 = zext i32 %add477.1 to i64
  %arrayidx479.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom478.1
  %161 = load i8, i8* %arrayidx479.1, align 1
  %conv480.1 = zext i8 %161 to i32
  %add481.1 = add nuw nsw i32 %add470.1, %conv480.1
  %162 = trunc i64 %indvars.iv.next.1 to i32
  %add488.1 = add i32 %162, %add322.1
  %idxprom489.1 = zext i32 %add488.1 to i64
  %arrayidx490.1 = getelementptr inbounds i8, i8* inttoptr (i64 654311456 to i8*), i64 %idxprom489.1
  %163 = load i8, i8* %arrayidx490.1, align 1
  %conv491.1 = zext i8 %163 to i32
  %add492.1 = add nuw nsw i32 %add481.1, %conv491.1
  %shr49334.1 = lshr i32 %add492.1, 2
  %conv494.1 = sitofp i32 %shr49334.1 to float
  %div499.1 = fdiv float %conv406.1, 2.550000e+02
  %mul.i636.1 = fmul float %div499.1, 5.000000e-01
  %.cast35.1 = bitcast float %div499.1 to i32
  %shr.i639.1 = lshr i32 %.cast35.1, 1
  %sub.i640.1 = sub nsw i32 1597463007, %shr.i639.1
  %.cast36.1 = bitcast i32 %sub.i640.1 to float
  %mul3.i643.1 = fmul float %mul.i636.1, %.cast36.1
  %mul5.i645.1 = fmul float %.cast36.1, %mul3.i643.1
  %sub6.i646.1 = fsub float 1.500000e+00, %mul5.i645.1
  %mul8.i648.1 = fmul float %.cast36.1, %sub6.i646.1
  %mul10.i650.1 = fmul float %mul.i636.1, %mul8.i648.1
  %mul12.i652.1 = fmul float %mul8.i648.1, %mul10.i650.1
  %sub13.i653.1 = fsub float 1.500000e+00, %mul12.i652.1
  %mul15.i655.1 = fmul float %mul8.i648.1, %sub13.i653.1
  %mul17.i657.1 = fmul float %mul.i636.1, %mul15.i655.1
  %mul19.i659.1 = fmul float %mul15.i655.1, %mul17.i657.1
  %sub20.i660.1 = fsub float 1.500000e+00, %mul19.i659.1
  %mul22.i662.1 = fmul float %mul15.i655.1, %sub20.i660.1
  %div.i664.1 = fdiv float 1.000000e+00, %mul22.i662.1
  %mul501.1 = fmul float %div.i664.1, 2.550000e+02
  %mul505.1 = fmul float %conv448.1, 0.000000e+00
  %div506.1 = fdiv float %mul505.1, 2.550000e+02
  %mul.i603.1 = fmul float %div506.1, 5.000000e-01
  %.cast38.1 = bitcast float %div506.1 to i32
  %shr.i606.1 = lshr i32 %.cast38.1, 1
  %sub.i607.1 = sub nsw i32 1597463007, %shr.i606.1
  %.cast39.1 = bitcast i32 %sub.i607.1 to float
  %mul3.i610.1 = fmul float %mul.i603.1, %.cast39.1
  %mul5.i612.1 = fmul float %.cast39.1, %mul3.i610.1
  %sub6.i613.1 = fsub float 1.500000e+00, %mul5.i612.1
  %mul8.i615.1 = fmul float %.cast39.1, %sub6.i613.1
  %mul10.i617.1 = fmul float %mul.i603.1, %mul8.i615.1
  %mul12.i619.1 = fmul float %mul8.i615.1, %mul10.i617.1
  %sub13.i620.1 = fsub float 1.500000e+00, %mul12.i619.1
  %mul15.i622.1 = fmul float %mul8.i615.1, %sub13.i620.1
  %mul17.i624.1 = fmul float %mul.i603.1, %mul15.i622.1
  %mul19.i626.1 = fmul float %mul15.i622.1, %mul17.i624.1
  %sub20.i627.1 = fsub float 1.500000e+00, %mul19.i626.1
  %mul22.i629.1 = fmul float %mul15.i622.1, %sub20.i627.1
  %div.i631.1 = fdiv float 1.000000e+00, %mul22.i629.1
  %mul508.1 = fmul float %div.i631.1, 2.550000e+02
  %div513.1 = fdiv float %conv494.1, 2.550000e+02
  %mul.i570.1 = fmul float %div513.1, 5.000000e-01
  %.cast41.1 = bitcast float %div513.1 to i32
  %shr.i573.1 = lshr i32 %.cast41.1, 1
  %sub.i574.1 = sub nsw i32 1597463007, %shr.i573.1
  %.cast42.1 = bitcast i32 %sub.i574.1 to float
  %mul3.i577.1 = fmul float %mul.i570.1, %.cast42.1
  %mul5.i579.1 = fmul float %.cast42.1, %mul3.i577.1
  %sub6.i580.1 = fsub float 1.500000e+00, %mul5.i579.1
  %mul8.i582.1 = fmul float %.cast42.1, %sub6.i580.1
  %mul10.i584.1 = fmul float %mul.i570.1, %mul8.i582.1
  %mul12.i586.1 = fmul float %mul8.i582.1, %mul10.i584.1
  %sub13.i587.1 = fsub float 1.500000e+00, %mul12.i586.1
  %mul15.i589.1 = fmul float %mul8.i582.1, %sub13.i587.1
  %mul17.i591.1 = fmul float %mul.i570.1, %mul15.i589.1
  %mul19.i593.1 = fmul float %mul15.i589.1, %mul17.i591.1
  %sub20.i594.1 = fsub float 1.500000e+00, %mul19.i593.1
  %mul22.i596.1 = fmul float %mul15.i589.1, %sub20.i594.1
  %div.i598.1 = fdiv float 1.000000e+00, %mul22.i596.1
  %mul515.1 = fmul float %div.i598.1, 2.550000e+02
  %cmp518.1 = fcmp ogt float %mul501.1, 2.550000e+02
  %cond524.1 = select i1 %cmp518.1, float 2.550000e+02, float %mul501.1
  %conv525.1 = fptoui float %cond524.1 to i8
  %164 = trunc i64 %114 to i32
  %add527.1 = add i32 %164, %mul361.1
  %mul528.1 = mul i32 %add527.1, 3
  %idxprom530.1 = zext i32 %mul528.1 to i64
  %arrayidx531.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom530.1
  store i8 %conv525.1, i8* %arrayidx531.1, align 1
  %cmp533.1 = fcmp ogt float %mul508.1, 2.550000e+02
  %cond539.1 = select i1 %cmp533.1, float 2.550000e+02, float %mul508.1
  %conv540.1 = fptoui float %cond539.1 to i8
  %add544.1 = add i32 %mul528.1, 1
  %idxprom545.1 = zext i32 %add544.1 to i64
  %arrayidx546.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom545.1
  store i8 %conv540.1, i8* %arrayidx546.1, align 1
  %cmp548.1 = fcmp ogt float %mul515.1, 2.550000e+02
  %cond554.1 = select i1 %cmp548.1, float 2.550000e+02, float %mul515.1
  %conv555.1 = fptoui float %cond554.1 to i8
  %add559.1 = add i32 %mul528.1, 2
  %idxprom560.1 = zext i32 %add559.1 to i64
  %arrayidx561.1 = getelementptr inbounds i8, i8* %0, i64 %idxprom560.1
  store i8 %conv555.1, i8* %arrayidx561.1, align 1
  %cmp3.1 = icmp ult i64 %indvars.iv.next.1, %1
  br i1 %cmp3.1, label %for.body5.1, label %for.inc563.1.loopexit, !llvm.loop !1

for.inc563.1.loopexit:                            ; preds = %for.body5.1
  br label %for.inc563.1

for.inc563.1:                                     ; preds = %for.inc563.1.loopexit, %for.cond2.preheader, %for.inc563
  %add564.1 = add nsw i32 %i.072, 4
  %cmp.1 = icmp ult i32 %add564.1, %img_height
  br i1 %cmp.1, label %for.cond2.preheader, label %for.end565.loopexit, !llvm.loop !3
}

attributes #0 = { norecurse nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.8.1 "}
!1 = distinct !{!1, !2}
!2 = !{!"llvm.loop.unroll.disable"}
!3 = distinct !{!3, !2}
