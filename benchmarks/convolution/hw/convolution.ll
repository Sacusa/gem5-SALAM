; ModuleID = 'convolution.bc'
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

; Function Attrs: norecurse nounwind uwtable
define void @convolution(i32 %img_height, i32 %img_width, i32 %kern_height, i32 %kern_width, i8 zeroext %mod_and_floor) #0 {
entry:
  %sub2 = add i32 %kern_width, -1
  %div3 = lshr i32 %sub2, 1
  %sub4 = sub nsw i32 0, %div3
  %cmp14 = icmp eq i32 %img_height, 0
  br i1 %cmp14, label %for.end60, label %for.cond5.preheader.lr.ph

for.cond5.preheader.lr.ph:                        ; preds = %entry
  %sub = add i32 %kern_height, -1
  %div = lshr i32 %sub, 1
  %sub1 = sub nsw i32 0, %div
  %cmp610 = icmp eq i32 %img_width, 0
  %cmp94 = icmp eq i32 %kern_height, 0
  %tobool39 = icmp eq i8 %mod_and_floor, 0
  %0 = add i32 %img_width, -1
  %1 = add i32 %img_height, -1
  %xtraiter30 = and i32 %img_height, 31
  %lcmp.mod31 = icmp eq i32 %xtraiter30, 0
  br i1 %lcmp.mod31, label %for.cond5.preheader.lr.ph.split, label %for.cond5.preheader.prol.preheader

for.cond5.preheader.prol.preheader:               ; preds = %for.cond5.preheader.lr.ph
  %xtraiter.prol = and i32 %img_width, 7
  %lcmp.mod.prol = icmp eq i32 %xtraiter.prol, 0
  %2 = icmp ult i32 %0, 7
  %cmp151.not.7.prol = icmp eq i32 %kern_width, 0
  %cmp151.not.6.prol = icmp eq i32 %kern_width, 0
  %cmp151.not.5.prol = icmp eq i32 %kern_width, 0
  %cmp151.not.4.prol = icmp eq i32 %kern_width, 0
  %cmp151.not.3.prol = icmp eq i32 %kern_width, 0
  %cmp151.not.2.prol = icmp eq i32 %kern_width, 0
  %cmp151.not.1.prol = icmp eq i32 %kern_width, 0
  %cmp151.not.prol43 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.prol = icmp eq i32 %kern_width, 0
  br label %for.cond5.preheader.prol

for.cond5.preheader.prol:                         ; preds = %for.cond5.preheader.prol.preheader, %for.inc57.prol
  %indvars.iv26.prol = phi i64 [ %indvars.iv.next27.prol, %for.inc57.prol ], [ 0, %for.cond5.preheader.prol.preheader ]
  %in_i.015.prol = phi i32 [ %inc58.prol, %for.inc57.prol ], [ %sub1, %for.cond5.preheader.prol.preheader ]
  %prol.iter91 = phi i32 [ %prol.iter91.sub, %for.inc57.prol ], [ %xtraiter30, %for.cond5.preheader.prol.preheader ]
  br i1 %cmp610, label %for.inc57.prol, label %for.cond8.preheader.lr.ph.prol

for.cond8.preheader.lr.ph.prol:                   ; preds = %for.cond5.preheader.prol
  %3 = trunc i64 %indvars.iv26.prol to i32
  %mul48.prol = shl i32 %3, 7
  %4 = trunc i64 %indvars.iv26.prol to i32
  %mul44.prol = shl i32 %4, 7
  %5 = sext i32 %mul48.prol to i64
  %6 = sext i32 %mul44.prol to i64
  br i1 %lcmp.mod.prol, label %for.cond8.preheader.lr.ph.split.prol, label %for.cond8.preheader.prol.prol.preheader

for.cond8.preheader.prol.prol.preheader:          ; preds = %for.cond8.preheader.lr.ph.prol
  br label %for.cond8.preheader.prol.prol

for.cond8.preheader.prol.prol:                    ; preds = %for.cond8.preheader.prol.prol.preheader, %for.inc53.prol.prol
  %indvars.iv20.prol.prol = phi i64 [ %indvars.iv.next21.prol.prol, %for.inc53.prol.prol ], [ 0, %for.cond8.preheader.prol.prol.preheader ]
  %in_j.011.prol.prol = phi i32 [ %inc54.prol.prol, %for.inc53.prol.prol ], [ %sub4, %for.cond8.preheader.prol.prol.preheader ]
  %prol.iter.prol = phi i32 [ %prol.iter.sub.prol, %for.inc53.prol.prol ], [ %xtraiter.prol, %for.cond8.preheader.prol.prol.preheader ]
  br i1 %cmp94, label %for.end38.prol.prol, label %for.body10.prol.prol.preheader

for.body10.prol.prol.preheader:                   ; preds = %for.cond8.preheader.prol.prol
  br label %for.body10.prol.prol

for.body10.prol.prol:                             ; preds = %for.body10.prol.prol.preheader, %for.inc36.prol.prol
  %ki.06.prol.prol = phi i32 [ %inc37.prol.prol, %for.inc36.prol.prol ], [ 0, %for.body10.prol.prol.preheader ]
  %partial_sum.05.prol.prol = phi float [ %partial_sum.3.prol.prol, %for.inc36.prol.prol ], [ 0.000000e+00, %for.body10.prol.prol.preheader ]
  %add.prol.prol = add nsw i32 %ki.06.prol.prol, %in_i.015.prol
  %notlhs.prol.prol = icmp slt i32 %add.prol.prol, 0
  %notrhs.prol.prol = icmp uge i32 %add.prol.prol, %img_height
  %.not.prol.prol = or i1 %notrhs.prol.prol, %notlhs.prol.prol
  %brmerge.prol.prol = or i1 %.not.prol.prol, %cmp151.not.prol.prol
  br i1 %brmerge.prol.prol, label %for.inc36.prol.prol, label %for.body16.lr.ph.prol.prol

for.body16.lr.ph.prol.prol:                       ; preds = %for.body10.prol.prol
  %mul.prol.prol = shl i32 %add.prol.prol, 7
  %mul30.prol.prol = mul i32 %ki.06.prol.prol, %kern_width
  br label %for.body16.prol.prol

for.body16.prol.prol:                             ; preds = %for.inc.prol.prol, %for.body16.lr.ph.prol.prol
  %indvars.iv.prol.prol = phi i64 [ 0, %for.body16.lr.ph.prol.prol ], [ %indvars.iv.next.prol.prol, %for.inc.prol.prol ]
  %partial_sum.12.prol.prol = phi float [ %partial_sum.05.prol.prol, %for.body16.lr.ph.prol.prol ], [ %partial_sum.2.prol.prol, %for.inc.prol.prol ]
  %7 = trunc i64 %indvars.iv.prol.prol to i32
  %add17.prol.prol = add nsw i32 %7, %in_j.011.prol.prol
  %cmp18.prol.prol = icmp sgt i32 %add17.prol.prol, -1
  %cmp21.prol.prol = icmp ult i32 %add17.prol.prol, %img_width
  %8 = and i1 %cmp18.prol.prol, %cmp21.prol.prol
  br i1 %8, label %if.end26.prol.prol, label %for.inc.prol.prol

if.end26.prol.prol:                               ; preds = %for.body16.prol.prol
  %add29.prol.prol = add nsw i32 %add17.prol.prol, %mul.prol.prol
  %idxprom.prol.prol = sext i32 %add29.prol.prol to i64
  %arrayidx.prol.prol = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.prol
  %9 = load float, float* %arrayidx.prol.prol, align 4
  %10 = trunc i64 %indvars.iv.prol.prol to i32
  %add31.prol.prol = add i32 %10, %mul30.prol.prol
  %idxprom32.prol.prol = zext i32 %add31.prol.prol to i64
  %arrayidx33.prol.prol = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.prol
  %11 = load float, float* %arrayidx33.prol.prol, align 4
  %mul34.prol.prol = fmul float %9, %11
  %add35.prol.prol = fadd float %partial_sum.12.prol.prol, %mul34.prol.prol
  br label %for.inc.prol.prol

for.inc.prol.prol:                                ; preds = %if.end26.prol.prol, %for.body16.prol.prol
  %partial_sum.2.prol.prol = phi float [ %add35.prol.prol, %if.end26.prol.prol ], [ %partial_sum.12.prol.prol, %for.body16.prol.prol ]
  %indvars.iv.next.prol.prol = add nuw nsw i64 %indvars.iv.prol.prol, 1
  %lftr.wideiv.prol.prol = trunc i64 %indvars.iv.next.prol.prol to i32
  %exitcond.prol.prol = icmp eq i32 %lftr.wideiv.prol.prol, %kern_width
  br i1 %exitcond.prol.prol, label %for.inc36.prol.prol.loopexit, label %for.body16.prol.prol, !llvm.loop !1

for.inc36.prol.prol.loopexit:                     ; preds = %for.inc.prol.prol
  %partial_sum.2.prol.prol.lcssa = phi float [ %partial_sum.2.prol.prol, %for.inc.prol.prol ]
  br label %for.inc36.prol.prol

for.inc36.prol.prol:                              ; preds = %for.inc36.prol.prol.loopexit, %for.body10.prol.prol
  %partial_sum.3.prol.prol = phi float [ %partial_sum.05.prol.prol, %for.body10.prol.prol ], [ %partial_sum.2.prol.prol.lcssa, %for.inc36.prol.prol.loopexit ]
  %inc37.prol.prol = add nuw nsw i32 %ki.06.prol.prol, 1
  %exitcond19.prol.prol = icmp eq i32 %inc37.prol.prol, %kern_height
  br i1 %exitcond19.prol.prol, label %for.end38.prol.prol.loopexit, label %for.body10.prol.prol, !llvm.loop !3

for.end38.prol.prol.loopexit:                     ; preds = %for.inc36.prol.prol
  %partial_sum.3.prol.prol.lcssa = phi float [ %partial_sum.3.prol.prol, %for.inc36.prol.prol ]
  br label %for.end38.prol.prol

for.end38.prol.prol:                              ; preds = %for.end38.prol.prol.loopexit, %for.cond8.preheader.prol.prol
  %partial_sum.0.lcssa.prol.prol = phi float [ 0.000000e+00, %for.cond8.preheader.prol.prol ], [ %partial_sum.3.prol.prol.lcssa, %for.end38.prol.prol.loopexit ]
  br i1 %tobool39, label %if.else.prol.prol, label %if.then40.prol.prol

if.then40.prol.prol:                              ; preds = %for.end38.prol.prol
  %cmp41.prol.prol = fcmp olt float %partial_sum.0.lcssa.prol.prol, 0.000000e+00
  %sub42.prol.prol = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.prol
  %cond.prol.prol = select i1 %cmp41.prol.prol, float %sub42.prol.prol, float %partial_sum.0.lcssa.prol.prol
  %conv.prol.prol = fptoui float %cond.prol.prol to i8
  %conv43.prol.prol = uitofp i8 %conv.prol.prol to float
  %12 = add nsw i64 %indvars.iv20.prol.prol, %6
  %arrayidx47.prol.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %12
  store float %conv43.prol.prol, float* %arrayidx47.prol.prol, align 4
  br label %for.inc53.prol.prol

if.else.prol.prol:                                ; preds = %for.end38.prol.prol
  %13 = add nsw i64 %indvars.iv20.prol.prol, %5
  %arrayidx51.prol.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %13
  store float %partial_sum.0.lcssa.prol.prol, float* %arrayidx51.prol.prol, align 4
  br label %for.inc53.prol.prol

for.inc53.prol.prol:                              ; preds = %if.else.prol.prol, %if.then40.prol.prol
  %inc54.prol.prol = add nsw i32 %in_j.011.prol.prol, 1
  %indvars.iv.next21.prol.prol = add nuw nsw i64 %indvars.iv20.prol.prol, 1
  %prol.iter.sub.prol = add i32 %prol.iter.prol, -1
  %prol.iter.cmp.prol = icmp eq i32 %prol.iter.sub.prol, 0
  br i1 %prol.iter.cmp.prol, label %for.cond8.preheader.lr.ph.split.prol.loopexit, label %for.cond8.preheader.prol.prol, !llvm.loop !4

for.cond8.preheader.lr.ph.split.prol.loopexit:    ; preds = %for.inc53.prol.prol
  %indvars.iv.next21.prol.prol.lcssa = phi i64 [ %indvars.iv.next21.prol.prol, %for.inc53.prol.prol ]
  %inc54.prol.prol.lcssa = phi i32 [ %inc54.prol.prol, %for.inc53.prol.prol ]
  br label %for.cond8.preheader.lr.ph.split.prol

for.cond8.preheader.lr.ph.split.prol:             ; preds = %for.cond8.preheader.lr.ph.split.prol.loopexit, %for.cond8.preheader.lr.ph.prol
  %indvars.iv20.unr.prol = phi i64 [ 0, %for.cond8.preheader.lr.ph.prol ], [ %indvars.iv.next21.prol.prol.lcssa, %for.cond8.preheader.lr.ph.split.prol.loopexit ]
  %in_j.011.unr.prol = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.prol ], [ %inc54.prol.prol.lcssa, %for.cond8.preheader.lr.ph.split.prol.loopexit ]
  br i1 %2, label %for.inc57.prol, label %for.cond8.preheader.prol32.preheader

for.cond8.preheader.prol32.preheader:             ; preds = %for.cond8.preheader.lr.ph.split.prol
  br label %for.cond8.preheader.prol32

for.cond8.preheader.prol32:                       ; preds = %for.cond8.preheader.prol32.preheader, %for.inc53.7.prol
  %indvars.iv20.prol33 = phi i64 [ %indvars.iv.next21.7.prol, %for.inc53.7.prol ], [ %indvars.iv20.unr.prol, %for.cond8.preheader.prol32.preheader ]
  %in_j.011.prol34 = phi i32 [ %inc54.7.prol, %for.inc53.7.prol ], [ %in_j.011.unr.prol, %for.cond8.preheader.prol32.preheader ]
  br i1 %cmp94, label %for.end38.prol76, label %for.body10.prol36.preheader

for.body10.prol36.preheader:                      ; preds = %for.cond8.preheader.prol32
  br label %for.body10.prol36

for.body10.prol36:                                ; preds = %for.body10.prol36.preheader, %for.inc36.prol70
  %ki.06.prol37 = phi i32 [ %inc37.prol72, %for.inc36.prol70 ], [ 0, %for.body10.prol36.preheader ]
  %partial_sum.05.prol38 = phi float [ %partial_sum.3.prol71, %for.inc36.prol70 ], [ 0.000000e+00, %for.body10.prol36.preheader ]
  %add.prol39 = add nsw i32 %ki.06.prol37, %in_i.015.prol
  %notlhs.prol40 = icmp slt i32 %add.prol39, 0
  %notrhs.prol41 = icmp uge i32 %add.prol39, %img_height
  %.not.prol42 = or i1 %notrhs.prol41, %notlhs.prol40
  %brmerge.prol44 = or i1 %.not.prol42, %cmp151.not.prol43
  br i1 %brmerge.prol44, label %for.inc36.prol70, label %for.body16.lr.ph.prol45

for.body16.lr.ph.prol45:                          ; preds = %for.body10.prol36
  %mul.prol46 = shl i32 %add.prol39, 7
  %mul30.prol47 = mul i32 %ki.06.prol37, %kern_width
  br label %for.body16.prol48

for.body16.prol48:                                ; preds = %for.inc.prol63, %for.body16.lr.ph.prol45
  %indvars.iv.prol49 = phi i64 [ 0, %for.body16.lr.ph.prol45 ], [ %indvars.iv.next.prol65, %for.inc.prol63 ]
  %partial_sum.12.prol50 = phi float [ %partial_sum.05.prol38, %for.body16.lr.ph.prol45 ], [ %partial_sum.2.prol64, %for.inc.prol63 ]
  %14 = trunc i64 %indvars.iv.prol49 to i32
  %add17.prol51 = add nsw i32 %14, %in_j.011.prol34
  %cmp18.prol52 = icmp sgt i32 %add17.prol51, -1
  %cmp21.prol53 = icmp ult i32 %add17.prol51, %img_width
  %15 = and i1 %cmp18.prol52, %cmp21.prol53
  br i1 %15, label %if.end26.prol54, label %for.inc.prol63

if.end26.prol54:                                  ; preds = %for.body16.prol48
  %add29.prol55 = add nsw i32 %add17.prol51, %mul.prol46
  %idxprom.prol56 = sext i32 %add29.prol55 to i64
  %arrayidx.prol57 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol56
  %16 = load float, float* %arrayidx.prol57, align 4
  %17 = trunc i64 %indvars.iv.prol49 to i32
  %add31.prol58 = add i32 %17, %mul30.prol47
  %idxprom32.prol59 = zext i32 %add31.prol58 to i64
  %arrayidx33.prol60 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol59
  %18 = load float, float* %arrayidx33.prol60, align 4
  %mul34.prol61 = fmul float %16, %18
  %add35.prol62 = fadd float %partial_sum.12.prol50, %mul34.prol61
  br label %for.inc.prol63

for.inc.prol63:                                   ; preds = %if.end26.prol54, %for.body16.prol48
  %partial_sum.2.prol64 = phi float [ %add35.prol62, %if.end26.prol54 ], [ %partial_sum.12.prol50, %for.body16.prol48 ]
  %indvars.iv.next.prol65 = add nuw nsw i64 %indvars.iv.prol49, 1
  %lftr.wideiv.prol66 = trunc i64 %indvars.iv.next.prol65 to i32
  %exitcond.prol67 = icmp eq i32 %lftr.wideiv.prol66, %kern_width
  br i1 %exitcond.prol67, label %for.inc36.prol70.loopexit, label %for.body16.prol48, !llvm.loop !1

for.inc36.prol70.loopexit:                        ; preds = %for.inc.prol63
  %partial_sum.2.prol64.lcssa = phi float [ %partial_sum.2.prol64, %for.inc.prol63 ]
  br label %for.inc36.prol70

for.inc36.prol70:                                 ; preds = %for.inc36.prol70.loopexit, %for.body10.prol36
  %partial_sum.3.prol71 = phi float [ %partial_sum.05.prol38, %for.body10.prol36 ], [ %partial_sum.2.prol64.lcssa, %for.inc36.prol70.loopexit ]
  %inc37.prol72 = add nuw nsw i32 %ki.06.prol37, 1
  %exitcond19.prol73 = icmp eq i32 %inc37.prol72, %kern_height
  br i1 %exitcond19.prol73, label %for.end38.prol76.loopexit, label %for.body10.prol36, !llvm.loop !3

for.end38.prol76.loopexit:                        ; preds = %for.inc36.prol70
  %partial_sum.3.prol71.lcssa = phi float [ %partial_sum.3.prol71, %for.inc36.prol70 ]
  br label %for.end38.prol76

for.end38.prol76:                                 ; preds = %for.end38.prol76.loopexit, %for.cond8.preheader.prol32
  %partial_sum.0.lcssa.prol77 = phi float [ 0.000000e+00, %for.cond8.preheader.prol32 ], [ %partial_sum.3.prol71.lcssa, %for.end38.prol76.loopexit ]
  br i1 %tobool39, label %if.else.prol85, label %if.then40.prol78

if.then40.prol78:                                 ; preds = %for.end38.prol76
  %cmp41.prol79 = fcmp olt float %partial_sum.0.lcssa.prol77, 0.000000e+00
  %sub42.prol80 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol77
  %cond.prol81 = select i1 %cmp41.prol79, float %sub42.prol80, float %partial_sum.0.lcssa.prol77
  %conv.prol82 = fptoui float %cond.prol81 to i8
  %conv43.prol83 = uitofp i8 %conv.prol82 to float
  %19 = add nsw i64 %indvars.iv20.prol33, %6
  %arrayidx47.prol84 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %19
  store float %conv43.prol83, float* %arrayidx47.prol84, align 4
  br label %for.inc53.prol87

if.else.prol85:                                   ; preds = %for.end38.prol76
  %20 = add nsw i64 %indvars.iv20.prol33, %5
  %arrayidx51.prol86 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %20
  store float %partial_sum.0.lcssa.prol77, float* %arrayidx51.prol86, align 4
  br label %for.inc53.prol87

for.inc53.prol87:                                 ; preds = %if.else.prol85, %if.then40.prol78
  %inc54.prol88 = add nsw i32 %in_j.011.prol34, 1
  %indvars.iv.next21.prol89 = add nuw nsw i64 %indvars.iv20.prol33, 1
  br i1 %cmp94, label %for.end38.1.prol, label %for.body10.1.prol.preheader

for.body10.1.prol.preheader:                      ; preds = %for.inc53.prol87
  br label %for.body10.1.prol

for.body10.1.prol:                                ; preds = %for.body10.1.prol.preheader, %for.inc36.1.prol
  %ki.06.1.prol = phi i32 [ %inc37.1.prol, %for.inc36.1.prol ], [ 0, %for.body10.1.prol.preheader ]
  %partial_sum.05.1.prol = phi float [ %partial_sum.3.1.prol, %for.inc36.1.prol ], [ 0.000000e+00, %for.body10.1.prol.preheader ]
  %add.1.prol = add nsw i32 %ki.06.1.prol, %in_i.015.prol
  %notlhs.1.prol = icmp slt i32 %add.1.prol, 0
  %notrhs.1.prol = icmp uge i32 %add.1.prol, %img_height
  %.not.1.prol = or i1 %notrhs.1.prol, %notlhs.1.prol
  %brmerge.1.prol = or i1 %.not.1.prol, %cmp151.not.1.prol
  br i1 %brmerge.1.prol, label %for.inc36.1.prol, label %for.body16.lr.ph.1.prol

for.body16.lr.ph.1.prol:                          ; preds = %for.body10.1.prol
  %mul.1.prol = shl i32 %add.1.prol, 7
  %mul30.1.prol = mul i32 %ki.06.1.prol, %kern_width
  br label %for.body16.1.prol

for.body16.1.prol:                                ; preds = %for.inc.1.prol, %for.body16.lr.ph.1.prol
  %indvars.iv.1.prol = phi i64 [ 0, %for.body16.lr.ph.1.prol ], [ %indvars.iv.next.1.prol, %for.inc.1.prol ]
  %partial_sum.12.1.prol = phi float [ %partial_sum.05.1.prol, %for.body16.lr.ph.1.prol ], [ %partial_sum.2.1.prol, %for.inc.1.prol ]
  %21 = trunc i64 %indvars.iv.1.prol to i32
  %add17.1.prol = add nsw i32 %21, %inc54.prol88
  %cmp18.1.prol = icmp sgt i32 %add17.1.prol, -1
  %cmp21.1.prol = icmp ult i32 %add17.1.prol, %img_width
  %22 = and i1 %cmp18.1.prol, %cmp21.1.prol
  br i1 %22, label %if.end26.1.prol, label %for.inc.1.prol

if.end26.1.prol:                                  ; preds = %for.body16.1.prol
  %add29.1.prol = add nsw i32 %add17.1.prol, %mul.1.prol
  %idxprom.1.prol = sext i32 %add29.1.prol to i64
  %arrayidx.1.prol = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.prol
  %23 = load float, float* %arrayidx.1.prol, align 4
  %24 = trunc i64 %indvars.iv.1.prol to i32
  %add31.1.prol = add i32 %24, %mul30.1.prol
  %idxprom32.1.prol = zext i32 %add31.1.prol to i64
  %arrayidx33.1.prol = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.prol
  %25 = load float, float* %arrayidx33.1.prol, align 4
  %mul34.1.prol = fmul float %23, %25
  %add35.1.prol = fadd float %partial_sum.12.1.prol, %mul34.1.prol
  br label %for.inc.1.prol

for.inc.1.prol:                                   ; preds = %if.end26.1.prol, %for.body16.1.prol
  %partial_sum.2.1.prol = phi float [ %add35.1.prol, %if.end26.1.prol ], [ %partial_sum.12.1.prol, %for.body16.1.prol ]
  %indvars.iv.next.1.prol = add nuw nsw i64 %indvars.iv.1.prol, 1
  %lftr.wideiv.1.prol = trunc i64 %indvars.iv.next.1.prol to i32
  %exitcond.1.prol = icmp eq i32 %lftr.wideiv.1.prol, %kern_width
  br i1 %exitcond.1.prol, label %for.inc36.1.prol.loopexit, label %for.body16.1.prol, !llvm.loop !1

for.inc36.1.prol.loopexit:                        ; preds = %for.inc.1.prol
  %partial_sum.2.1.prol.lcssa = phi float [ %partial_sum.2.1.prol, %for.inc.1.prol ]
  br label %for.inc36.1.prol

for.inc36.1.prol:                                 ; preds = %for.inc36.1.prol.loopexit, %for.body10.1.prol
  %partial_sum.3.1.prol = phi float [ %partial_sum.05.1.prol, %for.body10.1.prol ], [ %partial_sum.2.1.prol.lcssa, %for.inc36.1.prol.loopexit ]
  %inc37.1.prol = add nuw nsw i32 %ki.06.1.prol, 1
  %exitcond19.1.prol = icmp eq i32 %inc37.1.prol, %kern_height
  br i1 %exitcond19.1.prol, label %for.end38.1.prol.loopexit, label %for.body10.1.prol, !llvm.loop !3

for.end38.1.prol.loopexit:                        ; preds = %for.inc36.1.prol
  %partial_sum.3.1.prol.lcssa = phi float [ %partial_sum.3.1.prol, %for.inc36.1.prol ]
  br label %for.end38.1.prol

for.end38.1.prol:                                 ; preds = %for.end38.1.prol.loopexit, %for.inc53.prol87
  %partial_sum.0.lcssa.1.prol = phi float [ 0.000000e+00, %for.inc53.prol87 ], [ %partial_sum.3.1.prol.lcssa, %for.end38.1.prol.loopexit ]
  br i1 %tobool39, label %if.else.1.prol, label %if.then40.1.prol

if.then40.1.prol:                                 ; preds = %for.end38.1.prol
  %cmp41.1.prol = fcmp olt float %partial_sum.0.lcssa.1.prol, 0.000000e+00
  %sub42.1.prol = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.prol
  %cond.1.prol = select i1 %cmp41.1.prol, float %sub42.1.prol, float %partial_sum.0.lcssa.1.prol
  %conv.1.prol = fptoui float %cond.1.prol to i8
  %conv43.1.prol = uitofp i8 %conv.1.prol to float
  %26 = add nsw i64 %indvars.iv.next21.prol89, %6
  %arrayidx47.1.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %26
  store float %conv43.1.prol, float* %arrayidx47.1.prol, align 4
  br label %for.inc53.1.prol

if.else.1.prol:                                   ; preds = %for.end38.1.prol
  %27 = add nsw i64 %indvars.iv.next21.prol89, %5
  %arrayidx51.1.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %27
  store float %partial_sum.0.lcssa.1.prol, float* %arrayidx51.1.prol, align 4
  br label %for.inc53.1.prol

for.inc53.1.prol:                                 ; preds = %if.else.1.prol, %if.then40.1.prol
  %inc54.1.prol = add nsw i32 %in_j.011.prol34, 2
  %indvars.iv.next21.1.prol = add nsw i64 %indvars.iv20.prol33, 2
  br i1 %cmp94, label %for.end38.2.prol, label %for.body10.2.prol.preheader

for.body10.2.prol.preheader:                      ; preds = %for.inc53.1.prol
  br label %for.body10.2.prol

for.body10.2.prol:                                ; preds = %for.body10.2.prol.preheader, %for.inc36.2.prol
  %ki.06.2.prol = phi i32 [ %inc37.2.prol, %for.inc36.2.prol ], [ 0, %for.body10.2.prol.preheader ]
  %partial_sum.05.2.prol = phi float [ %partial_sum.3.2.prol, %for.inc36.2.prol ], [ 0.000000e+00, %for.body10.2.prol.preheader ]
  %add.2.prol = add nsw i32 %ki.06.2.prol, %in_i.015.prol
  %notlhs.2.prol = icmp slt i32 %add.2.prol, 0
  %notrhs.2.prol = icmp uge i32 %add.2.prol, %img_height
  %.not.2.prol = or i1 %notrhs.2.prol, %notlhs.2.prol
  %brmerge.2.prol = or i1 %.not.2.prol, %cmp151.not.2.prol
  br i1 %brmerge.2.prol, label %for.inc36.2.prol, label %for.body16.lr.ph.2.prol

for.body16.lr.ph.2.prol:                          ; preds = %for.body10.2.prol
  %mul.2.prol = shl i32 %add.2.prol, 7
  %mul30.2.prol = mul i32 %ki.06.2.prol, %kern_width
  br label %for.body16.2.prol

for.body16.2.prol:                                ; preds = %for.inc.2.prol, %for.body16.lr.ph.2.prol
  %indvars.iv.2.prol = phi i64 [ 0, %for.body16.lr.ph.2.prol ], [ %indvars.iv.next.2.prol, %for.inc.2.prol ]
  %partial_sum.12.2.prol = phi float [ %partial_sum.05.2.prol, %for.body16.lr.ph.2.prol ], [ %partial_sum.2.2.prol, %for.inc.2.prol ]
  %28 = trunc i64 %indvars.iv.2.prol to i32
  %add17.2.prol = add nsw i32 %28, %inc54.1.prol
  %cmp18.2.prol = icmp sgt i32 %add17.2.prol, -1
  %cmp21.2.prol = icmp ult i32 %add17.2.prol, %img_width
  %29 = and i1 %cmp18.2.prol, %cmp21.2.prol
  br i1 %29, label %if.end26.2.prol, label %for.inc.2.prol

if.end26.2.prol:                                  ; preds = %for.body16.2.prol
  %add29.2.prol = add nsw i32 %add17.2.prol, %mul.2.prol
  %idxprom.2.prol = sext i32 %add29.2.prol to i64
  %arrayidx.2.prol = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.prol
  %30 = load float, float* %arrayidx.2.prol, align 4
  %31 = trunc i64 %indvars.iv.2.prol to i32
  %add31.2.prol = add i32 %31, %mul30.2.prol
  %idxprom32.2.prol = zext i32 %add31.2.prol to i64
  %arrayidx33.2.prol = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.prol
  %32 = load float, float* %arrayidx33.2.prol, align 4
  %mul34.2.prol = fmul float %30, %32
  %add35.2.prol = fadd float %partial_sum.12.2.prol, %mul34.2.prol
  br label %for.inc.2.prol

for.inc.2.prol:                                   ; preds = %if.end26.2.prol, %for.body16.2.prol
  %partial_sum.2.2.prol = phi float [ %add35.2.prol, %if.end26.2.prol ], [ %partial_sum.12.2.prol, %for.body16.2.prol ]
  %indvars.iv.next.2.prol = add nuw nsw i64 %indvars.iv.2.prol, 1
  %lftr.wideiv.2.prol = trunc i64 %indvars.iv.next.2.prol to i32
  %exitcond.2.prol = icmp eq i32 %lftr.wideiv.2.prol, %kern_width
  br i1 %exitcond.2.prol, label %for.inc36.2.prol.loopexit, label %for.body16.2.prol, !llvm.loop !1

for.inc36.2.prol.loopexit:                        ; preds = %for.inc.2.prol
  %partial_sum.2.2.prol.lcssa = phi float [ %partial_sum.2.2.prol, %for.inc.2.prol ]
  br label %for.inc36.2.prol

for.inc36.2.prol:                                 ; preds = %for.inc36.2.prol.loopexit, %for.body10.2.prol
  %partial_sum.3.2.prol = phi float [ %partial_sum.05.2.prol, %for.body10.2.prol ], [ %partial_sum.2.2.prol.lcssa, %for.inc36.2.prol.loopexit ]
  %inc37.2.prol = add nuw nsw i32 %ki.06.2.prol, 1
  %exitcond19.2.prol = icmp eq i32 %inc37.2.prol, %kern_height
  br i1 %exitcond19.2.prol, label %for.end38.2.prol.loopexit, label %for.body10.2.prol, !llvm.loop !3

for.end38.2.prol.loopexit:                        ; preds = %for.inc36.2.prol
  %partial_sum.3.2.prol.lcssa = phi float [ %partial_sum.3.2.prol, %for.inc36.2.prol ]
  br label %for.end38.2.prol

for.end38.2.prol:                                 ; preds = %for.end38.2.prol.loopexit, %for.inc53.1.prol
  %partial_sum.0.lcssa.2.prol = phi float [ 0.000000e+00, %for.inc53.1.prol ], [ %partial_sum.3.2.prol.lcssa, %for.end38.2.prol.loopexit ]
  br i1 %tobool39, label %if.else.2.prol, label %if.then40.2.prol

if.then40.2.prol:                                 ; preds = %for.end38.2.prol
  %cmp41.2.prol = fcmp olt float %partial_sum.0.lcssa.2.prol, 0.000000e+00
  %sub42.2.prol = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.prol
  %cond.2.prol = select i1 %cmp41.2.prol, float %sub42.2.prol, float %partial_sum.0.lcssa.2.prol
  %conv.2.prol = fptoui float %cond.2.prol to i8
  %conv43.2.prol = uitofp i8 %conv.2.prol to float
  %33 = add nsw i64 %indvars.iv.next21.1.prol, %6
  %arrayidx47.2.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %33
  store float %conv43.2.prol, float* %arrayidx47.2.prol, align 4
  br label %for.inc53.2.prol

if.else.2.prol:                                   ; preds = %for.end38.2.prol
  %34 = add nsw i64 %indvars.iv.next21.1.prol, %5
  %arrayidx51.2.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %34
  store float %partial_sum.0.lcssa.2.prol, float* %arrayidx51.2.prol, align 4
  br label %for.inc53.2.prol

for.inc53.2.prol:                                 ; preds = %if.else.2.prol, %if.then40.2.prol
  %inc54.2.prol = add nsw i32 %in_j.011.prol34, 3
  %indvars.iv.next21.2.prol = add nsw i64 %indvars.iv20.prol33, 3
  br i1 %cmp94, label %for.end38.3.prol, label %for.body10.3.prol.preheader

for.body10.3.prol.preheader:                      ; preds = %for.inc53.2.prol
  br label %for.body10.3.prol

for.body10.3.prol:                                ; preds = %for.body10.3.prol.preheader, %for.inc36.3.prol
  %ki.06.3.prol = phi i32 [ %inc37.3.prol, %for.inc36.3.prol ], [ 0, %for.body10.3.prol.preheader ]
  %partial_sum.05.3.prol = phi float [ %partial_sum.3.3.prol, %for.inc36.3.prol ], [ 0.000000e+00, %for.body10.3.prol.preheader ]
  %add.3.prol = add nsw i32 %ki.06.3.prol, %in_i.015.prol
  %notlhs.3.prol = icmp slt i32 %add.3.prol, 0
  %notrhs.3.prol = icmp uge i32 %add.3.prol, %img_height
  %.not.3.prol = or i1 %notrhs.3.prol, %notlhs.3.prol
  %brmerge.3.prol = or i1 %.not.3.prol, %cmp151.not.3.prol
  br i1 %brmerge.3.prol, label %for.inc36.3.prol, label %for.body16.lr.ph.3.prol

for.body16.lr.ph.3.prol:                          ; preds = %for.body10.3.prol
  %mul.3.prol = shl i32 %add.3.prol, 7
  %mul30.3.prol = mul i32 %ki.06.3.prol, %kern_width
  br label %for.body16.3.prol

for.body16.3.prol:                                ; preds = %for.inc.3.prol, %for.body16.lr.ph.3.prol
  %indvars.iv.3.prol = phi i64 [ 0, %for.body16.lr.ph.3.prol ], [ %indvars.iv.next.3.prol, %for.inc.3.prol ]
  %partial_sum.12.3.prol = phi float [ %partial_sum.05.3.prol, %for.body16.lr.ph.3.prol ], [ %partial_sum.2.3.prol, %for.inc.3.prol ]
  %35 = trunc i64 %indvars.iv.3.prol to i32
  %add17.3.prol = add nsw i32 %35, %inc54.2.prol
  %cmp18.3.prol = icmp sgt i32 %add17.3.prol, -1
  %cmp21.3.prol = icmp ult i32 %add17.3.prol, %img_width
  %36 = and i1 %cmp18.3.prol, %cmp21.3.prol
  br i1 %36, label %if.end26.3.prol, label %for.inc.3.prol

if.end26.3.prol:                                  ; preds = %for.body16.3.prol
  %add29.3.prol = add nsw i32 %add17.3.prol, %mul.3.prol
  %idxprom.3.prol = sext i32 %add29.3.prol to i64
  %arrayidx.3.prol = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.prol
  %37 = load float, float* %arrayidx.3.prol, align 4
  %38 = trunc i64 %indvars.iv.3.prol to i32
  %add31.3.prol = add i32 %38, %mul30.3.prol
  %idxprom32.3.prol = zext i32 %add31.3.prol to i64
  %arrayidx33.3.prol = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.prol
  %39 = load float, float* %arrayidx33.3.prol, align 4
  %mul34.3.prol = fmul float %37, %39
  %add35.3.prol = fadd float %partial_sum.12.3.prol, %mul34.3.prol
  br label %for.inc.3.prol

for.inc.3.prol:                                   ; preds = %if.end26.3.prol, %for.body16.3.prol
  %partial_sum.2.3.prol = phi float [ %add35.3.prol, %if.end26.3.prol ], [ %partial_sum.12.3.prol, %for.body16.3.prol ]
  %indvars.iv.next.3.prol = add nuw nsw i64 %indvars.iv.3.prol, 1
  %lftr.wideiv.3.prol = trunc i64 %indvars.iv.next.3.prol to i32
  %exitcond.3.prol = icmp eq i32 %lftr.wideiv.3.prol, %kern_width
  br i1 %exitcond.3.prol, label %for.inc36.3.prol.loopexit, label %for.body16.3.prol, !llvm.loop !1

for.inc36.3.prol.loopexit:                        ; preds = %for.inc.3.prol
  %partial_sum.2.3.prol.lcssa = phi float [ %partial_sum.2.3.prol, %for.inc.3.prol ]
  br label %for.inc36.3.prol

for.inc36.3.prol:                                 ; preds = %for.inc36.3.prol.loopexit, %for.body10.3.prol
  %partial_sum.3.3.prol = phi float [ %partial_sum.05.3.prol, %for.body10.3.prol ], [ %partial_sum.2.3.prol.lcssa, %for.inc36.3.prol.loopexit ]
  %inc37.3.prol = add nuw nsw i32 %ki.06.3.prol, 1
  %exitcond19.3.prol = icmp eq i32 %inc37.3.prol, %kern_height
  br i1 %exitcond19.3.prol, label %for.end38.3.prol.loopexit, label %for.body10.3.prol, !llvm.loop !3

for.end38.3.prol.loopexit:                        ; preds = %for.inc36.3.prol
  %partial_sum.3.3.prol.lcssa = phi float [ %partial_sum.3.3.prol, %for.inc36.3.prol ]
  br label %for.end38.3.prol

for.end38.3.prol:                                 ; preds = %for.end38.3.prol.loopexit, %for.inc53.2.prol
  %partial_sum.0.lcssa.3.prol = phi float [ 0.000000e+00, %for.inc53.2.prol ], [ %partial_sum.3.3.prol.lcssa, %for.end38.3.prol.loopexit ]
  br i1 %tobool39, label %if.else.3.prol, label %if.then40.3.prol

if.then40.3.prol:                                 ; preds = %for.end38.3.prol
  %cmp41.3.prol = fcmp olt float %partial_sum.0.lcssa.3.prol, 0.000000e+00
  %sub42.3.prol = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.prol
  %cond.3.prol = select i1 %cmp41.3.prol, float %sub42.3.prol, float %partial_sum.0.lcssa.3.prol
  %conv.3.prol = fptoui float %cond.3.prol to i8
  %conv43.3.prol = uitofp i8 %conv.3.prol to float
  %40 = add nsw i64 %indvars.iv.next21.2.prol, %6
  %arrayidx47.3.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %40
  store float %conv43.3.prol, float* %arrayidx47.3.prol, align 4
  br label %for.inc53.3.prol

if.else.3.prol:                                   ; preds = %for.end38.3.prol
  %41 = add nsw i64 %indvars.iv.next21.2.prol, %5
  %arrayidx51.3.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %41
  store float %partial_sum.0.lcssa.3.prol, float* %arrayidx51.3.prol, align 4
  br label %for.inc53.3.prol

for.inc53.3.prol:                                 ; preds = %if.else.3.prol, %if.then40.3.prol
  %inc54.3.prol = add nsw i32 %in_j.011.prol34, 4
  %indvars.iv.next21.3.prol = add nsw i64 %indvars.iv20.prol33, 4
  br i1 %cmp94, label %for.end38.4.prol, label %for.body10.4.prol.preheader

for.body10.4.prol.preheader:                      ; preds = %for.inc53.3.prol
  br label %for.body10.4.prol

for.body10.4.prol:                                ; preds = %for.body10.4.prol.preheader, %for.inc36.4.prol
  %ki.06.4.prol = phi i32 [ %inc37.4.prol, %for.inc36.4.prol ], [ 0, %for.body10.4.prol.preheader ]
  %partial_sum.05.4.prol = phi float [ %partial_sum.3.4.prol, %for.inc36.4.prol ], [ 0.000000e+00, %for.body10.4.prol.preheader ]
  %add.4.prol = add nsw i32 %ki.06.4.prol, %in_i.015.prol
  %notlhs.4.prol = icmp slt i32 %add.4.prol, 0
  %notrhs.4.prol = icmp uge i32 %add.4.prol, %img_height
  %.not.4.prol = or i1 %notrhs.4.prol, %notlhs.4.prol
  %brmerge.4.prol = or i1 %.not.4.prol, %cmp151.not.4.prol
  br i1 %brmerge.4.prol, label %for.inc36.4.prol, label %for.body16.lr.ph.4.prol

for.body16.lr.ph.4.prol:                          ; preds = %for.body10.4.prol
  %mul.4.prol = shl i32 %add.4.prol, 7
  %mul30.4.prol = mul i32 %ki.06.4.prol, %kern_width
  br label %for.body16.4.prol

for.body16.4.prol:                                ; preds = %for.inc.4.prol, %for.body16.lr.ph.4.prol
  %indvars.iv.4.prol = phi i64 [ 0, %for.body16.lr.ph.4.prol ], [ %indvars.iv.next.4.prol, %for.inc.4.prol ]
  %partial_sum.12.4.prol = phi float [ %partial_sum.05.4.prol, %for.body16.lr.ph.4.prol ], [ %partial_sum.2.4.prol, %for.inc.4.prol ]
  %42 = trunc i64 %indvars.iv.4.prol to i32
  %add17.4.prol = add nsw i32 %42, %inc54.3.prol
  %cmp18.4.prol = icmp sgt i32 %add17.4.prol, -1
  %cmp21.4.prol = icmp ult i32 %add17.4.prol, %img_width
  %43 = and i1 %cmp18.4.prol, %cmp21.4.prol
  br i1 %43, label %if.end26.4.prol, label %for.inc.4.prol

if.end26.4.prol:                                  ; preds = %for.body16.4.prol
  %add29.4.prol = add nsw i32 %add17.4.prol, %mul.4.prol
  %idxprom.4.prol = sext i32 %add29.4.prol to i64
  %arrayidx.4.prol = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.prol
  %44 = load float, float* %arrayidx.4.prol, align 4
  %45 = trunc i64 %indvars.iv.4.prol to i32
  %add31.4.prol = add i32 %45, %mul30.4.prol
  %idxprom32.4.prol = zext i32 %add31.4.prol to i64
  %arrayidx33.4.prol = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.prol
  %46 = load float, float* %arrayidx33.4.prol, align 4
  %mul34.4.prol = fmul float %44, %46
  %add35.4.prol = fadd float %partial_sum.12.4.prol, %mul34.4.prol
  br label %for.inc.4.prol

for.inc.4.prol:                                   ; preds = %if.end26.4.prol, %for.body16.4.prol
  %partial_sum.2.4.prol = phi float [ %add35.4.prol, %if.end26.4.prol ], [ %partial_sum.12.4.prol, %for.body16.4.prol ]
  %indvars.iv.next.4.prol = add nuw nsw i64 %indvars.iv.4.prol, 1
  %lftr.wideiv.4.prol = trunc i64 %indvars.iv.next.4.prol to i32
  %exitcond.4.prol = icmp eq i32 %lftr.wideiv.4.prol, %kern_width
  br i1 %exitcond.4.prol, label %for.inc36.4.prol.loopexit, label %for.body16.4.prol, !llvm.loop !1

for.inc36.4.prol.loopexit:                        ; preds = %for.inc.4.prol
  %partial_sum.2.4.prol.lcssa = phi float [ %partial_sum.2.4.prol, %for.inc.4.prol ]
  br label %for.inc36.4.prol

for.inc36.4.prol:                                 ; preds = %for.inc36.4.prol.loopexit, %for.body10.4.prol
  %partial_sum.3.4.prol = phi float [ %partial_sum.05.4.prol, %for.body10.4.prol ], [ %partial_sum.2.4.prol.lcssa, %for.inc36.4.prol.loopexit ]
  %inc37.4.prol = add nuw nsw i32 %ki.06.4.prol, 1
  %exitcond19.4.prol = icmp eq i32 %inc37.4.prol, %kern_height
  br i1 %exitcond19.4.prol, label %for.end38.4.prol.loopexit, label %for.body10.4.prol, !llvm.loop !3

for.end38.4.prol.loopexit:                        ; preds = %for.inc36.4.prol
  %partial_sum.3.4.prol.lcssa = phi float [ %partial_sum.3.4.prol, %for.inc36.4.prol ]
  br label %for.end38.4.prol

for.end38.4.prol:                                 ; preds = %for.end38.4.prol.loopexit, %for.inc53.3.prol
  %partial_sum.0.lcssa.4.prol = phi float [ 0.000000e+00, %for.inc53.3.prol ], [ %partial_sum.3.4.prol.lcssa, %for.end38.4.prol.loopexit ]
  br i1 %tobool39, label %if.else.4.prol, label %if.then40.4.prol

if.then40.4.prol:                                 ; preds = %for.end38.4.prol
  %cmp41.4.prol = fcmp olt float %partial_sum.0.lcssa.4.prol, 0.000000e+00
  %sub42.4.prol = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.prol
  %cond.4.prol = select i1 %cmp41.4.prol, float %sub42.4.prol, float %partial_sum.0.lcssa.4.prol
  %conv.4.prol = fptoui float %cond.4.prol to i8
  %conv43.4.prol = uitofp i8 %conv.4.prol to float
  %47 = add nsw i64 %indvars.iv.next21.3.prol, %6
  %arrayidx47.4.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %47
  store float %conv43.4.prol, float* %arrayidx47.4.prol, align 4
  br label %for.inc53.4.prol

if.else.4.prol:                                   ; preds = %for.end38.4.prol
  %48 = add nsw i64 %indvars.iv.next21.3.prol, %5
  %arrayidx51.4.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %48
  store float %partial_sum.0.lcssa.4.prol, float* %arrayidx51.4.prol, align 4
  br label %for.inc53.4.prol

for.inc53.4.prol:                                 ; preds = %if.else.4.prol, %if.then40.4.prol
  %inc54.4.prol = add nsw i32 %in_j.011.prol34, 5
  %indvars.iv.next21.4.prol = add nsw i64 %indvars.iv20.prol33, 5
  br i1 %cmp94, label %for.end38.5.prol, label %for.body10.5.prol.preheader

for.body10.5.prol.preheader:                      ; preds = %for.inc53.4.prol
  br label %for.body10.5.prol

for.body10.5.prol:                                ; preds = %for.body10.5.prol.preheader, %for.inc36.5.prol
  %ki.06.5.prol = phi i32 [ %inc37.5.prol, %for.inc36.5.prol ], [ 0, %for.body10.5.prol.preheader ]
  %partial_sum.05.5.prol = phi float [ %partial_sum.3.5.prol, %for.inc36.5.prol ], [ 0.000000e+00, %for.body10.5.prol.preheader ]
  %add.5.prol = add nsw i32 %ki.06.5.prol, %in_i.015.prol
  %notlhs.5.prol = icmp slt i32 %add.5.prol, 0
  %notrhs.5.prol = icmp uge i32 %add.5.prol, %img_height
  %.not.5.prol = or i1 %notrhs.5.prol, %notlhs.5.prol
  %brmerge.5.prol = or i1 %.not.5.prol, %cmp151.not.5.prol
  br i1 %brmerge.5.prol, label %for.inc36.5.prol, label %for.body16.lr.ph.5.prol

for.body16.lr.ph.5.prol:                          ; preds = %for.body10.5.prol
  %mul.5.prol = shl i32 %add.5.prol, 7
  %mul30.5.prol = mul i32 %ki.06.5.prol, %kern_width
  br label %for.body16.5.prol

for.body16.5.prol:                                ; preds = %for.inc.5.prol, %for.body16.lr.ph.5.prol
  %indvars.iv.5.prol = phi i64 [ 0, %for.body16.lr.ph.5.prol ], [ %indvars.iv.next.5.prol, %for.inc.5.prol ]
  %partial_sum.12.5.prol = phi float [ %partial_sum.05.5.prol, %for.body16.lr.ph.5.prol ], [ %partial_sum.2.5.prol, %for.inc.5.prol ]
  %49 = trunc i64 %indvars.iv.5.prol to i32
  %add17.5.prol = add nsw i32 %49, %inc54.4.prol
  %cmp18.5.prol = icmp sgt i32 %add17.5.prol, -1
  %cmp21.5.prol = icmp ult i32 %add17.5.prol, %img_width
  %50 = and i1 %cmp18.5.prol, %cmp21.5.prol
  br i1 %50, label %if.end26.5.prol, label %for.inc.5.prol

if.end26.5.prol:                                  ; preds = %for.body16.5.prol
  %add29.5.prol = add nsw i32 %add17.5.prol, %mul.5.prol
  %idxprom.5.prol = sext i32 %add29.5.prol to i64
  %arrayidx.5.prol = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.prol
  %51 = load float, float* %arrayidx.5.prol, align 4
  %52 = trunc i64 %indvars.iv.5.prol to i32
  %add31.5.prol = add i32 %52, %mul30.5.prol
  %idxprom32.5.prol = zext i32 %add31.5.prol to i64
  %arrayidx33.5.prol = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.prol
  %53 = load float, float* %arrayidx33.5.prol, align 4
  %mul34.5.prol = fmul float %51, %53
  %add35.5.prol = fadd float %partial_sum.12.5.prol, %mul34.5.prol
  br label %for.inc.5.prol

for.inc.5.prol:                                   ; preds = %if.end26.5.prol, %for.body16.5.prol
  %partial_sum.2.5.prol = phi float [ %add35.5.prol, %if.end26.5.prol ], [ %partial_sum.12.5.prol, %for.body16.5.prol ]
  %indvars.iv.next.5.prol = add nuw nsw i64 %indvars.iv.5.prol, 1
  %lftr.wideiv.5.prol = trunc i64 %indvars.iv.next.5.prol to i32
  %exitcond.5.prol = icmp eq i32 %lftr.wideiv.5.prol, %kern_width
  br i1 %exitcond.5.prol, label %for.inc36.5.prol.loopexit, label %for.body16.5.prol, !llvm.loop !1

for.inc36.5.prol.loopexit:                        ; preds = %for.inc.5.prol
  %partial_sum.2.5.prol.lcssa = phi float [ %partial_sum.2.5.prol, %for.inc.5.prol ]
  br label %for.inc36.5.prol

for.inc36.5.prol:                                 ; preds = %for.inc36.5.prol.loopexit, %for.body10.5.prol
  %partial_sum.3.5.prol = phi float [ %partial_sum.05.5.prol, %for.body10.5.prol ], [ %partial_sum.2.5.prol.lcssa, %for.inc36.5.prol.loopexit ]
  %inc37.5.prol = add nuw nsw i32 %ki.06.5.prol, 1
  %exitcond19.5.prol = icmp eq i32 %inc37.5.prol, %kern_height
  br i1 %exitcond19.5.prol, label %for.end38.5.prol.loopexit, label %for.body10.5.prol, !llvm.loop !3

for.end38.5.prol.loopexit:                        ; preds = %for.inc36.5.prol
  %partial_sum.3.5.prol.lcssa = phi float [ %partial_sum.3.5.prol, %for.inc36.5.prol ]
  br label %for.end38.5.prol

for.end38.5.prol:                                 ; preds = %for.end38.5.prol.loopexit, %for.inc53.4.prol
  %partial_sum.0.lcssa.5.prol = phi float [ 0.000000e+00, %for.inc53.4.prol ], [ %partial_sum.3.5.prol.lcssa, %for.end38.5.prol.loopexit ]
  br i1 %tobool39, label %if.else.5.prol, label %if.then40.5.prol

if.then40.5.prol:                                 ; preds = %for.end38.5.prol
  %cmp41.5.prol = fcmp olt float %partial_sum.0.lcssa.5.prol, 0.000000e+00
  %sub42.5.prol = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.prol
  %cond.5.prol = select i1 %cmp41.5.prol, float %sub42.5.prol, float %partial_sum.0.lcssa.5.prol
  %conv.5.prol = fptoui float %cond.5.prol to i8
  %conv43.5.prol = uitofp i8 %conv.5.prol to float
  %54 = add nsw i64 %indvars.iv.next21.4.prol, %6
  %arrayidx47.5.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %54
  store float %conv43.5.prol, float* %arrayidx47.5.prol, align 4
  br label %for.inc53.5.prol

if.else.5.prol:                                   ; preds = %for.end38.5.prol
  %55 = add nsw i64 %indvars.iv.next21.4.prol, %5
  %arrayidx51.5.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %55
  store float %partial_sum.0.lcssa.5.prol, float* %arrayidx51.5.prol, align 4
  br label %for.inc53.5.prol

for.inc53.5.prol:                                 ; preds = %if.else.5.prol, %if.then40.5.prol
  %inc54.5.prol = add nsw i32 %in_j.011.prol34, 6
  %indvars.iv.next21.5.prol = add nsw i64 %indvars.iv20.prol33, 6
  br i1 %cmp94, label %for.end38.6.prol, label %for.body10.6.prol.preheader

for.body10.6.prol.preheader:                      ; preds = %for.inc53.5.prol
  br label %for.body10.6.prol

for.body10.6.prol:                                ; preds = %for.body10.6.prol.preheader, %for.inc36.6.prol
  %ki.06.6.prol = phi i32 [ %inc37.6.prol, %for.inc36.6.prol ], [ 0, %for.body10.6.prol.preheader ]
  %partial_sum.05.6.prol = phi float [ %partial_sum.3.6.prol, %for.inc36.6.prol ], [ 0.000000e+00, %for.body10.6.prol.preheader ]
  %add.6.prol = add nsw i32 %ki.06.6.prol, %in_i.015.prol
  %notlhs.6.prol = icmp slt i32 %add.6.prol, 0
  %notrhs.6.prol = icmp uge i32 %add.6.prol, %img_height
  %.not.6.prol = or i1 %notrhs.6.prol, %notlhs.6.prol
  %brmerge.6.prol = or i1 %.not.6.prol, %cmp151.not.6.prol
  br i1 %brmerge.6.prol, label %for.inc36.6.prol, label %for.body16.lr.ph.6.prol

for.body16.lr.ph.6.prol:                          ; preds = %for.body10.6.prol
  %mul.6.prol = shl i32 %add.6.prol, 7
  %mul30.6.prol = mul i32 %ki.06.6.prol, %kern_width
  br label %for.body16.6.prol

for.body16.6.prol:                                ; preds = %for.inc.6.prol, %for.body16.lr.ph.6.prol
  %indvars.iv.6.prol = phi i64 [ 0, %for.body16.lr.ph.6.prol ], [ %indvars.iv.next.6.prol, %for.inc.6.prol ]
  %partial_sum.12.6.prol = phi float [ %partial_sum.05.6.prol, %for.body16.lr.ph.6.prol ], [ %partial_sum.2.6.prol, %for.inc.6.prol ]
  %56 = trunc i64 %indvars.iv.6.prol to i32
  %add17.6.prol = add nsw i32 %56, %inc54.5.prol
  %cmp18.6.prol = icmp sgt i32 %add17.6.prol, -1
  %cmp21.6.prol = icmp ult i32 %add17.6.prol, %img_width
  %57 = and i1 %cmp18.6.prol, %cmp21.6.prol
  br i1 %57, label %if.end26.6.prol, label %for.inc.6.prol

if.end26.6.prol:                                  ; preds = %for.body16.6.prol
  %add29.6.prol = add nsw i32 %add17.6.prol, %mul.6.prol
  %idxprom.6.prol = sext i32 %add29.6.prol to i64
  %arrayidx.6.prol = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.prol
  %58 = load float, float* %arrayidx.6.prol, align 4
  %59 = trunc i64 %indvars.iv.6.prol to i32
  %add31.6.prol = add i32 %59, %mul30.6.prol
  %idxprom32.6.prol = zext i32 %add31.6.prol to i64
  %arrayidx33.6.prol = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.prol
  %60 = load float, float* %arrayidx33.6.prol, align 4
  %mul34.6.prol = fmul float %58, %60
  %add35.6.prol = fadd float %partial_sum.12.6.prol, %mul34.6.prol
  br label %for.inc.6.prol

for.inc.6.prol:                                   ; preds = %if.end26.6.prol, %for.body16.6.prol
  %partial_sum.2.6.prol = phi float [ %add35.6.prol, %if.end26.6.prol ], [ %partial_sum.12.6.prol, %for.body16.6.prol ]
  %indvars.iv.next.6.prol = add nuw nsw i64 %indvars.iv.6.prol, 1
  %lftr.wideiv.6.prol = trunc i64 %indvars.iv.next.6.prol to i32
  %exitcond.6.prol = icmp eq i32 %lftr.wideiv.6.prol, %kern_width
  br i1 %exitcond.6.prol, label %for.inc36.6.prol.loopexit, label %for.body16.6.prol, !llvm.loop !1

for.inc36.6.prol.loopexit:                        ; preds = %for.inc.6.prol
  %partial_sum.2.6.prol.lcssa = phi float [ %partial_sum.2.6.prol, %for.inc.6.prol ]
  br label %for.inc36.6.prol

for.inc36.6.prol:                                 ; preds = %for.inc36.6.prol.loopexit, %for.body10.6.prol
  %partial_sum.3.6.prol = phi float [ %partial_sum.05.6.prol, %for.body10.6.prol ], [ %partial_sum.2.6.prol.lcssa, %for.inc36.6.prol.loopexit ]
  %inc37.6.prol = add nuw nsw i32 %ki.06.6.prol, 1
  %exitcond19.6.prol = icmp eq i32 %inc37.6.prol, %kern_height
  br i1 %exitcond19.6.prol, label %for.end38.6.prol.loopexit, label %for.body10.6.prol, !llvm.loop !3

for.end38.6.prol.loopexit:                        ; preds = %for.inc36.6.prol
  %partial_sum.3.6.prol.lcssa = phi float [ %partial_sum.3.6.prol, %for.inc36.6.prol ]
  br label %for.end38.6.prol

for.end38.6.prol:                                 ; preds = %for.end38.6.prol.loopexit, %for.inc53.5.prol
  %partial_sum.0.lcssa.6.prol = phi float [ 0.000000e+00, %for.inc53.5.prol ], [ %partial_sum.3.6.prol.lcssa, %for.end38.6.prol.loopexit ]
  br i1 %tobool39, label %if.else.6.prol, label %if.then40.6.prol

if.then40.6.prol:                                 ; preds = %for.end38.6.prol
  %cmp41.6.prol = fcmp olt float %partial_sum.0.lcssa.6.prol, 0.000000e+00
  %sub42.6.prol = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.prol
  %cond.6.prol = select i1 %cmp41.6.prol, float %sub42.6.prol, float %partial_sum.0.lcssa.6.prol
  %conv.6.prol = fptoui float %cond.6.prol to i8
  %conv43.6.prol = uitofp i8 %conv.6.prol to float
  %61 = add nsw i64 %indvars.iv.next21.5.prol, %6
  %arrayidx47.6.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %61
  store float %conv43.6.prol, float* %arrayidx47.6.prol, align 4
  br label %for.inc53.6.prol

if.else.6.prol:                                   ; preds = %for.end38.6.prol
  %62 = add nsw i64 %indvars.iv.next21.5.prol, %5
  %arrayidx51.6.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %62
  store float %partial_sum.0.lcssa.6.prol, float* %arrayidx51.6.prol, align 4
  br label %for.inc53.6.prol

for.inc53.6.prol:                                 ; preds = %if.else.6.prol, %if.then40.6.prol
  %inc54.6.prol = add nsw i32 %in_j.011.prol34, 7
  %indvars.iv.next21.6.prol = add nsw i64 %indvars.iv20.prol33, 7
  br i1 %cmp94, label %for.end38.7.prol, label %for.body10.7.prol.preheader

for.body10.7.prol.preheader:                      ; preds = %for.inc53.6.prol
  br label %for.body10.7.prol

for.body10.7.prol:                                ; preds = %for.body10.7.prol.preheader, %for.inc36.7.prol
  %ki.06.7.prol = phi i32 [ %inc37.7.prol, %for.inc36.7.prol ], [ 0, %for.body10.7.prol.preheader ]
  %partial_sum.05.7.prol = phi float [ %partial_sum.3.7.prol, %for.inc36.7.prol ], [ 0.000000e+00, %for.body10.7.prol.preheader ]
  %add.7.prol = add nsw i32 %ki.06.7.prol, %in_i.015.prol
  %notlhs.7.prol = icmp slt i32 %add.7.prol, 0
  %notrhs.7.prol = icmp uge i32 %add.7.prol, %img_height
  %.not.7.prol = or i1 %notrhs.7.prol, %notlhs.7.prol
  %brmerge.7.prol = or i1 %.not.7.prol, %cmp151.not.7.prol
  br i1 %brmerge.7.prol, label %for.inc36.7.prol, label %for.body16.lr.ph.7.prol

for.body16.lr.ph.7.prol:                          ; preds = %for.body10.7.prol
  %mul.7.prol = shl i32 %add.7.prol, 7
  %mul30.7.prol = mul i32 %ki.06.7.prol, %kern_width
  br label %for.body16.7.prol

for.body16.7.prol:                                ; preds = %for.inc.7.prol, %for.body16.lr.ph.7.prol
  %indvars.iv.7.prol = phi i64 [ 0, %for.body16.lr.ph.7.prol ], [ %indvars.iv.next.7.prol, %for.inc.7.prol ]
  %partial_sum.12.7.prol = phi float [ %partial_sum.05.7.prol, %for.body16.lr.ph.7.prol ], [ %partial_sum.2.7.prol, %for.inc.7.prol ]
  %63 = trunc i64 %indvars.iv.7.prol to i32
  %add17.7.prol = add nsw i32 %63, %inc54.6.prol
  %cmp18.7.prol = icmp sgt i32 %add17.7.prol, -1
  %cmp21.7.prol = icmp ult i32 %add17.7.prol, %img_width
  %64 = and i1 %cmp18.7.prol, %cmp21.7.prol
  br i1 %64, label %if.end26.7.prol, label %for.inc.7.prol

if.end26.7.prol:                                  ; preds = %for.body16.7.prol
  %add29.7.prol = add nsw i32 %add17.7.prol, %mul.7.prol
  %idxprom.7.prol = sext i32 %add29.7.prol to i64
  %arrayidx.7.prol = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.prol
  %65 = load float, float* %arrayidx.7.prol, align 4
  %66 = trunc i64 %indvars.iv.7.prol to i32
  %add31.7.prol = add i32 %66, %mul30.7.prol
  %idxprom32.7.prol = zext i32 %add31.7.prol to i64
  %arrayidx33.7.prol = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.prol
  %67 = load float, float* %arrayidx33.7.prol, align 4
  %mul34.7.prol = fmul float %65, %67
  %add35.7.prol = fadd float %partial_sum.12.7.prol, %mul34.7.prol
  br label %for.inc.7.prol

for.inc.7.prol:                                   ; preds = %if.end26.7.prol, %for.body16.7.prol
  %partial_sum.2.7.prol = phi float [ %add35.7.prol, %if.end26.7.prol ], [ %partial_sum.12.7.prol, %for.body16.7.prol ]
  %indvars.iv.next.7.prol = add nuw nsw i64 %indvars.iv.7.prol, 1
  %lftr.wideiv.7.prol = trunc i64 %indvars.iv.next.7.prol to i32
  %exitcond.7.prol = icmp eq i32 %lftr.wideiv.7.prol, %kern_width
  br i1 %exitcond.7.prol, label %for.inc36.7.prol.loopexit, label %for.body16.7.prol, !llvm.loop !1

for.inc36.7.prol.loopexit:                        ; preds = %for.inc.7.prol
  %partial_sum.2.7.prol.lcssa = phi float [ %partial_sum.2.7.prol, %for.inc.7.prol ]
  br label %for.inc36.7.prol

for.inc36.7.prol:                                 ; preds = %for.inc36.7.prol.loopexit, %for.body10.7.prol
  %partial_sum.3.7.prol = phi float [ %partial_sum.05.7.prol, %for.body10.7.prol ], [ %partial_sum.2.7.prol.lcssa, %for.inc36.7.prol.loopexit ]
  %inc37.7.prol = add nuw nsw i32 %ki.06.7.prol, 1
  %exitcond19.7.prol = icmp eq i32 %inc37.7.prol, %kern_height
  br i1 %exitcond19.7.prol, label %for.end38.7.prol.loopexit, label %for.body10.7.prol, !llvm.loop !3

for.end38.7.prol.loopexit:                        ; preds = %for.inc36.7.prol
  %partial_sum.3.7.prol.lcssa = phi float [ %partial_sum.3.7.prol, %for.inc36.7.prol ]
  br label %for.end38.7.prol

for.end38.7.prol:                                 ; preds = %for.end38.7.prol.loopexit, %for.inc53.6.prol
  %partial_sum.0.lcssa.7.prol = phi float [ 0.000000e+00, %for.inc53.6.prol ], [ %partial_sum.3.7.prol.lcssa, %for.end38.7.prol.loopexit ]
  br i1 %tobool39, label %if.else.7.prol, label %if.then40.7.prol

if.then40.7.prol:                                 ; preds = %for.end38.7.prol
  %cmp41.7.prol = fcmp olt float %partial_sum.0.lcssa.7.prol, 0.000000e+00
  %sub42.7.prol = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.prol
  %cond.7.prol = select i1 %cmp41.7.prol, float %sub42.7.prol, float %partial_sum.0.lcssa.7.prol
  %conv.7.prol = fptoui float %cond.7.prol to i8
  %conv43.7.prol = uitofp i8 %conv.7.prol to float
  %68 = add nsw i64 %indvars.iv.next21.6.prol, %6
  %arrayidx47.7.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %68
  store float %conv43.7.prol, float* %arrayidx47.7.prol, align 4
  br label %for.inc53.7.prol

if.else.7.prol:                                   ; preds = %for.end38.7.prol
  %69 = add nsw i64 %indvars.iv.next21.6.prol, %5
  %arrayidx51.7.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %69
  store float %partial_sum.0.lcssa.7.prol, float* %arrayidx51.7.prol, align 4
  br label %for.inc53.7.prol

for.inc53.7.prol:                                 ; preds = %if.else.7.prol, %if.then40.7.prol
  %inc54.7.prol = add nsw i32 %in_j.011.prol34, 8
  %indvars.iv.next21.7.prol = add nsw i64 %indvars.iv20.prol33, 8
  %lftr.wideiv24.7.prol = trunc i64 %indvars.iv.next21.7.prol to i32
  %exitcond25.7.prol = icmp eq i32 %lftr.wideiv24.7.prol, %img_width
  br i1 %exitcond25.7.prol, label %for.inc57.prol.loopexit, label %for.cond8.preheader.prol32, !llvm.loop !5

for.inc57.prol.loopexit:                          ; preds = %for.inc53.7.prol
  br label %for.inc57.prol

for.inc57.prol:                                   ; preds = %for.inc57.prol.loopexit, %for.cond8.preheader.lr.ph.split.prol, %for.cond5.preheader.prol
  %inc58.prol = add nsw i32 %in_i.015.prol, 1
  %indvars.iv.next27.prol = add nuw nsw i64 %indvars.iv26.prol, 1
  %prol.iter91.sub = add i32 %prol.iter91, -1
  %prol.iter91.cmp = icmp eq i32 %prol.iter91.sub, 0
  br i1 %prol.iter91.cmp, label %for.cond5.preheader.lr.ph.split.loopexit, label %for.cond5.preheader.prol, !llvm.loop !6

for.cond5.preheader.lr.ph.split.loopexit:         ; preds = %for.inc57.prol
  %indvars.iv.next27.prol.lcssa = phi i64 [ %indvars.iv.next27.prol, %for.inc57.prol ]
  %inc58.prol.lcssa = phi i32 [ %inc58.prol, %for.inc57.prol ]
  br label %for.cond5.preheader.lr.ph.split

for.cond5.preheader.lr.ph.split:                  ; preds = %for.cond5.preheader.lr.ph.split.loopexit, %for.cond5.preheader.lr.ph
  %indvars.iv26.unr = phi i64 [ 0, %for.cond5.preheader.lr.ph ], [ %indvars.iv.next27.prol.lcssa, %for.cond5.preheader.lr.ph.split.loopexit ]
  %in_i.015.unr = phi i32 [ %sub1, %for.cond5.preheader.lr.ph ], [ %inc58.prol.lcssa, %for.cond5.preheader.lr.ph.split.loopexit ]
  %70 = icmp ult i32 %1, 31
  br i1 %70, label %for.end60, label %for.cond5.preheader.preheader

for.cond5.preheader.preheader:                    ; preds = %for.cond5.preheader.lr.ph.split
  %xtraiter = and i32 %img_width, 7
  %lcmp.mod = icmp eq i32 %xtraiter, 0
  %71 = icmp ult i32 %0, 7
  %xtraiter.1 = and i32 %img_width, 7
  %lcmp.mod.1 = icmp eq i32 %xtraiter.1, 0
  %72 = icmp ult i32 %0, 7
  %xtraiter.2 = and i32 %img_width, 7
  %lcmp.mod.2 = icmp eq i32 %xtraiter.2, 0
  %73 = icmp ult i32 %0, 7
  %xtraiter.3 = and i32 %img_width, 7
  %lcmp.mod.3 = icmp eq i32 %xtraiter.3, 0
  %74 = icmp ult i32 %0, 7
  %xtraiter.4 = and i32 %img_width, 7
  %lcmp.mod.4 = icmp eq i32 %xtraiter.4, 0
  %75 = icmp ult i32 %0, 7
  %xtraiter.5 = and i32 %img_width, 7
  %lcmp.mod.5 = icmp eq i32 %xtraiter.5, 0
  %76 = icmp ult i32 %0, 7
  %xtraiter.6 = and i32 %img_width, 7
  %lcmp.mod.6 = icmp eq i32 %xtraiter.6, 0
  %77 = icmp ult i32 %0, 7
  %xtraiter.7 = and i32 %img_width, 7
  %lcmp.mod.7 = icmp eq i32 %xtraiter.7, 0
  %78 = icmp ult i32 %0, 7
  %xtraiter.8 = and i32 %img_width, 7
  %lcmp.mod.8 = icmp eq i32 %xtraiter.8, 0
  %79 = icmp ult i32 %0, 7
  %xtraiter.9 = and i32 %img_width, 7
  %lcmp.mod.9 = icmp eq i32 %xtraiter.9, 0
  %80 = icmp ult i32 %0, 7
  %xtraiter.10 = and i32 %img_width, 7
  %lcmp.mod.10 = icmp eq i32 %xtraiter.10, 0
  %81 = icmp ult i32 %0, 7
  %xtraiter.11 = and i32 %img_width, 7
  %lcmp.mod.11 = icmp eq i32 %xtraiter.11, 0
  %82 = icmp ult i32 %0, 7
  %xtraiter.12 = and i32 %img_width, 7
  %lcmp.mod.12 = icmp eq i32 %xtraiter.12, 0
  %83 = icmp ult i32 %0, 7
  %xtraiter.13 = and i32 %img_width, 7
  %lcmp.mod.13 = icmp eq i32 %xtraiter.13, 0
  %84 = icmp ult i32 %0, 7
  %xtraiter.14 = and i32 %img_width, 7
  %lcmp.mod.14 = icmp eq i32 %xtraiter.14, 0
  %85 = icmp ult i32 %0, 7
  %xtraiter.15 = and i32 %img_width, 7
  %lcmp.mod.15 = icmp eq i32 %xtraiter.15, 0
  %86 = icmp ult i32 %0, 7
  %xtraiter.16 = and i32 %img_width, 7
  %lcmp.mod.16 = icmp eq i32 %xtraiter.16, 0
  %87 = icmp ult i32 %0, 7
  %xtraiter.17 = and i32 %img_width, 7
  %lcmp.mod.17 = icmp eq i32 %xtraiter.17, 0
  %88 = icmp ult i32 %0, 7
  %xtraiter.18 = and i32 %img_width, 7
  %lcmp.mod.18 = icmp eq i32 %xtraiter.18, 0
  %89 = icmp ult i32 %0, 7
  %xtraiter.19 = and i32 %img_width, 7
  %lcmp.mod.19 = icmp eq i32 %xtraiter.19, 0
  %90 = icmp ult i32 %0, 7
  %xtraiter.20 = and i32 %img_width, 7
  %lcmp.mod.20 = icmp eq i32 %xtraiter.20, 0
  %91 = icmp ult i32 %0, 7
  %xtraiter.21 = and i32 %img_width, 7
  %lcmp.mod.21 = icmp eq i32 %xtraiter.21, 0
  %92 = icmp ult i32 %0, 7
  %xtraiter.22 = and i32 %img_width, 7
  %lcmp.mod.22 = icmp eq i32 %xtraiter.22, 0
  %93 = icmp ult i32 %0, 7
  %xtraiter.23 = and i32 %img_width, 7
  %lcmp.mod.23 = icmp eq i32 %xtraiter.23, 0
  %94 = icmp ult i32 %0, 7
  %xtraiter.24 = and i32 %img_width, 7
  %lcmp.mod.24 = icmp eq i32 %xtraiter.24, 0
  %95 = icmp ult i32 %0, 7
  %xtraiter.25 = and i32 %img_width, 7
  %lcmp.mod.25 = icmp eq i32 %xtraiter.25, 0
  %96 = icmp ult i32 %0, 7
  %xtraiter.26 = and i32 %img_width, 7
  %lcmp.mod.26 = icmp eq i32 %xtraiter.26, 0
  %97 = icmp ult i32 %0, 7
  %xtraiter.27 = and i32 %img_width, 7
  %lcmp.mod.27 = icmp eq i32 %xtraiter.27, 0
  %98 = icmp ult i32 %0, 7
  %xtraiter.28 = and i32 %img_width, 7
  %lcmp.mod.28 = icmp eq i32 %xtraiter.28, 0
  %99 = icmp ult i32 %0, 7
  %xtraiter.29 = and i32 %img_width, 7
  %lcmp.mod.29 = icmp eq i32 %xtraiter.29, 0
  %100 = icmp ult i32 %0, 7
  %xtraiter.30 = and i32 %img_width, 7
  %lcmp.mod.30 = icmp eq i32 %xtraiter.30, 0
  %101 = icmp ult i32 %0, 7
  %xtraiter.31 = and i32 %img_width, 7
  %lcmp.mod.31 = icmp eq i32 %xtraiter.31, 0
  %102 = icmp ult i32 %0, 7
  %cmp151.not.7.31 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.31 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.31 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.31 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.31 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.31 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.31 = icmp eq i32 %kern_width, 0
  %cmp151.not.31 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.31 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.30 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.30 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.30 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.30 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.30 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.30 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.30 = icmp eq i32 %kern_width, 0
  %cmp151.not.30 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.30 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.29 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.29 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.29 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.29 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.29 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.29 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.29 = icmp eq i32 %kern_width, 0
  %cmp151.not.29 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.29 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.28 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.28 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.28 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.28 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.28 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.28 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.28 = icmp eq i32 %kern_width, 0
  %cmp151.not.28 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.28 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.27 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.27 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.27 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.27 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.27 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.27 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.27 = icmp eq i32 %kern_width, 0
  %cmp151.not.27 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.27 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.26 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.26 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.26 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.26 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.26 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.26 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.26 = icmp eq i32 %kern_width, 0
  %cmp151.not.26 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.26 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.25 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.25 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.25 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.25 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.25 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.25 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.25 = icmp eq i32 %kern_width, 0
  %cmp151.not.25 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.25 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.24 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.24 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.24 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.24 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.24 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.24 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.24 = icmp eq i32 %kern_width, 0
  %cmp151.not.24 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.24 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.23 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.23 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.23 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.23 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.23 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.23 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.23 = icmp eq i32 %kern_width, 0
  %cmp151.not.23 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.23 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.22 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.22 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.22 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.22 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.22 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.22 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.22 = icmp eq i32 %kern_width, 0
  %cmp151.not.22 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.22 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.21 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.21 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.21 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.21 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.21 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.21 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.21 = icmp eq i32 %kern_width, 0
  %cmp151.not.21 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.21 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.20 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.20 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.20 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.20 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.20 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.20 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.20 = icmp eq i32 %kern_width, 0
  %cmp151.not.20 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.20 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.19 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.19 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.19 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.19 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.19 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.19 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.19 = icmp eq i32 %kern_width, 0
  %cmp151.not.19 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.19 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.18 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.18 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.18 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.18 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.18 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.18 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.18 = icmp eq i32 %kern_width, 0
  %cmp151.not.18 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.18 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.17 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.17 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.17 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.17 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.17 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.17 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.17 = icmp eq i32 %kern_width, 0
  %cmp151.not.17 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.17 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.16 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.16 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.16 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.16 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.16 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.16 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.16 = icmp eq i32 %kern_width, 0
  %cmp151.not.16 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.16 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.15 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.15 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.15 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.15 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.15 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.15 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.15 = icmp eq i32 %kern_width, 0
  %cmp151.not.15 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.15 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.14 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.14 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.14 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.14 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.14 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.14 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.14 = icmp eq i32 %kern_width, 0
  %cmp151.not.14 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.14 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.13 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.13 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.13 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.13 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.13 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.13 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.13 = icmp eq i32 %kern_width, 0
  %cmp151.not.13 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.13 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.12 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.12 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.12 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.12 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.12 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.12 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.12 = icmp eq i32 %kern_width, 0
  %cmp151.not.12 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.12 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.11 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.11 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.11 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.11 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.11 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.11 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.11 = icmp eq i32 %kern_width, 0
  %cmp151.not.11 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.11 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.10 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.10 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.10 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.10 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.10 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.10 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.10 = icmp eq i32 %kern_width, 0
  %cmp151.not.10 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.10 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.9 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.9 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.9 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.9 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.9 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.9 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.9 = icmp eq i32 %kern_width, 0
  %cmp151.not.9 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.9 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.8 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.8 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.8 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.8 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.8 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.8 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.8 = icmp eq i32 %kern_width, 0
  %cmp151.not.8 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.8 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.7 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.7 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.7 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.7 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.7 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.7 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.7 = icmp eq i32 %kern_width, 0
  %cmp151.not.7435 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.7 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.6 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.6 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.6 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.6 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.6 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.6 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.6 = icmp eq i32 %kern_width, 0
  %cmp151.not.6379 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.6 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.5 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.5 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.5 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.5 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.5 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.5 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.5 = icmp eq i32 %kern_width, 0
  %cmp151.not.5323 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.5 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.4 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.4 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.4 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.4 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.4 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.4 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.4 = icmp eq i32 %kern_width, 0
  %cmp151.not.4267 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.4 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.3 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.3 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.3 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.3 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.3 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.3 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.3 = icmp eq i32 %kern_width, 0
  %cmp151.not.3211 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.3 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.2 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.2 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.2 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.2 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.2 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.2 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.2 = icmp eq i32 %kern_width, 0
  %cmp151.not.2155 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.2 = icmp eq i32 %kern_width, 0
  %cmp151.not.7.1 = icmp eq i32 %kern_width, 0
  %cmp151.not.6.1 = icmp eq i32 %kern_width, 0
  %cmp151.not.5.1 = icmp eq i32 %kern_width, 0
  %cmp151.not.4.1 = icmp eq i32 %kern_width, 0
  %cmp151.not.3.1 = icmp eq i32 %kern_width, 0
  %cmp151.not.2.1 = icmp eq i32 %kern_width, 0
  %cmp151.not.1.1 = icmp eq i32 %kern_width, 0
  %cmp151.not.199 = icmp eq i32 %kern_width, 0
  %cmp151.not.prol.1 = icmp eq i32 %kern_width, 0
  %cmp151.not.7 = icmp eq i32 %kern_width, 0
  %cmp151.not.6 = icmp eq i32 %kern_width, 0
  %cmp151.not.5 = icmp eq i32 %kern_width, 0
  %cmp151.not.4 = icmp eq i32 %kern_width, 0
  %cmp151.not.3 = icmp eq i32 %kern_width, 0
  %cmp151.not.2 = icmp eq i32 %kern_width, 0
  %cmp151.not.1 = icmp eq i32 %kern_width, 0
  %cmp151.not = icmp eq i32 %kern_width, 0
  %cmp151.not.prol = icmp eq i32 %kern_width, 0
  br label %for.cond5.preheader

for.cond5.preheader:                              ; preds = %for.cond5.preheader.preheader, %for.inc57.31
  %indvars.iv26 = phi i64 [ %indvars.iv.next27.31, %for.inc57.31 ], [ %indvars.iv26.unr, %for.cond5.preheader.preheader ]
  %in_i.015 = phi i32 [ %inc58.31, %for.inc57.31 ], [ %in_i.015.unr, %for.cond5.preheader.preheader ]
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph

for.cond8.preheader.lr.ph:                        ; preds = %for.cond5.preheader
  %103 = trunc i64 %indvars.iv26 to i32
  %mul48 = shl i32 %103, 7
  %104 = trunc i64 %indvars.iv26 to i32
  %mul44 = shl i32 %104, 7
  %105 = sext i32 %mul48 to i64
  %106 = sext i32 %mul44 to i64
  br i1 %lcmp.mod, label %for.cond8.preheader.lr.ph.split, label %for.cond8.preheader.prol.preheader

for.cond8.preheader.prol.preheader:               ; preds = %for.cond8.preheader.lr.ph
  br label %for.cond8.preheader.prol

for.cond8.preheader.prol:                         ; preds = %for.cond8.preheader.prol.preheader, %for.inc53.prol
  %indvars.iv20.prol = phi i64 [ %indvars.iv.next21.prol, %for.inc53.prol ], [ 0, %for.cond8.preheader.prol.preheader ]
  %in_j.011.prol = phi i32 [ %inc54.prol, %for.inc53.prol ], [ %sub4, %for.cond8.preheader.prol.preheader ]
  %prol.iter = phi i32 [ %prol.iter.sub, %for.inc53.prol ], [ %xtraiter, %for.cond8.preheader.prol.preheader ]
  br i1 %cmp94, label %for.end38.prol, label %for.body10.prol.preheader

for.body10.prol.preheader:                        ; preds = %for.cond8.preheader.prol
  br label %for.body10.prol

for.body10.prol:                                  ; preds = %for.body10.prol.preheader, %for.inc36.prol
  %ki.06.prol = phi i32 [ %inc37.prol, %for.inc36.prol ], [ 0, %for.body10.prol.preheader ]
  %partial_sum.05.prol = phi float [ %partial_sum.3.prol, %for.inc36.prol ], [ 0.000000e+00, %for.body10.prol.preheader ]
  %add.prol = add nsw i32 %ki.06.prol, %in_i.015
  %notlhs.prol = icmp slt i32 %add.prol, 0
  %notrhs.prol = icmp uge i32 %add.prol, %img_height
  %.not.prol = or i1 %notrhs.prol, %notlhs.prol
  %brmerge.prol = or i1 %.not.prol, %cmp151.not.prol
  br i1 %brmerge.prol, label %for.inc36.prol, label %for.body16.lr.ph.prol

for.body16.lr.ph.prol:                            ; preds = %for.body10.prol
  %mul.prol = shl i32 %add.prol, 7
  %mul30.prol = mul i32 %ki.06.prol, %kern_width
  br label %for.body16.prol

for.body16.prol:                                  ; preds = %for.inc.prol, %for.body16.lr.ph.prol
  %indvars.iv.prol = phi i64 [ 0, %for.body16.lr.ph.prol ], [ %indvars.iv.next.prol, %for.inc.prol ]
  %partial_sum.12.prol = phi float [ %partial_sum.05.prol, %for.body16.lr.ph.prol ], [ %partial_sum.2.prol, %for.inc.prol ]
  %107 = trunc i64 %indvars.iv.prol to i32
  %add17.prol = add nsw i32 %107, %in_j.011.prol
  %cmp18.prol = icmp sgt i32 %add17.prol, -1
  %cmp21.prol = icmp ult i32 %add17.prol, %img_width
  %108 = and i1 %cmp18.prol, %cmp21.prol
  br i1 %108, label %if.end26.prol, label %for.inc.prol

if.end26.prol:                                    ; preds = %for.body16.prol
  %add29.prol = add nsw i32 %add17.prol, %mul.prol
  %idxprom.prol = sext i32 %add29.prol to i64
  %arrayidx.prol = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol
  %109 = load float, float* %arrayidx.prol, align 4
  %110 = trunc i64 %indvars.iv.prol to i32
  %add31.prol = add i32 %110, %mul30.prol
  %idxprom32.prol = zext i32 %add31.prol to i64
  %arrayidx33.prol = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol
  %111 = load float, float* %arrayidx33.prol, align 4
  %mul34.prol = fmul float %109, %111
  %add35.prol = fadd float %partial_sum.12.prol, %mul34.prol
  br label %for.inc.prol

for.inc.prol:                                     ; preds = %if.end26.prol, %for.body16.prol
  %partial_sum.2.prol = phi float [ %add35.prol, %if.end26.prol ], [ %partial_sum.12.prol, %for.body16.prol ]
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %lftr.wideiv.prol = trunc i64 %indvars.iv.next.prol to i32
  %exitcond.prol = icmp eq i32 %lftr.wideiv.prol, %kern_width
  br i1 %exitcond.prol, label %for.inc36.prol.loopexit, label %for.body16.prol, !llvm.loop !1

for.inc36.prol.loopexit:                          ; preds = %for.inc.prol
  %partial_sum.2.prol.lcssa = phi float [ %partial_sum.2.prol, %for.inc.prol ]
  br label %for.inc36.prol

for.inc36.prol:                                   ; preds = %for.inc36.prol.loopexit, %for.body10.prol
  %partial_sum.3.prol = phi float [ %partial_sum.05.prol, %for.body10.prol ], [ %partial_sum.2.prol.lcssa, %for.inc36.prol.loopexit ]
  %inc37.prol = add nuw nsw i32 %ki.06.prol, 1
  %exitcond19.prol = icmp eq i32 %inc37.prol, %kern_height
  br i1 %exitcond19.prol, label %for.end38.prol.loopexit, label %for.body10.prol, !llvm.loop !3

for.end38.prol.loopexit:                          ; preds = %for.inc36.prol
  %partial_sum.3.prol.lcssa = phi float [ %partial_sum.3.prol, %for.inc36.prol ]
  br label %for.end38.prol

for.end38.prol:                                   ; preds = %for.end38.prol.loopexit, %for.cond8.preheader.prol
  %partial_sum.0.lcssa.prol = phi float [ 0.000000e+00, %for.cond8.preheader.prol ], [ %partial_sum.3.prol.lcssa, %for.end38.prol.loopexit ]
  br i1 %tobool39, label %if.else.prol, label %if.then40.prol

if.then40.prol:                                   ; preds = %for.end38.prol
  %cmp41.prol = fcmp olt float %partial_sum.0.lcssa.prol, 0.000000e+00
  %sub42.prol = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol
  %cond.prol = select i1 %cmp41.prol, float %sub42.prol, float %partial_sum.0.lcssa.prol
  %conv.prol = fptoui float %cond.prol to i8
  %conv43.prol = uitofp i8 %conv.prol to float
  %112 = add nsw i64 %indvars.iv20.prol, %106
  %arrayidx47.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %112
  store float %conv43.prol, float* %arrayidx47.prol, align 4
  br label %for.inc53.prol

if.else.prol:                                     ; preds = %for.end38.prol
  %113 = add nsw i64 %indvars.iv20.prol, %105
  %arrayidx51.prol = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %113
  store float %partial_sum.0.lcssa.prol, float* %arrayidx51.prol, align 4
  br label %for.inc53.prol

for.inc53.prol:                                   ; preds = %if.else.prol, %if.then40.prol
  %inc54.prol = add nsw i32 %in_j.011.prol, 1
  %indvars.iv.next21.prol = add nuw nsw i64 %indvars.iv20.prol, 1
  %prol.iter.sub = add i32 %prol.iter, -1
  %prol.iter.cmp = icmp eq i32 %prol.iter.sub, 0
  br i1 %prol.iter.cmp, label %for.cond8.preheader.lr.ph.split.loopexit, label %for.cond8.preheader.prol, !llvm.loop !4

for.cond8.preheader.lr.ph.split.loopexit:         ; preds = %for.inc53.prol
  %indvars.iv.next21.prol.lcssa = phi i64 [ %indvars.iv.next21.prol, %for.inc53.prol ]
  %inc54.prol.lcssa = phi i32 [ %inc54.prol, %for.inc53.prol ]
  br label %for.cond8.preheader.lr.ph.split

for.cond8.preheader.lr.ph.split:                  ; preds = %for.cond8.preheader.lr.ph.split.loopexit, %for.cond8.preheader.lr.ph
  %indvars.iv20.unr = phi i64 [ 0, %for.cond8.preheader.lr.ph ], [ %indvars.iv.next21.prol.lcssa, %for.cond8.preheader.lr.ph.split.loopexit ]
  %in_j.011.unr = phi i32 [ %sub4, %for.cond8.preheader.lr.ph ], [ %inc54.prol.lcssa, %for.cond8.preheader.lr.ph.split.loopexit ]
  br i1 %71, label %for.inc57, label %for.cond8.preheader.preheader

for.cond8.preheader.preheader:                    ; preds = %for.cond8.preheader.lr.ph.split
  br label %for.cond8.preheader

for.cond8.preheader:                              ; preds = %for.cond8.preheader.preheader, %for.inc53.7
  %indvars.iv20 = phi i64 [ %indvars.iv.next21.7, %for.inc53.7 ], [ %indvars.iv20.unr, %for.cond8.preheader.preheader ]
  %in_j.011 = phi i32 [ %inc54.7, %for.inc53.7 ], [ %in_j.011.unr, %for.cond8.preheader.preheader ]
  br i1 %cmp94, label %for.end38, label %for.body10.preheader

for.body10.preheader:                             ; preds = %for.cond8.preheader
  br label %for.body10

for.body10:                                       ; preds = %for.body10.preheader, %for.inc36
  %ki.06 = phi i32 [ %inc37, %for.inc36 ], [ 0, %for.body10.preheader ]
  %partial_sum.05 = phi float [ %partial_sum.3, %for.inc36 ], [ 0.000000e+00, %for.body10.preheader ]
  %add = add nsw i32 %ki.06, %in_i.015
  %notlhs = icmp slt i32 %add, 0
  %notrhs = icmp uge i32 %add, %img_height
  %.not = or i1 %notrhs, %notlhs
  %brmerge = or i1 %.not, %cmp151.not
  br i1 %brmerge, label %for.inc36, label %for.body16.lr.ph

for.body16.lr.ph:                                 ; preds = %for.body10
  %mul = shl i32 %add, 7
  %mul30 = mul i32 %ki.06, %kern_width
  br label %for.body16

for.body16:                                       ; preds = %for.inc, %for.body16.lr.ph
  %indvars.iv = phi i64 [ 0, %for.body16.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %partial_sum.12 = phi float [ %partial_sum.05, %for.body16.lr.ph ], [ %partial_sum.2, %for.inc ]
  %114 = trunc i64 %indvars.iv to i32
  %add17 = add nsw i32 %114, %in_j.011
  %cmp18 = icmp sgt i32 %add17, -1
  %cmp21 = icmp ult i32 %add17, %img_width
  %115 = and i1 %cmp18, %cmp21
  br i1 %115, label %if.end26, label %for.inc

if.end26:                                         ; preds = %for.body16
  %add29 = add nsw i32 %add17, %mul
  %idxprom = sext i32 %add29 to i64
  %arrayidx = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom
  %116 = load float, float* %arrayidx, align 4
  %117 = trunc i64 %indvars.iv to i32
  %add31 = add i32 %117, %mul30
  %idxprom32 = zext i32 %add31 to i64
  %arrayidx33 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32
  %118 = load float, float* %arrayidx33, align 4
  %mul34 = fmul float %116, %118
  %add35 = fadd float %partial_sum.12, %mul34
  br label %for.inc

for.inc:                                          ; preds = %for.body16, %if.end26
  %partial_sum.2 = phi float [ %add35, %if.end26 ], [ %partial_sum.12, %for.body16 ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond = icmp eq i32 %lftr.wideiv, %kern_width
  br i1 %exitcond, label %for.inc36.loopexit, label %for.body16, !llvm.loop !1

for.inc36.loopexit:                               ; preds = %for.inc
  %partial_sum.2.lcssa = phi float [ %partial_sum.2, %for.inc ]
  br label %for.inc36

for.inc36:                                        ; preds = %for.inc36.loopexit, %for.body10
  %partial_sum.3 = phi float [ %partial_sum.05, %for.body10 ], [ %partial_sum.2.lcssa, %for.inc36.loopexit ]
  %inc37 = add nuw nsw i32 %ki.06, 1
  %exitcond19 = icmp eq i32 %inc37, %kern_height
  br i1 %exitcond19, label %for.end38.loopexit, label %for.body10, !llvm.loop !3

for.end38.loopexit:                               ; preds = %for.inc36
  %partial_sum.3.lcssa = phi float [ %partial_sum.3, %for.inc36 ]
  br label %for.end38

for.end38:                                        ; preds = %for.end38.loopexit, %for.cond8.preheader
  %partial_sum.0.lcssa = phi float [ 0.000000e+00, %for.cond8.preheader ], [ %partial_sum.3.lcssa, %for.end38.loopexit ]
  br i1 %tobool39, label %if.else, label %if.then40

if.then40:                                        ; preds = %for.end38
  %cmp41 = fcmp olt float %partial_sum.0.lcssa, 0.000000e+00
  %sub42 = fsub float -0.000000e+00, %partial_sum.0.lcssa
  %cond = select i1 %cmp41, float %sub42, float %partial_sum.0.lcssa
  %conv = fptoui float %cond to i8
  %conv43 = uitofp i8 %conv to float
  %119 = add nsw i64 %indvars.iv20, %106
  %arrayidx47 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %119
  store float %conv43, float* %arrayidx47, align 4
  br label %for.inc53

if.else:                                          ; preds = %for.end38
  %120 = add nsw i64 %indvars.iv20, %105
  %arrayidx51 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %120
  store float %partial_sum.0.lcssa, float* %arrayidx51, align 4
  br label %for.inc53

for.inc53:                                        ; preds = %if.then40, %if.else
  %inc54 = add nsw i32 %in_j.011, 1
  %indvars.iv.next21 = add nuw nsw i64 %indvars.iv20, 1
  br i1 %cmp94, label %for.end38.1, label %for.body10.1.preheader

for.body10.1.preheader:                           ; preds = %for.inc53
  br label %for.body10.1

for.inc57.loopexit:                               ; preds = %for.inc53.7
  br label %for.inc57

for.inc57:                                        ; preds = %for.inc57.loopexit, %for.cond8.preheader.lr.ph.split
  %inc58 = add nsw i32 %in_i.015, 1
  %indvars.iv.next27 = add nuw nsw i64 %indvars.iv26, 1
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.1

for.end60.loopexit:                               ; preds = %for.inc57.31
  br label %for.end60

for.end60:                                        ; preds = %for.end60.loopexit, %for.cond5.preheader.lr.ph.split, %entry
  ret void

for.body10.1:                                     ; preds = %for.body10.1.preheader, %for.inc36.1
  %ki.06.1 = phi i32 [ %inc37.1, %for.inc36.1 ], [ 0, %for.body10.1.preheader ]
  %partial_sum.05.1 = phi float [ %partial_sum.3.1, %for.inc36.1 ], [ 0.000000e+00, %for.body10.1.preheader ]
  %add.1 = add nsw i32 %ki.06.1, %in_i.015
  %notlhs.1 = icmp slt i32 %add.1, 0
  %notrhs.1 = icmp uge i32 %add.1, %img_height
  %.not.1 = or i1 %notrhs.1, %notlhs.1
  %brmerge.1 = or i1 %.not.1, %cmp151.not.1
  br i1 %brmerge.1, label %for.inc36.1, label %for.body16.lr.ph.1

for.body16.lr.ph.1:                               ; preds = %for.body10.1
  %mul.1 = shl i32 %add.1, 7
  %mul30.1 = mul i32 %ki.06.1, %kern_width
  br label %for.body16.1

for.body16.1:                                     ; preds = %for.inc.1, %for.body16.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body16.lr.ph.1 ], [ %indvars.iv.next.1, %for.inc.1 ]
  %partial_sum.12.1 = phi float [ %partial_sum.05.1, %for.body16.lr.ph.1 ], [ %partial_sum.2.1, %for.inc.1 ]
  %121 = trunc i64 %indvars.iv.1 to i32
  %add17.1 = add nsw i32 %121, %inc54
  %cmp18.1 = icmp sgt i32 %add17.1, -1
  %cmp21.1 = icmp ult i32 %add17.1, %img_width
  %122 = and i1 %cmp18.1, %cmp21.1
  br i1 %122, label %if.end26.1, label %for.inc.1

if.end26.1:                                       ; preds = %for.body16.1
  %add29.1 = add nsw i32 %add17.1, %mul.1
  %idxprom.1 = sext i32 %add29.1 to i64
  %arrayidx.1 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1
  %123 = load float, float* %arrayidx.1, align 4
  %124 = trunc i64 %indvars.iv.1 to i32
  %add31.1 = add i32 %124, %mul30.1
  %idxprom32.1 = zext i32 %add31.1 to i64
  %arrayidx33.1 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1
  %125 = load float, float* %arrayidx33.1, align 4
  %mul34.1 = fmul float %123, %125
  %add35.1 = fadd float %partial_sum.12.1, %mul34.1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.end26.1, %for.body16.1
  %partial_sum.2.1 = phi float [ %add35.1, %if.end26.1 ], [ %partial_sum.12.1, %for.body16.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %lftr.wideiv.1 = trunc i64 %indvars.iv.next.1 to i32
  %exitcond.1 = icmp eq i32 %lftr.wideiv.1, %kern_width
  br i1 %exitcond.1, label %for.inc36.1.loopexit, label %for.body16.1, !llvm.loop !1

for.inc36.1.loopexit:                             ; preds = %for.inc.1
  %partial_sum.2.1.lcssa = phi float [ %partial_sum.2.1, %for.inc.1 ]
  br label %for.inc36.1

for.inc36.1:                                      ; preds = %for.inc36.1.loopexit, %for.body10.1
  %partial_sum.3.1 = phi float [ %partial_sum.05.1, %for.body10.1 ], [ %partial_sum.2.1.lcssa, %for.inc36.1.loopexit ]
  %inc37.1 = add nuw nsw i32 %ki.06.1, 1
  %exitcond19.1 = icmp eq i32 %inc37.1, %kern_height
  br i1 %exitcond19.1, label %for.end38.1.loopexit, label %for.body10.1, !llvm.loop !3

for.end38.1.loopexit:                             ; preds = %for.inc36.1
  %partial_sum.3.1.lcssa = phi float [ %partial_sum.3.1, %for.inc36.1 ]
  br label %for.end38.1

for.end38.1:                                      ; preds = %for.end38.1.loopexit, %for.inc53
  %partial_sum.0.lcssa.1 = phi float [ 0.000000e+00, %for.inc53 ], [ %partial_sum.3.1.lcssa, %for.end38.1.loopexit ]
  br i1 %tobool39, label %if.else.1, label %if.then40.1

if.then40.1:                                      ; preds = %for.end38.1
  %cmp41.1 = fcmp olt float %partial_sum.0.lcssa.1, 0.000000e+00
  %sub42.1 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1
  %cond.1 = select i1 %cmp41.1, float %sub42.1, float %partial_sum.0.lcssa.1
  %conv.1 = fptoui float %cond.1 to i8
  %conv43.1 = uitofp i8 %conv.1 to float
  %126 = add nsw i64 %indvars.iv.next21, %106
  %arrayidx47.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %126
  store float %conv43.1, float* %arrayidx47.1, align 4
  br label %for.inc53.1

if.else.1:                                        ; preds = %for.end38.1
  %127 = add nsw i64 %indvars.iv.next21, %105
  %arrayidx51.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %127
  store float %partial_sum.0.lcssa.1, float* %arrayidx51.1, align 4
  br label %for.inc53.1

for.inc53.1:                                      ; preds = %if.else.1, %if.then40.1
  %inc54.1 = add nsw i32 %in_j.011, 2
  %indvars.iv.next21.1 = add nsw i64 %indvars.iv20, 2
  br i1 %cmp94, label %for.end38.2, label %for.body10.2.preheader

for.body10.2.preheader:                           ; preds = %for.inc53.1
  br label %for.body10.2

for.body10.2:                                     ; preds = %for.body10.2.preheader, %for.inc36.2
  %ki.06.2 = phi i32 [ %inc37.2, %for.inc36.2 ], [ 0, %for.body10.2.preheader ]
  %partial_sum.05.2 = phi float [ %partial_sum.3.2, %for.inc36.2 ], [ 0.000000e+00, %for.body10.2.preheader ]
  %add.2 = add nsw i32 %ki.06.2, %in_i.015
  %notlhs.2 = icmp slt i32 %add.2, 0
  %notrhs.2 = icmp uge i32 %add.2, %img_height
  %.not.2 = or i1 %notrhs.2, %notlhs.2
  %brmerge.2 = or i1 %.not.2, %cmp151.not.2
  br i1 %brmerge.2, label %for.inc36.2, label %for.body16.lr.ph.2

for.body16.lr.ph.2:                               ; preds = %for.body10.2
  %mul.2 = shl i32 %add.2, 7
  %mul30.2 = mul i32 %ki.06.2, %kern_width
  br label %for.body16.2

for.body16.2:                                     ; preds = %for.inc.2, %for.body16.lr.ph.2
  %indvars.iv.2 = phi i64 [ 0, %for.body16.lr.ph.2 ], [ %indvars.iv.next.2, %for.inc.2 ]
  %partial_sum.12.2 = phi float [ %partial_sum.05.2, %for.body16.lr.ph.2 ], [ %partial_sum.2.2, %for.inc.2 ]
  %128 = trunc i64 %indvars.iv.2 to i32
  %add17.2 = add nsw i32 %128, %inc54.1
  %cmp18.2 = icmp sgt i32 %add17.2, -1
  %cmp21.2 = icmp ult i32 %add17.2, %img_width
  %129 = and i1 %cmp18.2, %cmp21.2
  br i1 %129, label %if.end26.2, label %for.inc.2

if.end26.2:                                       ; preds = %for.body16.2
  %add29.2 = add nsw i32 %add17.2, %mul.2
  %idxprom.2 = sext i32 %add29.2 to i64
  %arrayidx.2 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2
  %130 = load float, float* %arrayidx.2, align 4
  %131 = trunc i64 %indvars.iv.2 to i32
  %add31.2 = add i32 %131, %mul30.2
  %idxprom32.2 = zext i32 %add31.2 to i64
  %arrayidx33.2 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2
  %132 = load float, float* %arrayidx33.2, align 4
  %mul34.2 = fmul float %130, %132
  %add35.2 = fadd float %partial_sum.12.2, %mul34.2
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.end26.2, %for.body16.2
  %partial_sum.2.2 = phi float [ %add35.2, %if.end26.2 ], [ %partial_sum.12.2, %for.body16.2 ]
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.2, 1
  %lftr.wideiv.2 = trunc i64 %indvars.iv.next.2 to i32
  %exitcond.2 = icmp eq i32 %lftr.wideiv.2, %kern_width
  br i1 %exitcond.2, label %for.inc36.2.loopexit, label %for.body16.2, !llvm.loop !1

for.inc36.2.loopexit:                             ; preds = %for.inc.2
  %partial_sum.2.2.lcssa = phi float [ %partial_sum.2.2, %for.inc.2 ]
  br label %for.inc36.2

for.inc36.2:                                      ; preds = %for.inc36.2.loopexit, %for.body10.2
  %partial_sum.3.2 = phi float [ %partial_sum.05.2, %for.body10.2 ], [ %partial_sum.2.2.lcssa, %for.inc36.2.loopexit ]
  %inc37.2 = add nuw nsw i32 %ki.06.2, 1
  %exitcond19.2 = icmp eq i32 %inc37.2, %kern_height
  br i1 %exitcond19.2, label %for.end38.2.loopexit, label %for.body10.2, !llvm.loop !3

for.end38.2.loopexit:                             ; preds = %for.inc36.2
  %partial_sum.3.2.lcssa = phi float [ %partial_sum.3.2, %for.inc36.2 ]
  br label %for.end38.2

for.end38.2:                                      ; preds = %for.end38.2.loopexit, %for.inc53.1
  %partial_sum.0.lcssa.2 = phi float [ 0.000000e+00, %for.inc53.1 ], [ %partial_sum.3.2.lcssa, %for.end38.2.loopexit ]
  br i1 %tobool39, label %if.else.2, label %if.then40.2

if.then40.2:                                      ; preds = %for.end38.2
  %cmp41.2 = fcmp olt float %partial_sum.0.lcssa.2, 0.000000e+00
  %sub42.2 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2
  %cond.2 = select i1 %cmp41.2, float %sub42.2, float %partial_sum.0.lcssa.2
  %conv.2 = fptoui float %cond.2 to i8
  %conv43.2 = uitofp i8 %conv.2 to float
  %133 = add nsw i64 %indvars.iv.next21.1, %106
  %arrayidx47.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %133
  store float %conv43.2, float* %arrayidx47.2, align 4
  br label %for.inc53.2

if.else.2:                                        ; preds = %for.end38.2
  %134 = add nsw i64 %indvars.iv.next21.1, %105
  %arrayidx51.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %134
  store float %partial_sum.0.lcssa.2, float* %arrayidx51.2, align 4
  br label %for.inc53.2

for.inc53.2:                                      ; preds = %if.else.2, %if.then40.2
  %inc54.2 = add nsw i32 %in_j.011, 3
  %indvars.iv.next21.2 = add nsw i64 %indvars.iv20, 3
  br i1 %cmp94, label %for.end38.3, label %for.body10.3.preheader

for.body10.3.preheader:                           ; preds = %for.inc53.2
  br label %for.body10.3

for.body10.3:                                     ; preds = %for.body10.3.preheader, %for.inc36.3
  %ki.06.3 = phi i32 [ %inc37.3, %for.inc36.3 ], [ 0, %for.body10.3.preheader ]
  %partial_sum.05.3 = phi float [ %partial_sum.3.3, %for.inc36.3 ], [ 0.000000e+00, %for.body10.3.preheader ]
  %add.3 = add nsw i32 %ki.06.3, %in_i.015
  %notlhs.3 = icmp slt i32 %add.3, 0
  %notrhs.3 = icmp uge i32 %add.3, %img_height
  %.not.3 = or i1 %notrhs.3, %notlhs.3
  %brmerge.3 = or i1 %.not.3, %cmp151.not.3
  br i1 %brmerge.3, label %for.inc36.3, label %for.body16.lr.ph.3

for.body16.lr.ph.3:                               ; preds = %for.body10.3
  %mul.3 = shl i32 %add.3, 7
  %mul30.3 = mul i32 %ki.06.3, %kern_width
  br label %for.body16.3

for.body16.3:                                     ; preds = %for.inc.3, %for.body16.lr.ph.3
  %indvars.iv.3 = phi i64 [ 0, %for.body16.lr.ph.3 ], [ %indvars.iv.next.3, %for.inc.3 ]
  %partial_sum.12.3 = phi float [ %partial_sum.05.3, %for.body16.lr.ph.3 ], [ %partial_sum.2.3, %for.inc.3 ]
  %135 = trunc i64 %indvars.iv.3 to i32
  %add17.3 = add nsw i32 %135, %inc54.2
  %cmp18.3 = icmp sgt i32 %add17.3, -1
  %cmp21.3 = icmp ult i32 %add17.3, %img_width
  %136 = and i1 %cmp18.3, %cmp21.3
  br i1 %136, label %if.end26.3, label %for.inc.3

if.end26.3:                                       ; preds = %for.body16.3
  %add29.3 = add nsw i32 %add17.3, %mul.3
  %idxprom.3 = sext i32 %add29.3 to i64
  %arrayidx.3 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3
  %137 = load float, float* %arrayidx.3, align 4
  %138 = trunc i64 %indvars.iv.3 to i32
  %add31.3 = add i32 %138, %mul30.3
  %idxprom32.3 = zext i32 %add31.3 to i64
  %arrayidx33.3 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3
  %139 = load float, float* %arrayidx33.3, align 4
  %mul34.3 = fmul float %137, %139
  %add35.3 = fadd float %partial_sum.12.3, %mul34.3
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.end26.3, %for.body16.3
  %partial_sum.2.3 = phi float [ %add35.3, %if.end26.3 ], [ %partial_sum.12.3, %for.body16.3 ]
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.3, 1
  %lftr.wideiv.3 = trunc i64 %indvars.iv.next.3 to i32
  %exitcond.3 = icmp eq i32 %lftr.wideiv.3, %kern_width
  br i1 %exitcond.3, label %for.inc36.3.loopexit, label %for.body16.3, !llvm.loop !1

for.inc36.3.loopexit:                             ; preds = %for.inc.3
  %partial_sum.2.3.lcssa = phi float [ %partial_sum.2.3, %for.inc.3 ]
  br label %for.inc36.3

for.inc36.3:                                      ; preds = %for.inc36.3.loopexit, %for.body10.3
  %partial_sum.3.3 = phi float [ %partial_sum.05.3, %for.body10.3 ], [ %partial_sum.2.3.lcssa, %for.inc36.3.loopexit ]
  %inc37.3 = add nuw nsw i32 %ki.06.3, 1
  %exitcond19.3 = icmp eq i32 %inc37.3, %kern_height
  br i1 %exitcond19.3, label %for.end38.3.loopexit, label %for.body10.3, !llvm.loop !3

for.end38.3.loopexit:                             ; preds = %for.inc36.3
  %partial_sum.3.3.lcssa = phi float [ %partial_sum.3.3, %for.inc36.3 ]
  br label %for.end38.3

for.end38.3:                                      ; preds = %for.end38.3.loopexit, %for.inc53.2
  %partial_sum.0.lcssa.3 = phi float [ 0.000000e+00, %for.inc53.2 ], [ %partial_sum.3.3.lcssa, %for.end38.3.loopexit ]
  br i1 %tobool39, label %if.else.3, label %if.then40.3

if.then40.3:                                      ; preds = %for.end38.3
  %cmp41.3 = fcmp olt float %partial_sum.0.lcssa.3, 0.000000e+00
  %sub42.3 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3
  %cond.3 = select i1 %cmp41.3, float %sub42.3, float %partial_sum.0.lcssa.3
  %conv.3 = fptoui float %cond.3 to i8
  %conv43.3 = uitofp i8 %conv.3 to float
  %140 = add nsw i64 %indvars.iv.next21.2, %106
  %arrayidx47.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %140
  store float %conv43.3, float* %arrayidx47.3, align 4
  br label %for.inc53.3

if.else.3:                                        ; preds = %for.end38.3
  %141 = add nsw i64 %indvars.iv.next21.2, %105
  %arrayidx51.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %141
  store float %partial_sum.0.lcssa.3, float* %arrayidx51.3, align 4
  br label %for.inc53.3

for.inc53.3:                                      ; preds = %if.else.3, %if.then40.3
  %inc54.3 = add nsw i32 %in_j.011, 4
  %indvars.iv.next21.3 = add nsw i64 %indvars.iv20, 4
  br i1 %cmp94, label %for.end38.4, label %for.body10.4.preheader

for.body10.4.preheader:                           ; preds = %for.inc53.3
  br label %for.body10.4

for.body10.4:                                     ; preds = %for.body10.4.preheader, %for.inc36.4
  %ki.06.4 = phi i32 [ %inc37.4, %for.inc36.4 ], [ 0, %for.body10.4.preheader ]
  %partial_sum.05.4 = phi float [ %partial_sum.3.4, %for.inc36.4 ], [ 0.000000e+00, %for.body10.4.preheader ]
  %add.4 = add nsw i32 %ki.06.4, %in_i.015
  %notlhs.4 = icmp slt i32 %add.4, 0
  %notrhs.4 = icmp uge i32 %add.4, %img_height
  %.not.4 = or i1 %notrhs.4, %notlhs.4
  %brmerge.4 = or i1 %.not.4, %cmp151.not.4
  br i1 %brmerge.4, label %for.inc36.4, label %for.body16.lr.ph.4

for.body16.lr.ph.4:                               ; preds = %for.body10.4
  %mul.4 = shl i32 %add.4, 7
  %mul30.4 = mul i32 %ki.06.4, %kern_width
  br label %for.body16.4

for.body16.4:                                     ; preds = %for.inc.4, %for.body16.lr.ph.4
  %indvars.iv.4 = phi i64 [ 0, %for.body16.lr.ph.4 ], [ %indvars.iv.next.4, %for.inc.4 ]
  %partial_sum.12.4 = phi float [ %partial_sum.05.4, %for.body16.lr.ph.4 ], [ %partial_sum.2.4, %for.inc.4 ]
  %142 = trunc i64 %indvars.iv.4 to i32
  %add17.4 = add nsw i32 %142, %inc54.3
  %cmp18.4 = icmp sgt i32 %add17.4, -1
  %cmp21.4 = icmp ult i32 %add17.4, %img_width
  %143 = and i1 %cmp18.4, %cmp21.4
  br i1 %143, label %if.end26.4, label %for.inc.4

if.end26.4:                                       ; preds = %for.body16.4
  %add29.4 = add nsw i32 %add17.4, %mul.4
  %idxprom.4 = sext i32 %add29.4 to i64
  %arrayidx.4 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4
  %144 = load float, float* %arrayidx.4, align 4
  %145 = trunc i64 %indvars.iv.4 to i32
  %add31.4 = add i32 %145, %mul30.4
  %idxprom32.4 = zext i32 %add31.4 to i64
  %arrayidx33.4 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4
  %146 = load float, float* %arrayidx33.4, align 4
  %mul34.4 = fmul float %144, %146
  %add35.4 = fadd float %partial_sum.12.4, %mul34.4
  br label %for.inc.4

for.inc.4:                                        ; preds = %if.end26.4, %for.body16.4
  %partial_sum.2.4 = phi float [ %add35.4, %if.end26.4 ], [ %partial_sum.12.4, %for.body16.4 ]
  %indvars.iv.next.4 = add nuw nsw i64 %indvars.iv.4, 1
  %lftr.wideiv.4 = trunc i64 %indvars.iv.next.4 to i32
  %exitcond.4 = icmp eq i32 %lftr.wideiv.4, %kern_width
  br i1 %exitcond.4, label %for.inc36.4.loopexit, label %for.body16.4, !llvm.loop !1

for.inc36.4.loopexit:                             ; preds = %for.inc.4
  %partial_sum.2.4.lcssa = phi float [ %partial_sum.2.4, %for.inc.4 ]
  br label %for.inc36.4

for.inc36.4:                                      ; preds = %for.inc36.4.loopexit, %for.body10.4
  %partial_sum.3.4 = phi float [ %partial_sum.05.4, %for.body10.4 ], [ %partial_sum.2.4.lcssa, %for.inc36.4.loopexit ]
  %inc37.4 = add nuw nsw i32 %ki.06.4, 1
  %exitcond19.4 = icmp eq i32 %inc37.4, %kern_height
  br i1 %exitcond19.4, label %for.end38.4.loopexit, label %for.body10.4, !llvm.loop !3

for.end38.4.loopexit:                             ; preds = %for.inc36.4
  %partial_sum.3.4.lcssa = phi float [ %partial_sum.3.4, %for.inc36.4 ]
  br label %for.end38.4

for.end38.4:                                      ; preds = %for.end38.4.loopexit, %for.inc53.3
  %partial_sum.0.lcssa.4 = phi float [ 0.000000e+00, %for.inc53.3 ], [ %partial_sum.3.4.lcssa, %for.end38.4.loopexit ]
  br i1 %tobool39, label %if.else.4, label %if.then40.4

if.then40.4:                                      ; preds = %for.end38.4
  %cmp41.4 = fcmp olt float %partial_sum.0.lcssa.4, 0.000000e+00
  %sub42.4 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4
  %cond.4 = select i1 %cmp41.4, float %sub42.4, float %partial_sum.0.lcssa.4
  %conv.4 = fptoui float %cond.4 to i8
  %conv43.4 = uitofp i8 %conv.4 to float
  %147 = add nsw i64 %indvars.iv.next21.3, %106
  %arrayidx47.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %147
  store float %conv43.4, float* %arrayidx47.4, align 4
  br label %for.inc53.4

if.else.4:                                        ; preds = %for.end38.4
  %148 = add nsw i64 %indvars.iv.next21.3, %105
  %arrayidx51.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %148
  store float %partial_sum.0.lcssa.4, float* %arrayidx51.4, align 4
  br label %for.inc53.4

for.inc53.4:                                      ; preds = %if.else.4, %if.then40.4
  %inc54.4 = add nsw i32 %in_j.011, 5
  %indvars.iv.next21.4 = add nsw i64 %indvars.iv20, 5
  br i1 %cmp94, label %for.end38.5, label %for.body10.5.preheader

for.body10.5.preheader:                           ; preds = %for.inc53.4
  br label %for.body10.5

for.body10.5:                                     ; preds = %for.body10.5.preheader, %for.inc36.5
  %ki.06.5 = phi i32 [ %inc37.5, %for.inc36.5 ], [ 0, %for.body10.5.preheader ]
  %partial_sum.05.5 = phi float [ %partial_sum.3.5, %for.inc36.5 ], [ 0.000000e+00, %for.body10.5.preheader ]
  %add.5 = add nsw i32 %ki.06.5, %in_i.015
  %notlhs.5 = icmp slt i32 %add.5, 0
  %notrhs.5 = icmp uge i32 %add.5, %img_height
  %.not.5 = or i1 %notrhs.5, %notlhs.5
  %brmerge.5 = or i1 %.not.5, %cmp151.not.5
  br i1 %brmerge.5, label %for.inc36.5, label %for.body16.lr.ph.5

for.body16.lr.ph.5:                               ; preds = %for.body10.5
  %mul.5 = shl i32 %add.5, 7
  %mul30.5 = mul i32 %ki.06.5, %kern_width
  br label %for.body16.5

for.body16.5:                                     ; preds = %for.inc.5, %for.body16.lr.ph.5
  %indvars.iv.5 = phi i64 [ 0, %for.body16.lr.ph.5 ], [ %indvars.iv.next.5, %for.inc.5 ]
  %partial_sum.12.5 = phi float [ %partial_sum.05.5, %for.body16.lr.ph.5 ], [ %partial_sum.2.5, %for.inc.5 ]
  %149 = trunc i64 %indvars.iv.5 to i32
  %add17.5 = add nsw i32 %149, %inc54.4
  %cmp18.5 = icmp sgt i32 %add17.5, -1
  %cmp21.5 = icmp ult i32 %add17.5, %img_width
  %150 = and i1 %cmp18.5, %cmp21.5
  br i1 %150, label %if.end26.5, label %for.inc.5

if.end26.5:                                       ; preds = %for.body16.5
  %add29.5 = add nsw i32 %add17.5, %mul.5
  %idxprom.5 = sext i32 %add29.5 to i64
  %arrayidx.5 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5
  %151 = load float, float* %arrayidx.5, align 4
  %152 = trunc i64 %indvars.iv.5 to i32
  %add31.5 = add i32 %152, %mul30.5
  %idxprom32.5 = zext i32 %add31.5 to i64
  %arrayidx33.5 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5
  %153 = load float, float* %arrayidx33.5, align 4
  %mul34.5 = fmul float %151, %153
  %add35.5 = fadd float %partial_sum.12.5, %mul34.5
  br label %for.inc.5

for.inc.5:                                        ; preds = %if.end26.5, %for.body16.5
  %partial_sum.2.5 = phi float [ %add35.5, %if.end26.5 ], [ %partial_sum.12.5, %for.body16.5 ]
  %indvars.iv.next.5 = add nuw nsw i64 %indvars.iv.5, 1
  %lftr.wideiv.5 = trunc i64 %indvars.iv.next.5 to i32
  %exitcond.5 = icmp eq i32 %lftr.wideiv.5, %kern_width
  br i1 %exitcond.5, label %for.inc36.5.loopexit, label %for.body16.5, !llvm.loop !1

for.inc36.5.loopexit:                             ; preds = %for.inc.5
  %partial_sum.2.5.lcssa = phi float [ %partial_sum.2.5, %for.inc.5 ]
  br label %for.inc36.5

for.inc36.5:                                      ; preds = %for.inc36.5.loopexit, %for.body10.5
  %partial_sum.3.5 = phi float [ %partial_sum.05.5, %for.body10.5 ], [ %partial_sum.2.5.lcssa, %for.inc36.5.loopexit ]
  %inc37.5 = add nuw nsw i32 %ki.06.5, 1
  %exitcond19.5 = icmp eq i32 %inc37.5, %kern_height
  br i1 %exitcond19.5, label %for.end38.5.loopexit, label %for.body10.5, !llvm.loop !3

for.end38.5.loopexit:                             ; preds = %for.inc36.5
  %partial_sum.3.5.lcssa = phi float [ %partial_sum.3.5, %for.inc36.5 ]
  br label %for.end38.5

for.end38.5:                                      ; preds = %for.end38.5.loopexit, %for.inc53.4
  %partial_sum.0.lcssa.5 = phi float [ 0.000000e+00, %for.inc53.4 ], [ %partial_sum.3.5.lcssa, %for.end38.5.loopexit ]
  br i1 %tobool39, label %if.else.5, label %if.then40.5

if.then40.5:                                      ; preds = %for.end38.5
  %cmp41.5 = fcmp olt float %partial_sum.0.lcssa.5, 0.000000e+00
  %sub42.5 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5
  %cond.5 = select i1 %cmp41.5, float %sub42.5, float %partial_sum.0.lcssa.5
  %conv.5 = fptoui float %cond.5 to i8
  %conv43.5 = uitofp i8 %conv.5 to float
  %154 = add nsw i64 %indvars.iv.next21.4, %106
  %arrayidx47.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %154
  store float %conv43.5, float* %arrayidx47.5, align 4
  br label %for.inc53.5

if.else.5:                                        ; preds = %for.end38.5
  %155 = add nsw i64 %indvars.iv.next21.4, %105
  %arrayidx51.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %155
  store float %partial_sum.0.lcssa.5, float* %arrayidx51.5, align 4
  br label %for.inc53.5

for.inc53.5:                                      ; preds = %if.else.5, %if.then40.5
  %inc54.5 = add nsw i32 %in_j.011, 6
  %indvars.iv.next21.5 = add nsw i64 %indvars.iv20, 6
  br i1 %cmp94, label %for.end38.6, label %for.body10.6.preheader

for.body10.6.preheader:                           ; preds = %for.inc53.5
  br label %for.body10.6

for.body10.6:                                     ; preds = %for.body10.6.preheader, %for.inc36.6
  %ki.06.6 = phi i32 [ %inc37.6, %for.inc36.6 ], [ 0, %for.body10.6.preheader ]
  %partial_sum.05.6 = phi float [ %partial_sum.3.6, %for.inc36.6 ], [ 0.000000e+00, %for.body10.6.preheader ]
  %add.6 = add nsw i32 %ki.06.6, %in_i.015
  %notlhs.6 = icmp slt i32 %add.6, 0
  %notrhs.6 = icmp uge i32 %add.6, %img_height
  %.not.6 = or i1 %notrhs.6, %notlhs.6
  %brmerge.6 = or i1 %.not.6, %cmp151.not.6
  br i1 %brmerge.6, label %for.inc36.6, label %for.body16.lr.ph.6

for.body16.lr.ph.6:                               ; preds = %for.body10.6
  %mul.6 = shl i32 %add.6, 7
  %mul30.6 = mul i32 %ki.06.6, %kern_width
  br label %for.body16.6

for.body16.6:                                     ; preds = %for.inc.6, %for.body16.lr.ph.6
  %indvars.iv.6 = phi i64 [ 0, %for.body16.lr.ph.6 ], [ %indvars.iv.next.6, %for.inc.6 ]
  %partial_sum.12.6 = phi float [ %partial_sum.05.6, %for.body16.lr.ph.6 ], [ %partial_sum.2.6, %for.inc.6 ]
  %156 = trunc i64 %indvars.iv.6 to i32
  %add17.6 = add nsw i32 %156, %inc54.5
  %cmp18.6 = icmp sgt i32 %add17.6, -1
  %cmp21.6 = icmp ult i32 %add17.6, %img_width
  %157 = and i1 %cmp18.6, %cmp21.6
  br i1 %157, label %if.end26.6, label %for.inc.6

if.end26.6:                                       ; preds = %for.body16.6
  %add29.6 = add nsw i32 %add17.6, %mul.6
  %idxprom.6 = sext i32 %add29.6 to i64
  %arrayidx.6 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6
  %158 = load float, float* %arrayidx.6, align 4
  %159 = trunc i64 %indvars.iv.6 to i32
  %add31.6 = add i32 %159, %mul30.6
  %idxprom32.6 = zext i32 %add31.6 to i64
  %arrayidx33.6 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6
  %160 = load float, float* %arrayidx33.6, align 4
  %mul34.6 = fmul float %158, %160
  %add35.6 = fadd float %partial_sum.12.6, %mul34.6
  br label %for.inc.6

for.inc.6:                                        ; preds = %if.end26.6, %for.body16.6
  %partial_sum.2.6 = phi float [ %add35.6, %if.end26.6 ], [ %partial_sum.12.6, %for.body16.6 ]
  %indvars.iv.next.6 = add nuw nsw i64 %indvars.iv.6, 1
  %lftr.wideiv.6 = trunc i64 %indvars.iv.next.6 to i32
  %exitcond.6 = icmp eq i32 %lftr.wideiv.6, %kern_width
  br i1 %exitcond.6, label %for.inc36.6.loopexit, label %for.body16.6, !llvm.loop !1

for.inc36.6.loopexit:                             ; preds = %for.inc.6
  %partial_sum.2.6.lcssa = phi float [ %partial_sum.2.6, %for.inc.6 ]
  br label %for.inc36.6

for.inc36.6:                                      ; preds = %for.inc36.6.loopexit, %for.body10.6
  %partial_sum.3.6 = phi float [ %partial_sum.05.6, %for.body10.6 ], [ %partial_sum.2.6.lcssa, %for.inc36.6.loopexit ]
  %inc37.6 = add nuw nsw i32 %ki.06.6, 1
  %exitcond19.6 = icmp eq i32 %inc37.6, %kern_height
  br i1 %exitcond19.6, label %for.end38.6.loopexit, label %for.body10.6, !llvm.loop !3

for.end38.6.loopexit:                             ; preds = %for.inc36.6
  %partial_sum.3.6.lcssa = phi float [ %partial_sum.3.6, %for.inc36.6 ]
  br label %for.end38.6

for.end38.6:                                      ; preds = %for.end38.6.loopexit, %for.inc53.5
  %partial_sum.0.lcssa.6 = phi float [ 0.000000e+00, %for.inc53.5 ], [ %partial_sum.3.6.lcssa, %for.end38.6.loopexit ]
  br i1 %tobool39, label %if.else.6, label %if.then40.6

if.then40.6:                                      ; preds = %for.end38.6
  %cmp41.6 = fcmp olt float %partial_sum.0.lcssa.6, 0.000000e+00
  %sub42.6 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6
  %cond.6 = select i1 %cmp41.6, float %sub42.6, float %partial_sum.0.lcssa.6
  %conv.6 = fptoui float %cond.6 to i8
  %conv43.6 = uitofp i8 %conv.6 to float
  %161 = add nsw i64 %indvars.iv.next21.5, %106
  %arrayidx47.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %161
  store float %conv43.6, float* %arrayidx47.6, align 4
  br label %for.inc53.6

if.else.6:                                        ; preds = %for.end38.6
  %162 = add nsw i64 %indvars.iv.next21.5, %105
  %arrayidx51.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %162
  store float %partial_sum.0.lcssa.6, float* %arrayidx51.6, align 4
  br label %for.inc53.6

for.inc53.6:                                      ; preds = %if.else.6, %if.then40.6
  %inc54.6 = add nsw i32 %in_j.011, 7
  %indvars.iv.next21.6 = add nsw i64 %indvars.iv20, 7
  br i1 %cmp94, label %for.end38.7, label %for.body10.7.preheader

for.body10.7.preheader:                           ; preds = %for.inc53.6
  br label %for.body10.7

for.body10.7:                                     ; preds = %for.body10.7.preheader, %for.inc36.7
  %ki.06.7 = phi i32 [ %inc37.7, %for.inc36.7 ], [ 0, %for.body10.7.preheader ]
  %partial_sum.05.7 = phi float [ %partial_sum.3.7, %for.inc36.7 ], [ 0.000000e+00, %for.body10.7.preheader ]
  %add.7 = add nsw i32 %ki.06.7, %in_i.015
  %notlhs.7 = icmp slt i32 %add.7, 0
  %notrhs.7 = icmp uge i32 %add.7, %img_height
  %.not.7 = or i1 %notrhs.7, %notlhs.7
  %brmerge.7 = or i1 %.not.7, %cmp151.not.7
  br i1 %brmerge.7, label %for.inc36.7, label %for.body16.lr.ph.7

for.body16.lr.ph.7:                               ; preds = %for.body10.7
  %mul.7 = shl i32 %add.7, 7
  %mul30.7 = mul i32 %ki.06.7, %kern_width
  br label %for.body16.7

for.body16.7:                                     ; preds = %for.inc.7, %for.body16.lr.ph.7
  %indvars.iv.7 = phi i64 [ 0, %for.body16.lr.ph.7 ], [ %indvars.iv.next.7, %for.inc.7 ]
  %partial_sum.12.7 = phi float [ %partial_sum.05.7, %for.body16.lr.ph.7 ], [ %partial_sum.2.7, %for.inc.7 ]
  %163 = trunc i64 %indvars.iv.7 to i32
  %add17.7 = add nsw i32 %163, %inc54.6
  %cmp18.7 = icmp sgt i32 %add17.7, -1
  %cmp21.7 = icmp ult i32 %add17.7, %img_width
  %164 = and i1 %cmp18.7, %cmp21.7
  br i1 %164, label %if.end26.7, label %for.inc.7

if.end26.7:                                       ; preds = %for.body16.7
  %add29.7 = add nsw i32 %add17.7, %mul.7
  %idxprom.7 = sext i32 %add29.7 to i64
  %arrayidx.7 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7
  %165 = load float, float* %arrayidx.7, align 4
  %166 = trunc i64 %indvars.iv.7 to i32
  %add31.7 = add i32 %166, %mul30.7
  %idxprom32.7 = zext i32 %add31.7 to i64
  %arrayidx33.7 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7
  %167 = load float, float* %arrayidx33.7, align 4
  %mul34.7 = fmul float %165, %167
  %add35.7 = fadd float %partial_sum.12.7, %mul34.7
  br label %for.inc.7

for.inc.7:                                        ; preds = %if.end26.7, %for.body16.7
  %partial_sum.2.7 = phi float [ %add35.7, %if.end26.7 ], [ %partial_sum.12.7, %for.body16.7 ]
  %indvars.iv.next.7 = add nuw nsw i64 %indvars.iv.7, 1
  %lftr.wideiv.7 = trunc i64 %indvars.iv.next.7 to i32
  %exitcond.7 = icmp eq i32 %lftr.wideiv.7, %kern_width
  br i1 %exitcond.7, label %for.inc36.7.loopexit, label %for.body16.7, !llvm.loop !1

for.inc36.7.loopexit:                             ; preds = %for.inc.7
  %partial_sum.2.7.lcssa = phi float [ %partial_sum.2.7, %for.inc.7 ]
  br label %for.inc36.7

for.inc36.7:                                      ; preds = %for.inc36.7.loopexit, %for.body10.7
  %partial_sum.3.7 = phi float [ %partial_sum.05.7, %for.body10.7 ], [ %partial_sum.2.7.lcssa, %for.inc36.7.loopexit ]
  %inc37.7 = add nuw nsw i32 %ki.06.7, 1
  %exitcond19.7 = icmp eq i32 %inc37.7, %kern_height
  br i1 %exitcond19.7, label %for.end38.7.loopexit, label %for.body10.7, !llvm.loop !3

for.end38.7.loopexit:                             ; preds = %for.inc36.7
  %partial_sum.3.7.lcssa = phi float [ %partial_sum.3.7, %for.inc36.7 ]
  br label %for.end38.7

for.end38.7:                                      ; preds = %for.end38.7.loopexit, %for.inc53.6
  %partial_sum.0.lcssa.7 = phi float [ 0.000000e+00, %for.inc53.6 ], [ %partial_sum.3.7.lcssa, %for.end38.7.loopexit ]
  br i1 %tobool39, label %if.else.7, label %if.then40.7

if.then40.7:                                      ; preds = %for.end38.7
  %cmp41.7 = fcmp olt float %partial_sum.0.lcssa.7, 0.000000e+00
  %sub42.7 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7
  %cond.7 = select i1 %cmp41.7, float %sub42.7, float %partial_sum.0.lcssa.7
  %conv.7 = fptoui float %cond.7 to i8
  %conv43.7 = uitofp i8 %conv.7 to float
  %168 = add nsw i64 %indvars.iv.next21.6, %106
  %arrayidx47.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %168
  store float %conv43.7, float* %arrayidx47.7, align 4
  br label %for.inc53.7

if.else.7:                                        ; preds = %for.end38.7
  %169 = add nsw i64 %indvars.iv.next21.6, %105
  %arrayidx51.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %169
  store float %partial_sum.0.lcssa.7, float* %arrayidx51.7, align 4
  br label %for.inc53.7

for.inc53.7:                                      ; preds = %if.else.7, %if.then40.7
  %inc54.7 = add nsw i32 %in_j.011, 8
  %indvars.iv.next21.7 = add nsw i64 %indvars.iv20, 8
  %lftr.wideiv24.7 = trunc i64 %indvars.iv.next21.7 to i32
  %exitcond25.7 = icmp eq i32 %lftr.wideiv24.7, %img_width
  br i1 %exitcond25.7, label %for.inc57.loopexit, label %for.cond8.preheader, !llvm.loop !5

for.cond8.preheader.lr.ph.1:                      ; preds = %for.inc57
  %170 = trunc i64 %indvars.iv.next27 to i32
  %mul48.1 = shl i32 %170, 7
  %171 = trunc i64 %indvars.iv.next27 to i32
  %mul44.1 = shl i32 %171, 7
  %172 = sext i32 %mul48.1 to i64
  %173 = sext i32 %mul44.1 to i64
  br i1 %lcmp.mod.1, label %for.cond8.preheader.lr.ph.split.1, label %for.cond8.preheader.prol.1.preheader

for.cond8.preheader.prol.1.preheader:             ; preds = %for.cond8.preheader.lr.ph.1
  br label %for.cond8.preheader.prol.1

for.cond8.preheader.prol.1:                       ; preds = %for.cond8.preheader.prol.1.preheader, %for.inc53.prol.1
  %indvars.iv20.prol.1 = phi i64 [ %indvars.iv.next21.prol.1, %for.inc53.prol.1 ], [ 0, %for.cond8.preheader.prol.1.preheader ]
  %in_j.011.prol.1 = phi i32 [ %inc54.prol.1, %for.inc53.prol.1 ], [ %sub4, %for.cond8.preheader.prol.1.preheader ]
  %prol.iter.1 = phi i32 [ %prol.iter.sub.1, %for.inc53.prol.1 ], [ %xtraiter.1, %for.cond8.preheader.prol.1.preheader ]
  br i1 %cmp94, label %for.end38.prol.1, label %for.body10.prol.1.preheader

for.body10.prol.1.preheader:                      ; preds = %for.cond8.preheader.prol.1
  br label %for.body10.prol.1

for.body10.prol.1:                                ; preds = %for.body10.prol.1.preheader, %for.inc36.prol.1
  %ki.06.prol.1 = phi i32 [ %inc37.prol.1, %for.inc36.prol.1 ], [ 0, %for.body10.prol.1.preheader ]
  %partial_sum.05.prol.1 = phi float [ %partial_sum.3.prol.1, %for.inc36.prol.1 ], [ 0.000000e+00, %for.body10.prol.1.preheader ]
  %add.prol.1 = add nsw i32 %ki.06.prol.1, %inc58
  %notlhs.prol.1 = icmp slt i32 %add.prol.1, 0
  %notrhs.prol.1 = icmp uge i32 %add.prol.1, %img_height
  %.not.prol.1 = or i1 %notrhs.prol.1, %notlhs.prol.1
  %brmerge.prol.1 = or i1 %.not.prol.1, %cmp151.not.prol.1
  br i1 %brmerge.prol.1, label %for.inc36.prol.1, label %for.body16.lr.ph.prol.1

for.body16.lr.ph.prol.1:                          ; preds = %for.body10.prol.1
  %mul.prol.1 = shl i32 %add.prol.1, 7
  %mul30.prol.1 = mul i32 %ki.06.prol.1, %kern_width
  br label %for.body16.prol.1

for.body16.prol.1:                                ; preds = %for.inc.prol.1, %for.body16.lr.ph.prol.1
  %indvars.iv.prol.1 = phi i64 [ 0, %for.body16.lr.ph.prol.1 ], [ %indvars.iv.next.prol.1, %for.inc.prol.1 ]
  %partial_sum.12.prol.1 = phi float [ %partial_sum.05.prol.1, %for.body16.lr.ph.prol.1 ], [ %partial_sum.2.prol.1, %for.inc.prol.1 ]
  %174 = trunc i64 %indvars.iv.prol.1 to i32
  %add17.prol.1 = add nsw i32 %174, %in_j.011.prol.1
  %cmp18.prol.1 = icmp sgt i32 %add17.prol.1, -1
  %cmp21.prol.1 = icmp ult i32 %add17.prol.1, %img_width
  %175 = and i1 %cmp18.prol.1, %cmp21.prol.1
  br i1 %175, label %if.end26.prol.1, label %for.inc.prol.1

if.end26.prol.1:                                  ; preds = %for.body16.prol.1
  %add29.prol.1 = add nsw i32 %add17.prol.1, %mul.prol.1
  %idxprom.prol.1 = sext i32 %add29.prol.1 to i64
  %arrayidx.prol.1 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.1
  %176 = load float, float* %arrayidx.prol.1, align 4
  %177 = trunc i64 %indvars.iv.prol.1 to i32
  %add31.prol.1 = add i32 %177, %mul30.prol.1
  %idxprom32.prol.1 = zext i32 %add31.prol.1 to i64
  %arrayidx33.prol.1 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.1
  %178 = load float, float* %arrayidx33.prol.1, align 4
  %mul34.prol.1 = fmul float %176, %178
  %add35.prol.1 = fadd float %partial_sum.12.prol.1, %mul34.prol.1
  br label %for.inc.prol.1

for.inc.prol.1:                                   ; preds = %if.end26.prol.1, %for.body16.prol.1
  %partial_sum.2.prol.1 = phi float [ %add35.prol.1, %if.end26.prol.1 ], [ %partial_sum.12.prol.1, %for.body16.prol.1 ]
  %indvars.iv.next.prol.1 = add nuw nsw i64 %indvars.iv.prol.1, 1
  %lftr.wideiv.prol.1 = trunc i64 %indvars.iv.next.prol.1 to i32
  %exitcond.prol.1 = icmp eq i32 %lftr.wideiv.prol.1, %kern_width
  br i1 %exitcond.prol.1, label %for.inc36.prol.1.loopexit, label %for.body16.prol.1, !llvm.loop !1

for.inc36.prol.1.loopexit:                        ; preds = %for.inc.prol.1
  %partial_sum.2.prol.1.lcssa = phi float [ %partial_sum.2.prol.1, %for.inc.prol.1 ]
  br label %for.inc36.prol.1

for.inc36.prol.1:                                 ; preds = %for.inc36.prol.1.loopexit, %for.body10.prol.1
  %partial_sum.3.prol.1 = phi float [ %partial_sum.05.prol.1, %for.body10.prol.1 ], [ %partial_sum.2.prol.1.lcssa, %for.inc36.prol.1.loopexit ]
  %inc37.prol.1 = add nuw nsw i32 %ki.06.prol.1, 1
  %exitcond19.prol.1 = icmp eq i32 %inc37.prol.1, %kern_height
  br i1 %exitcond19.prol.1, label %for.end38.prol.1.loopexit, label %for.body10.prol.1, !llvm.loop !3

for.end38.prol.1.loopexit:                        ; preds = %for.inc36.prol.1
  %partial_sum.3.prol.1.lcssa = phi float [ %partial_sum.3.prol.1, %for.inc36.prol.1 ]
  br label %for.end38.prol.1

for.end38.prol.1:                                 ; preds = %for.end38.prol.1.loopexit, %for.cond8.preheader.prol.1
  %partial_sum.0.lcssa.prol.1 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.1 ], [ %partial_sum.3.prol.1.lcssa, %for.end38.prol.1.loopexit ]
  br i1 %tobool39, label %if.else.prol.1, label %if.then40.prol.1

if.then40.prol.1:                                 ; preds = %for.end38.prol.1
  %cmp41.prol.1 = fcmp olt float %partial_sum.0.lcssa.prol.1, 0.000000e+00
  %sub42.prol.1 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.1
  %cond.prol.1 = select i1 %cmp41.prol.1, float %sub42.prol.1, float %partial_sum.0.lcssa.prol.1
  %conv.prol.1 = fptoui float %cond.prol.1 to i8
  %conv43.prol.1 = uitofp i8 %conv.prol.1 to float
  %179 = add nsw i64 %indvars.iv20.prol.1, %173
  %arrayidx47.prol.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %179
  store float %conv43.prol.1, float* %arrayidx47.prol.1, align 4
  br label %for.inc53.prol.1

if.else.prol.1:                                   ; preds = %for.end38.prol.1
  %180 = add nsw i64 %indvars.iv20.prol.1, %172
  %arrayidx51.prol.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %180
  store float %partial_sum.0.lcssa.prol.1, float* %arrayidx51.prol.1, align 4
  br label %for.inc53.prol.1

for.inc53.prol.1:                                 ; preds = %if.else.prol.1, %if.then40.prol.1
  %inc54.prol.1 = add nsw i32 %in_j.011.prol.1, 1
  %indvars.iv.next21.prol.1 = add nuw nsw i64 %indvars.iv20.prol.1, 1
  %prol.iter.sub.1 = add i32 %prol.iter.1, -1
  %prol.iter.cmp.1 = icmp eq i32 %prol.iter.sub.1, 0
  br i1 %prol.iter.cmp.1, label %for.cond8.preheader.lr.ph.split.1.loopexit, label %for.cond8.preheader.prol.1, !llvm.loop !4

for.cond8.preheader.lr.ph.split.1.loopexit:       ; preds = %for.inc53.prol.1
  %indvars.iv.next21.prol.1.lcssa = phi i64 [ %indvars.iv.next21.prol.1, %for.inc53.prol.1 ]
  %inc54.prol.1.lcssa = phi i32 [ %inc54.prol.1, %for.inc53.prol.1 ]
  br label %for.cond8.preheader.lr.ph.split.1

for.cond8.preheader.lr.ph.split.1:                ; preds = %for.cond8.preheader.lr.ph.split.1.loopexit, %for.cond8.preheader.lr.ph.1
  %indvars.iv20.unr.1 = phi i64 [ 0, %for.cond8.preheader.lr.ph.1 ], [ %indvars.iv.next21.prol.1.lcssa, %for.cond8.preheader.lr.ph.split.1.loopexit ]
  %in_j.011.unr.1 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.1 ], [ %inc54.prol.1.lcssa, %for.cond8.preheader.lr.ph.split.1.loopexit ]
  br i1 %72, label %for.inc57.1, label %for.cond8.preheader.1.preheader

for.cond8.preheader.1.preheader:                  ; preds = %for.cond8.preheader.lr.ph.split.1
  br label %for.cond8.preheader.1

for.cond8.preheader.1:                            ; preds = %for.cond8.preheader.1.preheader, %for.inc53.7.1
  %indvars.iv20.1 = phi i64 [ %indvars.iv.next21.7.1, %for.inc53.7.1 ], [ %indvars.iv20.unr.1, %for.cond8.preheader.1.preheader ]
  %in_j.011.1 = phi i32 [ %inc54.7.1, %for.inc53.7.1 ], [ %in_j.011.unr.1, %for.cond8.preheader.1.preheader ]
  br i1 %cmp94, label %for.end38.1134, label %for.body10.1101.preheader

for.body10.1101.preheader:                        ; preds = %for.cond8.preheader.1
  br label %for.body10.1101

for.body10.1101:                                  ; preds = %for.body10.1101.preheader, %for.inc36.1130
  %ki.06.193 = phi i32 [ %inc37.1128, %for.inc36.1130 ], [ 0, %for.body10.1101.preheader ]
  %partial_sum.05.194 = phi float [ %partial_sum.3.1127, %for.inc36.1130 ], [ 0.000000e+00, %for.body10.1101.preheader ]
  %add.195 = add nsw i32 %ki.06.193, %inc58
  %notlhs.196 = icmp slt i32 %add.195, 0
  %notrhs.197 = icmp uge i32 %add.195, %img_height
  %.not.198 = or i1 %notrhs.197, %notlhs.196
  %brmerge.1100 = or i1 %.not.198, %cmp151.not.199
  br i1 %brmerge.1100, label %for.inc36.1130, label %for.body16.lr.ph.1104

for.body16.lr.ph.1104:                            ; preds = %for.body10.1101
  %mul.1102 = shl i32 %add.195, 7
  %mul30.1103 = mul i32 %ki.06.193, %kern_width
  br label %for.body16.1110

for.body16.1110:                                  ; preds = %for.inc.1124, %for.body16.lr.ph.1104
  %indvars.iv.1105 = phi i64 [ 0, %for.body16.lr.ph.1104 ], [ %indvars.iv.next.1121, %for.inc.1124 ]
  %partial_sum.12.1106 = phi float [ %partial_sum.05.194, %for.body16.lr.ph.1104 ], [ %partial_sum.2.1120, %for.inc.1124 ]
  %181 = trunc i64 %indvars.iv.1105 to i32
  %add17.1107 = add nsw i32 %181, %in_j.011.1
  %cmp18.1108 = icmp sgt i32 %add17.1107, -1
  %cmp21.1109 = icmp ult i32 %add17.1107, %img_width
  %182 = and i1 %cmp18.1108, %cmp21.1109
  br i1 %182, label %if.end26.1119, label %for.inc.1124

if.end26.1119:                                    ; preds = %for.body16.1110
  %add29.1111 = add nsw i32 %add17.1107, %mul.1102
  %idxprom.1112 = sext i32 %add29.1111 to i64
  %arrayidx.1113 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1112
  %183 = load float, float* %arrayidx.1113, align 4
  %184 = trunc i64 %indvars.iv.1105 to i32
  %add31.1114 = add i32 %184, %mul30.1103
  %idxprom32.1115 = zext i32 %add31.1114 to i64
  %arrayidx33.1116 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1115
  %185 = load float, float* %arrayidx33.1116, align 4
  %mul34.1117 = fmul float %183, %185
  %add35.1118 = fadd float %partial_sum.12.1106, %mul34.1117
  br label %for.inc.1124

for.inc.1124:                                     ; preds = %if.end26.1119, %for.body16.1110
  %partial_sum.2.1120 = phi float [ %add35.1118, %if.end26.1119 ], [ %partial_sum.12.1106, %for.body16.1110 ]
  %indvars.iv.next.1121 = add nuw nsw i64 %indvars.iv.1105, 1
  %lftr.wideiv.1122 = trunc i64 %indvars.iv.next.1121 to i32
  %exitcond.1123 = icmp eq i32 %lftr.wideiv.1122, %kern_width
  br i1 %exitcond.1123, label %for.inc36.1130.loopexit, label %for.body16.1110, !llvm.loop !1

for.inc36.1130.loopexit:                          ; preds = %for.inc.1124
  %partial_sum.2.1120.lcssa = phi float [ %partial_sum.2.1120, %for.inc.1124 ]
  br label %for.inc36.1130

for.inc36.1130:                                   ; preds = %for.inc36.1130.loopexit, %for.body10.1101
  %partial_sum.3.1127 = phi float [ %partial_sum.05.194, %for.body10.1101 ], [ %partial_sum.2.1120.lcssa, %for.inc36.1130.loopexit ]
  %inc37.1128 = add nuw nsw i32 %ki.06.193, 1
  %exitcond19.1129 = icmp eq i32 %inc37.1128, %kern_height
  br i1 %exitcond19.1129, label %for.end38.1134.loopexit, label %for.body10.1101, !llvm.loop !3

for.end38.1134.loopexit:                          ; preds = %for.inc36.1130
  %partial_sum.3.1127.lcssa = phi float [ %partial_sum.3.1127, %for.inc36.1130 ]
  br label %for.end38.1134

for.end38.1134:                                   ; preds = %for.end38.1134.loopexit, %for.cond8.preheader.1
  %partial_sum.0.lcssa.1133 = phi float [ 0.000000e+00, %for.cond8.preheader.1 ], [ %partial_sum.3.1127.lcssa, %for.end38.1134.loopexit ]
  br i1 %tobool39, label %if.else.1143, label %if.then40.1141

if.then40.1141:                                   ; preds = %for.end38.1134
  %cmp41.1135 = fcmp olt float %partial_sum.0.lcssa.1133, 0.000000e+00
  %sub42.1136 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1133
  %cond.1137 = select i1 %cmp41.1135, float %sub42.1136, float %partial_sum.0.lcssa.1133
  %conv.1138 = fptoui float %cond.1137 to i8
  %conv43.1139 = uitofp i8 %conv.1138 to float
  %186 = add nsw i64 %indvars.iv20.1, %173
  %arrayidx47.1140 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %186
  store float %conv43.1139, float* %arrayidx47.1140, align 4
  br label %for.inc53.1147

if.else.1143:                                     ; preds = %for.end38.1134
  %187 = add nsw i64 %indvars.iv20.1, %172
  %arrayidx51.1142 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %187
  store float %partial_sum.0.lcssa.1133, float* %arrayidx51.1142, align 4
  br label %for.inc53.1147

for.inc53.1147:                                   ; preds = %if.else.1143, %if.then40.1141
  %inc54.1144 = add nsw i32 %in_j.011.1, 1
  %indvars.iv.next21.1145 = add nuw nsw i64 %indvars.iv20.1, 1
  br i1 %cmp94, label %for.end38.1.1, label %for.body10.1.1.preheader

for.body10.1.1.preheader:                         ; preds = %for.inc53.1147
  br label %for.body10.1.1

for.body10.1.1:                                   ; preds = %for.body10.1.1.preheader, %for.inc36.1.1
  %ki.06.1.1 = phi i32 [ %inc37.1.1, %for.inc36.1.1 ], [ 0, %for.body10.1.1.preheader ]
  %partial_sum.05.1.1 = phi float [ %partial_sum.3.1.1, %for.inc36.1.1 ], [ 0.000000e+00, %for.body10.1.1.preheader ]
  %add.1.1 = add nsw i32 %ki.06.1.1, %inc58
  %notlhs.1.1 = icmp slt i32 %add.1.1, 0
  %notrhs.1.1 = icmp uge i32 %add.1.1, %img_height
  %.not.1.1 = or i1 %notrhs.1.1, %notlhs.1.1
  %brmerge.1.1 = or i1 %.not.1.1, %cmp151.not.1.1
  br i1 %brmerge.1.1, label %for.inc36.1.1, label %for.body16.lr.ph.1.1

for.body16.lr.ph.1.1:                             ; preds = %for.body10.1.1
  %mul.1.1 = shl i32 %add.1.1, 7
  %mul30.1.1 = mul i32 %ki.06.1.1, %kern_width
  br label %for.body16.1.1

for.body16.1.1:                                   ; preds = %for.inc.1.1, %for.body16.lr.ph.1.1
  %indvars.iv.1.1 = phi i64 [ 0, %for.body16.lr.ph.1.1 ], [ %indvars.iv.next.1.1, %for.inc.1.1 ]
  %partial_sum.12.1.1 = phi float [ %partial_sum.05.1.1, %for.body16.lr.ph.1.1 ], [ %partial_sum.2.1.1, %for.inc.1.1 ]
  %188 = trunc i64 %indvars.iv.1.1 to i32
  %add17.1.1 = add nsw i32 %188, %inc54.1144
  %cmp18.1.1 = icmp sgt i32 %add17.1.1, -1
  %cmp21.1.1 = icmp ult i32 %add17.1.1, %img_width
  %189 = and i1 %cmp18.1.1, %cmp21.1.1
  br i1 %189, label %if.end26.1.1, label %for.inc.1.1

if.end26.1.1:                                     ; preds = %for.body16.1.1
  %add29.1.1 = add nsw i32 %add17.1.1, %mul.1.1
  %idxprom.1.1 = sext i32 %add29.1.1 to i64
  %arrayidx.1.1 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.1
  %190 = load float, float* %arrayidx.1.1, align 4
  %191 = trunc i64 %indvars.iv.1.1 to i32
  %add31.1.1 = add i32 %191, %mul30.1.1
  %idxprom32.1.1 = zext i32 %add31.1.1 to i64
  %arrayidx33.1.1 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.1
  %192 = load float, float* %arrayidx33.1.1, align 4
  %mul34.1.1 = fmul float %190, %192
  %add35.1.1 = fadd float %partial_sum.12.1.1, %mul34.1.1
  br label %for.inc.1.1

for.inc.1.1:                                      ; preds = %if.end26.1.1, %for.body16.1.1
  %partial_sum.2.1.1 = phi float [ %add35.1.1, %if.end26.1.1 ], [ %partial_sum.12.1.1, %for.body16.1.1 ]
  %indvars.iv.next.1.1 = add nuw nsw i64 %indvars.iv.1.1, 1
  %lftr.wideiv.1.1 = trunc i64 %indvars.iv.next.1.1 to i32
  %exitcond.1.1 = icmp eq i32 %lftr.wideiv.1.1, %kern_width
  br i1 %exitcond.1.1, label %for.inc36.1.1.loopexit, label %for.body16.1.1, !llvm.loop !1

for.inc36.1.1.loopexit:                           ; preds = %for.inc.1.1
  %partial_sum.2.1.1.lcssa = phi float [ %partial_sum.2.1.1, %for.inc.1.1 ]
  br label %for.inc36.1.1

for.inc36.1.1:                                    ; preds = %for.inc36.1.1.loopexit, %for.body10.1.1
  %partial_sum.3.1.1 = phi float [ %partial_sum.05.1.1, %for.body10.1.1 ], [ %partial_sum.2.1.1.lcssa, %for.inc36.1.1.loopexit ]
  %inc37.1.1 = add nuw nsw i32 %ki.06.1.1, 1
  %exitcond19.1.1 = icmp eq i32 %inc37.1.1, %kern_height
  br i1 %exitcond19.1.1, label %for.end38.1.1.loopexit, label %for.body10.1.1, !llvm.loop !3

for.end38.1.1.loopexit:                           ; preds = %for.inc36.1.1
  %partial_sum.3.1.1.lcssa = phi float [ %partial_sum.3.1.1, %for.inc36.1.1 ]
  br label %for.end38.1.1

for.end38.1.1:                                    ; preds = %for.end38.1.1.loopexit, %for.inc53.1147
  %partial_sum.0.lcssa.1.1 = phi float [ 0.000000e+00, %for.inc53.1147 ], [ %partial_sum.3.1.1.lcssa, %for.end38.1.1.loopexit ]
  br i1 %tobool39, label %if.else.1.1, label %if.then40.1.1

if.then40.1.1:                                    ; preds = %for.end38.1.1
  %cmp41.1.1 = fcmp olt float %partial_sum.0.lcssa.1.1, 0.000000e+00
  %sub42.1.1 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.1
  %cond.1.1 = select i1 %cmp41.1.1, float %sub42.1.1, float %partial_sum.0.lcssa.1.1
  %conv.1.1 = fptoui float %cond.1.1 to i8
  %conv43.1.1 = uitofp i8 %conv.1.1 to float
  %193 = add nsw i64 %indvars.iv.next21.1145, %173
  %arrayidx47.1.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %193
  store float %conv43.1.1, float* %arrayidx47.1.1, align 4
  br label %for.inc53.1.1

if.else.1.1:                                      ; preds = %for.end38.1.1
  %194 = add nsw i64 %indvars.iv.next21.1145, %172
  %arrayidx51.1.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %194
  store float %partial_sum.0.lcssa.1.1, float* %arrayidx51.1.1, align 4
  br label %for.inc53.1.1

for.inc53.1.1:                                    ; preds = %if.else.1.1, %if.then40.1.1
  %inc54.1.1 = add nsw i32 %in_j.011.1, 2
  %indvars.iv.next21.1.1 = add nsw i64 %indvars.iv20.1, 2
  br i1 %cmp94, label %for.end38.2.1, label %for.body10.2.1.preheader

for.body10.2.1.preheader:                         ; preds = %for.inc53.1.1
  br label %for.body10.2.1

for.body10.2.1:                                   ; preds = %for.body10.2.1.preheader, %for.inc36.2.1
  %ki.06.2.1 = phi i32 [ %inc37.2.1, %for.inc36.2.1 ], [ 0, %for.body10.2.1.preheader ]
  %partial_sum.05.2.1 = phi float [ %partial_sum.3.2.1, %for.inc36.2.1 ], [ 0.000000e+00, %for.body10.2.1.preheader ]
  %add.2.1 = add nsw i32 %ki.06.2.1, %inc58
  %notlhs.2.1 = icmp slt i32 %add.2.1, 0
  %notrhs.2.1 = icmp uge i32 %add.2.1, %img_height
  %.not.2.1 = or i1 %notrhs.2.1, %notlhs.2.1
  %brmerge.2.1 = or i1 %.not.2.1, %cmp151.not.2.1
  br i1 %brmerge.2.1, label %for.inc36.2.1, label %for.body16.lr.ph.2.1

for.body16.lr.ph.2.1:                             ; preds = %for.body10.2.1
  %mul.2.1 = shl i32 %add.2.1, 7
  %mul30.2.1 = mul i32 %ki.06.2.1, %kern_width
  br label %for.body16.2.1

for.body16.2.1:                                   ; preds = %for.inc.2.1, %for.body16.lr.ph.2.1
  %indvars.iv.2.1 = phi i64 [ 0, %for.body16.lr.ph.2.1 ], [ %indvars.iv.next.2.1, %for.inc.2.1 ]
  %partial_sum.12.2.1 = phi float [ %partial_sum.05.2.1, %for.body16.lr.ph.2.1 ], [ %partial_sum.2.2.1, %for.inc.2.1 ]
  %195 = trunc i64 %indvars.iv.2.1 to i32
  %add17.2.1 = add nsw i32 %195, %inc54.1.1
  %cmp18.2.1 = icmp sgt i32 %add17.2.1, -1
  %cmp21.2.1 = icmp ult i32 %add17.2.1, %img_width
  %196 = and i1 %cmp18.2.1, %cmp21.2.1
  br i1 %196, label %if.end26.2.1, label %for.inc.2.1

if.end26.2.1:                                     ; preds = %for.body16.2.1
  %add29.2.1 = add nsw i32 %add17.2.1, %mul.2.1
  %idxprom.2.1 = sext i32 %add29.2.1 to i64
  %arrayidx.2.1 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.1
  %197 = load float, float* %arrayidx.2.1, align 4
  %198 = trunc i64 %indvars.iv.2.1 to i32
  %add31.2.1 = add i32 %198, %mul30.2.1
  %idxprom32.2.1 = zext i32 %add31.2.1 to i64
  %arrayidx33.2.1 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.1
  %199 = load float, float* %arrayidx33.2.1, align 4
  %mul34.2.1 = fmul float %197, %199
  %add35.2.1 = fadd float %partial_sum.12.2.1, %mul34.2.1
  br label %for.inc.2.1

for.inc.2.1:                                      ; preds = %if.end26.2.1, %for.body16.2.1
  %partial_sum.2.2.1 = phi float [ %add35.2.1, %if.end26.2.1 ], [ %partial_sum.12.2.1, %for.body16.2.1 ]
  %indvars.iv.next.2.1 = add nuw nsw i64 %indvars.iv.2.1, 1
  %lftr.wideiv.2.1 = trunc i64 %indvars.iv.next.2.1 to i32
  %exitcond.2.1 = icmp eq i32 %lftr.wideiv.2.1, %kern_width
  br i1 %exitcond.2.1, label %for.inc36.2.1.loopexit, label %for.body16.2.1, !llvm.loop !1

for.inc36.2.1.loopexit:                           ; preds = %for.inc.2.1
  %partial_sum.2.2.1.lcssa = phi float [ %partial_sum.2.2.1, %for.inc.2.1 ]
  br label %for.inc36.2.1

for.inc36.2.1:                                    ; preds = %for.inc36.2.1.loopexit, %for.body10.2.1
  %partial_sum.3.2.1 = phi float [ %partial_sum.05.2.1, %for.body10.2.1 ], [ %partial_sum.2.2.1.lcssa, %for.inc36.2.1.loopexit ]
  %inc37.2.1 = add nuw nsw i32 %ki.06.2.1, 1
  %exitcond19.2.1 = icmp eq i32 %inc37.2.1, %kern_height
  br i1 %exitcond19.2.1, label %for.end38.2.1.loopexit, label %for.body10.2.1, !llvm.loop !3

for.end38.2.1.loopexit:                           ; preds = %for.inc36.2.1
  %partial_sum.3.2.1.lcssa = phi float [ %partial_sum.3.2.1, %for.inc36.2.1 ]
  br label %for.end38.2.1

for.end38.2.1:                                    ; preds = %for.end38.2.1.loopexit, %for.inc53.1.1
  %partial_sum.0.lcssa.2.1 = phi float [ 0.000000e+00, %for.inc53.1.1 ], [ %partial_sum.3.2.1.lcssa, %for.end38.2.1.loopexit ]
  br i1 %tobool39, label %if.else.2.1, label %if.then40.2.1

if.then40.2.1:                                    ; preds = %for.end38.2.1
  %cmp41.2.1 = fcmp olt float %partial_sum.0.lcssa.2.1, 0.000000e+00
  %sub42.2.1 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.1
  %cond.2.1 = select i1 %cmp41.2.1, float %sub42.2.1, float %partial_sum.0.lcssa.2.1
  %conv.2.1 = fptoui float %cond.2.1 to i8
  %conv43.2.1 = uitofp i8 %conv.2.1 to float
  %200 = add nsw i64 %indvars.iv.next21.1.1, %173
  %arrayidx47.2.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %200
  store float %conv43.2.1, float* %arrayidx47.2.1, align 4
  br label %for.inc53.2.1

if.else.2.1:                                      ; preds = %for.end38.2.1
  %201 = add nsw i64 %indvars.iv.next21.1.1, %172
  %arrayidx51.2.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %201
  store float %partial_sum.0.lcssa.2.1, float* %arrayidx51.2.1, align 4
  br label %for.inc53.2.1

for.inc53.2.1:                                    ; preds = %if.else.2.1, %if.then40.2.1
  %inc54.2.1 = add nsw i32 %in_j.011.1, 3
  %indvars.iv.next21.2.1 = add nsw i64 %indvars.iv20.1, 3
  br i1 %cmp94, label %for.end38.3.1, label %for.body10.3.1.preheader

for.body10.3.1.preheader:                         ; preds = %for.inc53.2.1
  br label %for.body10.3.1

for.body10.3.1:                                   ; preds = %for.body10.3.1.preheader, %for.inc36.3.1
  %ki.06.3.1 = phi i32 [ %inc37.3.1, %for.inc36.3.1 ], [ 0, %for.body10.3.1.preheader ]
  %partial_sum.05.3.1 = phi float [ %partial_sum.3.3.1, %for.inc36.3.1 ], [ 0.000000e+00, %for.body10.3.1.preheader ]
  %add.3.1 = add nsw i32 %ki.06.3.1, %inc58
  %notlhs.3.1 = icmp slt i32 %add.3.1, 0
  %notrhs.3.1 = icmp uge i32 %add.3.1, %img_height
  %.not.3.1 = or i1 %notrhs.3.1, %notlhs.3.1
  %brmerge.3.1 = or i1 %.not.3.1, %cmp151.not.3.1
  br i1 %brmerge.3.1, label %for.inc36.3.1, label %for.body16.lr.ph.3.1

for.body16.lr.ph.3.1:                             ; preds = %for.body10.3.1
  %mul.3.1 = shl i32 %add.3.1, 7
  %mul30.3.1 = mul i32 %ki.06.3.1, %kern_width
  br label %for.body16.3.1

for.body16.3.1:                                   ; preds = %for.inc.3.1, %for.body16.lr.ph.3.1
  %indvars.iv.3.1 = phi i64 [ 0, %for.body16.lr.ph.3.1 ], [ %indvars.iv.next.3.1, %for.inc.3.1 ]
  %partial_sum.12.3.1 = phi float [ %partial_sum.05.3.1, %for.body16.lr.ph.3.1 ], [ %partial_sum.2.3.1, %for.inc.3.1 ]
  %202 = trunc i64 %indvars.iv.3.1 to i32
  %add17.3.1 = add nsw i32 %202, %inc54.2.1
  %cmp18.3.1 = icmp sgt i32 %add17.3.1, -1
  %cmp21.3.1 = icmp ult i32 %add17.3.1, %img_width
  %203 = and i1 %cmp18.3.1, %cmp21.3.1
  br i1 %203, label %if.end26.3.1, label %for.inc.3.1

if.end26.3.1:                                     ; preds = %for.body16.3.1
  %add29.3.1 = add nsw i32 %add17.3.1, %mul.3.1
  %idxprom.3.1 = sext i32 %add29.3.1 to i64
  %arrayidx.3.1 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.1
  %204 = load float, float* %arrayidx.3.1, align 4
  %205 = trunc i64 %indvars.iv.3.1 to i32
  %add31.3.1 = add i32 %205, %mul30.3.1
  %idxprom32.3.1 = zext i32 %add31.3.1 to i64
  %arrayidx33.3.1 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.1
  %206 = load float, float* %arrayidx33.3.1, align 4
  %mul34.3.1 = fmul float %204, %206
  %add35.3.1 = fadd float %partial_sum.12.3.1, %mul34.3.1
  br label %for.inc.3.1

for.inc.3.1:                                      ; preds = %if.end26.3.1, %for.body16.3.1
  %partial_sum.2.3.1 = phi float [ %add35.3.1, %if.end26.3.1 ], [ %partial_sum.12.3.1, %for.body16.3.1 ]
  %indvars.iv.next.3.1 = add nuw nsw i64 %indvars.iv.3.1, 1
  %lftr.wideiv.3.1 = trunc i64 %indvars.iv.next.3.1 to i32
  %exitcond.3.1 = icmp eq i32 %lftr.wideiv.3.1, %kern_width
  br i1 %exitcond.3.1, label %for.inc36.3.1.loopexit, label %for.body16.3.1, !llvm.loop !1

for.inc36.3.1.loopexit:                           ; preds = %for.inc.3.1
  %partial_sum.2.3.1.lcssa = phi float [ %partial_sum.2.3.1, %for.inc.3.1 ]
  br label %for.inc36.3.1

for.inc36.3.1:                                    ; preds = %for.inc36.3.1.loopexit, %for.body10.3.1
  %partial_sum.3.3.1 = phi float [ %partial_sum.05.3.1, %for.body10.3.1 ], [ %partial_sum.2.3.1.lcssa, %for.inc36.3.1.loopexit ]
  %inc37.3.1 = add nuw nsw i32 %ki.06.3.1, 1
  %exitcond19.3.1 = icmp eq i32 %inc37.3.1, %kern_height
  br i1 %exitcond19.3.1, label %for.end38.3.1.loopexit, label %for.body10.3.1, !llvm.loop !3

for.end38.3.1.loopexit:                           ; preds = %for.inc36.3.1
  %partial_sum.3.3.1.lcssa = phi float [ %partial_sum.3.3.1, %for.inc36.3.1 ]
  br label %for.end38.3.1

for.end38.3.1:                                    ; preds = %for.end38.3.1.loopexit, %for.inc53.2.1
  %partial_sum.0.lcssa.3.1 = phi float [ 0.000000e+00, %for.inc53.2.1 ], [ %partial_sum.3.3.1.lcssa, %for.end38.3.1.loopexit ]
  br i1 %tobool39, label %if.else.3.1, label %if.then40.3.1

if.then40.3.1:                                    ; preds = %for.end38.3.1
  %cmp41.3.1 = fcmp olt float %partial_sum.0.lcssa.3.1, 0.000000e+00
  %sub42.3.1 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.1
  %cond.3.1 = select i1 %cmp41.3.1, float %sub42.3.1, float %partial_sum.0.lcssa.3.1
  %conv.3.1 = fptoui float %cond.3.1 to i8
  %conv43.3.1 = uitofp i8 %conv.3.1 to float
  %207 = add nsw i64 %indvars.iv.next21.2.1, %173
  %arrayidx47.3.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %207
  store float %conv43.3.1, float* %arrayidx47.3.1, align 4
  br label %for.inc53.3.1

if.else.3.1:                                      ; preds = %for.end38.3.1
  %208 = add nsw i64 %indvars.iv.next21.2.1, %172
  %arrayidx51.3.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %208
  store float %partial_sum.0.lcssa.3.1, float* %arrayidx51.3.1, align 4
  br label %for.inc53.3.1

for.inc53.3.1:                                    ; preds = %if.else.3.1, %if.then40.3.1
  %inc54.3.1 = add nsw i32 %in_j.011.1, 4
  %indvars.iv.next21.3.1 = add nsw i64 %indvars.iv20.1, 4
  br i1 %cmp94, label %for.end38.4.1, label %for.body10.4.1.preheader

for.body10.4.1.preheader:                         ; preds = %for.inc53.3.1
  br label %for.body10.4.1

for.body10.4.1:                                   ; preds = %for.body10.4.1.preheader, %for.inc36.4.1
  %ki.06.4.1 = phi i32 [ %inc37.4.1, %for.inc36.4.1 ], [ 0, %for.body10.4.1.preheader ]
  %partial_sum.05.4.1 = phi float [ %partial_sum.3.4.1, %for.inc36.4.1 ], [ 0.000000e+00, %for.body10.4.1.preheader ]
  %add.4.1 = add nsw i32 %ki.06.4.1, %inc58
  %notlhs.4.1 = icmp slt i32 %add.4.1, 0
  %notrhs.4.1 = icmp uge i32 %add.4.1, %img_height
  %.not.4.1 = or i1 %notrhs.4.1, %notlhs.4.1
  %brmerge.4.1 = or i1 %.not.4.1, %cmp151.not.4.1
  br i1 %brmerge.4.1, label %for.inc36.4.1, label %for.body16.lr.ph.4.1

for.body16.lr.ph.4.1:                             ; preds = %for.body10.4.1
  %mul.4.1 = shl i32 %add.4.1, 7
  %mul30.4.1 = mul i32 %ki.06.4.1, %kern_width
  br label %for.body16.4.1

for.body16.4.1:                                   ; preds = %for.inc.4.1, %for.body16.lr.ph.4.1
  %indvars.iv.4.1 = phi i64 [ 0, %for.body16.lr.ph.4.1 ], [ %indvars.iv.next.4.1, %for.inc.4.1 ]
  %partial_sum.12.4.1 = phi float [ %partial_sum.05.4.1, %for.body16.lr.ph.4.1 ], [ %partial_sum.2.4.1, %for.inc.4.1 ]
  %209 = trunc i64 %indvars.iv.4.1 to i32
  %add17.4.1 = add nsw i32 %209, %inc54.3.1
  %cmp18.4.1 = icmp sgt i32 %add17.4.1, -1
  %cmp21.4.1 = icmp ult i32 %add17.4.1, %img_width
  %210 = and i1 %cmp18.4.1, %cmp21.4.1
  br i1 %210, label %if.end26.4.1, label %for.inc.4.1

if.end26.4.1:                                     ; preds = %for.body16.4.1
  %add29.4.1 = add nsw i32 %add17.4.1, %mul.4.1
  %idxprom.4.1 = sext i32 %add29.4.1 to i64
  %arrayidx.4.1 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.1
  %211 = load float, float* %arrayidx.4.1, align 4
  %212 = trunc i64 %indvars.iv.4.1 to i32
  %add31.4.1 = add i32 %212, %mul30.4.1
  %idxprom32.4.1 = zext i32 %add31.4.1 to i64
  %arrayidx33.4.1 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.1
  %213 = load float, float* %arrayidx33.4.1, align 4
  %mul34.4.1 = fmul float %211, %213
  %add35.4.1 = fadd float %partial_sum.12.4.1, %mul34.4.1
  br label %for.inc.4.1

for.inc.4.1:                                      ; preds = %if.end26.4.1, %for.body16.4.1
  %partial_sum.2.4.1 = phi float [ %add35.4.1, %if.end26.4.1 ], [ %partial_sum.12.4.1, %for.body16.4.1 ]
  %indvars.iv.next.4.1 = add nuw nsw i64 %indvars.iv.4.1, 1
  %lftr.wideiv.4.1 = trunc i64 %indvars.iv.next.4.1 to i32
  %exitcond.4.1 = icmp eq i32 %lftr.wideiv.4.1, %kern_width
  br i1 %exitcond.4.1, label %for.inc36.4.1.loopexit, label %for.body16.4.1, !llvm.loop !1

for.inc36.4.1.loopexit:                           ; preds = %for.inc.4.1
  %partial_sum.2.4.1.lcssa = phi float [ %partial_sum.2.4.1, %for.inc.4.1 ]
  br label %for.inc36.4.1

for.inc36.4.1:                                    ; preds = %for.inc36.4.1.loopexit, %for.body10.4.1
  %partial_sum.3.4.1 = phi float [ %partial_sum.05.4.1, %for.body10.4.1 ], [ %partial_sum.2.4.1.lcssa, %for.inc36.4.1.loopexit ]
  %inc37.4.1 = add nuw nsw i32 %ki.06.4.1, 1
  %exitcond19.4.1 = icmp eq i32 %inc37.4.1, %kern_height
  br i1 %exitcond19.4.1, label %for.end38.4.1.loopexit, label %for.body10.4.1, !llvm.loop !3

for.end38.4.1.loopexit:                           ; preds = %for.inc36.4.1
  %partial_sum.3.4.1.lcssa = phi float [ %partial_sum.3.4.1, %for.inc36.4.1 ]
  br label %for.end38.4.1

for.end38.4.1:                                    ; preds = %for.end38.4.1.loopexit, %for.inc53.3.1
  %partial_sum.0.lcssa.4.1 = phi float [ 0.000000e+00, %for.inc53.3.1 ], [ %partial_sum.3.4.1.lcssa, %for.end38.4.1.loopexit ]
  br i1 %tobool39, label %if.else.4.1, label %if.then40.4.1

if.then40.4.1:                                    ; preds = %for.end38.4.1
  %cmp41.4.1 = fcmp olt float %partial_sum.0.lcssa.4.1, 0.000000e+00
  %sub42.4.1 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.1
  %cond.4.1 = select i1 %cmp41.4.1, float %sub42.4.1, float %partial_sum.0.lcssa.4.1
  %conv.4.1 = fptoui float %cond.4.1 to i8
  %conv43.4.1 = uitofp i8 %conv.4.1 to float
  %214 = add nsw i64 %indvars.iv.next21.3.1, %173
  %arrayidx47.4.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %214
  store float %conv43.4.1, float* %arrayidx47.4.1, align 4
  br label %for.inc53.4.1

if.else.4.1:                                      ; preds = %for.end38.4.1
  %215 = add nsw i64 %indvars.iv.next21.3.1, %172
  %arrayidx51.4.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %215
  store float %partial_sum.0.lcssa.4.1, float* %arrayidx51.4.1, align 4
  br label %for.inc53.4.1

for.inc53.4.1:                                    ; preds = %if.else.4.1, %if.then40.4.1
  %inc54.4.1 = add nsw i32 %in_j.011.1, 5
  %indvars.iv.next21.4.1 = add nsw i64 %indvars.iv20.1, 5
  br i1 %cmp94, label %for.end38.5.1, label %for.body10.5.1.preheader

for.body10.5.1.preheader:                         ; preds = %for.inc53.4.1
  br label %for.body10.5.1

for.body10.5.1:                                   ; preds = %for.body10.5.1.preheader, %for.inc36.5.1
  %ki.06.5.1 = phi i32 [ %inc37.5.1, %for.inc36.5.1 ], [ 0, %for.body10.5.1.preheader ]
  %partial_sum.05.5.1 = phi float [ %partial_sum.3.5.1, %for.inc36.5.1 ], [ 0.000000e+00, %for.body10.5.1.preheader ]
  %add.5.1 = add nsw i32 %ki.06.5.1, %inc58
  %notlhs.5.1 = icmp slt i32 %add.5.1, 0
  %notrhs.5.1 = icmp uge i32 %add.5.1, %img_height
  %.not.5.1 = or i1 %notrhs.5.1, %notlhs.5.1
  %brmerge.5.1 = or i1 %.not.5.1, %cmp151.not.5.1
  br i1 %brmerge.5.1, label %for.inc36.5.1, label %for.body16.lr.ph.5.1

for.body16.lr.ph.5.1:                             ; preds = %for.body10.5.1
  %mul.5.1 = shl i32 %add.5.1, 7
  %mul30.5.1 = mul i32 %ki.06.5.1, %kern_width
  br label %for.body16.5.1

for.body16.5.1:                                   ; preds = %for.inc.5.1, %for.body16.lr.ph.5.1
  %indvars.iv.5.1 = phi i64 [ 0, %for.body16.lr.ph.5.1 ], [ %indvars.iv.next.5.1, %for.inc.5.1 ]
  %partial_sum.12.5.1 = phi float [ %partial_sum.05.5.1, %for.body16.lr.ph.5.1 ], [ %partial_sum.2.5.1, %for.inc.5.1 ]
  %216 = trunc i64 %indvars.iv.5.1 to i32
  %add17.5.1 = add nsw i32 %216, %inc54.4.1
  %cmp18.5.1 = icmp sgt i32 %add17.5.1, -1
  %cmp21.5.1 = icmp ult i32 %add17.5.1, %img_width
  %217 = and i1 %cmp18.5.1, %cmp21.5.1
  br i1 %217, label %if.end26.5.1, label %for.inc.5.1

if.end26.5.1:                                     ; preds = %for.body16.5.1
  %add29.5.1 = add nsw i32 %add17.5.1, %mul.5.1
  %idxprom.5.1 = sext i32 %add29.5.1 to i64
  %arrayidx.5.1 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.1
  %218 = load float, float* %arrayidx.5.1, align 4
  %219 = trunc i64 %indvars.iv.5.1 to i32
  %add31.5.1 = add i32 %219, %mul30.5.1
  %idxprom32.5.1 = zext i32 %add31.5.1 to i64
  %arrayidx33.5.1 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.1
  %220 = load float, float* %arrayidx33.5.1, align 4
  %mul34.5.1 = fmul float %218, %220
  %add35.5.1 = fadd float %partial_sum.12.5.1, %mul34.5.1
  br label %for.inc.5.1

for.inc.5.1:                                      ; preds = %if.end26.5.1, %for.body16.5.1
  %partial_sum.2.5.1 = phi float [ %add35.5.1, %if.end26.5.1 ], [ %partial_sum.12.5.1, %for.body16.5.1 ]
  %indvars.iv.next.5.1 = add nuw nsw i64 %indvars.iv.5.1, 1
  %lftr.wideiv.5.1 = trunc i64 %indvars.iv.next.5.1 to i32
  %exitcond.5.1 = icmp eq i32 %lftr.wideiv.5.1, %kern_width
  br i1 %exitcond.5.1, label %for.inc36.5.1.loopexit, label %for.body16.5.1, !llvm.loop !1

for.inc36.5.1.loopexit:                           ; preds = %for.inc.5.1
  %partial_sum.2.5.1.lcssa = phi float [ %partial_sum.2.5.1, %for.inc.5.1 ]
  br label %for.inc36.5.1

for.inc36.5.1:                                    ; preds = %for.inc36.5.1.loopexit, %for.body10.5.1
  %partial_sum.3.5.1 = phi float [ %partial_sum.05.5.1, %for.body10.5.1 ], [ %partial_sum.2.5.1.lcssa, %for.inc36.5.1.loopexit ]
  %inc37.5.1 = add nuw nsw i32 %ki.06.5.1, 1
  %exitcond19.5.1 = icmp eq i32 %inc37.5.1, %kern_height
  br i1 %exitcond19.5.1, label %for.end38.5.1.loopexit, label %for.body10.5.1, !llvm.loop !3

for.end38.5.1.loopexit:                           ; preds = %for.inc36.5.1
  %partial_sum.3.5.1.lcssa = phi float [ %partial_sum.3.5.1, %for.inc36.5.1 ]
  br label %for.end38.5.1

for.end38.5.1:                                    ; preds = %for.end38.5.1.loopexit, %for.inc53.4.1
  %partial_sum.0.lcssa.5.1 = phi float [ 0.000000e+00, %for.inc53.4.1 ], [ %partial_sum.3.5.1.lcssa, %for.end38.5.1.loopexit ]
  br i1 %tobool39, label %if.else.5.1, label %if.then40.5.1

if.then40.5.1:                                    ; preds = %for.end38.5.1
  %cmp41.5.1 = fcmp olt float %partial_sum.0.lcssa.5.1, 0.000000e+00
  %sub42.5.1 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.1
  %cond.5.1 = select i1 %cmp41.5.1, float %sub42.5.1, float %partial_sum.0.lcssa.5.1
  %conv.5.1 = fptoui float %cond.5.1 to i8
  %conv43.5.1 = uitofp i8 %conv.5.1 to float
  %221 = add nsw i64 %indvars.iv.next21.4.1, %173
  %arrayidx47.5.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %221
  store float %conv43.5.1, float* %arrayidx47.5.1, align 4
  br label %for.inc53.5.1

if.else.5.1:                                      ; preds = %for.end38.5.1
  %222 = add nsw i64 %indvars.iv.next21.4.1, %172
  %arrayidx51.5.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %222
  store float %partial_sum.0.lcssa.5.1, float* %arrayidx51.5.1, align 4
  br label %for.inc53.5.1

for.inc53.5.1:                                    ; preds = %if.else.5.1, %if.then40.5.1
  %inc54.5.1 = add nsw i32 %in_j.011.1, 6
  %indvars.iv.next21.5.1 = add nsw i64 %indvars.iv20.1, 6
  br i1 %cmp94, label %for.end38.6.1, label %for.body10.6.1.preheader

for.body10.6.1.preheader:                         ; preds = %for.inc53.5.1
  br label %for.body10.6.1

for.body10.6.1:                                   ; preds = %for.body10.6.1.preheader, %for.inc36.6.1
  %ki.06.6.1 = phi i32 [ %inc37.6.1, %for.inc36.6.1 ], [ 0, %for.body10.6.1.preheader ]
  %partial_sum.05.6.1 = phi float [ %partial_sum.3.6.1, %for.inc36.6.1 ], [ 0.000000e+00, %for.body10.6.1.preheader ]
  %add.6.1 = add nsw i32 %ki.06.6.1, %inc58
  %notlhs.6.1 = icmp slt i32 %add.6.1, 0
  %notrhs.6.1 = icmp uge i32 %add.6.1, %img_height
  %.not.6.1 = or i1 %notrhs.6.1, %notlhs.6.1
  %brmerge.6.1 = or i1 %.not.6.1, %cmp151.not.6.1
  br i1 %brmerge.6.1, label %for.inc36.6.1, label %for.body16.lr.ph.6.1

for.body16.lr.ph.6.1:                             ; preds = %for.body10.6.1
  %mul.6.1 = shl i32 %add.6.1, 7
  %mul30.6.1 = mul i32 %ki.06.6.1, %kern_width
  br label %for.body16.6.1

for.body16.6.1:                                   ; preds = %for.inc.6.1, %for.body16.lr.ph.6.1
  %indvars.iv.6.1 = phi i64 [ 0, %for.body16.lr.ph.6.1 ], [ %indvars.iv.next.6.1, %for.inc.6.1 ]
  %partial_sum.12.6.1 = phi float [ %partial_sum.05.6.1, %for.body16.lr.ph.6.1 ], [ %partial_sum.2.6.1, %for.inc.6.1 ]
  %223 = trunc i64 %indvars.iv.6.1 to i32
  %add17.6.1 = add nsw i32 %223, %inc54.5.1
  %cmp18.6.1 = icmp sgt i32 %add17.6.1, -1
  %cmp21.6.1 = icmp ult i32 %add17.6.1, %img_width
  %224 = and i1 %cmp18.6.1, %cmp21.6.1
  br i1 %224, label %if.end26.6.1, label %for.inc.6.1

if.end26.6.1:                                     ; preds = %for.body16.6.1
  %add29.6.1 = add nsw i32 %add17.6.1, %mul.6.1
  %idxprom.6.1 = sext i32 %add29.6.1 to i64
  %arrayidx.6.1 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.1
  %225 = load float, float* %arrayidx.6.1, align 4
  %226 = trunc i64 %indvars.iv.6.1 to i32
  %add31.6.1 = add i32 %226, %mul30.6.1
  %idxprom32.6.1 = zext i32 %add31.6.1 to i64
  %arrayidx33.6.1 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.1
  %227 = load float, float* %arrayidx33.6.1, align 4
  %mul34.6.1 = fmul float %225, %227
  %add35.6.1 = fadd float %partial_sum.12.6.1, %mul34.6.1
  br label %for.inc.6.1

for.inc.6.1:                                      ; preds = %if.end26.6.1, %for.body16.6.1
  %partial_sum.2.6.1 = phi float [ %add35.6.1, %if.end26.6.1 ], [ %partial_sum.12.6.1, %for.body16.6.1 ]
  %indvars.iv.next.6.1 = add nuw nsw i64 %indvars.iv.6.1, 1
  %lftr.wideiv.6.1 = trunc i64 %indvars.iv.next.6.1 to i32
  %exitcond.6.1 = icmp eq i32 %lftr.wideiv.6.1, %kern_width
  br i1 %exitcond.6.1, label %for.inc36.6.1.loopexit, label %for.body16.6.1, !llvm.loop !1

for.inc36.6.1.loopexit:                           ; preds = %for.inc.6.1
  %partial_sum.2.6.1.lcssa = phi float [ %partial_sum.2.6.1, %for.inc.6.1 ]
  br label %for.inc36.6.1

for.inc36.6.1:                                    ; preds = %for.inc36.6.1.loopexit, %for.body10.6.1
  %partial_sum.3.6.1 = phi float [ %partial_sum.05.6.1, %for.body10.6.1 ], [ %partial_sum.2.6.1.lcssa, %for.inc36.6.1.loopexit ]
  %inc37.6.1 = add nuw nsw i32 %ki.06.6.1, 1
  %exitcond19.6.1 = icmp eq i32 %inc37.6.1, %kern_height
  br i1 %exitcond19.6.1, label %for.end38.6.1.loopexit, label %for.body10.6.1, !llvm.loop !3

for.end38.6.1.loopexit:                           ; preds = %for.inc36.6.1
  %partial_sum.3.6.1.lcssa = phi float [ %partial_sum.3.6.1, %for.inc36.6.1 ]
  br label %for.end38.6.1

for.end38.6.1:                                    ; preds = %for.end38.6.1.loopexit, %for.inc53.5.1
  %partial_sum.0.lcssa.6.1 = phi float [ 0.000000e+00, %for.inc53.5.1 ], [ %partial_sum.3.6.1.lcssa, %for.end38.6.1.loopexit ]
  br i1 %tobool39, label %if.else.6.1, label %if.then40.6.1

if.then40.6.1:                                    ; preds = %for.end38.6.1
  %cmp41.6.1 = fcmp olt float %partial_sum.0.lcssa.6.1, 0.000000e+00
  %sub42.6.1 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.1
  %cond.6.1 = select i1 %cmp41.6.1, float %sub42.6.1, float %partial_sum.0.lcssa.6.1
  %conv.6.1 = fptoui float %cond.6.1 to i8
  %conv43.6.1 = uitofp i8 %conv.6.1 to float
  %228 = add nsw i64 %indvars.iv.next21.5.1, %173
  %arrayidx47.6.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %228
  store float %conv43.6.1, float* %arrayidx47.6.1, align 4
  br label %for.inc53.6.1

if.else.6.1:                                      ; preds = %for.end38.6.1
  %229 = add nsw i64 %indvars.iv.next21.5.1, %172
  %arrayidx51.6.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %229
  store float %partial_sum.0.lcssa.6.1, float* %arrayidx51.6.1, align 4
  br label %for.inc53.6.1

for.inc53.6.1:                                    ; preds = %if.else.6.1, %if.then40.6.1
  %inc54.6.1 = add nsw i32 %in_j.011.1, 7
  %indvars.iv.next21.6.1 = add nsw i64 %indvars.iv20.1, 7
  br i1 %cmp94, label %for.end38.7.1, label %for.body10.7.1.preheader

for.body10.7.1.preheader:                         ; preds = %for.inc53.6.1
  br label %for.body10.7.1

for.body10.7.1:                                   ; preds = %for.body10.7.1.preheader, %for.inc36.7.1
  %ki.06.7.1 = phi i32 [ %inc37.7.1, %for.inc36.7.1 ], [ 0, %for.body10.7.1.preheader ]
  %partial_sum.05.7.1 = phi float [ %partial_sum.3.7.1, %for.inc36.7.1 ], [ 0.000000e+00, %for.body10.7.1.preheader ]
  %add.7.1 = add nsw i32 %ki.06.7.1, %inc58
  %notlhs.7.1 = icmp slt i32 %add.7.1, 0
  %notrhs.7.1 = icmp uge i32 %add.7.1, %img_height
  %.not.7.1 = or i1 %notrhs.7.1, %notlhs.7.1
  %brmerge.7.1 = or i1 %.not.7.1, %cmp151.not.7.1
  br i1 %brmerge.7.1, label %for.inc36.7.1, label %for.body16.lr.ph.7.1

for.body16.lr.ph.7.1:                             ; preds = %for.body10.7.1
  %mul.7.1 = shl i32 %add.7.1, 7
  %mul30.7.1 = mul i32 %ki.06.7.1, %kern_width
  br label %for.body16.7.1

for.body16.7.1:                                   ; preds = %for.inc.7.1, %for.body16.lr.ph.7.1
  %indvars.iv.7.1 = phi i64 [ 0, %for.body16.lr.ph.7.1 ], [ %indvars.iv.next.7.1, %for.inc.7.1 ]
  %partial_sum.12.7.1 = phi float [ %partial_sum.05.7.1, %for.body16.lr.ph.7.1 ], [ %partial_sum.2.7.1, %for.inc.7.1 ]
  %230 = trunc i64 %indvars.iv.7.1 to i32
  %add17.7.1 = add nsw i32 %230, %inc54.6.1
  %cmp18.7.1 = icmp sgt i32 %add17.7.1, -1
  %cmp21.7.1 = icmp ult i32 %add17.7.1, %img_width
  %231 = and i1 %cmp18.7.1, %cmp21.7.1
  br i1 %231, label %if.end26.7.1, label %for.inc.7.1

if.end26.7.1:                                     ; preds = %for.body16.7.1
  %add29.7.1 = add nsw i32 %add17.7.1, %mul.7.1
  %idxprom.7.1 = sext i32 %add29.7.1 to i64
  %arrayidx.7.1 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.1
  %232 = load float, float* %arrayidx.7.1, align 4
  %233 = trunc i64 %indvars.iv.7.1 to i32
  %add31.7.1 = add i32 %233, %mul30.7.1
  %idxprom32.7.1 = zext i32 %add31.7.1 to i64
  %arrayidx33.7.1 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.1
  %234 = load float, float* %arrayidx33.7.1, align 4
  %mul34.7.1 = fmul float %232, %234
  %add35.7.1 = fadd float %partial_sum.12.7.1, %mul34.7.1
  br label %for.inc.7.1

for.inc.7.1:                                      ; preds = %if.end26.7.1, %for.body16.7.1
  %partial_sum.2.7.1 = phi float [ %add35.7.1, %if.end26.7.1 ], [ %partial_sum.12.7.1, %for.body16.7.1 ]
  %indvars.iv.next.7.1 = add nuw nsw i64 %indvars.iv.7.1, 1
  %lftr.wideiv.7.1 = trunc i64 %indvars.iv.next.7.1 to i32
  %exitcond.7.1 = icmp eq i32 %lftr.wideiv.7.1, %kern_width
  br i1 %exitcond.7.1, label %for.inc36.7.1.loopexit, label %for.body16.7.1, !llvm.loop !1

for.inc36.7.1.loopexit:                           ; preds = %for.inc.7.1
  %partial_sum.2.7.1.lcssa = phi float [ %partial_sum.2.7.1, %for.inc.7.1 ]
  br label %for.inc36.7.1

for.inc36.7.1:                                    ; preds = %for.inc36.7.1.loopexit, %for.body10.7.1
  %partial_sum.3.7.1 = phi float [ %partial_sum.05.7.1, %for.body10.7.1 ], [ %partial_sum.2.7.1.lcssa, %for.inc36.7.1.loopexit ]
  %inc37.7.1 = add nuw nsw i32 %ki.06.7.1, 1
  %exitcond19.7.1 = icmp eq i32 %inc37.7.1, %kern_height
  br i1 %exitcond19.7.1, label %for.end38.7.1.loopexit, label %for.body10.7.1, !llvm.loop !3

for.end38.7.1.loopexit:                           ; preds = %for.inc36.7.1
  %partial_sum.3.7.1.lcssa = phi float [ %partial_sum.3.7.1, %for.inc36.7.1 ]
  br label %for.end38.7.1

for.end38.7.1:                                    ; preds = %for.end38.7.1.loopexit, %for.inc53.6.1
  %partial_sum.0.lcssa.7.1 = phi float [ 0.000000e+00, %for.inc53.6.1 ], [ %partial_sum.3.7.1.lcssa, %for.end38.7.1.loopexit ]
  br i1 %tobool39, label %if.else.7.1, label %if.then40.7.1

if.then40.7.1:                                    ; preds = %for.end38.7.1
  %cmp41.7.1 = fcmp olt float %partial_sum.0.lcssa.7.1, 0.000000e+00
  %sub42.7.1 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.1
  %cond.7.1 = select i1 %cmp41.7.1, float %sub42.7.1, float %partial_sum.0.lcssa.7.1
  %conv.7.1 = fptoui float %cond.7.1 to i8
  %conv43.7.1 = uitofp i8 %conv.7.1 to float
  %235 = add nsw i64 %indvars.iv.next21.6.1, %173
  %arrayidx47.7.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %235
  store float %conv43.7.1, float* %arrayidx47.7.1, align 4
  br label %for.inc53.7.1

if.else.7.1:                                      ; preds = %for.end38.7.1
  %236 = add nsw i64 %indvars.iv.next21.6.1, %172
  %arrayidx51.7.1 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %236
  store float %partial_sum.0.lcssa.7.1, float* %arrayidx51.7.1, align 4
  br label %for.inc53.7.1

for.inc53.7.1:                                    ; preds = %if.else.7.1, %if.then40.7.1
  %inc54.7.1 = add nsw i32 %in_j.011.1, 8
  %indvars.iv.next21.7.1 = add nsw i64 %indvars.iv20.1, 8
  %lftr.wideiv24.7.1 = trunc i64 %indvars.iv.next21.7.1 to i32
  %exitcond25.7.1 = icmp eq i32 %lftr.wideiv24.7.1, %img_width
  br i1 %exitcond25.7.1, label %for.inc57.1.loopexit, label %for.cond8.preheader.1, !llvm.loop !5

for.inc57.1.loopexit:                             ; preds = %for.inc53.7.1
  br label %for.inc57.1

for.inc57.1:                                      ; preds = %for.inc57.1.loopexit, %for.cond8.preheader.lr.ph.split.1
  %inc58.1 = add nsw i32 %in_i.015, 2
  %indvars.iv.next27.1 = add nsw i64 %indvars.iv26, 2
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.2

for.cond8.preheader.lr.ph.2:                      ; preds = %for.inc57.1
  %237 = trunc i64 %indvars.iv.next27.1 to i32
  %mul48.2 = shl i32 %237, 7
  %238 = trunc i64 %indvars.iv.next27.1 to i32
  %mul44.2 = shl i32 %238, 7
  %239 = sext i32 %mul48.2 to i64
  %240 = sext i32 %mul44.2 to i64
  br i1 %lcmp.mod.2, label %for.cond8.preheader.lr.ph.split.2, label %for.cond8.preheader.prol.2.preheader

for.cond8.preheader.prol.2.preheader:             ; preds = %for.cond8.preheader.lr.ph.2
  br label %for.cond8.preheader.prol.2

for.cond8.preheader.prol.2:                       ; preds = %for.cond8.preheader.prol.2.preheader, %for.inc53.prol.2
  %indvars.iv20.prol.2 = phi i64 [ %indvars.iv.next21.prol.2, %for.inc53.prol.2 ], [ 0, %for.cond8.preheader.prol.2.preheader ]
  %in_j.011.prol.2 = phi i32 [ %inc54.prol.2, %for.inc53.prol.2 ], [ %sub4, %for.cond8.preheader.prol.2.preheader ]
  %prol.iter.2 = phi i32 [ %prol.iter.sub.2, %for.inc53.prol.2 ], [ %xtraiter.2, %for.cond8.preheader.prol.2.preheader ]
  br i1 %cmp94, label %for.end38.prol.2, label %for.body10.prol.2.preheader

for.body10.prol.2.preheader:                      ; preds = %for.cond8.preheader.prol.2
  br label %for.body10.prol.2

for.body10.prol.2:                                ; preds = %for.body10.prol.2.preheader, %for.inc36.prol.2
  %ki.06.prol.2 = phi i32 [ %inc37.prol.2, %for.inc36.prol.2 ], [ 0, %for.body10.prol.2.preheader ]
  %partial_sum.05.prol.2 = phi float [ %partial_sum.3.prol.2, %for.inc36.prol.2 ], [ 0.000000e+00, %for.body10.prol.2.preheader ]
  %add.prol.2 = add nsw i32 %ki.06.prol.2, %inc58.1
  %notlhs.prol.2 = icmp slt i32 %add.prol.2, 0
  %notrhs.prol.2 = icmp uge i32 %add.prol.2, %img_height
  %.not.prol.2 = or i1 %notrhs.prol.2, %notlhs.prol.2
  %brmerge.prol.2 = or i1 %.not.prol.2, %cmp151.not.prol.2
  br i1 %brmerge.prol.2, label %for.inc36.prol.2, label %for.body16.lr.ph.prol.2

for.body16.lr.ph.prol.2:                          ; preds = %for.body10.prol.2
  %mul.prol.2 = shl i32 %add.prol.2, 7
  %mul30.prol.2 = mul i32 %ki.06.prol.2, %kern_width
  br label %for.body16.prol.2

for.body16.prol.2:                                ; preds = %for.inc.prol.2, %for.body16.lr.ph.prol.2
  %indvars.iv.prol.2 = phi i64 [ 0, %for.body16.lr.ph.prol.2 ], [ %indvars.iv.next.prol.2, %for.inc.prol.2 ]
  %partial_sum.12.prol.2 = phi float [ %partial_sum.05.prol.2, %for.body16.lr.ph.prol.2 ], [ %partial_sum.2.prol.2, %for.inc.prol.2 ]
  %241 = trunc i64 %indvars.iv.prol.2 to i32
  %add17.prol.2 = add nsw i32 %241, %in_j.011.prol.2
  %cmp18.prol.2 = icmp sgt i32 %add17.prol.2, -1
  %cmp21.prol.2 = icmp ult i32 %add17.prol.2, %img_width
  %242 = and i1 %cmp18.prol.2, %cmp21.prol.2
  br i1 %242, label %if.end26.prol.2, label %for.inc.prol.2

if.end26.prol.2:                                  ; preds = %for.body16.prol.2
  %add29.prol.2 = add nsw i32 %add17.prol.2, %mul.prol.2
  %idxprom.prol.2 = sext i32 %add29.prol.2 to i64
  %arrayidx.prol.2 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.2
  %243 = load float, float* %arrayidx.prol.2, align 4
  %244 = trunc i64 %indvars.iv.prol.2 to i32
  %add31.prol.2 = add i32 %244, %mul30.prol.2
  %idxprom32.prol.2 = zext i32 %add31.prol.2 to i64
  %arrayidx33.prol.2 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.2
  %245 = load float, float* %arrayidx33.prol.2, align 4
  %mul34.prol.2 = fmul float %243, %245
  %add35.prol.2 = fadd float %partial_sum.12.prol.2, %mul34.prol.2
  br label %for.inc.prol.2

for.inc.prol.2:                                   ; preds = %if.end26.prol.2, %for.body16.prol.2
  %partial_sum.2.prol.2 = phi float [ %add35.prol.2, %if.end26.prol.2 ], [ %partial_sum.12.prol.2, %for.body16.prol.2 ]
  %indvars.iv.next.prol.2 = add nuw nsw i64 %indvars.iv.prol.2, 1
  %lftr.wideiv.prol.2 = trunc i64 %indvars.iv.next.prol.2 to i32
  %exitcond.prol.2 = icmp eq i32 %lftr.wideiv.prol.2, %kern_width
  br i1 %exitcond.prol.2, label %for.inc36.prol.2.loopexit, label %for.body16.prol.2, !llvm.loop !1

for.inc36.prol.2.loopexit:                        ; preds = %for.inc.prol.2
  %partial_sum.2.prol.2.lcssa = phi float [ %partial_sum.2.prol.2, %for.inc.prol.2 ]
  br label %for.inc36.prol.2

for.inc36.prol.2:                                 ; preds = %for.inc36.prol.2.loopexit, %for.body10.prol.2
  %partial_sum.3.prol.2 = phi float [ %partial_sum.05.prol.2, %for.body10.prol.2 ], [ %partial_sum.2.prol.2.lcssa, %for.inc36.prol.2.loopexit ]
  %inc37.prol.2 = add nuw nsw i32 %ki.06.prol.2, 1
  %exitcond19.prol.2 = icmp eq i32 %inc37.prol.2, %kern_height
  br i1 %exitcond19.prol.2, label %for.end38.prol.2.loopexit, label %for.body10.prol.2, !llvm.loop !3

for.end38.prol.2.loopexit:                        ; preds = %for.inc36.prol.2
  %partial_sum.3.prol.2.lcssa = phi float [ %partial_sum.3.prol.2, %for.inc36.prol.2 ]
  br label %for.end38.prol.2

for.end38.prol.2:                                 ; preds = %for.end38.prol.2.loopexit, %for.cond8.preheader.prol.2
  %partial_sum.0.lcssa.prol.2 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.2 ], [ %partial_sum.3.prol.2.lcssa, %for.end38.prol.2.loopexit ]
  br i1 %tobool39, label %if.else.prol.2, label %if.then40.prol.2

if.then40.prol.2:                                 ; preds = %for.end38.prol.2
  %cmp41.prol.2 = fcmp olt float %partial_sum.0.lcssa.prol.2, 0.000000e+00
  %sub42.prol.2 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.2
  %cond.prol.2 = select i1 %cmp41.prol.2, float %sub42.prol.2, float %partial_sum.0.lcssa.prol.2
  %conv.prol.2 = fptoui float %cond.prol.2 to i8
  %conv43.prol.2 = uitofp i8 %conv.prol.2 to float
  %246 = add nsw i64 %indvars.iv20.prol.2, %240
  %arrayidx47.prol.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %246
  store float %conv43.prol.2, float* %arrayidx47.prol.2, align 4
  br label %for.inc53.prol.2

if.else.prol.2:                                   ; preds = %for.end38.prol.2
  %247 = add nsw i64 %indvars.iv20.prol.2, %239
  %arrayidx51.prol.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %247
  store float %partial_sum.0.lcssa.prol.2, float* %arrayidx51.prol.2, align 4
  br label %for.inc53.prol.2

for.inc53.prol.2:                                 ; preds = %if.else.prol.2, %if.then40.prol.2
  %inc54.prol.2 = add nsw i32 %in_j.011.prol.2, 1
  %indvars.iv.next21.prol.2 = add nuw nsw i64 %indvars.iv20.prol.2, 1
  %prol.iter.sub.2 = add i32 %prol.iter.2, -1
  %prol.iter.cmp.2 = icmp eq i32 %prol.iter.sub.2, 0
  br i1 %prol.iter.cmp.2, label %for.cond8.preheader.lr.ph.split.2.loopexit, label %for.cond8.preheader.prol.2, !llvm.loop !4

for.cond8.preheader.lr.ph.split.2.loopexit:       ; preds = %for.inc53.prol.2
  %indvars.iv.next21.prol.2.lcssa = phi i64 [ %indvars.iv.next21.prol.2, %for.inc53.prol.2 ]
  %inc54.prol.2.lcssa = phi i32 [ %inc54.prol.2, %for.inc53.prol.2 ]
  br label %for.cond8.preheader.lr.ph.split.2

for.cond8.preheader.lr.ph.split.2:                ; preds = %for.cond8.preheader.lr.ph.split.2.loopexit, %for.cond8.preheader.lr.ph.2
  %indvars.iv20.unr.2 = phi i64 [ 0, %for.cond8.preheader.lr.ph.2 ], [ %indvars.iv.next21.prol.2.lcssa, %for.cond8.preheader.lr.ph.split.2.loopexit ]
  %in_j.011.unr.2 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.2 ], [ %inc54.prol.2.lcssa, %for.cond8.preheader.lr.ph.split.2.loopexit ]
  br i1 %73, label %for.inc57.2, label %for.cond8.preheader.2.preheader

for.cond8.preheader.2.preheader:                  ; preds = %for.cond8.preheader.lr.ph.split.2
  br label %for.cond8.preheader.2

for.cond8.preheader.2:                            ; preds = %for.cond8.preheader.2.preheader, %for.inc53.7.2
  %indvars.iv20.2 = phi i64 [ %indvars.iv.next21.7.2, %for.inc53.7.2 ], [ %indvars.iv20.unr.2, %for.cond8.preheader.2.preheader ]
  %in_j.011.2 = phi i32 [ %inc54.7.2, %for.inc53.7.2 ], [ %in_j.011.unr.2, %for.cond8.preheader.2.preheader ]
  br i1 %cmp94, label %for.end38.2190, label %for.body10.2157.preheader

for.body10.2157.preheader:                        ; preds = %for.cond8.preheader.2
  br label %for.body10.2157

for.body10.2157:                                  ; preds = %for.body10.2157.preheader, %for.inc36.2186
  %ki.06.2149 = phi i32 [ %inc37.2184, %for.inc36.2186 ], [ 0, %for.body10.2157.preheader ]
  %partial_sum.05.2150 = phi float [ %partial_sum.3.2183, %for.inc36.2186 ], [ 0.000000e+00, %for.body10.2157.preheader ]
  %add.2151 = add nsw i32 %ki.06.2149, %inc58.1
  %notlhs.2152 = icmp slt i32 %add.2151, 0
  %notrhs.2153 = icmp uge i32 %add.2151, %img_height
  %.not.2154 = or i1 %notrhs.2153, %notlhs.2152
  %brmerge.2156 = or i1 %.not.2154, %cmp151.not.2155
  br i1 %brmerge.2156, label %for.inc36.2186, label %for.body16.lr.ph.2160

for.body16.lr.ph.2160:                            ; preds = %for.body10.2157
  %mul.2158 = shl i32 %add.2151, 7
  %mul30.2159 = mul i32 %ki.06.2149, %kern_width
  br label %for.body16.2166

for.body16.2166:                                  ; preds = %for.inc.2180, %for.body16.lr.ph.2160
  %indvars.iv.2161 = phi i64 [ 0, %for.body16.lr.ph.2160 ], [ %indvars.iv.next.2177, %for.inc.2180 ]
  %partial_sum.12.2162 = phi float [ %partial_sum.05.2150, %for.body16.lr.ph.2160 ], [ %partial_sum.2.2176, %for.inc.2180 ]
  %248 = trunc i64 %indvars.iv.2161 to i32
  %add17.2163 = add nsw i32 %248, %in_j.011.2
  %cmp18.2164 = icmp sgt i32 %add17.2163, -1
  %cmp21.2165 = icmp ult i32 %add17.2163, %img_width
  %249 = and i1 %cmp18.2164, %cmp21.2165
  br i1 %249, label %if.end26.2175, label %for.inc.2180

if.end26.2175:                                    ; preds = %for.body16.2166
  %add29.2167 = add nsw i32 %add17.2163, %mul.2158
  %idxprom.2168 = sext i32 %add29.2167 to i64
  %arrayidx.2169 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2168
  %250 = load float, float* %arrayidx.2169, align 4
  %251 = trunc i64 %indvars.iv.2161 to i32
  %add31.2170 = add i32 %251, %mul30.2159
  %idxprom32.2171 = zext i32 %add31.2170 to i64
  %arrayidx33.2172 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2171
  %252 = load float, float* %arrayidx33.2172, align 4
  %mul34.2173 = fmul float %250, %252
  %add35.2174 = fadd float %partial_sum.12.2162, %mul34.2173
  br label %for.inc.2180

for.inc.2180:                                     ; preds = %if.end26.2175, %for.body16.2166
  %partial_sum.2.2176 = phi float [ %add35.2174, %if.end26.2175 ], [ %partial_sum.12.2162, %for.body16.2166 ]
  %indvars.iv.next.2177 = add nuw nsw i64 %indvars.iv.2161, 1
  %lftr.wideiv.2178 = trunc i64 %indvars.iv.next.2177 to i32
  %exitcond.2179 = icmp eq i32 %lftr.wideiv.2178, %kern_width
  br i1 %exitcond.2179, label %for.inc36.2186.loopexit, label %for.body16.2166, !llvm.loop !1

for.inc36.2186.loopexit:                          ; preds = %for.inc.2180
  %partial_sum.2.2176.lcssa = phi float [ %partial_sum.2.2176, %for.inc.2180 ]
  br label %for.inc36.2186

for.inc36.2186:                                   ; preds = %for.inc36.2186.loopexit, %for.body10.2157
  %partial_sum.3.2183 = phi float [ %partial_sum.05.2150, %for.body10.2157 ], [ %partial_sum.2.2176.lcssa, %for.inc36.2186.loopexit ]
  %inc37.2184 = add nuw nsw i32 %ki.06.2149, 1
  %exitcond19.2185 = icmp eq i32 %inc37.2184, %kern_height
  br i1 %exitcond19.2185, label %for.end38.2190.loopexit, label %for.body10.2157, !llvm.loop !3

for.end38.2190.loopexit:                          ; preds = %for.inc36.2186
  %partial_sum.3.2183.lcssa = phi float [ %partial_sum.3.2183, %for.inc36.2186 ]
  br label %for.end38.2190

for.end38.2190:                                   ; preds = %for.end38.2190.loopexit, %for.cond8.preheader.2
  %partial_sum.0.lcssa.2189 = phi float [ 0.000000e+00, %for.cond8.preheader.2 ], [ %partial_sum.3.2183.lcssa, %for.end38.2190.loopexit ]
  br i1 %tobool39, label %if.else.2199, label %if.then40.2197

if.then40.2197:                                   ; preds = %for.end38.2190
  %cmp41.2191 = fcmp olt float %partial_sum.0.lcssa.2189, 0.000000e+00
  %sub42.2192 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2189
  %cond.2193 = select i1 %cmp41.2191, float %sub42.2192, float %partial_sum.0.lcssa.2189
  %conv.2194 = fptoui float %cond.2193 to i8
  %conv43.2195 = uitofp i8 %conv.2194 to float
  %253 = add nsw i64 %indvars.iv20.2, %240
  %arrayidx47.2196 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %253
  store float %conv43.2195, float* %arrayidx47.2196, align 4
  br label %for.inc53.2203

if.else.2199:                                     ; preds = %for.end38.2190
  %254 = add nsw i64 %indvars.iv20.2, %239
  %arrayidx51.2198 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %254
  store float %partial_sum.0.lcssa.2189, float* %arrayidx51.2198, align 4
  br label %for.inc53.2203

for.inc53.2203:                                   ; preds = %if.else.2199, %if.then40.2197
  %inc54.2200 = add nsw i32 %in_j.011.2, 1
  %indvars.iv.next21.2201 = add nuw nsw i64 %indvars.iv20.2, 1
  br i1 %cmp94, label %for.end38.1.2, label %for.body10.1.2.preheader

for.body10.1.2.preheader:                         ; preds = %for.inc53.2203
  br label %for.body10.1.2

for.body10.1.2:                                   ; preds = %for.body10.1.2.preheader, %for.inc36.1.2
  %ki.06.1.2 = phi i32 [ %inc37.1.2, %for.inc36.1.2 ], [ 0, %for.body10.1.2.preheader ]
  %partial_sum.05.1.2 = phi float [ %partial_sum.3.1.2, %for.inc36.1.2 ], [ 0.000000e+00, %for.body10.1.2.preheader ]
  %add.1.2 = add nsw i32 %ki.06.1.2, %inc58.1
  %notlhs.1.2 = icmp slt i32 %add.1.2, 0
  %notrhs.1.2 = icmp uge i32 %add.1.2, %img_height
  %.not.1.2 = or i1 %notrhs.1.2, %notlhs.1.2
  %brmerge.1.2 = or i1 %.not.1.2, %cmp151.not.1.2
  br i1 %brmerge.1.2, label %for.inc36.1.2, label %for.body16.lr.ph.1.2

for.body16.lr.ph.1.2:                             ; preds = %for.body10.1.2
  %mul.1.2 = shl i32 %add.1.2, 7
  %mul30.1.2 = mul i32 %ki.06.1.2, %kern_width
  br label %for.body16.1.2

for.body16.1.2:                                   ; preds = %for.inc.1.2, %for.body16.lr.ph.1.2
  %indvars.iv.1.2 = phi i64 [ 0, %for.body16.lr.ph.1.2 ], [ %indvars.iv.next.1.2, %for.inc.1.2 ]
  %partial_sum.12.1.2 = phi float [ %partial_sum.05.1.2, %for.body16.lr.ph.1.2 ], [ %partial_sum.2.1.2, %for.inc.1.2 ]
  %255 = trunc i64 %indvars.iv.1.2 to i32
  %add17.1.2 = add nsw i32 %255, %inc54.2200
  %cmp18.1.2 = icmp sgt i32 %add17.1.2, -1
  %cmp21.1.2 = icmp ult i32 %add17.1.2, %img_width
  %256 = and i1 %cmp18.1.2, %cmp21.1.2
  br i1 %256, label %if.end26.1.2, label %for.inc.1.2

if.end26.1.2:                                     ; preds = %for.body16.1.2
  %add29.1.2 = add nsw i32 %add17.1.2, %mul.1.2
  %idxprom.1.2 = sext i32 %add29.1.2 to i64
  %arrayidx.1.2 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.2
  %257 = load float, float* %arrayidx.1.2, align 4
  %258 = trunc i64 %indvars.iv.1.2 to i32
  %add31.1.2 = add i32 %258, %mul30.1.2
  %idxprom32.1.2 = zext i32 %add31.1.2 to i64
  %arrayidx33.1.2 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.2
  %259 = load float, float* %arrayidx33.1.2, align 4
  %mul34.1.2 = fmul float %257, %259
  %add35.1.2 = fadd float %partial_sum.12.1.2, %mul34.1.2
  br label %for.inc.1.2

for.inc.1.2:                                      ; preds = %if.end26.1.2, %for.body16.1.2
  %partial_sum.2.1.2 = phi float [ %add35.1.2, %if.end26.1.2 ], [ %partial_sum.12.1.2, %for.body16.1.2 ]
  %indvars.iv.next.1.2 = add nuw nsw i64 %indvars.iv.1.2, 1
  %lftr.wideiv.1.2 = trunc i64 %indvars.iv.next.1.2 to i32
  %exitcond.1.2 = icmp eq i32 %lftr.wideiv.1.2, %kern_width
  br i1 %exitcond.1.2, label %for.inc36.1.2.loopexit, label %for.body16.1.2, !llvm.loop !1

for.inc36.1.2.loopexit:                           ; preds = %for.inc.1.2
  %partial_sum.2.1.2.lcssa = phi float [ %partial_sum.2.1.2, %for.inc.1.2 ]
  br label %for.inc36.1.2

for.inc36.1.2:                                    ; preds = %for.inc36.1.2.loopexit, %for.body10.1.2
  %partial_sum.3.1.2 = phi float [ %partial_sum.05.1.2, %for.body10.1.2 ], [ %partial_sum.2.1.2.lcssa, %for.inc36.1.2.loopexit ]
  %inc37.1.2 = add nuw nsw i32 %ki.06.1.2, 1
  %exitcond19.1.2 = icmp eq i32 %inc37.1.2, %kern_height
  br i1 %exitcond19.1.2, label %for.end38.1.2.loopexit, label %for.body10.1.2, !llvm.loop !3

for.end38.1.2.loopexit:                           ; preds = %for.inc36.1.2
  %partial_sum.3.1.2.lcssa = phi float [ %partial_sum.3.1.2, %for.inc36.1.2 ]
  br label %for.end38.1.2

for.end38.1.2:                                    ; preds = %for.end38.1.2.loopexit, %for.inc53.2203
  %partial_sum.0.lcssa.1.2 = phi float [ 0.000000e+00, %for.inc53.2203 ], [ %partial_sum.3.1.2.lcssa, %for.end38.1.2.loopexit ]
  br i1 %tobool39, label %if.else.1.2, label %if.then40.1.2

if.then40.1.2:                                    ; preds = %for.end38.1.2
  %cmp41.1.2 = fcmp olt float %partial_sum.0.lcssa.1.2, 0.000000e+00
  %sub42.1.2 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.2
  %cond.1.2 = select i1 %cmp41.1.2, float %sub42.1.2, float %partial_sum.0.lcssa.1.2
  %conv.1.2 = fptoui float %cond.1.2 to i8
  %conv43.1.2 = uitofp i8 %conv.1.2 to float
  %260 = add nsw i64 %indvars.iv.next21.2201, %240
  %arrayidx47.1.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %260
  store float %conv43.1.2, float* %arrayidx47.1.2, align 4
  br label %for.inc53.1.2

if.else.1.2:                                      ; preds = %for.end38.1.2
  %261 = add nsw i64 %indvars.iv.next21.2201, %239
  %arrayidx51.1.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %261
  store float %partial_sum.0.lcssa.1.2, float* %arrayidx51.1.2, align 4
  br label %for.inc53.1.2

for.inc53.1.2:                                    ; preds = %if.else.1.2, %if.then40.1.2
  %inc54.1.2 = add nsw i32 %in_j.011.2, 2
  %indvars.iv.next21.1.2 = add nsw i64 %indvars.iv20.2, 2
  br i1 %cmp94, label %for.end38.2.2, label %for.body10.2.2.preheader

for.body10.2.2.preheader:                         ; preds = %for.inc53.1.2
  br label %for.body10.2.2

for.body10.2.2:                                   ; preds = %for.body10.2.2.preheader, %for.inc36.2.2
  %ki.06.2.2 = phi i32 [ %inc37.2.2, %for.inc36.2.2 ], [ 0, %for.body10.2.2.preheader ]
  %partial_sum.05.2.2 = phi float [ %partial_sum.3.2.2, %for.inc36.2.2 ], [ 0.000000e+00, %for.body10.2.2.preheader ]
  %add.2.2 = add nsw i32 %ki.06.2.2, %inc58.1
  %notlhs.2.2 = icmp slt i32 %add.2.2, 0
  %notrhs.2.2 = icmp uge i32 %add.2.2, %img_height
  %.not.2.2 = or i1 %notrhs.2.2, %notlhs.2.2
  %brmerge.2.2 = or i1 %.not.2.2, %cmp151.not.2.2
  br i1 %brmerge.2.2, label %for.inc36.2.2, label %for.body16.lr.ph.2.2

for.body16.lr.ph.2.2:                             ; preds = %for.body10.2.2
  %mul.2.2 = shl i32 %add.2.2, 7
  %mul30.2.2 = mul i32 %ki.06.2.2, %kern_width
  br label %for.body16.2.2

for.body16.2.2:                                   ; preds = %for.inc.2.2, %for.body16.lr.ph.2.2
  %indvars.iv.2.2 = phi i64 [ 0, %for.body16.lr.ph.2.2 ], [ %indvars.iv.next.2.2, %for.inc.2.2 ]
  %partial_sum.12.2.2 = phi float [ %partial_sum.05.2.2, %for.body16.lr.ph.2.2 ], [ %partial_sum.2.2.2, %for.inc.2.2 ]
  %262 = trunc i64 %indvars.iv.2.2 to i32
  %add17.2.2 = add nsw i32 %262, %inc54.1.2
  %cmp18.2.2 = icmp sgt i32 %add17.2.2, -1
  %cmp21.2.2 = icmp ult i32 %add17.2.2, %img_width
  %263 = and i1 %cmp18.2.2, %cmp21.2.2
  br i1 %263, label %if.end26.2.2, label %for.inc.2.2

if.end26.2.2:                                     ; preds = %for.body16.2.2
  %add29.2.2 = add nsw i32 %add17.2.2, %mul.2.2
  %idxprom.2.2 = sext i32 %add29.2.2 to i64
  %arrayidx.2.2 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.2
  %264 = load float, float* %arrayidx.2.2, align 4
  %265 = trunc i64 %indvars.iv.2.2 to i32
  %add31.2.2 = add i32 %265, %mul30.2.2
  %idxprom32.2.2 = zext i32 %add31.2.2 to i64
  %arrayidx33.2.2 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.2
  %266 = load float, float* %arrayidx33.2.2, align 4
  %mul34.2.2 = fmul float %264, %266
  %add35.2.2 = fadd float %partial_sum.12.2.2, %mul34.2.2
  br label %for.inc.2.2

for.inc.2.2:                                      ; preds = %if.end26.2.2, %for.body16.2.2
  %partial_sum.2.2.2 = phi float [ %add35.2.2, %if.end26.2.2 ], [ %partial_sum.12.2.2, %for.body16.2.2 ]
  %indvars.iv.next.2.2 = add nuw nsw i64 %indvars.iv.2.2, 1
  %lftr.wideiv.2.2 = trunc i64 %indvars.iv.next.2.2 to i32
  %exitcond.2.2 = icmp eq i32 %lftr.wideiv.2.2, %kern_width
  br i1 %exitcond.2.2, label %for.inc36.2.2.loopexit, label %for.body16.2.2, !llvm.loop !1

for.inc36.2.2.loopexit:                           ; preds = %for.inc.2.2
  %partial_sum.2.2.2.lcssa = phi float [ %partial_sum.2.2.2, %for.inc.2.2 ]
  br label %for.inc36.2.2

for.inc36.2.2:                                    ; preds = %for.inc36.2.2.loopexit, %for.body10.2.2
  %partial_sum.3.2.2 = phi float [ %partial_sum.05.2.2, %for.body10.2.2 ], [ %partial_sum.2.2.2.lcssa, %for.inc36.2.2.loopexit ]
  %inc37.2.2 = add nuw nsw i32 %ki.06.2.2, 1
  %exitcond19.2.2 = icmp eq i32 %inc37.2.2, %kern_height
  br i1 %exitcond19.2.2, label %for.end38.2.2.loopexit, label %for.body10.2.2, !llvm.loop !3

for.end38.2.2.loopexit:                           ; preds = %for.inc36.2.2
  %partial_sum.3.2.2.lcssa = phi float [ %partial_sum.3.2.2, %for.inc36.2.2 ]
  br label %for.end38.2.2

for.end38.2.2:                                    ; preds = %for.end38.2.2.loopexit, %for.inc53.1.2
  %partial_sum.0.lcssa.2.2 = phi float [ 0.000000e+00, %for.inc53.1.2 ], [ %partial_sum.3.2.2.lcssa, %for.end38.2.2.loopexit ]
  br i1 %tobool39, label %if.else.2.2, label %if.then40.2.2

if.then40.2.2:                                    ; preds = %for.end38.2.2
  %cmp41.2.2 = fcmp olt float %partial_sum.0.lcssa.2.2, 0.000000e+00
  %sub42.2.2 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.2
  %cond.2.2 = select i1 %cmp41.2.2, float %sub42.2.2, float %partial_sum.0.lcssa.2.2
  %conv.2.2 = fptoui float %cond.2.2 to i8
  %conv43.2.2 = uitofp i8 %conv.2.2 to float
  %267 = add nsw i64 %indvars.iv.next21.1.2, %240
  %arrayidx47.2.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %267
  store float %conv43.2.2, float* %arrayidx47.2.2, align 4
  br label %for.inc53.2.2

if.else.2.2:                                      ; preds = %for.end38.2.2
  %268 = add nsw i64 %indvars.iv.next21.1.2, %239
  %arrayidx51.2.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %268
  store float %partial_sum.0.lcssa.2.2, float* %arrayidx51.2.2, align 4
  br label %for.inc53.2.2

for.inc53.2.2:                                    ; preds = %if.else.2.2, %if.then40.2.2
  %inc54.2.2 = add nsw i32 %in_j.011.2, 3
  %indvars.iv.next21.2.2 = add nsw i64 %indvars.iv20.2, 3
  br i1 %cmp94, label %for.end38.3.2, label %for.body10.3.2.preheader

for.body10.3.2.preheader:                         ; preds = %for.inc53.2.2
  br label %for.body10.3.2

for.body10.3.2:                                   ; preds = %for.body10.3.2.preheader, %for.inc36.3.2
  %ki.06.3.2 = phi i32 [ %inc37.3.2, %for.inc36.3.2 ], [ 0, %for.body10.3.2.preheader ]
  %partial_sum.05.3.2 = phi float [ %partial_sum.3.3.2, %for.inc36.3.2 ], [ 0.000000e+00, %for.body10.3.2.preheader ]
  %add.3.2 = add nsw i32 %ki.06.3.2, %inc58.1
  %notlhs.3.2 = icmp slt i32 %add.3.2, 0
  %notrhs.3.2 = icmp uge i32 %add.3.2, %img_height
  %.not.3.2 = or i1 %notrhs.3.2, %notlhs.3.2
  %brmerge.3.2 = or i1 %.not.3.2, %cmp151.not.3.2
  br i1 %brmerge.3.2, label %for.inc36.3.2, label %for.body16.lr.ph.3.2

for.body16.lr.ph.3.2:                             ; preds = %for.body10.3.2
  %mul.3.2 = shl i32 %add.3.2, 7
  %mul30.3.2 = mul i32 %ki.06.3.2, %kern_width
  br label %for.body16.3.2

for.body16.3.2:                                   ; preds = %for.inc.3.2, %for.body16.lr.ph.3.2
  %indvars.iv.3.2 = phi i64 [ 0, %for.body16.lr.ph.3.2 ], [ %indvars.iv.next.3.2, %for.inc.3.2 ]
  %partial_sum.12.3.2 = phi float [ %partial_sum.05.3.2, %for.body16.lr.ph.3.2 ], [ %partial_sum.2.3.2, %for.inc.3.2 ]
  %269 = trunc i64 %indvars.iv.3.2 to i32
  %add17.3.2 = add nsw i32 %269, %inc54.2.2
  %cmp18.3.2 = icmp sgt i32 %add17.3.2, -1
  %cmp21.3.2 = icmp ult i32 %add17.3.2, %img_width
  %270 = and i1 %cmp18.3.2, %cmp21.3.2
  br i1 %270, label %if.end26.3.2, label %for.inc.3.2

if.end26.3.2:                                     ; preds = %for.body16.3.2
  %add29.3.2 = add nsw i32 %add17.3.2, %mul.3.2
  %idxprom.3.2 = sext i32 %add29.3.2 to i64
  %arrayidx.3.2 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.2
  %271 = load float, float* %arrayidx.3.2, align 4
  %272 = trunc i64 %indvars.iv.3.2 to i32
  %add31.3.2 = add i32 %272, %mul30.3.2
  %idxprom32.3.2 = zext i32 %add31.3.2 to i64
  %arrayidx33.3.2 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.2
  %273 = load float, float* %arrayidx33.3.2, align 4
  %mul34.3.2 = fmul float %271, %273
  %add35.3.2 = fadd float %partial_sum.12.3.2, %mul34.3.2
  br label %for.inc.3.2

for.inc.3.2:                                      ; preds = %if.end26.3.2, %for.body16.3.2
  %partial_sum.2.3.2 = phi float [ %add35.3.2, %if.end26.3.2 ], [ %partial_sum.12.3.2, %for.body16.3.2 ]
  %indvars.iv.next.3.2 = add nuw nsw i64 %indvars.iv.3.2, 1
  %lftr.wideiv.3.2 = trunc i64 %indvars.iv.next.3.2 to i32
  %exitcond.3.2 = icmp eq i32 %lftr.wideiv.3.2, %kern_width
  br i1 %exitcond.3.2, label %for.inc36.3.2.loopexit, label %for.body16.3.2, !llvm.loop !1

for.inc36.3.2.loopexit:                           ; preds = %for.inc.3.2
  %partial_sum.2.3.2.lcssa = phi float [ %partial_sum.2.3.2, %for.inc.3.2 ]
  br label %for.inc36.3.2

for.inc36.3.2:                                    ; preds = %for.inc36.3.2.loopexit, %for.body10.3.2
  %partial_sum.3.3.2 = phi float [ %partial_sum.05.3.2, %for.body10.3.2 ], [ %partial_sum.2.3.2.lcssa, %for.inc36.3.2.loopexit ]
  %inc37.3.2 = add nuw nsw i32 %ki.06.3.2, 1
  %exitcond19.3.2 = icmp eq i32 %inc37.3.2, %kern_height
  br i1 %exitcond19.3.2, label %for.end38.3.2.loopexit, label %for.body10.3.2, !llvm.loop !3

for.end38.3.2.loopexit:                           ; preds = %for.inc36.3.2
  %partial_sum.3.3.2.lcssa = phi float [ %partial_sum.3.3.2, %for.inc36.3.2 ]
  br label %for.end38.3.2

for.end38.3.2:                                    ; preds = %for.end38.3.2.loopexit, %for.inc53.2.2
  %partial_sum.0.lcssa.3.2 = phi float [ 0.000000e+00, %for.inc53.2.2 ], [ %partial_sum.3.3.2.lcssa, %for.end38.3.2.loopexit ]
  br i1 %tobool39, label %if.else.3.2, label %if.then40.3.2

if.then40.3.2:                                    ; preds = %for.end38.3.2
  %cmp41.3.2 = fcmp olt float %partial_sum.0.lcssa.3.2, 0.000000e+00
  %sub42.3.2 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.2
  %cond.3.2 = select i1 %cmp41.3.2, float %sub42.3.2, float %partial_sum.0.lcssa.3.2
  %conv.3.2 = fptoui float %cond.3.2 to i8
  %conv43.3.2 = uitofp i8 %conv.3.2 to float
  %274 = add nsw i64 %indvars.iv.next21.2.2, %240
  %arrayidx47.3.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %274
  store float %conv43.3.2, float* %arrayidx47.3.2, align 4
  br label %for.inc53.3.2

if.else.3.2:                                      ; preds = %for.end38.3.2
  %275 = add nsw i64 %indvars.iv.next21.2.2, %239
  %arrayidx51.3.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %275
  store float %partial_sum.0.lcssa.3.2, float* %arrayidx51.3.2, align 4
  br label %for.inc53.3.2

for.inc53.3.2:                                    ; preds = %if.else.3.2, %if.then40.3.2
  %inc54.3.2 = add nsw i32 %in_j.011.2, 4
  %indvars.iv.next21.3.2 = add nsw i64 %indvars.iv20.2, 4
  br i1 %cmp94, label %for.end38.4.2, label %for.body10.4.2.preheader

for.body10.4.2.preheader:                         ; preds = %for.inc53.3.2
  br label %for.body10.4.2

for.body10.4.2:                                   ; preds = %for.body10.4.2.preheader, %for.inc36.4.2
  %ki.06.4.2 = phi i32 [ %inc37.4.2, %for.inc36.4.2 ], [ 0, %for.body10.4.2.preheader ]
  %partial_sum.05.4.2 = phi float [ %partial_sum.3.4.2, %for.inc36.4.2 ], [ 0.000000e+00, %for.body10.4.2.preheader ]
  %add.4.2 = add nsw i32 %ki.06.4.2, %inc58.1
  %notlhs.4.2 = icmp slt i32 %add.4.2, 0
  %notrhs.4.2 = icmp uge i32 %add.4.2, %img_height
  %.not.4.2 = or i1 %notrhs.4.2, %notlhs.4.2
  %brmerge.4.2 = or i1 %.not.4.2, %cmp151.not.4.2
  br i1 %brmerge.4.2, label %for.inc36.4.2, label %for.body16.lr.ph.4.2

for.body16.lr.ph.4.2:                             ; preds = %for.body10.4.2
  %mul.4.2 = shl i32 %add.4.2, 7
  %mul30.4.2 = mul i32 %ki.06.4.2, %kern_width
  br label %for.body16.4.2

for.body16.4.2:                                   ; preds = %for.inc.4.2, %for.body16.lr.ph.4.2
  %indvars.iv.4.2 = phi i64 [ 0, %for.body16.lr.ph.4.2 ], [ %indvars.iv.next.4.2, %for.inc.4.2 ]
  %partial_sum.12.4.2 = phi float [ %partial_sum.05.4.2, %for.body16.lr.ph.4.2 ], [ %partial_sum.2.4.2, %for.inc.4.2 ]
  %276 = trunc i64 %indvars.iv.4.2 to i32
  %add17.4.2 = add nsw i32 %276, %inc54.3.2
  %cmp18.4.2 = icmp sgt i32 %add17.4.2, -1
  %cmp21.4.2 = icmp ult i32 %add17.4.2, %img_width
  %277 = and i1 %cmp18.4.2, %cmp21.4.2
  br i1 %277, label %if.end26.4.2, label %for.inc.4.2

if.end26.4.2:                                     ; preds = %for.body16.4.2
  %add29.4.2 = add nsw i32 %add17.4.2, %mul.4.2
  %idxprom.4.2 = sext i32 %add29.4.2 to i64
  %arrayidx.4.2 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.2
  %278 = load float, float* %arrayidx.4.2, align 4
  %279 = trunc i64 %indvars.iv.4.2 to i32
  %add31.4.2 = add i32 %279, %mul30.4.2
  %idxprom32.4.2 = zext i32 %add31.4.2 to i64
  %arrayidx33.4.2 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.2
  %280 = load float, float* %arrayidx33.4.2, align 4
  %mul34.4.2 = fmul float %278, %280
  %add35.4.2 = fadd float %partial_sum.12.4.2, %mul34.4.2
  br label %for.inc.4.2

for.inc.4.2:                                      ; preds = %if.end26.4.2, %for.body16.4.2
  %partial_sum.2.4.2 = phi float [ %add35.4.2, %if.end26.4.2 ], [ %partial_sum.12.4.2, %for.body16.4.2 ]
  %indvars.iv.next.4.2 = add nuw nsw i64 %indvars.iv.4.2, 1
  %lftr.wideiv.4.2 = trunc i64 %indvars.iv.next.4.2 to i32
  %exitcond.4.2 = icmp eq i32 %lftr.wideiv.4.2, %kern_width
  br i1 %exitcond.4.2, label %for.inc36.4.2.loopexit, label %for.body16.4.2, !llvm.loop !1

for.inc36.4.2.loopexit:                           ; preds = %for.inc.4.2
  %partial_sum.2.4.2.lcssa = phi float [ %partial_sum.2.4.2, %for.inc.4.2 ]
  br label %for.inc36.4.2

for.inc36.4.2:                                    ; preds = %for.inc36.4.2.loopexit, %for.body10.4.2
  %partial_sum.3.4.2 = phi float [ %partial_sum.05.4.2, %for.body10.4.2 ], [ %partial_sum.2.4.2.lcssa, %for.inc36.4.2.loopexit ]
  %inc37.4.2 = add nuw nsw i32 %ki.06.4.2, 1
  %exitcond19.4.2 = icmp eq i32 %inc37.4.2, %kern_height
  br i1 %exitcond19.4.2, label %for.end38.4.2.loopexit, label %for.body10.4.2, !llvm.loop !3

for.end38.4.2.loopexit:                           ; preds = %for.inc36.4.2
  %partial_sum.3.4.2.lcssa = phi float [ %partial_sum.3.4.2, %for.inc36.4.2 ]
  br label %for.end38.4.2

for.end38.4.2:                                    ; preds = %for.end38.4.2.loopexit, %for.inc53.3.2
  %partial_sum.0.lcssa.4.2 = phi float [ 0.000000e+00, %for.inc53.3.2 ], [ %partial_sum.3.4.2.lcssa, %for.end38.4.2.loopexit ]
  br i1 %tobool39, label %if.else.4.2, label %if.then40.4.2

if.then40.4.2:                                    ; preds = %for.end38.4.2
  %cmp41.4.2 = fcmp olt float %partial_sum.0.lcssa.4.2, 0.000000e+00
  %sub42.4.2 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.2
  %cond.4.2 = select i1 %cmp41.4.2, float %sub42.4.2, float %partial_sum.0.lcssa.4.2
  %conv.4.2 = fptoui float %cond.4.2 to i8
  %conv43.4.2 = uitofp i8 %conv.4.2 to float
  %281 = add nsw i64 %indvars.iv.next21.3.2, %240
  %arrayidx47.4.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %281
  store float %conv43.4.2, float* %arrayidx47.4.2, align 4
  br label %for.inc53.4.2

if.else.4.2:                                      ; preds = %for.end38.4.2
  %282 = add nsw i64 %indvars.iv.next21.3.2, %239
  %arrayidx51.4.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %282
  store float %partial_sum.0.lcssa.4.2, float* %arrayidx51.4.2, align 4
  br label %for.inc53.4.2

for.inc53.4.2:                                    ; preds = %if.else.4.2, %if.then40.4.2
  %inc54.4.2 = add nsw i32 %in_j.011.2, 5
  %indvars.iv.next21.4.2 = add nsw i64 %indvars.iv20.2, 5
  br i1 %cmp94, label %for.end38.5.2, label %for.body10.5.2.preheader

for.body10.5.2.preheader:                         ; preds = %for.inc53.4.2
  br label %for.body10.5.2

for.body10.5.2:                                   ; preds = %for.body10.5.2.preheader, %for.inc36.5.2
  %ki.06.5.2 = phi i32 [ %inc37.5.2, %for.inc36.5.2 ], [ 0, %for.body10.5.2.preheader ]
  %partial_sum.05.5.2 = phi float [ %partial_sum.3.5.2, %for.inc36.5.2 ], [ 0.000000e+00, %for.body10.5.2.preheader ]
  %add.5.2 = add nsw i32 %ki.06.5.2, %inc58.1
  %notlhs.5.2 = icmp slt i32 %add.5.2, 0
  %notrhs.5.2 = icmp uge i32 %add.5.2, %img_height
  %.not.5.2 = or i1 %notrhs.5.2, %notlhs.5.2
  %brmerge.5.2 = or i1 %.not.5.2, %cmp151.not.5.2
  br i1 %brmerge.5.2, label %for.inc36.5.2, label %for.body16.lr.ph.5.2

for.body16.lr.ph.5.2:                             ; preds = %for.body10.5.2
  %mul.5.2 = shl i32 %add.5.2, 7
  %mul30.5.2 = mul i32 %ki.06.5.2, %kern_width
  br label %for.body16.5.2

for.body16.5.2:                                   ; preds = %for.inc.5.2, %for.body16.lr.ph.5.2
  %indvars.iv.5.2 = phi i64 [ 0, %for.body16.lr.ph.5.2 ], [ %indvars.iv.next.5.2, %for.inc.5.2 ]
  %partial_sum.12.5.2 = phi float [ %partial_sum.05.5.2, %for.body16.lr.ph.5.2 ], [ %partial_sum.2.5.2, %for.inc.5.2 ]
  %283 = trunc i64 %indvars.iv.5.2 to i32
  %add17.5.2 = add nsw i32 %283, %inc54.4.2
  %cmp18.5.2 = icmp sgt i32 %add17.5.2, -1
  %cmp21.5.2 = icmp ult i32 %add17.5.2, %img_width
  %284 = and i1 %cmp18.5.2, %cmp21.5.2
  br i1 %284, label %if.end26.5.2, label %for.inc.5.2

if.end26.5.2:                                     ; preds = %for.body16.5.2
  %add29.5.2 = add nsw i32 %add17.5.2, %mul.5.2
  %idxprom.5.2 = sext i32 %add29.5.2 to i64
  %arrayidx.5.2 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.2
  %285 = load float, float* %arrayidx.5.2, align 4
  %286 = trunc i64 %indvars.iv.5.2 to i32
  %add31.5.2 = add i32 %286, %mul30.5.2
  %idxprom32.5.2 = zext i32 %add31.5.2 to i64
  %arrayidx33.5.2 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.2
  %287 = load float, float* %arrayidx33.5.2, align 4
  %mul34.5.2 = fmul float %285, %287
  %add35.5.2 = fadd float %partial_sum.12.5.2, %mul34.5.2
  br label %for.inc.5.2

for.inc.5.2:                                      ; preds = %if.end26.5.2, %for.body16.5.2
  %partial_sum.2.5.2 = phi float [ %add35.5.2, %if.end26.5.2 ], [ %partial_sum.12.5.2, %for.body16.5.2 ]
  %indvars.iv.next.5.2 = add nuw nsw i64 %indvars.iv.5.2, 1
  %lftr.wideiv.5.2 = trunc i64 %indvars.iv.next.5.2 to i32
  %exitcond.5.2 = icmp eq i32 %lftr.wideiv.5.2, %kern_width
  br i1 %exitcond.5.2, label %for.inc36.5.2.loopexit, label %for.body16.5.2, !llvm.loop !1

for.inc36.5.2.loopexit:                           ; preds = %for.inc.5.2
  %partial_sum.2.5.2.lcssa = phi float [ %partial_sum.2.5.2, %for.inc.5.2 ]
  br label %for.inc36.5.2

for.inc36.5.2:                                    ; preds = %for.inc36.5.2.loopexit, %for.body10.5.2
  %partial_sum.3.5.2 = phi float [ %partial_sum.05.5.2, %for.body10.5.2 ], [ %partial_sum.2.5.2.lcssa, %for.inc36.5.2.loopexit ]
  %inc37.5.2 = add nuw nsw i32 %ki.06.5.2, 1
  %exitcond19.5.2 = icmp eq i32 %inc37.5.2, %kern_height
  br i1 %exitcond19.5.2, label %for.end38.5.2.loopexit, label %for.body10.5.2, !llvm.loop !3

for.end38.5.2.loopexit:                           ; preds = %for.inc36.5.2
  %partial_sum.3.5.2.lcssa = phi float [ %partial_sum.3.5.2, %for.inc36.5.2 ]
  br label %for.end38.5.2

for.end38.5.2:                                    ; preds = %for.end38.5.2.loopexit, %for.inc53.4.2
  %partial_sum.0.lcssa.5.2 = phi float [ 0.000000e+00, %for.inc53.4.2 ], [ %partial_sum.3.5.2.lcssa, %for.end38.5.2.loopexit ]
  br i1 %tobool39, label %if.else.5.2, label %if.then40.5.2

if.then40.5.2:                                    ; preds = %for.end38.5.2
  %cmp41.5.2 = fcmp olt float %partial_sum.0.lcssa.5.2, 0.000000e+00
  %sub42.5.2 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.2
  %cond.5.2 = select i1 %cmp41.5.2, float %sub42.5.2, float %partial_sum.0.lcssa.5.2
  %conv.5.2 = fptoui float %cond.5.2 to i8
  %conv43.5.2 = uitofp i8 %conv.5.2 to float
  %288 = add nsw i64 %indvars.iv.next21.4.2, %240
  %arrayidx47.5.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %288
  store float %conv43.5.2, float* %arrayidx47.5.2, align 4
  br label %for.inc53.5.2

if.else.5.2:                                      ; preds = %for.end38.5.2
  %289 = add nsw i64 %indvars.iv.next21.4.2, %239
  %arrayidx51.5.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %289
  store float %partial_sum.0.lcssa.5.2, float* %arrayidx51.5.2, align 4
  br label %for.inc53.5.2

for.inc53.5.2:                                    ; preds = %if.else.5.2, %if.then40.5.2
  %inc54.5.2 = add nsw i32 %in_j.011.2, 6
  %indvars.iv.next21.5.2 = add nsw i64 %indvars.iv20.2, 6
  br i1 %cmp94, label %for.end38.6.2, label %for.body10.6.2.preheader

for.body10.6.2.preheader:                         ; preds = %for.inc53.5.2
  br label %for.body10.6.2

for.body10.6.2:                                   ; preds = %for.body10.6.2.preheader, %for.inc36.6.2
  %ki.06.6.2 = phi i32 [ %inc37.6.2, %for.inc36.6.2 ], [ 0, %for.body10.6.2.preheader ]
  %partial_sum.05.6.2 = phi float [ %partial_sum.3.6.2, %for.inc36.6.2 ], [ 0.000000e+00, %for.body10.6.2.preheader ]
  %add.6.2 = add nsw i32 %ki.06.6.2, %inc58.1
  %notlhs.6.2 = icmp slt i32 %add.6.2, 0
  %notrhs.6.2 = icmp uge i32 %add.6.2, %img_height
  %.not.6.2 = or i1 %notrhs.6.2, %notlhs.6.2
  %brmerge.6.2 = or i1 %.not.6.2, %cmp151.not.6.2
  br i1 %brmerge.6.2, label %for.inc36.6.2, label %for.body16.lr.ph.6.2

for.body16.lr.ph.6.2:                             ; preds = %for.body10.6.2
  %mul.6.2 = shl i32 %add.6.2, 7
  %mul30.6.2 = mul i32 %ki.06.6.2, %kern_width
  br label %for.body16.6.2

for.body16.6.2:                                   ; preds = %for.inc.6.2, %for.body16.lr.ph.6.2
  %indvars.iv.6.2 = phi i64 [ 0, %for.body16.lr.ph.6.2 ], [ %indvars.iv.next.6.2, %for.inc.6.2 ]
  %partial_sum.12.6.2 = phi float [ %partial_sum.05.6.2, %for.body16.lr.ph.6.2 ], [ %partial_sum.2.6.2, %for.inc.6.2 ]
  %290 = trunc i64 %indvars.iv.6.2 to i32
  %add17.6.2 = add nsw i32 %290, %inc54.5.2
  %cmp18.6.2 = icmp sgt i32 %add17.6.2, -1
  %cmp21.6.2 = icmp ult i32 %add17.6.2, %img_width
  %291 = and i1 %cmp18.6.2, %cmp21.6.2
  br i1 %291, label %if.end26.6.2, label %for.inc.6.2

if.end26.6.2:                                     ; preds = %for.body16.6.2
  %add29.6.2 = add nsw i32 %add17.6.2, %mul.6.2
  %idxprom.6.2 = sext i32 %add29.6.2 to i64
  %arrayidx.6.2 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.2
  %292 = load float, float* %arrayidx.6.2, align 4
  %293 = trunc i64 %indvars.iv.6.2 to i32
  %add31.6.2 = add i32 %293, %mul30.6.2
  %idxprom32.6.2 = zext i32 %add31.6.2 to i64
  %arrayidx33.6.2 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.2
  %294 = load float, float* %arrayidx33.6.2, align 4
  %mul34.6.2 = fmul float %292, %294
  %add35.6.2 = fadd float %partial_sum.12.6.2, %mul34.6.2
  br label %for.inc.6.2

for.inc.6.2:                                      ; preds = %if.end26.6.2, %for.body16.6.2
  %partial_sum.2.6.2 = phi float [ %add35.6.2, %if.end26.6.2 ], [ %partial_sum.12.6.2, %for.body16.6.2 ]
  %indvars.iv.next.6.2 = add nuw nsw i64 %indvars.iv.6.2, 1
  %lftr.wideiv.6.2 = trunc i64 %indvars.iv.next.6.2 to i32
  %exitcond.6.2 = icmp eq i32 %lftr.wideiv.6.2, %kern_width
  br i1 %exitcond.6.2, label %for.inc36.6.2.loopexit, label %for.body16.6.2, !llvm.loop !1

for.inc36.6.2.loopexit:                           ; preds = %for.inc.6.2
  %partial_sum.2.6.2.lcssa = phi float [ %partial_sum.2.6.2, %for.inc.6.2 ]
  br label %for.inc36.6.2

for.inc36.6.2:                                    ; preds = %for.inc36.6.2.loopexit, %for.body10.6.2
  %partial_sum.3.6.2 = phi float [ %partial_sum.05.6.2, %for.body10.6.2 ], [ %partial_sum.2.6.2.lcssa, %for.inc36.6.2.loopexit ]
  %inc37.6.2 = add nuw nsw i32 %ki.06.6.2, 1
  %exitcond19.6.2 = icmp eq i32 %inc37.6.2, %kern_height
  br i1 %exitcond19.6.2, label %for.end38.6.2.loopexit, label %for.body10.6.2, !llvm.loop !3

for.end38.6.2.loopexit:                           ; preds = %for.inc36.6.2
  %partial_sum.3.6.2.lcssa = phi float [ %partial_sum.3.6.2, %for.inc36.6.2 ]
  br label %for.end38.6.2

for.end38.6.2:                                    ; preds = %for.end38.6.2.loopexit, %for.inc53.5.2
  %partial_sum.0.lcssa.6.2 = phi float [ 0.000000e+00, %for.inc53.5.2 ], [ %partial_sum.3.6.2.lcssa, %for.end38.6.2.loopexit ]
  br i1 %tobool39, label %if.else.6.2, label %if.then40.6.2

if.then40.6.2:                                    ; preds = %for.end38.6.2
  %cmp41.6.2 = fcmp olt float %partial_sum.0.lcssa.6.2, 0.000000e+00
  %sub42.6.2 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.2
  %cond.6.2 = select i1 %cmp41.6.2, float %sub42.6.2, float %partial_sum.0.lcssa.6.2
  %conv.6.2 = fptoui float %cond.6.2 to i8
  %conv43.6.2 = uitofp i8 %conv.6.2 to float
  %295 = add nsw i64 %indvars.iv.next21.5.2, %240
  %arrayidx47.6.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %295
  store float %conv43.6.2, float* %arrayidx47.6.2, align 4
  br label %for.inc53.6.2

if.else.6.2:                                      ; preds = %for.end38.6.2
  %296 = add nsw i64 %indvars.iv.next21.5.2, %239
  %arrayidx51.6.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %296
  store float %partial_sum.0.lcssa.6.2, float* %arrayidx51.6.2, align 4
  br label %for.inc53.6.2

for.inc53.6.2:                                    ; preds = %if.else.6.2, %if.then40.6.2
  %inc54.6.2 = add nsw i32 %in_j.011.2, 7
  %indvars.iv.next21.6.2 = add nsw i64 %indvars.iv20.2, 7
  br i1 %cmp94, label %for.end38.7.2, label %for.body10.7.2.preheader

for.body10.7.2.preheader:                         ; preds = %for.inc53.6.2
  br label %for.body10.7.2

for.body10.7.2:                                   ; preds = %for.body10.7.2.preheader, %for.inc36.7.2
  %ki.06.7.2 = phi i32 [ %inc37.7.2, %for.inc36.7.2 ], [ 0, %for.body10.7.2.preheader ]
  %partial_sum.05.7.2 = phi float [ %partial_sum.3.7.2, %for.inc36.7.2 ], [ 0.000000e+00, %for.body10.7.2.preheader ]
  %add.7.2 = add nsw i32 %ki.06.7.2, %inc58.1
  %notlhs.7.2 = icmp slt i32 %add.7.2, 0
  %notrhs.7.2 = icmp uge i32 %add.7.2, %img_height
  %.not.7.2 = or i1 %notrhs.7.2, %notlhs.7.2
  %brmerge.7.2 = or i1 %.not.7.2, %cmp151.not.7.2
  br i1 %brmerge.7.2, label %for.inc36.7.2, label %for.body16.lr.ph.7.2

for.body16.lr.ph.7.2:                             ; preds = %for.body10.7.2
  %mul.7.2 = shl i32 %add.7.2, 7
  %mul30.7.2 = mul i32 %ki.06.7.2, %kern_width
  br label %for.body16.7.2

for.body16.7.2:                                   ; preds = %for.inc.7.2, %for.body16.lr.ph.7.2
  %indvars.iv.7.2 = phi i64 [ 0, %for.body16.lr.ph.7.2 ], [ %indvars.iv.next.7.2, %for.inc.7.2 ]
  %partial_sum.12.7.2 = phi float [ %partial_sum.05.7.2, %for.body16.lr.ph.7.2 ], [ %partial_sum.2.7.2, %for.inc.7.2 ]
  %297 = trunc i64 %indvars.iv.7.2 to i32
  %add17.7.2 = add nsw i32 %297, %inc54.6.2
  %cmp18.7.2 = icmp sgt i32 %add17.7.2, -1
  %cmp21.7.2 = icmp ult i32 %add17.7.2, %img_width
  %298 = and i1 %cmp18.7.2, %cmp21.7.2
  br i1 %298, label %if.end26.7.2, label %for.inc.7.2

if.end26.7.2:                                     ; preds = %for.body16.7.2
  %add29.7.2 = add nsw i32 %add17.7.2, %mul.7.2
  %idxprom.7.2 = sext i32 %add29.7.2 to i64
  %arrayidx.7.2 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.2
  %299 = load float, float* %arrayidx.7.2, align 4
  %300 = trunc i64 %indvars.iv.7.2 to i32
  %add31.7.2 = add i32 %300, %mul30.7.2
  %idxprom32.7.2 = zext i32 %add31.7.2 to i64
  %arrayidx33.7.2 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.2
  %301 = load float, float* %arrayidx33.7.2, align 4
  %mul34.7.2 = fmul float %299, %301
  %add35.7.2 = fadd float %partial_sum.12.7.2, %mul34.7.2
  br label %for.inc.7.2

for.inc.7.2:                                      ; preds = %if.end26.7.2, %for.body16.7.2
  %partial_sum.2.7.2 = phi float [ %add35.7.2, %if.end26.7.2 ], [ %partial_sum.12.7.2, %for.body16.7.2 ]
  %indvars.iv.next.7.2 = add nuw nsw i64 %indvars.iv.7.2, 1
  %lftr.wideiv.7.2 = trunc i64 %indvars.iv.next.7.2 to i32
  %exitcond.7.2 = icmp eq i32 %lftr.wideiv.7.2, %kern_width
  br i1 %exitcond.7.2, label %for.inc36.7.2.loopexit, label %for.body16.7.2, !llvm.loop !1

for.inc36.7.2.loopexit:                           ; preds = %for.inc.7.2
  %partial_sum.2.7.2.lcssa = phi float [ %partial_sum.2.7.2, %for.inc.7.2 ]
  br label %for.inc36.7.2

for.inc36.7.2:                                    ; preds = %for.inc36.7.2.loopexit, %for.body10.7.2
  %partial_sum.3.7.2 = phi float [ %partial_sum.05.7.2, %for.body10.7.2 ], [ %partial_sum.2.7.2.lcssa, %for.inc36.7.2.loopexit ]
  %inc37.7.2 = add nuw nsw i32 %ki.06.7.2, 1
  %exitcond19.7.2 = icmp eq i32 %inc37.7.2, %kern_height
  br i1 %exitcond19.7.2, label %for.end38.7.2.loopexit, label %for.body10.7.2, !llvm.loop !3

for.end38.7.2.loopexit:                           ; preds = %for.inc36.7.2
  %partial_sum.3.7.2.lcssa = phi float [ %partial_sum.3.7.2, %for.inc36.7.2 ]
  br label %for.end38.7.2

for.end38.7.2:                                    ; preds = %for.end38.7.2.loopexit, %for.inc53.6.2
  %partial_sum.0.lcssa.7.2 = phi float [ 0.000000e+00, %for.inc53.6.2 ], [ %partial_sum.3.7.2.lcssa, %for.end38.7.2.loopexit ]
  br i1 %tobool39, label %if.else.7.2, label %if.then40.7.2

if.then40.7.2:                                    ; preds = %for.end38.7.2
  %cmp41.7.2 = fcmp olt float %partial_sum.0.lcssa.7.2, 0.000000e+00
  %sub42.7.2 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.2
  %cond.7.2 = select i1 %cmp41.7.2, float %sub42.7.2, float %partial_sum.0.lcssa.7.2
  %conv.7.2 = fptoui float %cond.7.2 to i8
  %conv43.7.2 = uitofp i8 %conv.7.2 to float
  %302 = add nsw i64 %indvars.iv.next21.6.2, %240
  %arrayidx47.7.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %302
  store float %conv43.7.2, float* %arrayidx47.7.2, align 4
  br label %for.inc53.7.2

if.else.7.2:                                      ; preds = %for.end38.7.2
  %303 = add nsw i64 %indvars.iv.next21.6.2, %239
  %arrayidx51.7.2 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %303
  store float %partial_sum.0.lcssa.7.2, float* %arrayidx51.7.2, align 4
  br label %for.inc53.7.2

for.inc53.7.2:                                    ; preds = %if.else.7.2, %if.then40.7.2
  %inc54.7.2 = add nsw i32 %in_j.011.2, 8
  %indvars.iv.next21.7.2 = add nsw i64 %indvars.iv20.2, 8
  %lftr.wideiv24.7.2 = trunc i64 %indvars.iv.next21.7.2 to i32
  %exitcond25.7.2 = icmp eq i32 %lftr.wideiv24.7.2, %img_width
  br i1 %exitcond25.7.2, label %for.inc57.2.loopexit, label %for.cond8.preheader.2, !llvm.loop !5

for.inc57.2.loopexit:                             ; preds = %for.inc53.7.2
  br label %for.inc57.2

for.inc57.2:                                      ; preds = %for.inc57.2.loopexit, %for.cond8.preheader.lr.ph.split.2
  %inc58.2 = add nsw i32 %in_i.015, 3
  %indvars.iv.next27.2 = add nsw i64 %indvars.iv26, 3
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.3

for.cond8.preheader.lr.ph.3:                      ; preds = %for.inc57.2
  %304 = trunc i64 %indvars.iv.next27.2 to i32
  %mul48.3 = shl i32 %304, 7
  %305 = trunc i64 %indvars.iv.next27.2 to i32
  %mul44.3 = shl i32 %305, 7
  %306 = sext i32 %mul48.3 to i64
  %307 = sext i32 %mul44.3 to i64
  br i1 %lcmp.mod.3, label %for.cond8.preheader.lr.ph.split.3, label %for.cond8.preheader.prol.3.preheader

for.cond8.preheader.prol.3.preheader:             ; preds = %for.cond8.preheader.lr.ph.3
  br label %for.cond8.preheader.prol.3

for.cond8.preheader.prol.3:                       ; preds = %for.cond8.preheader.prol.3.preheader, %for.inc53.prol.3
  %indvars.iv20.prol.3 = phi i64 [ %indvars.iv.next21.prol.3, %for.inc53.prol.3 ], [ 0, %for.cond8.preheader.prol.3.preheader ]
  %in_j.011.prol.3 = phi i32 [ %inc54.prol.3, %for.inc53.prol.3 ], [ %sub4, %for.cond8.preheader.prol.3.preheader ]
  %prol.iter.3 = phi i32 [ %prol.iter.sub.3, %for.inc53.prol.3 ], [ %xtraiter.3, %for.cond8.preheader.prol.3.preheader ]
  br i1 %cmp94, label %for.end38.prol.3, label %for.body10.prol.3.preheader

for.body10.prol.3.preheader:                      ; preds = %for.cond8.preheader.prol.3
  br label %for.body10.prol.3

for.body10.prol.3:                                ; preds = %for.body10.prol.3.preheader, %for.inc36.prol.3
  %ki.06.prol.3 = phi i32 [ %inc37.prol.3, %for.inc36.prol.3 ], [ 0, %for.body10.prol.3.preheader ]
  %partial_sum.05.prol.3 = phi float [ %partial_sum.3.prol.3, %for.inc36.prol.3 ], [ 0.000000e+00, %for.body10.prol.3.preheader ]
  %add.prol.3 = add nsw i32 %ki.06.prol.3, %inc58.2
  %notlhs.prol.3 = icmp slt i32 %add.prol.3, 0
  %notrhs.prol.3 = icmp uge i32 %add.prol.3, %img_height
  %.not.prol.3 = or i1 %notrhs.prol.3, %notlhs.prol.3
  %brmerge.prol.3 = or i1 %.not.prol.3, %cmp151.not.prol.3
  br i1 %brmerge.prol.3, label %for.inc36.prol.3, label %for.body16.lr.ph.prol.3

for.body16.lr.ph.prol.3:                          ; preds = %for.body10.prol.3
  %mul.prol.3 = shl i32 %add.prol.3, 7
  %mul30.prol.3 = mul i32 %ki.06.prol.3, %kern_width
  br label %for.body16.prol.3

for.body16.prol.3:                                ; preds = %for.inc.prol.3, %for.body16.lr.ph.prol.3
  %indvars.iv.prol.3 = phi i64 [ 0, %for.body16.lr.ph.prol.3 ], [ %indvars.iv.next.prol.3, %for.inc.prol.3 ]
  %partial_sum.12.prol.3 = phi float [ %partial_sum.05.prol.3, %for.body16.lr.ph.prol.3 ], [ %partial_sum.2.prol.3, %for.inc.prol.3 ]
  %308 = trunc i64 %indvars.iv.prol.3 to i32
  %add17.prol.3 = add nsw i32 %308, %in_j.011.prol.3
  %cmp18.prol.3 = icmp sgt i32 %add17.prol.3, -1
  %cmp21.prol.3 = icmp ult i32 %add17.prol.3, %img_width
  %309 = and i1 %cmp18.prol.3, %cmp21.prol.3
  br i1 %309, label %if.end26.prol.3, label %for.inc.prol.3

if.end26.prol.3:                                  ; preds = %for.body16.prol.3
  %add29.prol.3 = add nsw i32 %add17.prol.3, %mul.prol.3
  %idxprom.prol.3 = sext i32 %add29.prol.3 to i64
  %arrayidx.prol.3 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.3
  %310 = load float, float* %arrayidx.prol.3, align 4
  %311 = trunc i64 %indvars.iv.prol.3 to i32
  %add31.prol.3 = add i32 %311, %mul30.prol.3
  %idxprom32.prol.3 = zext i32 %add31.prol.3 to i64
  %arrayidx33.prol.3 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.3
  %312 = load float, float* %arrayidx33.prol.3, align 4
  %mul34.prol.3 = fmul float %310, %312
  %add35.prol.3 = fadd float %partial_sum.12.prol.3, %mul34.prol.3
  br label %for.inc.prol.3

for.inc.prol.3:                                   ; preds = %if.end26.prol.3, %for.body16.prol.3
  %partial_sum.2.prol.3 = phi float [ %add35.prol.3, %if.end26.prol.3 ], [ %partial_sum.12.prol.3, %for.body16.prol.3 ]
  %indvars.iv.next.prol.3 = add nuw nsw i64 %indvars.iv.prol.3, 1
  %lftr.wideiv.prol.3 = trunc i64 %indvars.iv.next.prol.3 to i32
  %exitcond.prol.3 = icmp eq i32 %lftr.wideiv.prol.3, %kern_width
  br i1 %exitcond.prol.3, label %for.inc36.prol.3.loopexit, label %for.body16.prol.3, !llvm.loop !1

for.inc36.prol.3.loopexit:                        ; preds = %for.inc.prol.3
  %partial_sum.2.prol.3.lcssa = phi float [ %partial_sum.2.prol.3, %for.inc.prol.3 ]
  br label %for.inc36.prol.3

for.inc36.prol.3:                                 ; preds = %for.inc36.prol.3.loopexit, %for.body10.prol.3
  %partial_sum.3.prol.3 = phi float [ %partial_sum.05.prol.3, %for.body10.prol.3 ], [ %partial_sum.2.prol.3.lcssa, %for.inc36.prol.3.loopexit ]
  %inc37.prol.3 = add nuw nsw i32 %ki.06.prol.3, 1
  %exitcond19.prol.3 = icmp eq i32 %inc37.prol.3, %kern_height
  br i1 %exitcond19.prol.3, label %for.end38.prol.3.loopexit, label %for.body10.prol.3, !llvm.loop !3

for.end38.prol.3.loopexit:                        ; preds = %for.inc36.prol.3
  %partial_sum.3.prol.3.lcssa = phi float [ %partial_sum.3.prol.3, %for.inc36.prol.3 ]
  br label %for.end38.prol.3

for.end38.prol.3:                                 ; preds = %for.end38.prol.3.loopexit, %for.cond8.preheader.prol.3
  %partial_sum.0.lcssa.prol.3 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.3 ], [ %partial_sum.3.prol.3.lcssa, %for.end38.prol.3.loopexit ]
  br i1 %tobool39, label %if.else.prol.3, label %if.then40.prol.3

if.then40.prol.3:                                 ; preds = %for.end38.prol.3
  %cmp41.prol.3 = fcmp olt float %partial_sum.0.lcssa.prol.3, 0.000000e+00
  %sub42.prol.3 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.3
  %cond.prol.3 = select i1 %cmp41.prol.3, float %sub42.prol.3, float %partial_sum.0.lcssa.prol.3
  %conv.prol.3 = fptoui float %cond.prol.3 to i8
  %conv43.prol.3 = uitofp i8 %conv.prol.3 to float
  %313 = add nsw i64 %indvars.iv20.prol.3, %307
  %arrayidx47.prol.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %313
  store float %conv43.prol.3, float* %arrayidx47.prol.3, align 4
  br label %for.inc53.prol.3

if.else.prol.3:                                   ; preds = %for.end38.prol.3
  %314 = add nsw i64 %indvars.iv20.prol.3, %306
  %arrayidx51.prol.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %314
  store float %partial_sum.0.lcssa.prol.3, float* %arrayidx51.prol.3, align 4
  br label %for.inc53.prol.3

for.inc53.prol.3:                                 ; preds = %if.else.prol.3, %if.then40.prol.3
  %inc54.prol.3 = add nsw i32 %in_j.011.prol.3, 1
  %indvars.iv.next21.prol.3 = add nuw nsw i64 %indvars.iv20.prol.3, 1
  %prol.iter.sub.3 = add i32 %prol.iter.3, -1
  %prol.iter.cmp.3 = icmp eq i32 %prol.iter.sub.3, 0
  br i1 %prol.iter.cmp.3, label %for.cond8.preheader.lr.ph.split.3.loopexit, label %for.cond8.preheader.prol.3, !llvm.loop !4

for.cond8.preheader.lr.ph.split.3.loopexit:       ; preds = %for.inc53.prol.3
  %indvars.iv.next21.prol.3.lcssa = phi i64 [ %indvars.iv.next21.prol.3, %for.inc53.prol.3 ]
  %inc54.prol.3.lcssa = phi i32 [ %inc54.prol.3, %for.inc53.prol.3 ]
  br label %for.cond8.preheader.lr.ph.split.3

for.cond8.preheader.lr.ph.split.3:                ; preds = %for.cond8.preheader.lr.ph.split.3.loopexit, %for.cond8.preheader.lr.ph.3
  %indvars.iv20.unr.3 = phi i64 [ 0, %for.cond8.preheader.lr.ph.3 ], [ %indvars.iv.next21.prol.3.lcssa, %for.cond8.preheader.lr.ph.split.3.loopexit ]
  %in_j.011.unr.3 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.3 ], [ %inc54.prol.3.lcssa, %for.cond8.preheader.lr.ph.split.3.loopexit ]
  br i1 %74, label %for.inc57.3, label %for.cond8.preheader.3.preheader

for.cond8.preheader.3.preheader:                  ; preds = %for.cond8.preheader.lr.ph.split.3
  br label %for.cond8.preheader.3

for.cond8.preheader.3:                            ; preds = %for.cond8.preheader.3.preheader, %for.inc53.7.3
  %indvars.iv20.3 = phi i64 [ %indvars.iv.next21.7.3, %for.inc53.7.3 ], [ %indvars.iv20.unr.3, %for.cond8.preheader.3.preheader ]
  %in_j.011.3 = phi i32 [ %inc54.7.3, %for.inc53.7.3 ], [ %in_j.011.unr.3, %for.cond8.preheader.3.preheader ]
  br i1 %cmp94, label %for.end38.3246, label %for.body10.3213.preheader

for.body10.3213.preheader:                        ; preds = %for.cond8.preheader.3
  br label %for.body10.3213

for.body10.3213:                                  ; preds = %for.body10.3213.preheader, %for.inc36.3242
  %ki.06.3205 = phi i32 [ %inc37.3240, %for.inc36.3242 ], [ 0, %for.body10.3213.preheader ]
  %partial_sum.05.3206 = phi float [ %partial_sum.3.3239, %for.inc36.3242 ], [ 0.000000e+00, %for.body10.3213.preheader ]
  %add.3207 = add nsw i32 %ki.06.3205, %inc58.2
  %notlhs.3208 = icmp slt i32 %add.3207, 0
  %notrhs.3209 = icmp uge i32 %add.3207, %img_height
  %.not.3210 = or i1 %notrhs.3209, %notlhs.3208
  %brmerge.3212 = or i1 %.not.3210, %cmp151.not.3211
  br i1 %brmerge.3212, label %for.inc36.3242, label %for.body16.lr.ph.3216

for.body16.lr.ph.3216:                            ; preds = %for.body10.3213
  %mul.3214 = shl i32 %add.3207, 7
  %mul30.3215 = mul i32 %ki.06.3205, %kern_width
  br label %for.body16.3222

for.body16.3222:                                  ; preds = %for.inc.3236, %for.body16.lr.ph.3216
  %indvars.iv.3217 = phi i64 [ 0, %for.body16.lr.ph.3216 ], [ %indvars.iv.next.3233, %for.inc.3236 ]
  %partial_sum.12.3218 = phi float [ %partial_sum.05.3206, %for.body16.lr.ph.3216 ], [ %partial_sum.2.3232, %for.inc.3236 ]
  %315 = trunc i64 %indvars.iv.3217 to i32
  %add17.3219 = add nsw i32 %315, %in_j.011.3
  %cmp18.3220 = icmp sgt i32 %add17.3219, -1
  %cmp21.3221 = icmp ult i32 %add17.3219, %img_width
  %316 = and i1 %cmp18.3220, %cmp21.3221
  br i1 %316, label %if.end26.3231, label %for.inc.3236

if.end26.3231:                                    ; preds = %for.body16.3222
  %add29.3223 = add nsw i32 %add17.3219, %mul.3214
  %idxprom.3224 = sext i32 %add29.3223 to i64
  %arrayidx.3225 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3224
  %317 = load float, float* %arrayidx.3225, align 4
  %318 = trunc i64 %indvars.iv.3217 to i32
  %add31.3226 = add i32 %318, %mul30.3215
  %idxprom32.3227 = zext i32 %add31.3226 to i64
  %arrayidx33.3228 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3227
  %319 = load float, float* %arrayidx33.3228, align 4
  %mul34.3229 = fmul float %317, %319
  %add35.3230 = fadd float %partial_sum.12.3218, %mul34.3229
  br label %for.inc.3236

for.inc.3236:                                     ; preds = %if.end26.3231, %for.body16.3222
  %partial_sum.2.3232 = phi float [ %add35.3230, %if.end26.3231 ], [ %partial_sum.12.3218, %for.body16.3222 ]
  %indvars.iv.next.3233 = add nuw nsw i64 %indvars.iv.3217, 1
  %lftr.wideiv.3234 = trunc i64 %indvars.iv.next.3233 to i32
  %exitcond.3235 = icmp eq i32 %lftr.wideiv.3234, %kern_width
  br i1 %exitcond.3235, label %for.inc36.3242.loopexit, label %for.body16.3222, !llvm.loop !1

for.inc36.3242.loopexit:                          ; preds = %for.inc.3236
  %partial_sum.2.3232.lcssa = phi float [ %partial_sum.2.3232, %for.inc.3236 ]
  br label %for.inc36.3242

for.inc36.3242:                                   ; preds = %for.inc36.3242.loopexit, %for.body10.3213
  %partial_sum.3.3239 = phi float [ %partial_sum.05.3206, %for.body10.3213 ], [ %partial_sum.2.3232.lcssa, %for.inc36.3242.loopexit ]
  %inc37.3240 = add nuw nsw i32 %ki.06.3205, 1
  %exitcond19.3241 = icmp eq i32 %inc37.3240, %kern_height
  br i1 %exitcond19.3241, label %for.end38.3246.loopexit, label %for.body10.3213, !llvm.loop !3

for.end38.3246.loopexit:                          ; preds = %for.inc36.3242
  %partial_sum.3.3239.lcssa = phi float [ %partial_sum.3.3239, %for.inc36.3242 ]
  br label %for.end38.3246

for.end38.3246:                                   ; preds = %for.end38.3246.loopexit, %for.cond8.preheader.3
  %partial_sum.0.lcssa.3245 = phi float [ 0.000000e+00, %for.cond8.preheader.3 ], [ %partial_sum.3.3239.lcssa, %for.end38.3246.loopexit ]
  br i1 %tobool39, label %if.else.3255, label %if.then40.3253

if.then40.3253:                                   ; preds = %for.end38.3246
  %cmp41.3247 = fcmp olt float %partial_sum.0.lcssa.3245, 0.000000e+00
  %sub42.3248 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3245
  %cond.3249 = select i1 %cmp41.3247, float %sub42.3248, float %partial_sum.0.lcssa.3245
  %conv.3250 = fptoui float %cond.3249 to i8
  %conv43.3251 = uitofp i8 %conv.3250 to float
  %320 = add nsw i64 %indvars.iv20.3, %307
  %arrayidx47.3252 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %320
  store float %conv43.3251, float* %arrayidx47.3252, align 4
  br label %for.inc53.3259

if.else.3255:                                     ; preds = %for.end38.3246
  %321 = add nsw i64 %indvars.iv20.3, %306
  %arrayidx51.3254 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %321
  store float %partial_sum.0.lcssa.3245, float* %arrayidx51.3254, align 4
  br label %for.inc53.3259

for.inc53.3259:                                   ; preds = %if.else.3255, %if.then40.3253
  %inc54.3256 = add nsw i32 %in_j.011.3, 1
  %indvars.iv.next21.3257 = add nuw nsw i64 %indvars.iv20.3, 1
  br i1 %cmp94, label %for.end38.1.3, label %for.body10.1.3.preheader

for.body10.1.3.preheader:                         ; preds = %for.inc53.3259
  br label %for.body10.1.3

for.body10.1.3:                                   ; preds = %for.body10.1.3.preheader, %for.inc36.1.3
  %ki.06.1.3 = phi i32 [ %inc37.1.3, %for.inc36.1.3 ], [ 0, %for.body10.1.3.preheader ]
  %partial_sum.05.1.3 = phi float [ %partial_sum.3.1.3, %for.inc36.1.3 ], [ 0.000000e+00, %for.body10.1.3.preheader ]
  %add.1.3 = add nsw i32 %ki.06.1.3, %inc58.2
  %notlhs.1.3 = icmp slt i32 %add.1.3, 0
  %notrhs.1.3 = icmp uge i32 %add.1.3, %img_height
  %.not.1.3 = or i1 %notrhs.1.3, %notlhs.1.3
  %brmerge.1.3 = or i1 %.not.1.3, %cmp151.not.1.3
  br i1 %brmerge.1.3, label %for.inc36.1.3, label %for.body16.lr.ph.1.3

for.body16.lr.ph.1.3:                             ; preds = %for.body10.1.3
  %mul.1.3 = shl i32 %add.1.3, 7
  %mul30.1.3 = mul i32 %ki.06.1.3, %kern_width
  br label %for.body16.1.3

for.body16.1.3:                                   ; preds = %for.inc.1.3, %for.body16.lr.ph.1.3
  %indvars.iv.1.3 = phi i64 [ 0, %for.body16.lr.ph.1.3 ], [ %indvars.iv.next.1.3, %for.inc.1.3 ]
  %partial_sum.12.1.3 = phi float [ %partial_sum.05.1.3, %for.body16.lr.ph.1.3 ], [ %partial_sum.2.1.3, %for.inc.1.3 ]
  %322 = trunc i64 %indvars.iv.1.3 to i32
  %add17.1.3 = add nsw i32 %322, %inc54.3256
  %cmp18.1.3 = icmp sgt i32 %add17.1.3, -1
  %cmp21.1.3 = icmp ult i32 %add17.1.3, %img_width
  %323 = and i1 %cmp18.1.3, %cmp21.1.3
  br i1 %323, label %if.end26.1.3, label %for.inc.1.3

if.end26.1.3:                                     ; preds = %for.body16.1.3
  %add29.1.3 = add nsw i32 %add17.1.3, %mul.1.3
  %idxprom.1.3 = sext i32 %add29.1.3 to i64
  %arrayidx.1.3 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.3
  %324 = load float, float* %arrayidx.1.3, align 4
  %325 = trunc i64 %indvars.iv.1.3 to i32
  %add31.1.3 = add i32 %325, %mul30.1.3
  %idxprom32.1.3 = zext i32 %add31.1.3 to i64
  %arrayidx33.1.3 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.3
  %326 = load float, float* %arrayidx33.1.3, align 4
  %mul34.1.3 = fmul float %324, %326
  %add35.1.3 = fadd float %partial_sum.12.1.3, %mul34.1.3
  br label %for.inc.1.3

for.inc.1.3:                                      ; preds = %if.end26.1.3, %for.body16.1.3
  %partial_sum.2.1.3 = phi float [ %add35.1.3, %if.end26.1.3 ], [ %partial_sum.12.1.3, %for.body16.1.3 ]
  %indvars.iv.next.1.3 = add nuw nsw i64 %indvars.iv.1.3, 1
  %lftr.wideiv.1.3 = trunc i64 %indvars.iv.next.1.3 to i32
  %exitcond.1.3 = icmp eq i32 %lftr.wideiv.1.3, %kern_width
  br i1 %exitcond.1.3, label %for.inc36.1.3.loopexit, label %for.body16.1.3, !llvm.loop !1

for.inc36.1.3.loopexit:                           ; preds = %for.inc.1.3
  %partial_sum.2.1.3.lcssa = phi float [ %partial_sum.2.1.3, %for.inc.1.3 ]
  br label %for.inc36.1.3

for.inc36.1.3:                                    ; preds = %for.inc36.1.3.loopexit, %for.body10.1.3
  %partial_sum.3.1.3 = phi float [ %partial_sum.05.1.3, %for.body10.1.3 ], [ %partial_sum.2.1.3.lcssa, %for.inc36.1.3.loopexit ]
  %inc37.1.3 = add nuw nsw i32 %ki.06.1.3, 1
  %exitcond19.1.3 = icmp eq i32 %inc37.1.3, %kern_height
  br i1 %exitcond19.1.3, label %for.end38.1.3.loopexit, label %for.body10.1.3, !llvm.loop !3

for.end38.1.3.loopexit:                           ; preds = %for.inc36.1.3
  %partial_sum.3.1.3.lcssa = phi float [ %partial_sum.3.1.3, %for.inc36.1.3 ]
  br label %for.end38.1.3

for.end38.1.3:                                    ; preds = %for.end38.1.3.loopexit, %for.inc53.3259
  %partial_sum.0.lcssa.1.3 = phi float [ 0.000000e+00, %for.inc53.3259 ], [ %partial_sum.3.1.3.lcssa, %for.end38.1.3.loopexit ]
  br i1 %tobool39, label %if.else.1.3, label %if.then40.1.3

if.then40.1.3:                                    ; preds = %for.end38.1.3
  %cmp41.1.3 = fcmp olt float %partial_sum.0.lcssa.1.3, 0.000000e+00
  %sub42.1.3 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.3
  %cond.1.3 = select i1 %cmp41.1.3, float %sub42.1.3, float %partial_sum.0.lcssa.1.3
  %conv.1.3 = fptoui float %cond.1.3 to i8
  %conv43.1.3 = uitofp i8 %conv.1.3 to float
  %327 = add nsw i64 %indvars.iv.next21.3257, %307
  %arrayidx47.1.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %327
  store float %conv43.1.3, float* %arrayidx47.1.3, align 4
  br label %for.inc53.1.3

if.else.1.3:                                      ; preds = %for.end38.1.3
  %328 = add nsw i64 %indvars.iv.next21.3257, %306
  %arrayidx51.1.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %328
  store float %partial_sum.0.lcssa.1.3, float* %arrayidx51.1.3, align 4
  br label %for.inc53.1.3

for.inc53.1.3:                                    ; preds = %if.else.1.3, %if.then40.1.3
  %inc54.1.3 = add nsw i32 %in_j.011.3, 2
  %indvars.iv.next21.1.3 = add nsw i64 %indvars.iv20.3, 2
  br i1 %cmp94, label %for.end38.2.3, label %for.body10.2.3.preheader

for.body10.2.3.preheader:                         ; preds = %for.inc53.1.3
  br label %for.body10.2.3

for.body10.2.3:                                   ; preds = %for.body10.2.3.preheader, %for.inc36.2.3
  %ki.06.2.3 = phi i32 [ %inc37.2.3, %for.inc36.2.3 ], [ 0, %for.body10.2.3.preheader ]
  %partial_sum.05.2.3 = phi float [ %partial_sum.3.2.3, %for.inc36.2.3 ], [ 0.000000e+00, %for.body10.2.3.preheader ]
  %add.2.3 = add nsw i32 %ki.06.2.3, %inc58.2
  %notlhs.2.3 = icmp slt i32 %add.2.3, 0
  %notrhs.2.3 = icmp uge i32 %add.2.3, %img_height
  %.not.2.3 = or i1 %notrhs.2.3, %notlhs.2.3
  %brmerge.2.3 = or i1 %.not.2.3, %cmp151.not.2.3
  br i1 %brmerge.2.3, label %for.inc36.2.3, label %for.body16.lr.ph.2.3

for.body16.lr.ph.2.3:                             ; preds = %for.body10.2.3
  %mul.2.3 = shl i32 %add.2.3, 7
  %mul30.2.3 = mul i32 %ki.06.2.3, %kern_width
  br label %for.body16.2.3

for.body16.2.3:                                   ; preds = %for.inc.2.3, %for.body16.lr.ph.2.3
  %indvars.iv.2.3 = phi i64 [ 0, %for.body16.lr.ph.2.3 ], [ %indvars.iv.next.2.3, %for.inc.2.3 ]
  %partial_sum.12.2.3 = phi float [ %partial_sum.05.2.3, %for.body16.lr.ph.2.3 ], [ %partial_sum.2.2.3, %for.inc.2.3 ]
  %329 = trunc i64 %indvars.iv.2.3 to i32
  %add17.2.3 = add nsw i32 %329, %inc54.1.3
  %cmp18.2.3 = icmp sgt i32 %add17.2.3, -1
  %cmp21.2.3 = icmp ult i32 %add17.2.3, %img_width
  %330 = and i1 %cmp18.2.3, %cmp21.2.3
  br i1 %330, label %if.end26.2.3, label %for.inc.2.3

if.end26.2.3:                                     ; preds = %for.body16.2.3
  %add29.2.3 = add nsw i32 %add17.2.3, %mul.2.3
  %idxprom.2.3 = sext i32 %add29.2.3 to i64
  %arrayidx.2.3 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.3
  %331 = load float, float* %arrayidx.2.3, align 4
  %332 = trunc i64 %indvars.iv.2.3 to i32
  %add31.2.3 = add i32 %332, %mul30.2.3
  %idxprom32.2.3 = zext i32 %add31.2.3 to i64
  %arrayidx33.2.3 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.3
  %333 = load float, float* %arrayidx33.2.3, align 4
  %mul34.2.3 = fmul float %331, %333
  %add35.2.3 = fadd float %partial_sum.12.2.3, %mul34.2.3
  br label %for.inc.2.3

for.inc.2.3:                                      ; preds = %if.end26.2.3, %for.body16.2.3
  %partial_sum.2.2.3 = phi float [ %add35.2.3, %if.end26.2.3 ], [ %partial_sum.12.2.3, %for.body16.2.3 ]
  %indvars.iv.next.2.3 = add nuw nsw i64 %indvars.iv.2.3, 1
  %lftr.wideiv.2.3 = trunc i64 %indvars.iv.next.2.3 to i32
  %exitcond.2.3 = icmp eq i32 %lftr.wideiv.2.3, %kern_width
  br i1 %exitcond.2.3, label %for.inc36.2.3.loopexit, label %for.body16.2.3, !llvm.loop !1

for.inc36.2.3.loopexit:                           ; preds = %for.inc.2.3
  %partial_sum.2.2.3.lcssa = phi float [ %partial_sum.2.2.3, %for.inc.2.3 ]
  br label %for.inc36.2.3

for.inc36.2.3:                                    ; preds = %for.inc36.2.3.loopexit, %for.body10.2.3
  %partial_sum.3.2.3 = phi float [ %partial_sum.05.2.3, %for.body10.2.3 ], [ %partial_sum.2.2.3.lcssa, %for.inc36.2.3.loopexit ]
  %inc37.2.3 = add nuw nsw i32 %ki.06.2.3, 1
  %exitcond19.2.3 = icmp eq i32 %inc37.2.3, %kern_height
  br i1 %exitcond19.2.3, label %for.end38.2.3.loopexit, label %for.body10.2.3, !llvm.loop !3

for.end38.2.3.loopexit:                           ; preds = %for.inc36.2.3
  %partial_sum.3.2.3.lcssa = phi float [ %partial_sum.3.2.3, %for.inc36.2.3 ]
  br label %for.end38.2.3

for.end38.2.3:                                    ; preds = %for.end38.2.3.loopexit, %for.inc53.1.3
  %partial_sum.0.lcssa.2.3 = phi float [ 0.000000e+00, %for.inc53.1.3 ], [ %partial_sum.3.2.3.lcssa, %for.end38.2.3.loopexit ]
  br i1 %tobool39, label %if.else.2.3, label %if.then40.2.3

if.then40.2.3:                                    ; preds = %for.end38.2.3
  %cmp41.2.3 = fcmp olt float %partial_sum.0.lcssa.2.3, 0.000000e+00
  %sub42.2.3 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.3
  %cond.2.3 = select i1 %cmp41.2.3, float %sub42.2.3, float %partial_sum.0.lcssa.2.3
  %conv.2.3 = fptoui float %cond.2.3 to i8
  %conv43.2.3 = uitofp i8 %conv.2.3 to float
  %334 = add nsw i64 %indvars.iv.next21.1.3, %307
  %arrayidx47.2.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %334
  store float %conv43.2.3, float* %arrayidx47.2.3, align 4
  br label %for.inc53.2.3

if.else.2.3:                                      ; preds = %for.end38.2.3
  %335 = add nsw i64 %indvars.iv.next21.1.3, %306
  %arrayidx51.2.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %335
  store float %partial_sum.0.lcssa.2.3, float* %arrayidx51.2.3, align 4
  br label %for.inc53.2.3

for.inc53.2.3:                                    ; preds = %if.else.2.3, %if.then40.2.3
  %inc54.2.3 = add nsw i32 %in_j.011.3, 3
  %indvars.iv.next21.2.3 = add nsw i64 %indvars.iv20.3, 3
  br i1 %cmp94, label %for.end38.3.3, label %for.body10.3.3.preheader

for.body10.3.3.preheader:                         ; preds = %for.inc53.2.3
  br label %for.body10.3.3

for.body10.3.3:                                   ; preds = %for.body10.3.3.preheader, %for.inc36.3.3
  %ki.06.3.3 = phi i32 [ %inc37.3.3, %for.inc36.3.3 ], [ 0, %for.body10.3.3.preheader ]
  %partial_sum.05.3.3 = phi float [ %partial_sum.3.3.3, %for.inc36.3.3 ], [ 0.000000e+00, %for.body10.3.3.preheader ]
  %add.3.3 = add nsw i32 %ki.06.3.3, %inc58.2
  %notlhs.3.3 = icmp slt i32 %add.3.3, 0
  %notrhs.3.3 = icmp uge i32 %add.3.3, %img_height
  %.not.3.3 = or i1 %notrhs.3.3, %notlhs.3.3
  %brmerge.3.3 = or i1 %.not.3.3, %cmp151.not.3.3
  br i1 %brmerge.3.3, label %for.inc36.3.3, label %for.body16.lr.ph.3.3

for.body16.lr.ph.3.3:                             ; preds = %for.body10.3.3
  %mul.3.3 = shl i32 %add.3.3, 7
  %mul30.3.3 = mul i32 %ki.06.3.3, %kern_width
  br label %for.body16.3.3

for.body16.3.3:                                   ; preds = %for.inc.3.3, %for.body16.lr.ph.3.3
  %indvars.iv.3.3 = phi i64 [ 0, %for.body16.lr.ph.3.3 ], [ %indvars.iv.next.3.3, %for.inc.3.3 ]
  %partial_sum.12.3.3 = phi float [ %partial_sum.05.3.3, %for.body16.lr.ph.3.3 ], [ %partial_sum.2.3.3, %for.inc.3.3 ]
  %336 = trunc i64 %indvars.iv.3.3 to i32
  %add17.3.3 = add nsw i32 %336, %inc54.2.3
  %cmp18.3.3 = icmp sgt i32 %add17.3.3, -1
  %cmp21.3.3 = icmp ult i32 %add17.3.3, %img_width
  %337 = and i1 %cmp18.3.3, %cmp21.3.3
  br i1 %337, label %if.end26.3.3, label %for.inc.3.3

if.end26.3.3:                                     ; preds = %for.body16.3.3
  %add29.3.3 = add nsw i32 %add17.3.3, %mul.3.3
  %idxprom.3.3 = sext i32 %add29.3.3 to i64
  %arrayidx.3.3 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.3
  %338 = load float, float* %arrayidx.3.3, align 4
  %339 = trunc i64 %indvars.iv.3.3 to i32
  %add31.3.3 = add i32 %339, %mul30.3.3
  %idxprom32.3.3 = zext i32 %add31.3.3 to i64
  %arrayidx33.3.3 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.3
  %340 = load float, float* %arrayidx33.3.3, align 4
  %mul34.3.3 = fmul float %338, %340
  %add35.3.3 = fadd float %partial_sum.12.3.3, %mul34.3.3
  br label %for.inc.3.3

for.inc.3.3:                                      ; preds = %if.end26.3.3, %for.body16.3.3
  %partial_sum.2.3.3 = phi float [ %add35.3.3, %if.end26.3.3 ], [ %partial_sum.12.3.3, %for.body16.3.3 ]
  %indvars.iv.next.3.3 = add nuw nsw i64 %indvars.iv.3.3, 1
  %lftr.wideiv.3.3 = trunc i64 %indvars.iv.next.3.3 to i32
  %exitcond.3.3 = icmp eq i32 %lftr.wideiv.3.3, %kern_width
  br i1 %exitcond.3.3, label %for.inc36.3.3.loopexit, label %for.body16.3.3, !llvm.loop !1

for.inc36.3.3.loopexit:                           ; preds = %for.inc.3.3
  %partial_sum.2.3.3.lcssa = phi float [ %partial_sum.2.3.3, %for.inc.3.3 ]
  br label %for.inc36.3.3

for.inc36.3.3:                                    ; preds = %for.inc36.3.3.loopexit, %for.body10.3.3
  %partial_sum.3.3.3 = phi float [ %partial_sum.05.3.3, %for.body10.3.3 ], [ %partial_sum.2.3.3.lcssa, %for.inc36.3.3.loopexit ]
  %inc37.3.3 = add nuw nsw i32 %ki.06.3.3, 1
  %exitcond19.3.3 = icmp eq i32 %inc37.3.3, %kern_height
  br i1 %exitcond19.3.3, label %for.end38.3.3.loopexit, label %for.body10.3.3, !llvm.loop !3

for.end38.3.3.loopexit:                           ; preds = %for.inc36.3.3
  %partial_sum.3.3.3.lcssa = phi float [ %partial_sum.3.3.3, %for.inc36.3.3 ]
  br label %for.end38.3.3

for.end38.3.3:                                    ; preds = %for.end38.3.3.loopexit, %for.inc53.2.3
  %partial_sum.0.lcssa.3.3 = phi float [ 0.000000e+00, %for.inc53.2.3 ], [ %partial_sum.3.3.3.lcssa, %for.end38.3.3.loopexit ]
  br i1 %tobool39, label %if.else.3.3, label %if.then40.3.3

if.then40.3.3:                                    ; preds = %for.end38.3.3
  %cmp41.3.3 = fcmp olt float %partial_sum.0.lcssa.3.3, 0.000000e+00
  %sub42.3.3 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.3
  %cond.3.3 = select i1 %cmp41.3.3, float %sub42.3.3, float %partial_sum.0.lcssa.3.3
  %conv.3.3 = fptoui float %cond.3.3 to i8
  %conv43.3.3 = uitofp i8 %conv.3.3 to float
  %341 = add nsw i64 %indvars.iv.next21.2.3, %307
  %arrayidx47.3.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %341
  store float %conv43.3.3, float* %arrayidx47.3.3, align 4
  br label %for.inc53.3.3

if.else.3.3:                                      ; preds = %for.end38.3.3
  %342 = add nsw i64 %indvars.iv.next21.2.3, %306
  %arrayidx51.3.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %342
  store float %partial_sum.0.lcssa.3.3, float* %arrayidx51.3.3, align 4
  br label %for.inc53.3.3

for.inc53.3.3:                                    ; preds = %if.else.3.3, %if.then40.3.3
  %inc54.3.3 = add nsw i32 %in_j.011.3, 4
  %indvars.iv.next21.3.3 = add nsw i64 %indvars.iv20.3, 4
  br i1 %cmp94, label %for.end38.4.3, label %for.body10.4.3.preheader

for.body10.4.3.preheader:                         ; preds = %for.inc53.3.3
  br label %for.body10.4.3

for.body10.4.3:                                   ; preds = %for.body10.4.3.preheader, %for.inc36.4.3
  %ki.06.4.3 = phi i32 [ %inc37.4.3, %for.inc36.4.3 ], [ 0, %for.body10.4.3.preheader ]
  %partial_sum.05.4.3 = phi float [ %partial_sum.3.4.3, %for.inc36.4.3 ], [ 0.000000e+00, %for.body10.4.3.preheader ]
  %add.4.3 = add nsw i32 %ki.06.4.3, %inc58.2
  %notlhs.4.3 = icmp slt i32 %add.4.3, 0
  %notrhs.4.3 = icmp uge i32 %add.4.3, %img_height
  %.not.4.3 = or i1 %notrhs.4.3, %notlhs.4.3
  %brmerge.4.3 = or i1 %.not.4.3, %cmp151.not.4.3
  br i1 %brmerge.4.3, label %for.inc36.4.3, label %for.body16.lr.ph.4.3

for.body16.lr.ph.4.3:                             ; preds = %for.body10.4.3
  %mul.4.3 = shl i32 %add.4.3, 7
  %mul30.4.3 = mul i32 %ki.06.4.3, %kern_width
  br label %for.body16.4.3

for.body16.4.3:                                   ; preds = %for.inc.4.3, %for.body16.lr.ph.4.3
  %indvars.iv.4.3 = phi i64 [ 0, %for.body16.lr.ph.4.3 ], [ %indvars.iv.next.4.3, %for.inc.4.3 ]
  %partial_sum.12.4.3 = phi float [ %partial_sum.05.4.3, %for.body16.lr.ph.4.3 ], [ %partial_sum.2.4.3, %for.inc.4.3 ]
  %343 = trunc i64 %indvars.iv.4.3 to i32
  %add17.4.3 = add nsw i32 %343, %inc54.3.3
  %cmp18.4.3 = icmp sgt i32 %add17.4.3, -1
  %cmp21.4.3 = icmp ult i32 %add17.4.3, %img_width
  %344 = and i1 %cmp18.4.3, %cmp21.4.3
  br i1 %344, label %if.end26.4.3, label %for.inc.4.3

if.end26.4.3:                                     ; preds = %for.body16.4.3
  %add29.4.3 = add nsw i32 %add17.4.3, %mul.4.3
  %idxprom.4.3 = sext i32 %add29.4.3 to i64
  %arrayidx.4.3 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.3
  %345 = load float, float* %arrayidx.4.3, align 4
  %346 = trunc i64 %indvars.iv.4.3 to i32
  %add31.4.3 = add i32 %346, %mul30.4.3
  %idxprom32.4.3 = zext i32 %add31.4.3 to i64
  %arrayidx33.4.3 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.3
  %347 = load float, float* %arrayidx33.4.3, align 4
  %mul34.4.3 = fmul float %345, %347
  %add35.4.3 = fadd float %partial_sum.12.4.3, %mul34.4.3
  br label %for.inc.4.3

for.inc.4.3:                                      ; preds = %if.end26.4.3, %for.body16.4.3
  %partial_sum.2.4.3 = phi float [ %add35.4.3, %if.end26.4.3 ], [ %partial_sum.12.4.3, %for.body16.4.3 ]
  %indvars.iv.next.4.3 = add nuw nsw i64 %indvars.iv.4.3, 1
  %lftr.wideiv.4.3 = trunc i64 %indvars.iv.next.4.3 to i32
  %exitcond.4.3 = icmp eq i32 %lftr.wideiv.4.3, %kern_width
  br i1 %exitcond.4.3, label %for.inc36.4.3.loopexit, label %for.body16.4.3, !llvm.loop !1

for.inc36.4.3.loopexit:                           ; preds = %for.inc.4.3
  %partial_sum.2.4.3.lcssa = phi float [ %partial_sum.2.4.3, %for.inc.4.3 ]
  br label %for.inc36.4.3

for.inc36.4.3:                                    ; preds = %for.inc36.4.3.loopexit, %for.body10.4.3
  %partial_sum.3.4.3 = phi float [ %partial_sum.05.4.3, %for.body10.4.3 ], [ %partial_sum.2.4.3.lcssa, %for.inc36.4.3.loopexit ]
  %inc37.4.3 = add nuw nsw i32 %ki.06.4.3, 1
  %exitcond19.4.3 = icmp eq i32 %inc37.4.3, %kern_height
  br i1 %exitcond19.4.3, label %for.end38.4.3.loopexit, label %for.body10.4.3, !llvm.loop !3

for.end38.4.3.loopexit:                           ; preds = %for.inc36.4.3
  %partial_sum.3.4.3.lcssa = phi float [ %partial_sum.3.4.3, %for.inc36.4.3 ]
  br label %for.end38.4.3

for.end38.4.3:                                    ; preds = %for.end38.4.3.loopexit, %for.inc53.3.3
  %partial_sum.0.lcssa.4.3 = phi float [ 0.000000e+00, %for.inc53.3.3 ], [ %partial_sum.3.4.3.lcssa, %for.end38.4.3.loopexit ]
  br i1 %tobool39, label %if.else.4.3, label %if.then40.4.3

if.then40.4.3:                                    ; preds = %for.end38.4.3
  %cmp41.4.3 = fcmp olt float %partial_sum.0.lcssa.4.3, 0.000000e+00
  %sub42.4.3 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.3
  %cond.4.3 = select i1 %cmp41.4.3, float %sub42.4.3, float %partial_sum.0.lcssa.4.3
  %conv.4.3 = fptoui float %cond.4.3 to i8
  %conv43.4.3 = uitofp i8 %conv.4.3 to float
  %348 = add nsw i64 %indvars.iv.next21.3.3, %307
  %arrayidx47.4.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %348
  store float %conv43.4.3, float* %arrayidx47.4.3, align 4
  br label %for.inc53.4.3

if.else.4.3:                                      ; preds = %for.end38.4.3
  %349 = add nsw i64 %indvars.iv.next21.3.3, %306
  %arrayidx51.4.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %349
  store float %partial_sum.0.lcssa.4.3, float* %arrayidx51.4.3, align 4
  br label %for.inc53.4.3

for.inc53.4.3:                                    ; preds = %if.else.4.3, %if.then40.4.3
  %inc54.4.3 = add nsw i32 %in_j.011.3, 5
  %indvars.iv.next21.4.3 = add nsw i64 %indvars.iv20.3, 5
  br i1 %cmp94, label %for.end38.5.3, label %for.body10.5.3.preheader

for.body10.5.3.preheader:                         ; preds = %for.inc53.4.3
  br label %for.body10.5.3

for.body10.5.3:                                   ; preds = %for.body10.5.3.preheader, %for.inc36.5.3
  %ki.06.5.3 = phi i32 [ %inc37.5.3, %for.inc36.5.3 ], [ 0, %for.body10.5.3.preheader ]
  %partial_sum.05.5.3 = phi float [ %partial_sum.3.5.3, %for.inc36.5.3 ], [ 0.000000e+00, %for.body10.5.3.preheader ]
  %add.5.3 = add nsw i32 %ki.06.5.3, %inc58.2
  %notlhs.5.3 = icmp slt i32 %add.5.3, 0
  %notrhs.5.3 = icmp uge i32 %add.5.3, %img_height
  %.not.5.3 = or i1 %notrhs.5.3, %notlhs.5.3
  %brmerge.5.3 = or i1 %.not.5.3, %cmp151.not.5.3
  br i1 %brmerge.5.3, label %for.inc36.5.3, label %for.body16.lr.ph.5.3

for.body16.lr.ph.5.3:                             ; preds = %for.body10.5.3
  %mul.5.3 = shl i32 %add.5.3, 7
  %mul30.5.3 = mul i32 %ki.06.5.3, %kern_width
  br label %for.body16.5.3

for.body16.5.3:                                   ; preds = %for.inc.5.3, %for.body16.lr.ph.5.3
  %indvars.iv.5.3 = phi i64 [ 0, %for.body16.lr.ph.5.3 ], [ %indvars.iv.next.5.3, %for.inc.5.3 ]
  %partial_sum.12.5.3 = phi float [ %partial_sum.05.5.3, %for.body16.lr.ph.5.3 ], [ %partial_sum.2.5.3, %for.inc.5.3 ]
  %350 = trunc i64 %indvars.iv.5.3 to i32
  %add17.5.3 = add nsw i32 %350, %inc54.4.3
  %cmp18.5.3 = icmp sgt i32 %add17.5.3, -1
  %cmp21.5.3 = icmp ult i32 %add17.5.3, %img_width
  %351 = and i1 %cmp18.5.3, %cmp21.5.3
  br i1 %351, label %if.end26.5.3, label %for.inc.5.3

if.end26.5.3:                                     ; preds = %for.body16.5.3
  %add29.5.3 = add nsw i32 %add17.5.3, %mul.5.3
  %idxprom.5.3 = sext i32 %add29.5.3 to i64
  %arrayidx.5.3 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.3
  %352 = load float, float* %arrayidx.5.3, align 4
  %353 = trunc i64 %indvars.iv.5.3 to i32
  %add31.5.3 = add i32 %353, %mul30.5.3
  %idxprom32.5.3 = zext i32 %add31.5.3 to i64
  %arrayidx33.5.3 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.3
  %354 = load float, float* %arrayidx33.5.3, align 4
  %mul34.5.3 = fmul float %352, %354
  %add35.5.3 = fadd float %partial_sum.12.5.3, %mul34.5.3
  br label %for.inc.5.3

for.inc.5.3:                                      ; preds = %if.end26.5.3, %for.body16.5.3
  %partial_sum.2.5.3 = phi float [ %add35.5.3, %if.end26.5.3 ], [ %partial_sum.12.5.3, %for.body16.5.3 ]
  %indvars.iv.next.5.3 = add nuw nsw i64 %indvars.iv.5.3, 1
  %lftr.wideiv.5.3 = trunc i64 %indvars.iv.next.5.3 to i32
  %exitcond.5.3 = icmp eq i32 %lftr.wideiv.5.3, %kern_width
  br i1 %exitcond.5.3, label %for.inc36.5.3.loopexit, label %for.body16.5.3, !llvm.loop !1

for.inc36.5.3.loopexit:                           ; preds = %for.inc.5.3
  %partial_sum.2.5.3.lcssa = phi float [ %partial_sum.2.5.3, %for.inc.5.3 ]
  br label %for.inc36.5.3

for.inc36.5.3:                                    ; preds = %for.inc36.5.3.loopexit, %for.body10.5.3
  %partial_sum.3.5.3 = phi float [ %partial_sum.05.5.3, %for.body10.5.3 ], [ %partial_sum.2.5.3.lcssa, %for.inc36.5.3.loopexit ]
  %inc37.5.3 = add nuw nsw i32 %ki.06.5.3, 1
  %exitcond19.5.3 = icmp eq i32 %inc37.5.3, %kern_height
  br i1 %exitcond19.5.3, label %for.end38.5.3.loopexit, label %for.body10.5.3, !llvm.loop !3

for.end38.5.3.loopexit:                           ; preds = %for.inc36.5.3
  %partial_sum.3.5.3.lcssa = phi float [ %partial_sum.3.5.3, %for.inc36.5.3 ]
  br label %for.end38.5.3

for.end38.5.3:                                    ; preds = %for.end38.5.3.loopexit, %for.inc53.4.3
  %partial_sum.0.lcssa.5.3 = phi float [ 0.000000e+00, %for.inc53.4.3 ], [ %partial_sum.3.5.3.lcssa, %for.end38.5.3.loopexit ]
  br i1 %tobool39, label %if.else.5.3, label %if.then40.5.3

if.then40.5.3:                                    ; preds = %for.end38.5.3
  %cmp41.5.3 = fcmp olt float %partial_sum.0.lcssa.5.3, 0.000000e+00
  %sub42.5.3 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.3
  %cond.5.3 = select i1 %cmp41.5.3, float %sub42.5.3, float %partial_sum.0.lcssa.5.3
  %conv.5.3 = fptoui float %cond.5.3 to i8
  %conv43.5.3 = uitofp i8 %conv.5.3 to float
  %355 = add nsw i64 %indvars.iv.next21.4.3, %307
  %arrayidx47.5.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %355
  store float %conv43.5.3, float* %arrayidx47.5.3, align 4
  br label %for.inc53.5.3

if.else.5.3:                                      ; preds = %for.end38.5.3
  %356 = add nsw i64 %indvars.iv.next21.4.3, %306
  %arrayidx51.5.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %356
  store float %partial_sum.0.lcssa.5.3, float* %arrayidx51.5.3, align 4
  br label %for.inc53.5.3

for.inc53.5.3:                                    ; preds = %if.else.5.3, %if.then40.5.3
  %inc54.5.3 = add nsw i32 %in_j.011.3, 6
  %indvars.iv.next21.5.3 = add nsw i64 %indvars.iv20.3, 6
  br i1 %cmp94, label %for.end38.6.3, label %for.body10.6.3.preheader

for.body10.6.3.preheader:                         ; preds = %for.inc53.5.3
  br label %for.body10.6.3

for.body10.6.3:                                   ; preds = %for.body10.6.3.preheader, %for.inc36.6.3
  %ki.06.6.3 = phi i32 [ %inc37.6.3, %for.inc36.6.3 ], [ 0, %for.body10.6.3.preheader ]
  %partial_sum.05.6.3 = phi float [ %partial_sum.3.6.3, %for.inc36.6.3 ], [ 0.000000e+00, %for.body10.6.3.preheader ]
  %add.6.3 = add nsw i32 %ki.06.6.3, %inc58.2
  %notlhs.6.3 = icmp slt i32 %add.6.3, 0
  %notrhs.6.3 = icmp uge i32 %add.6.3, %img_height
  %.not.6.3 = or i1 %notrhs.6.3, %notlhs.6.3
  %brmerge.6.3 = or i1 %.not.6.3, %cmp151.not.6.3
  br i1 %brmerge.6.3, label %for.inc36.6.3, label %for.body16.lr.ph.6.3

for.body16.lr.ph.6.3:                             ; preds = %for.body10.6.3
  %mul.6.3 = shl i32 %add.6.3, 7
  %mul30.6.3 = mul i32 %ki.06.6.3, %kern_width
  br label %for.body16.6.3

for.body16.6.3:                                   ; preds = %for.inc.6.3, %for.body16.lr.ph.6.3
  %indvars.iv.6.3 = phi i64 [ 0, %for.body16.lr.ph.6.3 ], [ %indvars.iv.next.6.3, %for.inc.6.3 ]
  %partial_sum.12.6.3 = phi float [ %partial_sum.05.6.3, %for.body16.lr.ph.6.3 ], [ %partial_sum.2.6.3, %for.inc.6.3 ]
  %357 = trunc i64 %indvars.iv.6.3 to i32
  %add17.6.3 = add nsw i32 %357, %inc54.5.3
  %cmp18.6.3 = icmp sgt i32 %add17.6.3, -1
  %cmp21.6.3 = icmp ult i32 %add17.6.3, %img_width
  %358 = and i1 %cmp18.6.3, %cmp21.6.3
  br i1 %358, label %if.end26.6.3, label %for.inc.6.3

if.end26.6.3:                                     ; preds = %for.body16.6.3
  %add29.6.3 = add nsw i32 %add17.6.3, %mul.6.3
  %idxprom.6.3 = sext i32 %add29.6.3 to i64
  %arrayidx.6.3 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.3
  %359 = load float, float* %arrayidx.6.3, align 4
  %360 = trunc i64 %indvars.iv.6.3 to i32
  %add31.6.3 = add i32 %360, %mul30.6.3
  %idxprom32.6.3 = zext i32 %add31.6.3 to i64
  %arrayidx33.6.3 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.3
  %361 = load float, float* %arrayidx33.6.3, align 4
  %mul34.6.3 = fmul float %359, %361
  %add35.6.3 = fadd float %partial_sum.12.6.3, %mul34.6.3
  br label %for.inc.6.3

for.inc.6.3:                                      ; preds = %if.end26.6.3, %for.body16.6.3
  %partial_sum.2.6.3 = phi float [ %add35.6.3, %if.end26.6.3 ], [ %partial_sum.12.6.3, %for.body16.6.3 ]
  %indvars.iv.next.6.3 = add nuw nsw i64 %indvars.iv.6.3, 1
  %lftr.wideiv.6.3 = trunc i64 %indvars.iv.next.6.3 to i32
  %exitcond.6.3 = icmp eq i32 %lftr.wideiv.6.3, %kern_width
  br i1 %exitcond.6.3, label %for.inc36.6.3.loopexit, label %for.body16.6.3, !llvm.loop !1

for.inc36.6.3.loopexit:                           ; preds = %for.inc.6.3
  %partial_sum.2.6.3.lcssa = phi float [ %partial_sum.2.6.3, %for.inc.6.3 ]
  br label %for.inc36.6.3

for.inc36.6.3:                                    ; preds = %for.inc36.6.3.loopexit, %for.body10.6.3
  %partial_sum.3.6.3 = phi float [ %partial_sum.05.6.3, %for.body10.6.3 ], [ %partial_sum.2.6.3.lcssa, %for.inc36.6.3.loopexit ]
  %inc37.6.3 = add nuw nsw i32 %ki.06.6.3, 1
  %exitcond19.6.3 = icmp eq i32 %inc37.6.3, %kern_height
  br i1 %exitcond19.6.3, label %for.end38.6.3.loopexit, label %for.body10.6.3, !llvm.loop !3

for.end38.6.3.loopexit:                           ; preds = %for.inc36.6.3
  %partial_sum.3.6.3.lcssa = phi float [ %partial_sum.3.6.3, %for.inc36.6.3 ]
  br label %for.end38.6.3

for.end38.6.3:                                    ; preds = %for.end38.6.3.loopexit, %for.inc53.5.3
  %partial_sum.0.lcssa.6.3 = phi float [ 0.000000e+00, %for.inc53.5.3 ], [ %partial_sum.3.6.3.lcssa, %for.end38.6.3.loopexit ]
  br i1 %tobool39, label %if.else.6.3, label %if.then40.6.3

if.then40.6.3:                                    ; preds = %for.end38.6.3
  %cmp41.6.3 = fcmp olt float %partial_sum.0.lcssa.6.3, 0.000000e+00
  %sub42.6.3 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.3
  %cond.6.3 = select i1 %cmp41.6.3, float %sub42.6.3, float %partial_sum.0.lcssa.6.3
  %conv.6.3 = fptoui float %cond.6.3 to i8
  %conv43.6.3 = uitofp i8 %conv.6.3 to float
  %362 = add nsw i64 %indvars.iv.next21.5.3, %307
  %arrayidx47.6.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %362
  store float %conv43.6.3, float* %arrayidx47.6.3, align 4
  br label %for.inc53.6.3

if.else.6.3:                                      ; preds = %for.end38.6.3
  %363 = add nsw i64 %indvars.iv.next21.5.3, %306
  %arrayidx51.6.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %363
  store float %partial_sum.0.lcssa.6.3, float* %arrayidx51.6.3, align 4
  br label %for.inc53.6.3

for.inc53.6.3:                                    ; preds = %if.else.6.3, %if.then40.6.3
  %inc54.6.3 = add nsw i32 %in_j.011.3, 7
  %indvars.iv.next21.6.3 = add nsw i64 %indvars.iv20.3, 7
  br i1 %cmp94, label %for.end38.7.3, label %for.body10.7.3.preheader

for.body10.7.3.preheader:                         ; preds = %for.inc53.6.3
  br label %for.body10.7.3

for.body10.7.3:                                   ; preds = %for.body10.7.3.preheader, %for.inc36.7.3
  %ki.06.7.3 = phi i32 [ %inc37.7.3, %for.inc36.7.3 ], [ 0, %for.body10.7.3.preheader ]
  %partial_sum.05.7.3 = phi float [ %partial_sum.3.7.3, %for.inc36.7.3 ], [ 0.000000e+00, %for.body10.7.3.preheader ]
  %add.7.3 = add nsw i32 %ki.06.7.3, %inc58.2
  %notlhs.7.3 = icmp slt i32 %add.7.3, 0
  %notrhs.7.3 = icmp uge i32 %add.7.3, %img_height
  %.not.7.3 = or i1 %notrhs.7.3, %notlhs.7.3
  %brmerge.7.3 = or i1 %.not.7.3, %cmp151.not.7.3
  br i1 %brmerge.7.3, label %for.inc36.7.3, label %for.body16.lr.ph.7.3

for.body16.lr.ph.7.3:                             ; preds = %for.body10.7.3
  %mul.7.3 = shl i32 %add.7.3, 7
  %mul30.7.3 = mul i32 %ki.06.7.3, %kern_width
  br label %for.body16.7.3

for.body16.7.3:                                   ; preds = %for.inc.7.3, %for.body16.lr.ph.7.3
  %indvars.iv.7.3 = phi i64 [ 0, %for.body16.lr.ph.7.3 ], [ %indvars.iv.next.7.3, %for.inc.7.3 ]
  %partial_sum.12.7.3 = phi float [ %partial_sum.05.7.3, %for.body16.lr.ph.7.3 ], [ %partial_sum.2.7.3, %for.inc.7.3 ]
  %364 = trunc i64 %indvars.iv.7.3 to i32
  %add17.7.3 = add nsw i32 %364, %inc54.6.3
  %cmp18.7.3 = icmp sgt i32 %add17.7.3, -1
  %cmp21.7.3 = icmp ult i32 %add17.7.3, %img_width
  %365 = and i1 %cmp18.7.3, %cmp21.7.3
  br i1 %365, label %if.end26.7.3, label %for.inc.7.3

if.end26.7.3:                                     ; preds = %for.body16.7.3
  %add29.7.3 = add nsw i32 %add17.7.3, %mul.7.3
  %idxprom.7.3 = sext i32 %add29.7.3 to i64
  %arrayidx.7.3 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.3
  %366 = load float, float* %arrayidx.7.3, align 4
  %367 = trunc i64 %indvars.iv.7.3 to i32
  %add31.7.3 = add i32 %367, %mul30.7.3
  %idxprom32.7.3 = zext i32 %add31.7.3 to i64
  %arrayidx33.7.3 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.3
  %368 = load float, float* %arrayidx33.7.3, align 4
  %mul34.7.3 = fmul float %366, %368
  %add35.7.3 = fadd float %partial_sum.12.7.3, %mul34.7.3
  br label %for.inc.7.3

for.inc.7.3:                                      ; preds = %if.end26.7.3, %for.body16.7.3
  %partial_sum.2.7.3 = phi float [ %add35.7.3, %if.end26.7.3 ], [ %partial_sum.12.7.3, %for.body16.7.3 ]
  %indvars.iv.next.7.3 = add nuw nsw i64 %indvars.iv.7.3, 1
  %lftr.wideiv.7.3 = trunc i64 %indvars.iv.next.7.3 to i32
  %exitcond.7.3 = icmp eq i32 %lftr.wideiv.7.3, %kern_width
  br i1 %exitcond.7.3, label %for.inc36.7.3.loopexit, label %for.body16.7.3, !llvm.loop !1

for.inc36.7.3.loopexit:                           ; preds = %for.inc.7.3
  %partial_sum.2.7.3.lcssa = phi float [ %partial_sum.2.7.3, %for.inc.7.3 ]
  br label %for.inc36.7.3

for.inc36.7.3:                                    ; preds = %for.inc36.7.3.loopexit, %for.body10.7.3
  %partial_sum.3.7.3 = phi float [ %partial_sum.05.7.3, %for.body10.7.3 ], [ %partial_sum.2.7.3.lcssa, %for.inc36.7.3.loopexit ]
  %inc37.7.3 = add nuw nsw i32 %ki.06.7.3, 1
  %exitcond19.7.3 = icmp eq i32 %inc37.7.3, %kern_height
  br i1 %exitcond19.7.3, label %for.end38.7.3.loopexit, label %for.body10.7.3, !llvm.loop !3

for.end38.7.3.loopexit:                           ; preds = %for.inc36.7.3
  %partial_sum.3.7.3.lcssa = phi float [ %partial_sum.3.7.3, %for.inc36.7.3 ]
  br label %for.end38.7.3

for.end38.7.3:                                    ; preds = %for.end38.7.3.loopexit, %for.inc53.6.3
  %partial_sum.0.lcssa.7.3 = phi float [ 0.000000e+00, %for.inc53.6.3 ], [ %partial_sum.3.7.3.lcssa, %for.end38.7.3.loopexit ]
  br i1 %tobool39, label %if.else.7.3, label %if.then40.7.3

if.then40.7.3:                                    ; preds = %for.end38.7.3
  %cmp41.7.3 = fcmp olt float %partial_sum.0.lcssa.7.3, 0.000000e+00
  %sub42.7.3 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.3
  %cond.7.3 = select i1 %cmp41.7.3, float %sub42.7.3, float %partial_sum.0.lcssa.7.3
  %conv.7.3 = fptoui float %cond.7.3 to i8
  %conv43.7.3 = uitofp i8 %conv.7.3 to float
  %369 = add nsw i64 %indvars.iv.next21.6.3, %307
  %arrayidx47.7.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %369
  store float %conv43.7.3, float* %arrayidx47.7.3, align 4
  br label %for.inc53.7.3

if.else.7.3:                                      ; preds = %for.end38.7.3
  %370 = add nsw i64 %indvars.iv.next21.6.3, %306
  %arrayidx51.7.3 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %370
  store float %partial_sum.0.lcssa.7.3, float* %arrayidx51.7.3, align 4
  br label %for.inc53.7.3

for.inc53.7.3:                                    ; preds = %if.else.7.3, %if.then40.7.3
  %inc54.7.3 = add nsw i32 %in_j.011.3, 8
  %indvars.iv.next21.7.3 = add nsw i64 %indvars.iv20.3, 8
  %lftr.wideiv24.7.3 = trunc i64 %indvars.iv.next21.7.3 to i32
  %exitcond25.7.3 = icmp eq i32 %lftr.wideiv24.7.3, %img_width
  br i1 %exitcond25.7.3, label %for.inc57.3.loopexit, label %for.cond8.preheader.3, !llvm.loop !5

for.inc57.3.loopexit:                             ; preds = %for.inc53.7.3
  br label %for.inc57.3

for.inc57.3:                                      ; preds = %for.inc57.3.loopexit, %for.cond8.preheader.lr.ph.split.3
  %inc58.3 = add nsw i32 %in_i.015, 4
  %indvars.iv.next27.3 = add nsw i64 %indvars.iv26, 4
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.4

for.cond8.preheader.lr.ph.4:                      ; preds = %for.inc57.3
  %371 = trunc i64 %indvars.iv.next27.3 to i32
  %mul48.4 = shl i32 %371, 7
  %372 = trunc i64 %indvars.iv.next27.3 to i32
  %mul44.4 = shl i32 %372, 7
  %373 = sext i32 %mul48.4 to i64
  %374 = sext i32 %mul44.4 to i64
  br i1 %lcmp.mod.4, label %for.cond8.preheader.lr.ph.split.4, label %for.cond8.preheader.prol.4.preheader

for.cond8.preheader.prol.4.preheader:             ; preds = %for.cond8.preheader.lr.ph.4
  br label %for.cond8.preheader.prol.4

for.cond8.preheader.prol.4:                       ; preds = %for.cond8.preheader.prol.4.preheader, %for.inc53.prol.4
  %indvars.iv20.prol.4 = phi i64 [ %indvars.iv.next21.prol.4, %for.inc53.prol.4 ], [ 0, %for.cond8.preheader.prol.4.preheader ]
  %in_j.011.prol.4 = phi i32 [ %inc54.prol.4, %for.inc53.prol.4 ], [ %sub4, %for.cond8.preheader.prol.4.preheader ]
  %prol.iter.4 = phi i32 [ %prol.iter.sub.4, %for.inc53.prol.4 ], [ %xtraiter.4, %for.cond8.preheader.prol.4.preheader ]
  br i1 %cmp94, label %for.end38.prol.4, label %for.body10.prol.4.preheader

for.body10.prol.4.preheader:                      ; preds = %for.cond8.preheader.prol.4
  br label %for.body10.prol.4

for.body10.prol.4:                                ; preds = %for.body10.prol.4.preheader, %for.inc36.prol.4
  %ki.06.prol.4 = phi i32 [ %inc37.prol.4, %for.inc36.prol.4 ], [ 0, %for.body10.prol.4.preheader ]
  %partial_sum.05.prol.4 = phi float [ %partial_sum.3.prol.4, %for.inc36.prol.4 ], [ 0.000000e+00, %for.body10.prol.4.preheader ]
  %add.prol.4 = add nsw i32 %ki.06.prol.4, %inc58.3
  %notlhs.prol.4 = icmp slt i32 %add.prol.4, 0
  %notrhs.prol.4 = icmp uge i32 %add.prol.4, %img_height
  %.not.prol.4 = or i1 %notrhs.prol.4, %notlhs.prol.4
  %brmerge.prol.4 = or i1 %.not.prol.4, %cmp151.not.prol.4
  br i1 %brmerge.prol.4, label %for.inc36.prol.4, label %for.body16.lr.ph.prol.4

for.body16.lr.ph.prol.4:                          ; preds = %for.body10.prol.4
  %mul.prol.4 = shl i32 %add.prol.4, 7
  %mul30.prol.4 = mul i32 %ki.06.prol.4, %kern_width
  br label %for.body16.prol.4

for.body16.prol.4:                                ; preds = %for.inc.prol.4, %for.body16.lr.ph.prol.4
  %indvars.iv.prol.4 = phi i64 [ 0, %for.body16.lr.ph.prol.4 ], [ %indvars.iv.next.prol.4, %for.inc.prol.4 ]
  %partial_sum.12.prol.4 = phi float [ %partial_sum.05.prol.4, %for.body16.lr.ph.prol.4 ], [ %partial_sum.2.prol.4, %for.inc.prol.4 ]
  %375 = trunc i64 %indvars.iv.prol.4 to i32
  %add17.prol.4 = add nsw i32 %375, %in_j.011.prol.4
  %cmp18.prol.4 = icmp sgt i32 %add17.prol.4, -1
  %cmp21.prol.4 = icmp ult i32 %add17.prol.4, %img_width
  %376 = and i1 %cmp18.prol.4, %cmp21.prol.4
  br i1 %376, label %if.end26.prol.4, label %for.inc.prol.4

if.end26.prol.4:                                  ; preds = %for.body16.prol.4
  %add29.prol.4 = add nsw i32 %add17.prol.4, %mul.prol.4
  %idxprom.prol.4 = sext i32 %add29.prol.4 to i64
  %arrayidx.prol.4 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.4
  %377 = load float, float* %arrayidx.prol.4, align 4
  %378 = trunc i64 %indvars.iv.prol.4 to i32
  %add31.prol.4 = add i32 %378, %mul30.prol.4
  %idxprom32.prol.4 = zext i32 %add31.prol.4 to i64
  %arrayidx33.prol.4 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.4
  %379 = load float, float* %arrayidx33.prol.4, align 4
  %mul34.prol.4 = fmul float %377, %379
  %add35.prol.4 = fadd float %partial_sum.12.prol.4, %mul34.prol.4
  br label %for.inc.prol.4

for.inc.prol.4:                                   ; preds = %if.end26.prol.4, %for.body16.prol.4
  %partial_sum.2.prol.4 = phi float [ %add35.prol.4, %if.end26.prol.4 ], [ %partial_sum.12.prol.4, %for.body16.prol.4 ]
  %indvars.iv.next.prol.4 = add nuw nsw i64 %indvars.iv.prol.4, 1
  %lftr.wideiv.prol.4 = trunc i64 %indvars.iv.next.prol.4 to i32
  %exitcond.prol.4 = icmp eq i32 %lftr.wideiv.prol.4, %kern_width
  br i1 %exitcond.prol.4, label %for.inc36.prol.4.loopexit, label %for.body16.prol.4, !llvm.loop !1

for.inc36.prol.4.loopexit:                        ; preds = %for.inc.prol.4
  %partial_sum.2.prol.4.lcssa = phi float [ %partial_sum.2.prol.4, %for.inc.prol.4 ]
  br label %for.inc36.prol.4

for.inc36.prol.4:                                 ; preds = %for.inc36.prol.4.loopexit, %for.body10.prol.4
  %partial_sum.3.prol.4 = phi float [ %partial_sum.05.prol.4, %for.body10.prol.4 ], [ %partial_sum.2.prol.4.lcssa, %for.inc36.prol.4.loopexit ]
  %inc37.prol.4 = add nuw nsw i32 %ki.06.prol.4, 1
  %exitcond19.prol.4 = icmp eq i32 %inc37.prol.4, %kern_height
  br i1 %exitcond19.prol.4, label %for.end38.prol.4.loopexit, label %for.body10.prol.4, !llvm.loop !3

for.end38.prol.4.loopexit:                        ; preds = %for.inc36.prol.4
  %partial_sum.3.prol.4.lcssa = phi float [ %partial_sum.3.prol.4, %for.inc36.prol.4 ]
  br label %for.end38.prol.4

for.end38.prol.4:                                 ; preds = %for.end38.prol.4.loopexit, %for.cond8.preheader.prol.4
  %partial_sum.0.lcssa.prol.4 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.4 ], [ %partial_sum.3.prol.4.lcssa, %for.end38.prol.4.loopexit ]
  br i1 %tobool39, label %if.else.prol.4, label %if.then40.prol.4

if.then40.prol.4:                                 ; preds = %for.end38.prol.4
  %cmp41.prol.4 = fcmp olt float %partial_sum.0.lcssa.prol.4, 0.000000e+00
  %sub42.prol.4 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.4
  %cond.prol.4 = select i1 %cmp41.prol.4, float %sub42.prol.4, float %partial_sum.0.lcssa.prol.4
  %conv.prol.4 = fptoui float %cond.prol.4 to i8
  %conv43.prol.4 = uitofp i8 %conv.prol.4 to float
  %380 = add nsw i64 %indvars.iv20.prol.4, %374
  %arrayidx47.prol.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %380
  store float %conv43.prol.4, float* %arrayidx47.prol.4, align 4
  br label %for.inc53.prol.4

if.else.prol.4:                                   ; preds = %for.end38.prol.4
  %381 = add nsw i64 %indvars.iv20.prol.4, %373
  %arrayidx51.prol.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %381
  store float %partial_sum.0.lcssa.prol.4, float* %arrayidx51.prol.4, align 4
  br label %for.inc53.prol.4

for.inc53.prol.4:                                 ; preds = %if.else.prol.4, %if.then40.prol.4
  %inc54.prol.4 = add nsw i32 %in_j.011.prol.4, 1
  %indvars.iv.next21.prol.4 = add nuw nsw i64 %indvars.iv20.prol.4, 1
  %prol.iter.sub.4 = add i32 %prol.iter.4, -1
  %prol.iter.cmp.4 = icmp eq i32 %prol.iter.sub.4, 0
  br i1 %prol.iter.cmp.4, label %for.cond8.preheader.lr.ph.split.4.loopexit, label %for.cond8.preheader.prol.4, !llvm.loop !4

for.cond8.preheader.lr.ph.split.4.loopexit:       ; preds = %for.inc53.prol.4
  %indvars.iv.next21.prol.4.lcssa = phi i64 [ %indvars.iv.next21.prol.4, %for.inc53.prol.4 ]
  %inc54.prol.4.lcssa = phi i32 [ %inc54.prol.4, %for.inc53.prol.4 ]
  br label %for.cond8.preheader.lr.ph.split.4

for.cond8.preheader.lr.ph.split.4:                ; preds = %for.cond8.preheader.lr.ph.split.4.loopexit, %for.cond8.preheader.lr.ph.4
  %indvars.iv20.unr.4 = phi i64 [ 0, %for.cond8.preheader.lr.ph.4 ], [ %indvars.iv.next21.prol.4.lcssa, %for.cond8.preheader.lr.ph.split.4.loopexit ]
  %in_j.011.unr.4 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.4 ], [ %inc54.prol.4.lcssa, %for.cond8.preheader.lr.ph.split.4.loopexit ]
  br i1 %75, label %for.inc57.4, label %for.cond8.preheader.4.preheader

for.cond8.preheader.4.preheader:                  ; preds = %for.cond8.preheader.lr.ph.split.4
  br label %for.cond8.preheader.4

for.cond8.preheader.4:                            ; preds = %for.cond8.preheader.4.preheader, %for.inc53.7.4
  %indvars.iv20.4 = phi i64 [ %indvars.iv.next21.7.4, %for.inc53.7.4 ], [ %indvars.iv20.unr.4, %for.cond8.preheader.4.preheader ]
  %in_j.011.4 = phi i32 [ %inc54.7.4, %for.inc53.7.4 ], [ %in_j.011.unr.4, %for.cond8.preheader.4.preheader ]
  br i1 %cmp94, label %for.end38.4302, label %for.body10.4269.preheader

for.body10.4269.preheader:                        ; preds = %for.cond8.preheader.4
  br label %for.body10.4269

for.body10.4269:                                  ; preds = %for.body10.4269.preheader, %for.inc36.4298
  %ki.06.4261 = phi i32 [ %inc37.4296, %for.inc36.4298 ], [ 0, %for.body10.4269.preheader ]
  %partial_sum.05.4262 = phi float [ %partial_sum.3.4295, %for.inc36.4298 ], [ 0.000000e+00, %for.body10.4269.preheader ]
  %add.4263 = add nsw i32 %ki.06.4261, %inc58.3
  %notlhs.4264 = icmp slt i32 %add.4263, 0
  %notrhs.4265 = icmp uge i32 %add.4263, %img_height
  %.not.4266 = or i1 %notrhs.4265, %notlhs.4264
  %brmerge.4268 = or i1 %.not.4266, %cmp151.not.4267
  br i1 %brmerge.4268, label %for.inc36.4298, label %for.body16.lr.ph.4272

for.body16.lr.ph.4272:                            ; preds = %for.body10.4269
  %mul.4270 = shl i32 %add.4263, 7
  %mul30.4271 = mul i32 %ki.06.4261, %kern_width
  br label %for.body16.4278

for.body16.4278:                                  ; preds = %for.inc.4292, %for.body16.lr.ph.4272
  %indvars.iv.4273 = phi i64 [ 0, %for.body16.lr.ph.4272 ], [ %indvars.iv.next.4289, %for.inc.4292 ]
  %partial_sum.12.4274 = phi float [ %partial_sum.05.4262, %for.body16.lr.ph.4272 ], [ %partial_sum.2.4288, %for.inc.4292 ]
  %382 = trunc i64 %indvars.iv.4273 to i32
  %add17.4275 = add nsw i32 %382, %in_j.011.4
  %cmp18.4276 = icmp sgt i32 %add17.4275, -1
  %cmp21.4277 = icmp ult i32 %add17.4275, %img_width
  %383 = and i1 %cmp18.4276, %cmp21.4277
  br i1 %383, label %if.end26.4287, label %for.inc.4292

if.end26.4287:                                    ; preds = %for.body16.4278
  %add29.4279 = add nsw i32 %add17.4275, %mul.4270
  %idxprom.4280 = sext i32 %add29.4279 to i64
  %arrayidx.4281 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4280
  %384 = load float, float* %arrayidx.4281, align 4
  %385 = trunc i64 %indvars.iv.4273 to i32
  %add31.4282 = add i32 %385, %mul30.4271
  %idxprom32.4283 = zext i32 %add31.4282 to i64
  %arrayidx33.4284 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4283
  %386 = load float, float* %arrayidx33.4284, align 4
  %mul34.4285 = fmul float %384, %386
  %add35.4286 = fadd float %partial_sum.12.4274, %mul34.4285
  br label %for.inc.4292

for.inc.4292:                                     ; preds = %if.end26.4287, %for.body16.4278
  %partial_sum.2.4288 = phi float [ %add35.4286, %if.end26.4287 ], [ %partial_sum.12.4274, %for.body16.4278 ]
  %indvars.iv.next.4289 = add nuw nsw i64 %indvars.iv.4273, 1
  %lftr.wideiv.4290 = trunc i64 %indvars.iv.next.4289 to i32
  %exitcond.4291 = icmp eq i32 %lftr.wideiv.4290, %kern_width
  br i1 %exitcond.4291, label %for.inc36.4298.loopexit, label %for.body16.4278, !llvm.loop !1

for.inc36.4298.loopexit:                          ; preds = %for.inc.4292
  %partial_sum.2.4288.lcssa = phi float [ %partial_sum.2.4288, %for.inc.4292 ]
  br label %for.inc36.4298

for.inc36.4298:                                   ; preds = %for.inc36.4298.loopexit, %for.body10.4269
  %partial_sum.3.4295 = phi float [ %partial_sum.05.4262, %for.body10.4269 ], [ %partial_sum.2.4288.lcssa, %for.inc36.4298.loopexit ]
  %inc37.4296 = add nuw nsw i32 %ki.06.4261, 1
  %exitcond19.4297 = icmp eq i32 %inc37.4296, %kern_height
  br i1 %exitcond19.4297, label %for.end38.4302.loopexit, label %for.body10.4269, !llvm.loop !3

for.end38.4302.loopexit:                          ; preds = %for.inc36.4298
  %partial_sum.3.4295.lcssa = phi float [ %partial_sum.3.4295, %for.inc36.4298 ]
  br label %for.end38.4302

for.end38.4302:                                   ; preds = %for.end38.4302.loopexit, %for.cond8.preheader.4
  %partial_sum.0.lcssa.4301 = phi float [ 0.000000e+00, %for.cond8.preheader.4 ], [ %partial_sum.3.4295.lcssa, %for.end38.4302.loopexit ]
  br i1 %tobool39, label %if.else.4311, label %if.then40.4309

if.then40.4309:                                   ; preds = %for.end38.4302
  %cmp41.4303 = fcmp olt float %partial_sum.0.lcssa.4301, 0.000000e+00
  %sub42.4304 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4301
  %cond.4305 = select i1 %cmp41.4303, float %sub42.4304, float %partial_sum.0.lcssa.4301
  %conv.4306 = fptoui float %cond.4305 to i8
  %conv43.4307 = uitofp i8 %conv.4306 to float
  %387 = add nsw i64 %indvars.iv20.4, %374
  %arrayidx47.4308 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %387
  store float %conv43.4307, float* %arrayidx47.4308, align 4
  br label %for.inc53.4315

if.else.4311:                                     ; preds = %for.end38.4302
  %388 = add nsw i64 %indvars.iv20.4, %373
  %arrayidx51.4310 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %388
  store float %partial_sum.0.lcssa.4301, float* %arrayidx51.4310, align 4
  br label %for.inc53.4315

for.inc53.4315:                                   ; preds = %if.else.4311, %if.then40.4309
  %inc54.4312 = add nsw i32 %in_j.011.4, 1
  %indvars.iv.next21.4313 = add nuw nsw i64 %indvars.iv20.4, 1
  br i1 %cmp94, label %for.end38.1.4, label %for.body10.1.4.preheader

for.body10.1.4.preheader:                         ; preds = %for.inc53.4315
  br label %for.body10.1.4

for.body10.1.4:                                   ; preds = %for.body10.1.4.preheader, %for.inc36.1.4
  %ki.06.1.4 = phi i32 [ %inc37.1.4, %for.inc36.1.4 ], [ 0, %for.body10.1.4.preheader ]
  %partial_sum.05.1.4 = phi float [ %partial_sum.3.1.4, %for.inc36.1.4 ], [ 0.000000e+00, %for.body10.1.4.preheader ]
  %add.1.4 = add nsw i32 %ki.06.1.4, %inc58.3
  %notlhs.1.4 = icmp slt i32 %add.1.4, 0
  %notrhs.1.4 = icmp uge i32 %add.1.4, %img_height
  %.not.1.4 = or i1 %notrhs.1.4, %notlhs.1.4
  %brmerge.1.4 = or i1 %.not.1.4, %cmp151.not.1.4
  br i1 %brmerge.1.4, label %for.inc36.1.4, label %for.body16.lr.ph.1.4

for.body16.lr.ph.1.4:                             ; preds = %for.body10.1.4
  %mul.1.4 = shl i32 %add.1.4, 7
  %mul30.1.4 = mul i32 %ki.06.1.4, %kern_width
  br label %for.body16.1.4

for.body16.1.4:                                   ; preds = %for.inc.1.4, %for.body16.lr.ph.1.4
  %indvars.iv.1.4 = phi i64 [ 0, %for.body16.lr.ph.1.4 ], [ %indvars.iv.next.1.4, %for.inc.1.4 ]
  %partial_sum.12.1.4 = phi float [ %partial_sum.05.1.4, %for.body16.lr.ph.1.4 ], [ %partial_sum.2.1.4, %for.inc.1.4 ]
  %389 = trunc i64 %indvars.iv.1.4 to i32
  %add17.1.4 = add nsw i32 %389, %inc54.4312
  %cmp18.1.4 = icmp sgt i32 %add17.1.4, -1
  %cmp21.1.4 = icmp ult i32 %add17.1.4, %img_width
  %390 = and i1 %cmp18.1.4, %cmp21.1.4
  br i1 %390, label %if.end26.1.4, label %for.inc.1.4

if.end26.1.4:                                     ; preds = %for.body16.1.4
  %add29.1.4 = add nsw i32 %add17.1.4, %mul.1.4
  %idxprom.1.4 = sext i32 %add29.1.4 to i64
  %arrayidx.1.4 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.4
  %391 = load float, float* %arrayidx.1.4, align 4
  %392 = trunc i64 %indvars.iv.1.4 to i32
  %add31.1.4 = add i32 %392, %mul30.1.4
  %idxprom32.1.4 = zext i32 %add31.1.4 to i64
  %arrayidx33.1.4 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.4
  %393 = load float, float* %arrayidx33.1.4, align 4
  %mul34.1.4 = fmul float %391, %393
  %add35.1.4 = fadd float %partial_sum.12.1.4, %mul34.1.4
  br label %for.inc.1.4

for.inc.1.4:                                      ; preds = %if.end26.1.4, %for.body16.1.4
  %partial_sum.2.1.4 = phi float [ %add35.1.4, %if.end26.1.4 ], [ %partial_sum.12.1.4, %for.body16.1.4 ]
  %indvars.iv.next.1.4 = add nuw nsw i64 %indvars.iv.1.4, 1
  %lftr.wideiv.1.4 = trunc i64 %indvars.iv.next.1.4 to i32
  %exitcond.1.4 = icmp eq i32 %lftr.wideiv.1.4, %kern_width
  br i1 %exitcond.1.4, label %for.inc36.1.4.loopexit, label %for.body16.1.4, !llvm.loop !1

for.inc36.1.4.loopexit:                           ; preds = %for.inc.1.4
  %partial_sum.2.1.4.lcssa = phi float [ %partial_sum.2.1.4, %for.inc.1.4 ]
  br label %for.inc36.1.4

for.inc36.1.4:                                    ; preds = %for.inc36.1.4.loopexit, %for.body10.1.4
  %partial_sum.3.1.4 = phi float [ %partial_sum.05.1.4, %for.body10.1.4 ], [ %partial_sum.2.1.4.lcssa, %for.inc36.1.4.loopexit ]
  %inc37.1.4 = add nuw nsw i32 %ki.06.1.4, 1
  %exitcond19.1.4 = icmp eq i32 %inc37.1.4, %kern_height
  br i1 %exitcond19.1.4, label %for.end38.1.4.loopexit, label %for.body10.1.4, !llvm.loop !3

for.end38.1.4.loopexit:                           ; preds = %for.inc36.1.4
  %partial_sum.3.1.4.lcssa = phi float [ %partial_sum.3.1.4, %for.inc36.1.4 ]
  br label %for.end38.1.4

for.end38.1.4:                                    ; preds = %for.end38.1.4.loopexit, %for.inc53.4315
  %partial_sum.0.lcssa.1.4 = phi float [ 0.000000e+00, %for.inc53.4315 ], [ %partial_sum.3.1.4.lcssa, %for.end38.1.4.loopexit ]
  br i1 %tobool39, label %if.else.1.4, label %if.then40.1.4

if.then40.1.4:                                    ; preds = %for.end38.1.4
  %cmp41.1.4 = fcmp olt float %partial_sum.0.lcssa.1.4, 0.000000e+00
  %sub42.1.4 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.4
  %cond.1.4 = select i1 %cmp41.1.4, float %sub42.1.4, float %partial_sum.0.lcssa.1.4
  %conv.1.4 = fptoui float %cond.1.4 to i8
  %conv43.1.4 = uitofp i8 %conv.1.4 to float
  %394 = add nsw i64 %indvars.iv.next21.4313, %374
  %arrayidx47.1.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %394
  store float %conv43.1.4, float* %arrayidx47.1.4, align 4
  br label %for.inc53.1.4

if.else.1.4:                                      ; preds = %for.end38.1.4
  %395 = add nsw i64 %indvars.iv.next21.4313, %373
  %arrayidx51.1.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %395
  store float %partial_sum.0.lcssa.1.4, float* %arrayidx51.1.4, align 4
  br label %for.inc53.1.4

for.inc53.1.4:                                    ; preds = %if.else.1.4, %if.then40.1.4
  %inc54.1.4 = add nsw i32 %in_j.011.4, 2
  %indvars.iv.next21.1.4 = add nsw i64 %indvars.iv20.4, 2
  br i1 %cmp94, label %for.end38.2.4, label %for.body10.2.4.preheader

for.body10.2.4.preheader:                         ; preds = %for.inc53.1.4
  br label %for.body10.2.4

for.body10.2.4:                                   ; preds = %for.body10.2.4.preheader, %for.inc36.2.4
  %ki.06.2.4 = phi i32 [ %inc37.2.4, %for.inc36.2.4 ], [ 0, %for.body10.2.4.preheader ]
  %partial_sum.05.2.4 = phi float [ %partial_sum.3.2.4, %for.inc36.2.4 ], [ 0.000000e+00, %for.body10.2.4.preheader ]
  %add.2.4 = add nsw i32 %ki.06.2.4, %inc58.3
  %notlhs.2.4 = icmp slt i32 %add.2.4, 0
  %notrhs.2.4 = icmp uge i32 %add.2.4, %img_height
  %.not.2.4 = or i1 %notrhs.2.4, %notlhs.2.4
  %brmerge.2.4 = or i1 %.not.2.4, %cmp151.not.2.4
  br i1 %brmerge.2.4, label %for.inc36.2.4, label %for.body16.lr.ph.2.4

for.body16.lr.ph.2.4:                             ; preds = %for.body10.2.4
  %mul.2.4 = shl i32 %add.2.4, 7
  %mul30.2.4 = mul i32 %ki.06.2.4, %kern_width
  br label %for.body16.2.4

for.body16.2.4:                                   ; preds = %for.inc.2.4, %for.body16.lr.ph.2.4
  %indvars.iv.2.4 = phi i64 [ 0, %for.body16.lr.ph.2.4 ], [ %indvars.iv.next.2.4, %for.inc.2.4 ]
  %partial_sum.12.2.4 = phi float [ %partial_sum.05.2.4, %for.body16.lr.ph.2.4 ], [ %partial_sum.2.2.4, %for.inc.2.4 ]
  %396 = trunc i64 %indvars.iv.2.4 to i32
  %add17.2.4 = add nsw i32 %396, %inc54.1.4
  %cmp18.2.4 = icmp sgt i32 %add17.2.4, -1
  %cmp21.2.4 = icmp ult i32 %add17.2.4, %img_width
  %397 = and i1 %cmp18.2.4, %cmp21.2.4
  br i1 %397, label %if.end26.2.4, label %for.inc.2.4

if.end26.2.4:                                     ; preds = %for.body16.2.4
  %add29.2.4 = add nsw i32 %add17.2.4, %mul.2.4
  %idxprom.2.4 = sext i32 %add29.2.4 to i64
  %arrayidx.2.4 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.4
  %398 = load float, float* %arrayidx.2.4, align 4
  %399 = trunc i64 %indvars.iv.2.4 to i32
  %add31.2.4 = add i32 %399, %mul30.2.4
  %idxprom32.2.4 = zext i32 %add31.2.4 to i64
  %arrayidx33.2.4 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.4
  %400 = load float, float* %arrayidx33.2.4, align 4
  %mul34.2.4 = fmul float %398, %400
  %add35.2.4 = fadd float %partial_sum.12.2.4, %mul34.2.4
  br label %for.inc.2.4

for.inc.2.4:                                      ; preds = %if.end26.2.4, %for.body16.2.4
  %partial_sum.2.2.4 = phi float [ %add35.2.4, %if.end26.2.4 ], [ %partial_sum.12.2.4, %for.body16.2.4 ]
  %indvars.iv.next.2.4 = add nuw nsw i64 %indvars.iv.2.4, 1
  %lftr.wideiv.2.4 = trunc i64 %indvars.iv.next.2.4 to i32
  %exitcond.2.4 = icmp eq i32 %lftr.wideiv.2.4, %kern_width
  br i1 %exitcond.2.4, label %for.inc36.2.4.loopexit, label %for.body16.2.4, !llvm.loop !1

for.inc36.2.4.loopexit:                           ; preds = %for.inc.2.4
  %partial_sum.2.2.4.lcssa = phi float [ %partial_sum.2.2.4, %for.inc.2.4 ]
  br label %for.inc36.2.4

for.inc36.2.4:                                    ; preds = %for.inc36.2.4.loopexit, %for.body10.2.4
  %partial_sum.3.2.4 = phi float [ %partial_sum.05.2.4, %for.body10.2.4 ], [ %partial_sum.2.2.4.lcssa, %for.inc36.2.4.loopexit ]
  %inc37.2.4 = add nuw nsw i32 %ki.06.2.4, 1
  %exitcond19.2.4 = icmp eq i32 %inc37.2.4, %kern_height
  br i1 %exitcond19.2.4, label %for.end38.2.4.loopexit, label %for.body10.2.4, !llvm.loop !3

for.end38.2.4.loopexit:                           ; preds = %for.inc36.2.4
  %partial_sum.3.2.4.lcssa = phi float [ %partial_sum.3.2.4, %for.inc36.2.4 ]
  br label %for.end38.2.4

for.end38.2.4:                                    ; preds = %for.end38.2.4.loopexit, %for.inc53.1.4
  %partial_sum.0.lcssa.2.4 = phi float [ 0.000000e+00, %for.inc53.1.4 ], [ %partial_sum.3.2.4.lcssa, %for.end38.2.4.loopexit ]
  br i1 %tobool39, label %if.else.2.4, label %if.then40.2.4

if.then40.2.4:                                    ; preds = %for.end38.2.4
  %cmp41.2.4 = fcmp olt float %partial_sum.0.lcssa.2.4, 0.000000e+00
  %sub42.2.4 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.4
  %cond.2.4 = select i1 %cmp41.2.4, float %sub42.2.4, float %partial_sum.0.lcssa.2.4
  %conv.2.4 = fptoui float %cond.2.4 to i8
  %conv43.2.4 = uitofp i8 %conv.2.4 to float
  %401 = add nsw i64 %indvars.iv.next21.1.4, %374
  %arrayidx47.2.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %401
  store float %conv43.2.4, float* %arrayidx47.2.4, align 4
  br label %for.inc53.2.4

if.else.2.4:                                      ; preds = %for.end38.2.4
  %402 = add nsw i64 %indvars.iv.next21.1.4, %373
  %arrayidx51.2.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %402
  store float %partial_sum.0.lcssa.2.4, float* %arrayidx51.2.4, align 4
  br label %for.inc53.2.4

for.inc53.2.4:                                    ; preds = %if.else.2.4, %if.then40.2.4
  %inc54.2.4 = add nsw i32 %in_j.011.4, 3
  %indvars.iv.next21.2.4 = add nsw i64 %indvars.iv20.4, 3
  br i1 %cmp94, label %for.end38.3.4, label %for.body10.3.4.preheader

for.body10.3.4.preheader:                         ; preds = %for.inc53.2.4
  br label %for.body10.3.4

for.body10.3.4:                                   ; preds = %for.body10.3.4.preheader, %for.inc36.3.4
  %ki.06.3.4 = phi i32 [ %inc37.3.4, %for.inc36.3.4 ], [ 0, %for.body10.3.4.preheader ]
  %partial_sum.05.3.4 = phi float [ %partial_sum.3.3.4, %for.inc36.3.4 ], [ 0.000000e+00, %for.body10.3.4.preheader ]
  %add.3.4 = add nsw i32 %ki.06.3.4, %inc58.3
  %notlhs.3.4 = icmp slt i32 %add.3.4, 0
  %notrhs.3.4 = icmp uge i32 %add.3.4, %img_height
  %.not.3.4 = or i1 %notrhs.3.4, %notlhs.3.4
  %brmerge.3.4 = or i1 %.not.3.4, %cmp151.not.3.4
  br i1 %brmerge.3.4, label %for.inc36.3.4, label %for.body16.lr.ph.3.4

for.body16.lr.ph.3.4:                             ; preds = %for.body10.3.4
  %mul.3.4 = shl i32 %add.3.4, 7
  %mul30.3.4 = mul i32 %ki.06.3.4, %kern_width
  br label %for.body16.3.4

for.body16.3.4:                                   ; preds = %for.inc.3.4, %for.body16.lr.ph.3.4
  %indvars.iv.3.4 = phi i64 [ 0, %for.body16.lr.ph.3.4 ], [ %indvars.iv.next.3.4, %for.inc.3.4 ]
  %partial_sum.12.3.4 = phi float [ %partial_sum.05.3.4, %for.body16.lr.ph.3.4 ], [ %partial_sum.2.3.4, %for.inc.3.4 ]
  %403 = trunc i64 %indvars.iv.3.4 to i32
  %add17.3.4 = add nsw i32 %403, %inc54.2.4
  %cmp18.3.4 = icmp sgt i32 %add17.3.4, -1
  %cmp21.3.4 = icmp ult i32 %add17.3.4, %img_width
  %404 = and i1 %cmp18.3.4, %cmp21.3.4
  br i1 %404, label %if.end26.3.4, label %for.inc.3.4

if.end26.3.4:                                     ; preds = %for.body16.3.4
  %add29.3.4 = add nsw i32 %add17.3.4, %mul.3.4
  %idxprom.3.4 = sext i32 %add29.3.4 to i64
  %arrayidx.3.4 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.4
  %405 = load float, float* %arrayidx.3.4, align 4
  %406 = trunc i64 %indvars.iv.3.4 to i32
  %add31.3.4 = add i32 %406, %mul30.3.4
  %idxprom32.3.4 = zext i32 %add31.3.4 to i64
  %arrayidx33.3.4 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.4
  %407 = load float, float* %arrayidx33.3.4, align 4
  %mul34.3.4 = fmul float %405, %407
  %add35.3.4 = fadd float %partial_sum.12.3.4, %mul34.3.4
  br label %for.inc.3.4

for.inc.3.4:                                      ; preds = %if.end26.3.4, %for.body16.3.4
  %partial_sum.2.3.4 = phi float [ %add35.3.4, %if.end26.3.4 ], [ %partial_sum.12.3.4, %for.body16.3.4 ]
  %indvars.iv.next.3.4 = add nuw nsw i64 %indvars.iv.3.4, 1
  %lftr.wideiv.3.4 = trunc i64 %indvars.iv.next.3.4 to i32
  %exitcond.3.4 = icmp eq i32 %lftr.wideiv.3.4, %kern_width
  br i1 %exitcond.3.4, label %for.inc36.3.4.loopexit, label %for.body16.3.4, !llvm.loop !1

for.inc36.3.4.loopexit:                           ; preds = %for.inc.3.4
  %partial_sum.2.3.4.lcssa = phi float [ %partial_sum.2.3.4, %for.inc.3.4 ]
  br label %for.inc36.3.4

for.inc36.3.4:                                    ; preds = %for.inc36.3.4.loopexit, %for.body10.3.4
  %partial_sum.3.3.4 = phi float [ %partial_sum.05.3.4, %for.body10.3.4 ], [ %partial_sum.2.3.4.lcssa, %for.inc36.3.4.loopexit ]
  %inc37.3.4 = add nuw nsw i32 %ki.06.3.4, 1
  %exitcond19.3.4 = icmp eq i32 %inc37.3.4, %kern_height
  br i1 %exitcond19.3.4, label %for.end38.3.4.loopexit, label %for.body10.3.4, !llvm.loop !3

for.end38.3.4.loopexit:                           ; preds = %for.inc36.3.4
  %partial_sum.3.3.4.lcssa = phi float [ %partial_sum.3.3.4, %for.inc36.3.4 ]
  br label %for.end38.3.4

for.end38.3.4:                                    ; preds = %for.end38.3.4.loopexit, %for.inc53.2.4
  %partial_sum.0.lcssa.3.4 = phi float [ 0.000000e+00, %for.inc53.2.4 ], [ %partial_sum.3.3.4.lcssa, %for.end38.3.4.loopexit ]
  br i1 %tobool39, label %if.else.3.4, label %if.then40.3.4

if.then40.3.4:                                    ; preds = %for.end38.3.4
  %cmp41.3.4 = fcmp olt float %partial_sum.0.lcssa.3.4, 0.000000e+00
  %sub42.3.4 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.4
  %cond.3.4 = select i1 %cmp41.3.4, float %sub42.3.4, float %partial_sum.0.lcssa.3.4
  %conv.3.4 = fptoui float %cond.3.4 to i8
  %conv43.3.4 = uitofp i8 %conv.3.4 to float
  %408 = add nsw i64 %indvars.iv.next21.2.4, %374
  %arrayidx47.3.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %408
  store float %conv43.3.4, float* %arrayidx47.3.4, align 4
  br label %for.inc53.3.4

if.else.3.4:                                      ; preds = %for.end38.3.4
  %409 = add nsw i64 %indvars.iv.next21.2.4, %373
  %arrayidx51.3.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %409
  store float %partial_sum.0.lcssa.3.4, float* %arrayidx51.3.4, align 4
  br label %for.inc53.3.4

for.inc53.3.4:                                    ; preds = %if.else.3.4, %if.then40.3.4
  %inc54.3.4 = add nsw i32 %in_j.011.4, 4
  %indvars.iv.next21.3.4 = add nsw i64 %indvars.iv20.4, 4
  br i1 %cmp94, label %for.end38.4.4, label %for.body10.4.4.preheader

for.body10.4.4.preheader:                         ; preds = %for.inc53.3.4
  br label %for.body10.4.4

for.body10.4.4:                                   ; preds = %for.body10.4.4.preheader, %for.inc36.4.4
  %ki.06.4.4 = phi i32 [ %inc37.4.4, %for.inc36.4.4 ], [ 0, %for.body10.4.4.preheader ]
  %partial_sum.05.4.4 = phi float [ %partial_sum.3.4.4, %for.inc36.4.4 ], [ 0.000000e+00, %for.body10.4.4.preheader ]
  %add.4.4 = add nsw i32 %ki.06.4.4, %inc58.3
  %notlhs.4.4 = icmp slt i32 %add.4.4, 0
  %notrhs.4.4 = icmp uge i32 %add.4.4, %img_height
  %.not.4.4 = or i1 %notrhs.4.4, %notlhs.4.4
  %brmerge.4.4 = or i1 %.not.4.4, %cmp151.not.4.4
  br i1 %brmerge.4.4, label %for.inc36.4.4, label %for.body16.lr.ph.4.4

for.body16.lr.ph.4.4:                             ; preds = %for.body10.4.4
  %mul.4.4 = shl i32 %add.4.4, 7
  %mul30.4.4 = mul i32 %ki.06.4.4, %kern_width
  br label %for.body16.4.4

for.body16.4.4:                                   ; preds = %for.inc.4.4, %for.body16.lr.ph.4.4
  %indvars.iv.4.4 = phi i64 [ 0, %for.body16.lr.ph.4.4 ], [ %indvars.iv.next.4.4, %for.inc.4.4 ]
  %partial_sum.12.4.4 = phi float [ %partial_sum.05.4.4, %for.body16.lr.ph.4.4 ], [ %partial_sum.2.4.4, %for.inc.4.4 ]
  %410 = trunc i64 %indvars.iv.4.4 to i32
  %add17.4.4 = add nsw i32 %410, %inc54.3.4
  %cmp18.4.4 = icmp sgt i32 %add17.4.4, -1
  %cmp21.4.4 = icmp ult i32 %add17.4.4, %img_width
  %411 = and i1 %cmp18.4.4, %cmp21.4.4
  br i1 %411, label %if.end26.4.4, label %for.inc.4.4

if.end26.4.4:                                     ; preds = %for.body16.4.4
  %add29.4.4 = add nsw i32 %add17.4.4, %mul.4.4
  %idxprom.4.4 = sext i32 %add29.4.4 to i64
  %arrayidx.4.4 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.4
  %412 = load float, float* %arrayidx.4.4, align 4
  %413 = trunc i64 %indvars.iv.4.4 to i32
  %add31.4.4 = add i32 %413, %mul30.4.4
  %idxprom32.4.4 = zext i32 %add31.4.4 to i64
  %arrayidx33.4.4 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.4
  %414 = load float, float* %arrayidx33.4.4, align 4
  %mul34.4.4 = fmul float %412, %414
  %add35.4.4 = fadd float %partial_sum.12.4.4, %mul34.4.4
  br label %for.inc.4.4

for.inc.4.4:                                      ; preds = %if.end26.4.4, %for.body16.4.4
  %partial_sum.2.4.4 = phi float [ %add35.4.4, %if.end26.4.4 ], [ %partial_sum.12.4.4, %for.body16.4.4 ]
  %indvars.iv.next.4.4 = add nuw nsw i64 %indvars.iv.4.4, 1
  %lftr.wideiv.4.4 = trunc i64 %indvars.iv.next.4.4 to i32
  %exitcond.4.4 = icmp eq i32 %lftr.wideiv.4.4, %kern_width
  br i1 %exitcond.4.4, label %for.inc36.4.4.loopexit, label %for.body16.4.4, !llvm.loop !1

for.inc36.4.4.loopexit:                           ; preds = %for.inc.4.4
  %partial_sum.2.4.4.lcssa = phi float [ %partial_sum.2.4.4, %for.inc.4.4 ]
  br label %for.inc36.4.4

for.inc36.4.4:                                    ; preds = %for.inc36.4.4.loopexit, %for.body10.4.4
  %partial_sum.3.4.4 = phi float [ %partial_sum.05.4.4, %for.body10.4.4 ], [ %partial_sum.2.4.4.lcssa, %for.inc36.4.4.loopexit ]
  %inc37.4.4 = add nuw nsw i32 %ki.06.4.4, 1
  %exitcond19.4.4 = icmp eq i32 %inc37.4.4, %kern_height
  br i1 %exitcond19.4.4, label %for.end38.4.4.loopexit, label %for.body10.4.4, !llvm.loop !3

for.end38.4.4.loopexit:                           ; preds = %for.inc36.4.4
  %partial_sum.3.4.4.lcssa = phi float [ %partial_sum.3.4.4, %for.inc36.4.4 ]
  br label %for.end38.4.4

for.end38.4.4:                                    ; preds = %for.end38.4.4.loopexit, %for.inc53.3.4
  %partial_sum.0.lcssa.4.4 = phi float [ 0.000000e+00, %for.inc53.3.4 ], [ %partial_sum.3.4.4.lcssa, %for.end38.4.4.loopexit ]
  br i1 %tobool39, label %if.else.4.4, label %if.then40.4.4

if.then40.4.4:                                    ; preds = %for.end38.4.4
  %cmp41.4.4 = fcmp olt float %partial_sum.0.lcssa.4.4, 0.000000e+00
  %sub42.4.4 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.4
  %cond.4.4 = select i1 %cmp41.4.4, float %sub42.4.4, float %partial_sum.0.lcssa.4.4
  %conv.4.4 = fptoui float %cond.4.4 to i8
  %conv43.4.4 = uitofp i8 %conv.4.4 to float
  %415 = add nsw i64 %indvars.iv.next21.3.4, %374
  %arrayidx47.4.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %415
  store float %conv43.4.4, float* %arrayidx47.4.4, align 4
  br label %for.inc53.4.4

if.else.4.4:                                      ; preds = %for.end38.4.4
  %416 = add nsw i64 %indvars.iv.next21.3.4, %373
  %arrayidx51.4.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %416
  store float %partial_sum.0.lcssa.4.4, float* %arrayidx51.4.4, align 4
  br label %for.inc53.4.4

for.inc53.4.4:                                    ; preds = %if.else.4.4, %if.then40.4.4
  %inc54.4.4 = add nsw i32 %in_j.011.4, 5
  %indvars.iv.next21.4.4 = add nsw i64 %indvars.iv20.4, 5
  br i1 %cmp94, label %for.end38.5.4, label %for.body10.5.4.preheader

for.body10.5.4.preheader:                         ; preds = %for.inc53.4.4
  br label %for.body10.5.4

for.body10.5.4:                                   ; preds = %for.body10.5.4.preheader, %for.inc36.5.4
  %ki.06.5.4 = phi i32 [ %inc37.5.4, %for.inc36.5.4 ], [ 0, %for.body10.5.4.preheader ]
  %partial_sum.05.5.4 = phi float [ %partial_sum.3.5.4, %for.inc36.5.4 ], [ 0.000000e+00, %for.body10.5.4.preheader ]
  %add.5.4 = add nsw i32 %ki.06.5.4, %inc58.3
  %notlhs.5.4 = icmp slt i32 %add.5.4, 0
  %notrhs.5.4 = icmp uge i32 %add.5.4, %img_height
  %.not.5.4 = or i1 %notrhs.5.4, %notlhs.5.4
  %brmerge.5.4 = or i1 %.not.5.4, %cmp151.not.5.4
  br i1 %brmerge.5.4, label %for.inc36.5.4, label %for.body16.lr.ph.5.4

for.body16.lr.ph.5.4:                             ; preds = %for.body10.5.4
  %mul.5.4 = shl i32 %add.5.4, 7
  %mul30.5.4 = mul i32 %ki.06.5.4, %kern_width
  br label %for.body16.5.4

for.body16.5.4:                                   ; preds = %for.inc.5.4, %for.body16.lr.ph.5.4
  %indvars.iv.5.4 = phi i64 [ 0, %for.body16.lr.ph.5.4 ], [ %indvars.iv.next.5.4, %for.inc.5.4 ]
  %partial_sum.12.5.4 = phi float [ %partial_sum.05.5.4, %for.body16.lr.ph.5.4 ], [ %partial_sum.2.5.4, %for.inc.5.4 ]
  %417 = trunc i64 %indvars.iv.5.4 to i32
  %add17.5.4 = add nsw i32 %417, %inc54.4.4
  %cmp18.5.4 = icmp sgt i32 %add17.5.4, -1
  %cmp21.5.4 = icmp ult i32 %add17.5.4, %img_width
  %418 = and i1 %cmp18.5.4, %cmp21.5.4
  br i1 %418, label %if.end26.5.4, label %for.inc.5.4

if.end26.5.4:                                     ; preds = %for.body16.5.4
  %add29.5.4 = add nsw i32 %add17.5.4, %mul.5.4
  %idxprom.5.4 = sext i32 %add29.5.4 to i64
  %arrayidx.5.4 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.4
  %419 = load float, float* %arrayidx.5.4, align 4
  %420 = trunc i64 %indvars.iv.5.4 to i32
  %add31.5.4 = add i32 %420, %mul30.5.4
  %idxprom32.5.4 = zext i32 %add31.5.4 to i64
  %arrayidx33.5.4 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.4
  %421 = load float, float* %arrayidx33.5.4, align 4
  %mul34.5.4 = fmul float %419, %421
  %add35.5.4 = fadd float %partial_sum.12.5.4, %mul34.5.4
  br label %for.inc.5.4

for.inc.5.4:                                      ; preds = %if.end26.5.4, %for.body16.5.4
  %partial_sum.2.5.4 = phi float [ %add35.5.4, %if.end26.5.4 ], [ %partial_sum.12.5.4, %for.body16.5.4 ]
  %indvars.iv.next.5.4 = add nuw nsw i64 %indvars.iv.5.4, 1
  %lftr.wideiv.5.4 = trunc i64 %indvars.iv.next.5.4 to i32
  %exitcond.5.4 = icmp eq i32 %lftr.wideiv.5.4, %kern_width
  br i1 %exitcond.5.4, label %for.inc36.5.4.loopexit, label %for.body16.5.4, !llvm.loop !1

for.inc36.5.4.loopexit:                           ; preds = %for.inc.5.4
  %partial_sum.2.5.4.lcssa = phi float [ %partial_sum.2.5.4, %for.inc.5.4 ]
  br label %for.inc36.5.4

for.inc36.5.4:                                    ; preds = %for.inc36.5.4.loopexit, %for.body10.5.4
  %partial_sum.3.5.4 = phi float [ %partial_sum.05.5.4, %for.body10.5.4 ], [ %partial_sum.2.5.4.lcssa, %for.inc36.5.4.loopexit ]
  %inc37.5.4 = add nuw nsw i32 %ki.06.5.4, 1
  %exitcond19.5.4 = icmp eq i32 %inc37.5.4, %kern_height
  br i1 %exitcond19.5.4, label %for.end38.5.4.loopexit, label %for.body10.5.4, !llvm.loop !3

for.end38.5.4.loopexit:                           ; preds = %for.inc36.5.4
  %partial_sum.3.5.4.lcssa = phi float [ %partial_sum.3.5.4, %for.inc36.5.4 ]
  br label %for.end38.5.4

for.end38.5.4:                                    ; preds = %for.end38.5.4.loopexit, %for.inc53.4.4
  %partial_sum.0.lcssa.5.4 = phi float [ 0.000000e+00, %for.inc53.4.4 ], [ %partial_sum.3.5.4.lcssa, %for.end38.5.4.loopexit ]
  br i1 %tobool39, label %if.else.5.4, label %if.then40.5.4

if.then40.5.4:                                    ; preds = %for.end38.5.4
  %cmp41.5.4 = fcmp olt float %partial_sum.0.lcssa.5.4, 0.000000e+00
  %sub42.5.4 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.4
  %cond.5.4 = select i1 %cmp41.5.4, float %sub42.5.4, float %partial_sum.0.lcssa.5.4
  %conv.5.4 = fptoui float %cond.5.4 to i8
  %conv43.5.4 = uitofp i8 %conv.5.4 to float
  %422 = add nsw i64 %indvars.iv.next21.4.4, %374
  %arrayidx47.5.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %422
  store float %conv43.5.4, float* %arrayidx47.5.4, align 4
  br label %for.inc53.5.4

if.else.5.4:                                      ; preds = %for.end38.5.4
  %423 = add nsw i64 %indvars.iv.next21.4.4, %373
  %arrayidx51.5.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %423
  store float %partial_sum.0.lcssa.5.4, float* %arrayidx51.5.4, align 4
  br label %for.inc53.5.4

for.inc53.5.4:                                    ; preds = %if.else.5.4, %if.then40.5.4
  %inc54.5.4 = add nsw i32 %in_j.011.4, 6
  %indvars.iv.next21.5.4 = add nsw i64 %indvars.iv20.4, 6
  br i1 %cmp94, label %for.end38.6.4, label %for.body10.6.4.preheader

for.body10.6.4.preheader:                         ; preds = %for.inc53.5.4
  br label %for.body10.6.4

for.body10.6.4:                                   ; preds = %for.body10.6.4.preheader, %for.inc36.6.4
  %ki.06.6.4 = phi i32 [ %inc37.6.4, %for.inc36.6.4 ], [ 0, %for.body10.6.4.preheader ]
  %partial_sum.05.6.4 = phi float [ %partial_sum.3.6.4, %for.inc36.6.4 ], [ 0.000000e+00, %for.body10.6.4.preheader ]
  %add.6.4 = add nsw i32 %ki.06.6.4, %inc58.3
  %notlhs.6.4 = icmp slt i32 %add.6.4, 0
  %notrhs.6.4 = icmp uge i32 %add.6.4, %img_height
  %.not.6.4 = or i1 %notrhs.6.4, %notlhs.6.4
  %brmerge.6.4 = or i1 %.not.6.4, %cmp151.not.6.4
  br i1 %brmerge.6.4, label %for.inc36.6.4, label %for.body16.lr.ph.6.4

for.body16.lr.ph.6.4:                             ; preds = %for.body10.6.4
  %mul.6.4 = shl i32 %add.6.4, 7
  %mul30.6.4 = mul i32 %ki.06.6.4, %kern_width
  br label %for.body16.6.4

for.body16.6.4:                                   ; preds = %for.inc.6.4, %for.body16.lr.ph.6.4
  %indvars.iv.6.4 = phi i64 [ 0, %for.body16.lr.ph.6.4 ], [ %indvars.iv.next.6.4, %for.inc.6.4 ]
  %partial_sum.12.6.4 = phi float [ %partial_sum.05.6.4, %for.body16.lr.ph.6.4 ], [ %partial_sum.2.6.4, %for.inc.6.4 ]
  %424 = trunc i64 %indvars.iv.6.4 to i32
  %add17.6.4 = add nsw i32 %424, %inc54.5.4
  %cmp18.6.4 = icmp sgt i32 %add17.6.4, -1
  %cmp21.6.4 = icmp ult i32 %add17.6.4, %img_width
  %425 = and i1 %cmp18.6.4, %cmp21.6.4
  br i1 %425, label %if.end26.6.4, label %for.inc.6.4

if.end26.6.4:                                     ; preds = %for.body16.6.4
  %add29.6.4 = add nsw i32 %add17.6.4, %mul.6.4
  %idxprom.6.4 = sext i32 %add29.6.4 to i64
  %arrayidx.6.4 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.4
  %426 = load float, float* %arrayidx.6.4, align 4
  %427 = trunc i64 %indvars.iv.6.4 to i32
  %add31.6.4 = add i32 %427, %mul30.6.4
  %idxprom32.6.4 = zext i32 %add31.6.4 to i64
  %arrayidx33.6.4 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.4
  %428 = load float, float* %arrayidx33.6.4, align 4
  %mul34.6.4 = fmul float %426, %428
  %add35.6.4 = fadd float %partial_sum.12.6.4, %mul34.6.4
  br label %for.inc.6.4

for.inc.6.4:                                      ; preds = %if.end26.6.4, %for.body16.6.4
  %partial_sum.2.6.4 = phi float [ %add35.6.4, %if.end26.6.4 ], [ %partial_sum.12.6.4, %for.body16.6.4 ]
  %indvars.iv.next.6.4 = add nuw nsw i64 %indvars.iv.6.4, 1
  %lftr.wideiv.6.4 = trunc i64 %indvars.iv.next.6.4 to i32
  %exitcond.6.4 = icmp eq i32 %lftr.wideiv.6.4, %kern_width
  br i1 %exitcond.6.4, label %for.inc36.6.4.loopexit, label %for.body16.6.4, !llvm.loop !1

for.inc36.6.4.loopexit:                           ; preds = %for.inc.6.4
  %partial_sum.2.6.4.lcssa = phi float [ %partial_sum.2.6.4, %for.inc.6.4 ]
  br label %for.inc36.6.4

for.inc36.6.4:                                    ; preds = %for.inc36.6.4.loopexit, %for.body10.6.4
  %partial_sum.3.6.4 = phi float [ %partial_sum.05.6.4, %for.body10.6.4 ], [ %partial_sum.2.6.4.lcssa, %for.inc36.6.4.loopexit ]
  %inc37.6.4 = add nuw nsw i32 %ki.06.6.4, 1
  %exitcond19.6.4 = icmp eq i32 %inc37.6.4, %kern_height
  br i1 %exitcond19.6.4, label %for.end38.6.4.loopexit, label %for.body10.6.4, !llvm.loop !3

for.end38.6.4.loopexit:                           ; preds = %for.inc36.6.4
  %partial_sum.3.6.4.lcssa = phi float [ %partial_sum.3.6.4, %for.inc36.6.4 ]
  br label %for.end38.6.4

for.end38.6.4:                                    ; preds = %for.end38.6.4.loopexit, %for.inc53.5.4
  %partial_sum.0.lcssa.6.4 = phi float [ 0.000000e+00, %for.inc53.5.4 ], [ %partial_sum.3.6.4.lcssa, %for.end38.6.4.loopexit ]
  br i1 %tobool39, label %if.else.6.4, label %if.then40.6.4

if.then40.6.4:                                    ; preds = %for.end38.6.4
  %cmp41.6.4 = fcmp olt float %partial_sum.0.lcssa.6.4, 0.000000e+00
  %sub42.6.4 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.4
  %cond.6.4 = select i1 %cmp41.6.4, float %sub42.6.4, float %partial_sum.0.lcssa.6.4
  %conv.6.4 = fptoui float %cond.6.4 to i8
  %conv43.6.4 = uitofp i8 %conv.6.4 to float
  %429 = add nsw i64 %indvars.iv.next21.5.4, %374
  %arrayidx47.6.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %429
  store float %conv43.6.4, float* %arrayidx47.6.4, align 4
  br label %for.inc53.6.4

if.else.6.4:                                      ; preds = %for.end38.6.4
  %430 = add nsw i64 %indvars.iv.next21.5.4, %373
  %arrayidx51.6.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %430
  store float %partial_sum.0.lcssa.6.4, float* %arrayidx51.6.4, align 4
  br label %for.inc53.6.4

for.inc53.6.4:                                    ; preds = %if.else.6.4, %if.then40.6.4
  %inc54.6.4 = add nsw i32 %in_j.011.4, 7
  %indvars.iv.next21.6.4 = add nsw i64 %indvars.iv20.4, 7
  br i1 %cmp94, label %for.end38.7.4, label %for.body10.7.4.preheader

for.body10.7.4.preheader:                         ; preds = %for.inc53.6.4
  br label %for.body10.7.4

for.body10.7.4:                                   ; preds = %for.body10.7.4.preheader, %for.inc36.7.4
  %ki.06.7.4 = phi i32 [ %inc37.7.4, %for.inc36.7.4 ], [ 0, %for.body10.7.4.preheader ]
  %partial_sum.05.7.4 = phi float [ %partial_sum.3.7.4, %for.inc36.7.4 ], [ 0.000000e+00, %for.body10.7.4.preheader ]
  %add.7.4 = add nsw i32 %ki.06.7.4, %inc58.3
  %notlhs.7.4 = icmp slt i32 %add.7.4, 0
  %notrhs.7.4 = icmp uge i32 %add.7.4, %img_height
  %.not.7.4 = or i1 %notrhs.7.4, %notlhs.7.4
  %brmerge.7.4 = or i1 %.not.7.4, %cmp151.not.7.4
  br i1 %brmerge.7.4, label %for.inc36.7.4, label %for.body16.lr.ph.7.4

for.body16.lr.ph.7.4:                             ; preds = %for.body10.7.4
  %mul.7.4 = shl i32 %add.7.4, 7
  %mul30.7.4 = mul i32 %ki.06.7.4, %kern_width
  br label %for.body16.7.4

for.body16.7.4:                                   ; preds = %for.inc.7.4, %for.body16.lr.ph.7.4
  %indvars.iv.7.4 = phi i64 [ 0, %for.body16.lr.ph.7.4 ], [ %indvars.iv.next.7.4, %for.inc.7.4 ]
  %partial_sum.12.7.4 = phi float [ %partial_sum.05.7.4, %for.body16.lr.ph.7.4 ], [ %partial_sum.2.7.4, %for.inc.7.4 ]
  %431 = trunc i64 %indvars.iv.7.4 to i32
  %add17.7.4 = add nsw i32 %431, %inc54.6.4
  %cmp18.7.4 = icmp sgt i32 %add17.7.4, -1
  %cmp21.7.4 = icmp ult i32 %add17.7.4, %img_width
  %432 = and i1 %cmp18.7.4, %cmp21.7.4
  br i1 %432, label %if.end26.7.4, label %for.inc.7.4

if.end26.7.4:                                     ; preds = %for.body16.7.4
  %add29.7.4 = add nsw i32 %add17.7.4, %mul.7.4
  %idxprom.7.4 = sext i32 %add29.7.4 to i64
  %arrayidx.7.4 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.4
  %433 = load float, float* %arrayidx.7.4, align 4
  %434 = trunc i64 %indvars.iv.7.4 to i32
  %add31.7.4 = add i32 %434, %mul30.7.4
  %idxprom32.7.4 = zext i32 %add31.7.4 to i64
  %arrayidx33.7.4 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.4
  %435 = load float, float* %arrayidx33.7.4, align 4
  %mul34.7.4 = fmul float %433, %435
  %add35.7.4 = fadd float %partial_sum.12.7.4, %mul34.7.4
  br label %for.inc.7.4

for.inc.7.4:                                      ; preds = %if.end26.7.4, %for.body16.7.4
  %partial_sum.2.7.4 = phi float [ %add35.7.4, %if.end26.7.4 ], [ %partial_sum.12.7.4, %for.body16.7.4 ]
  %indvars.iv.next.7.4 = add nuw nsw i64 %indvars.iv.7.4, 1
  %lftr.wideiv.7.4 = trunc i64 %indvars.iv.next.7.4 to i32
  %exitcond.7.4 = icmp eq i32 %lftr.wideiv.7.4, %kern_width
  br i1 %exitcond.7.4, label %for.inc36.7.4.loopexit, label %for.body16.7.4, !llvm.loop !1

for.inc36.7.4.loopexit:                           ; preds = %for.inc.7.4
  %partial_sum.2.7.4.lcssa = phi float [ %partial_sum.2.7.4, %for.inc.7.4 ]
  br label %for.inc36.7.4

for.inc36.7.4:                                    ; preds = %for.inc36.7.4.loopexit, %for.body10.7.4
  %partial_sum.3.7.4 = phi float [ %partial_sum.05.7.4, %for.body10.7.4 ], [ %partial_sum.2.7.4.lcssa, %for.inc36.7.4.loopexit ]
  %inc37.7.4 = add nuw nsw i32 %ki.06.7.4, 1
  %exitcond19.7.4 = icmp eq i32 %inc37.7.4, %kern_height
  br i1 %exitcond19.7.4, label %for.end38.7.4.loopexit, label %for.body10.7.4, !llvm.loop !3

for.end38.7.4.loopexit:                           ; preds = %for.inc36.7.4
  %partial_sum.3.7.4.lcssa = phi float [ %partial_sum.3.7.4, %for.inc36.7.4 ]
  br label %for.end38.7.4

for.end38.7.4:                                    ; preds = %for.end38.7.4.loopexit, %for.inc53.6.4
  %partial_sum.0.lcssa.7.4 = phi float [ 0.000000e+00, %for.inc53.6.4 ], [ %partial_sum.3.7.4.lcssa, %for.end38.7.4.loopexit ]
  br i1 %tobool39, label %if.else.7.4, label %if.then40.7.4

if.then40.7.4:                                    ; preds = %for.end38.7.4
  %cmp41.7.4 = fcmp olt float %partial_sum.0.lcssa.7.4, 0.000000e+00
  %sub42.7.4 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.4
  %cond.7.4 = select i1 %cmp41.7.4, float %sub42.7.4, float %partial_sum.0.lcssa.7.4
  %conv.7.4 = fptoui float %cond.7.4 to i8
  %conv43.7.4 = uitofp i8 %conv.7.4 to float
  %436 = add nsw i64 %indvars.iv.next21.6.4, %374
  %arrayidx47.7.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %436
  store float %conv43.7.4, float* %arrayidx47.7.4, align 4
  br label %for.inc53.7.4

if.else.7.4:                                      ; preds = %for.end38.7.4
  %437 = add nsw i64 %indvars.iv.next21.6.4, %373
  %arrayidx51.7.4 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %437
  store float %partial_sum.0.lcssa.7.4, float* %arrayidx51.7.4, align 4
  br label %for.inc53.7.4

for.inc53.7.4:                                    ; preds = %if.else.7.4, %if.then40.7.4
  %inc54.7.4 = add nsw i32 %in_j.011.4, 8
  %indvars.iv.next21.7.4 = add nsw i64 %indvars.iv20.4, 8
  %lftr.wideiv24.7.4 = trunc i64 %indvars.iv.next21.7.4 to i32
  %exitcond25.7.4 = icmp eq i32 %lftr.wideiv24.7.4, %img_width
  br i1 %exitcond25.7.4, label %for.inc57.4.loopexit, label %for.cond8.preheader.4, !llvm.loop !5

for.inc57.4.loopexit:                             ; preds = %for.inc53.7.4
  br label %for.inc57.4

for.inc57.4:                                      ; preds = %for.inc57.4.loopexit, %for.cond8.preheader.lr.ph.split.4
  %inc58.4 = add nsw i32 %in_i.015, 5
  %indvars.iv.next27.4 = add nsw i64 %indvars.iv26, 5
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.5

for.cond8.preheader.lr.ph.5:                      ; preds = %for.inc57.4
  %438 = trunc i64 %indvars.iv.next27.4 to i32
  %mul48.5 = shl i32 %438, 7
  %439 = trunc i64 %indvars.iv.next27.4 to i32
  %mul44.5 = shl i32 %439, 7
  %440 = sext i32 %mul48.5 to i64
  %441 = sext i32 %mul44.5 to i64
  br i1 %lcmp.mod.5, label %for.cond8.preheader.lr.ph.split.5, label %for.cond8.preheader.prol.5.preheader

for.cond8.preheader.prol.5.preheader:             ; preds = %for.cond8.preheader.lr.ph.5
  br label %for.cond8.preheader.prol.5

for.cond8.preheader.prol.5:                       ; preds = %for.cond8.preheader.prol.5.preheader, %for.inc53.prol.5
  %indvars.iv20.prol.5 = phi i64 [ %indvars.iv.next21.prol.5, %for.inc53.prol.5 ], [ 0, %for.cond8.preheader.prol.5.preheader ]
  %in_j.011.prol.5 = phi i32 [ %inc54.prol.5, %for.inc53.prol.5 ], [ %sub4, %for.cond8.preheader.prol.5.preheader ]
  %prol.iter.5 = phi i32 [ %prol.iter.sub.5, %for.inc53.prol.5 ], [ %xtraiter.5, %for.cond8.preheader.prol.5.preheader ]
  br i1 %cmp94, label %for.end38.prol.5, label %for.body10.prol.5.preheader

for.body10.prol.5.preheader:                      ; preds = %for.cond8.preheader.prol.5
  br label %for.body10.prol.5

for.body10.prol.5:                                ; preds = %for.body10.prol.5.preheader, %for.inc36.prol.5
  %ki.06.prol.5 = phi i32 [ %inc37.prol.5, %for.inc36.prol.5 ], [ 0, %for.body10.prol.5.preheader ]
  %partial_sum.05.prol.5 = phi float [ %partial_sum.3.prol.5, %for.inc36.prol.5 ], [ 0.000000e+00, %for.body10.prol.5.preheader ]
  %add.prol.5 = add nsw i32 %ki.06.prol.5, %inc58.4
  %notlhs.prol.5 = icmp slt i32 %add.prol.5, 0
  %notrhs.prol.5 = icmp uge i32 %add.prol.5, %img_height
  %.not.prol.5 = or i1 %notrhs.prol.5, %notlhs.prol.5
  %brmerge.prol.5 = or i1 %.not.prol.5, %cmp151.not.prol.5
  br i1 %brmerge.prol.5, label %for.inc36.prol.5, label %for.body16.lr.ph.prol.5

for.body16.lr.ph.prol.5:                          ; preds = %for.body10.prol.5
  %mul.prol.5 = shl i32 %add.prol.5, 7
  %mul30.prol.5 = mul i32 %ki.06.prol.5, %kern_width
  br label %for.body16.prol.5

for.body16.prol.5:                                ; preds = %for.inc.prol.5, %for.body16.lr.ph.prol.5
  %indvars.iv.prol.5 = phi i64 [ 0, %for.body16.lr.ph.prol.5 ], [ %indvars.iv.next.prol.5, %for.inc.prol.5 ]
  %partial_sum.12.prol.5 = phi float [ %partial_sum.05.prol.5, %for.body16.lr.ph.prol.5 ], [ %partial_sum.2.prol.5, %for.inc.prol.5 ]
  %442 = trunc i64 %indvars.iv.prol.5 to i32
  %add17.prol.5 = add nsw i32 %442, %in_j.011.prol.5
  %cmp18.prol.5 = icmp sgt i32 %add17.prol.5, -1
  %cmp21.prol.5 = icmp ult i32 %add17.prol.5, %img_width
  %443 = and i1 %cmp18.prol.5, %cmp21.prol.5
  br i1 %443, label %if.end26.prol.5, label %for.inc.prol.5

if.end26.prol.5:                                  ; preds = %for.body16.prol.5
  %add29.prol.5 = add nsw i32 %add17.prol.5, %mul.prol.5
  %idxprom.prol.5 = sext i32 %add29.prol.5 to i64
  %arrayidx.prol.5 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.5
  %444 = load float, float* %arrayidx.prol.5, align 4
  %445 = trunc i64 %indvars.iv.prol.5 to i32
  %add31.prol.5 = add i32 %445, %mul30.prol.5
  %idxprom32.prol.5 = zext i32 %add31.prol.5 to i64
  %arrayidx33.prol.5 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.5
  %446 = load float, float* %arrayidx33.prol.5, align 4
  %mul34.prol.5 = fmul float %444, %446
  %add35.prol.5 = fadd float %partial_sum.12.prol.5, %mul34.prol.5
  br label %for.inc.prol.5

for.inc.prol.5:                                   ; preds = %if.end26.prol.5, %for.body16.prol.5
  %partial_sum.2.prol.5 = phi float [ %add35.prol.5, %if.end26.prol.5 ], [ %partial_sum.12.prol.5, %for.body16.prol.5 ]
  %indvars.iv.next.prol.5 = add nuw nsw i64 %indvars.iv.prol.5, 1
  %lftr.wideiv.prol.5 = trunc i64 %indvars.iv.next.prol.5 to i32
  %exitcond.prol.5 = icmp eq i32 %lftr.wideiv.prol.5, %kern_width
  br i1 %exitcond.prol.5, label %for.inc36.prol.5.loopexit, label %for.body16.prol.5, !llvm.loop !1

for.inc36.prol.5.loopexit:                        ; preds = %for.inc.prol.5
  %partial_sum.2.prol.5.lcssa = phi float [ %partial_sum.2.prol.5, %for.inc.prol.5 ]
  br label %for.inc36.prol.5

for.inc36.prol.5:                                 ; preds = %for.inc36.prol.5.loopexit, %for.body10.prol.5
  %partial_sum.3.prol.5 = phi float [ %partial_sum.05.prol.5, %for.body10.prol.5 ], [ %partial_sum.2.prol.5.lcssa, %for.inc36.prol.5.loopexit ]
  %inc37.prol.5 = add nuw nsw i32 %ki.06.prol.5, 1
  %exitcond19.prol.5 = icmp eq i32 %inc37.prol.5, %kern_height
  br i1 %exitcond19.prol.5, label %for.end38.prol.5.loopexit, label %for.body10.prol.5, !llvm.loop !3

for.end38.prol.5.loopexit:                        ; preds = %for.inc36.prol.5
  %partial_sum.3.prol.5.lcssa = phi float [ %partial_sum.3.prol.5, %for.inc36.prol.5 ]
  br label %for.end38.prol.5

for.end38.prol.5:                                 ; preds = %for.end38.prol.5.loopexit, %for.cond8.preheader.prol.5
  %partial_sum.0.lcssa.prol.5 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.5 ], [ %partial_sum.3.prol.5.lcssa, %for.end38.prol.5.loopexit ]
  br i1 %tobool39, label %if.else.prol.5, label %if.then40.prol.5

if.then40.prol.5:                                 ; preds = %for.end38.prol.5
  %cmp41.prol.5 = fcmp olt float %partial_sum.0.lcssa.prol.5, 0.000000e+00
  %sub42.prol.5 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.5
  %cond.prol.5 = select i1 %cmp41.prol.5, float %sub42.prol.5, float %partial_sum.0.lcssa.prol.5
  %conv.prol.5 = fptoui float %cond.prol.5 to i8
  %conv43.prol.5 = uitofp i8 %conv.prol.5 to float
  %447 = add nsw i64 %indvars.iv20.prol.5, %441
  %arrayidx47.prol.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %447
  store float %conv43.prol.5, float* %arrayidx47.prol.5, align 4
  br label %for.inc53.prol.5

if.else.prol.5:                                   ; preds = %for.end38.prol.5
  %448 = add nsw i64 %indvars.iv20.prol.5, %440
  %arrayidx51.prol.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %448
  store float %partial_sum.0.lcssa.prol.5, float* %arrayidx51.prol.5, align 4
  br label %for.inc53.prol.5

for.inc53.prol.5:                                 ; preds = %if.else.prol.5, %if.then40.prol.5
  %inc54.prol.5 = add nsw i32 %in_j.011.prol.5, 1
  %indvars.iv.next21.prol.5 = add nuw nsw i64 %indvars.iv20.prol.5, 1
  %prol.iter.sub.5 = add i32 %prol.iter.5, -1
  %prol.iter.cmp.5 = icmp eq i32 %prol.iter.sub.5, 0
  br i1 %prol.iter.cmp.5, label %for.cond8.preheader.lr.ph.split.5.loopexit, label %for.cond8.preheader.prol.5, !llvm.loop !4

for.cond8.preheader.lr.ph.split.5.loopexit:       ; preds = %for.inc53.prol.5
  %indvars.iv.next21.prol.5.lcssa = phi i64 [ %indvars.iv.next21.prol.5, %for.inc53.prol.5 ]
  %inc54.prol.5.lcssa = phi i32 [ %inc54.prol.5, %for.inc53.prol.5 ]
  br label %for.cond8.preheader.lr.ph.split.5

for.cond8.preheader.lr.ph.split.5:                ; preds = %for.cond8.preheader.lr.ph.split.5.loopexit, %for.cond8.preheader.lr.ph.5
  %indvars.iv20.unr.5 = phi i64 [ 0, %for.cond8.preheader.lr.ph.5 ], [ %indvars.iv.next21.prol.5.lcssa, %for.cond8.preheader.lr.ph.split.5.loopexit ]
  %in_j.011.unr.5 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.5 ], [ %inc54.prol.5.lcssa, %for.cond8.preheader.lr.ph.split.5.loopexit ]
  br i1 %76, label %for.inc57.5, label %for.cond8.preheader.5.preheader

for.cond8.preheader.5.preheader:                  ; preds = %for.cond8.preheader.lr.ph.split.5
  br label %for.cond8.preheader.5

for.cond8.preheader.5:                            ; preds = %for.cond8.preheader.5.preheader, %for.inc53.7.5
  %indvars.iv20.5 = phi i64 [ %indvars.iv.next21.7.5, %for.inc53.7.5 ], [ %indvars.iv20.unr.5, %for.cond8.preheader.5.preheader ]
  %in_j.011.5 = phi i32 [ %inc54.7.5, %for.inc53.7.5 ], [ %in_j.011.unr.5, %for.cond8.preheader.5.preheader ]
  br i1 %cmp94, label %for.end38.5358, label %for.body10.5325.preheader

for.body10.5325.preheader:                        ; preds = %for.cond8.preheader.5
  br label %for.body10.5325

for.body10.5325:                                  ; preds = %for.body10.5325.preheader, %for.inc36.5354
  %ki.06.5317 = phi i32 [ %inc37.5352, %for.inc36.5354 ], [ 0, %for.body10.5325.preheader ]
  %partial_sum.05.5318 = phi float [ %partial_sum.3.5351, %for.inc36.5354 ], [ 0.000000e+00, %for.body10.5325.preheader ]
  %add.5319 = add nsw i32 %ki.06.5317, %inc58.4
  %notlhs.5320 = icmp slt i32 %add.5319, 0
  %notrhs.5321 = icmp uge i32 %add.5319, %img_height
  %.not.5322 = or i1 %notrhs.5321, %notlhs.5320
  %brmerge.5324 = or i1 %.not.5322, %cmp151.not.5323
  br i1 %brmerge.5324, label %for.inc36.5354, label %for.body16.lr.ph.5328

for.body16.lr.ph.5328:                            ; preds = %for.body10.5325
  %mul.5326 = shl i32 %add.5319, 7
  %mul30.5327 = mul i32 %ki.06.5317, %kern_width
  br label %for.body16.5334

for.body16.5334:                                  ; preds = %for.inc.5348, %for.body16.lr.ph.5328
  %indvars.iv.5329 = phi i64 [ 0, %for.body16.lr.ph.5328 ], [ %indvars.iv.next.5345, %for.inc.5348 ]
  %partial_sum.12.5330 = phi float [ %partial_sum.05.5318, %for.body16.lr.ph.5328 ], [ %partial_sum.2.5344, %for.inc.5348 ]
  %449 = trunc i64 %indvars.iv.5329 to i32
  %add17.5331 = add nsw i32 %449, %in_j.011.5
  %cmp18.5332 = icmp sgt i32 %add17.5331, -1
  %cmp21.5333 = icmp ult i32 %add17.5331, %img_width
  %450 = and i1 %cmp18.5332, %cmp21.5333
  br i1 %450, label %if.end26.5343, label %for.inc.5348

if.end26.5343:                                    ; preds = %for.body16.5334
  %add29.5335 = add nsw i32 %add17.5331, %mul.5326
  %idxprom.5336 = sext i32 %add29.5335 to i64
  %arrayidx.5337 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5336
  %451 = load float, float* %arrayidx.5337, align 4
  %452 = trunc i64 %indvars.iv.5329 to i32
  %add31.5338 = add i32 %452, %mul30.5327
  %idxprom32.5339 = zext i32 %add31.5338 to i64
  %arrayidx33.5340 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5339
  %453 = load float, float* %arrayidx33.5340, align 4
  %mul34.5341 = fmul float %451, %453
  %add35.5342 = fadd float %partial_sum.12.5330, %mul34.5341
  br label %for.inc.5348

for.inc.5348:                                     ; preds = %if.end26.5343, %for.body16.5334
  %partial_sum.2.5344 = phi float [ %add35.5342, %if.end26.5343 ], [ %partial_sum.12.5330, %for.body16.5334 ]
  %indvars.iv.next.5345 = add nuw nsw i64 %indvars.iv.5329, 1
  %lftr.wideiv.5346 = trunc i64 %indvars.iv.next.5345 to i32
  %exitcond.5347 = icmp eq i32 %lftr.wideiv.5346, %kern_width
  br i1 %exitcond.5347, label %for.inc36.5354.loopexit, label %for.body16.5334, !llvm.loop !1

for.inc36.5354.loopexit:                          ; preds = %for.inc.5348
  %partial_sum.2.5344.lcssa = phi float [ %partial_sum.2.5344, %for.inc.5348 ]
  br label %for.inc36.5354

for.inc36.5354:                                   ; preds = %for.inc36.5354.loopexit, %for.body10.5325
  %partial_sum.3.5351 = phi float [ %partial_sum.05.5318, %for.body10.5325 ], [ %partial_sum.2.5344.lcssa, %for.inc36.5354.loopexit ]
  %inc37.5352 = add nuw nsw i32 %ki.06.5317, 1
  %exitcond19.5353 = icmp eq i32 %inc37.5352, %kern_height
  br i1 %exitcond19.5353, label %for.end38.5358.loopexit, label %for.body10.5325, !llvm.loop !3

for.end38.5358.loopexit:                          ; preds = %for.inc36.5354
  %partial_sum.3.5351.lcssa = phi float [ %partial_sum.3.5351, %for.inc36.5354 ]
  br label %for.end38.5358

for.end38.5358:                                   ; preds = %for.end38.5358.loopexit, %for.cond8.preheader.5
  %partial_sum.0.lcssa.5357 = phi float [ 0.000000e+00, %for.cond8.preheader.5 ], [ %partial_sum.3.5351.lcssa, %for.end38.5358.loopexit ]
  br i1 %tobool39, label %if.else.5367, label %if.then40.5365

if.then40.5365:                                   ; preds = %for.end38.5358
  %cmp41.5359 = fcmp olt float %partial_sum.0.lcssa.5357, 0.000000e+00
  %sub42.5360 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5357
  %cond.5361 = select i1 %cmp41.5359, float %sub42.5360, float %partial_sum.0.lcssa.5357
  %conv.5362 = fptoui float %cond.5361 to i8
  %conv43.5363 = uitofp i8 %conv.5362 to float
  %454 = add nsw i64 %indvars.iv20.5, %441
  %arrayidx47.5364 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %454
  store float %conv43.5363, float* %arrayidx47.5364, align 4
  br label %for.inc53.5371

if.else.5367:                                     ; preds = %for.end38.5358
  %455 = add nsw i64 %indvars.iv20.5, %440
  %arrayidx51.5366 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %455
  store float %partial_sum.0.lcssa.5357, float* %arrayidx51.5366, align 4
  br label %for.inc53.5371

for.inc53.5371:                                   ; preds = %if.else.5367, %if.then40.5365
  %inc54.5368 = add nsw i32 %in_j.011.5, 1
  %indvars.iv.next21.5369 = add nuw nsw i64 %indvars.iv20.5, 1
  br i1 %cmp94, label %for.end38.1.5, label %for.body10.1.5.preheader

for.body10.1.5.preheader:                         ; preds = %for.inc53.5371
  br label %for.body10.1.5

for.body10.1.5:                                   ; preds = %for.body10.1.5.preheader, %for.inc36.1.5
  %ki.06.1.5 = phi i32 [ %inc37.1.5, %for.inc36.1.5 ], [ 0, %for.body10.1.5.preheader ]
  %partial_sum.05.1.5 = phi float [ %partial_sum.3.1.5, %for.inc36.1.5 ], [ 0.000000e+00, %for.body10.1.5.preheader ]
  %add.1.5 = add nsw i32 %ki.06.1.5, %inc58.4
  %notlhs.1.5 = icmp slt i32 %add.1.5, 0
  %notrhs.1.5 = icmp uge i32 %add.1.5, %img_height
  %.not.1.5 = or i1 %notrhs.1.5, %notlhs.1.5
  %brmerge.1.5 = or i1 %.not.1.5, %cmp151.not.1.5
  br i1 %brmerge.1.5, label %for.inc36.1.5, label %for.body16.lr.ph.1.5

for.body16.lr.ph.1.5:                             ; preds = %for.body10.1.5
  %mul.1.5 = shl i32 %add.1.5, 7
  %mul30.1.5 = mul i32 %ki.06.1.5, %kern_width
  br label %for.body16.1.5

for.body16.1.5:                                   ; preds = %for.inc.1.5, %for.body16.lr.ph.1.5
  %indvars.iv.1.5 = phi i64 [ 0, %for.body16.lr.ph.1.5 ], [ %indvars.iv.next.1.5, %for.inc.1.5 ]
  %partial_sum.12.1.5 = phi float [ %partial_sum.05.1.5, %for.body16.lr.ph.1.5 ], [ %partial_sum.2.1.5, %for.inc.1.5 ]
  %456 = trunc i64 %indvars.iv.1.5 to i32
  %add17.1.5 = add nsw i32 %456, %inc54.5368
  %cmp18.1.5 = icmp sgt i32 %add17.1.5, -1
  %cmp21.1.5 = icmp ult i32 %add17.1.5, %img_width
  %457 = and i1 %cmp18.1.5, %cmp21.1.5
  br i1 %457, label %if.end26.1.5, label %for.inc.1.5

if.end26.1.5:                                     ; preds = %for.body16.1.5
  %add29.1.5 = add nsw i32 %add17.1.5, %mul.1.5
  %idxprom.1.5 = sext i32 %add29.1.5 to i64
  %arrayidx.1.5 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.5
  %458 = load float, float* %arrayidx.1.5, align 4
  %459 = trunc i64 %indvars.iv.1.5 to i32
  %add31.1.5 = add i32 %459, %mul30.1.5
  %idxprom32.1.5 = zext i32 %add31.1.5 to i64
  %arrayidx33.1.5 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.5
  %460 = load float, float* %arrayidx33.1.5, align 4
  %mul34.1.5 = fmul float %458, %460
  %add35.1.5 = fadd float %partial_sum.12.1.5, %mul34.1.5
  br label %for.inc.1.5

for.inc.1.5:                                      ; preds = %if.end26.1.5, %for.body16.1.5
  %partial_sum.2.1.5 = phi float [ %add35.1.5, %if.end26.1.5 ], [ %partial_sum.12.1.5, %for.body16.1.5 ]
  %indvars.iv.next.1.5 = add nuw nsw i64 %indvars.iv.1.5, 1
  %lftr.wideiv.1.5 = trunc i64 %indvars.iv.next.1.5 to i32
  %exitcond.1.5 = icmp eq i32 %lftr.wideiv.1.5, %kern_width
  br i1 %exitcond.1.5, label %for.inc36.1.5.loopexit, label %for.body16.1.5, !llvm.loop !1

for.inc36.1.5.loopexit:                           ; preds = %for.inc.1.5
  %partial_sum.2.1.5.lcssa = phi float [ %partial_sum.2.1.5, %for.inc.1.5 ]
  br label %for.inc36.1.5

for.inc36.1.5:                                    ; preds = %for.inc36.1.5.loopexit, %for.body10.1.5
  %partial_sum.3.1.5 = phi float [ %partial_sum.05.1.5, %for.body10.1.5 ], [ %partial_sum.2.1.5.lcssa, %for.inc36.1.5.loopexit ]
  %inc37.1.5 = add nuw nsw i32 %ki.06.1.5, 1
  %exitcond19.1.5 = icmp eq i32 %inc37.1.5, %kern_height
  br i1 %exitcond19.1.5, label %for.end38.1.5.loopexit, label %for.body10.1.5, !llvm.loop !3

for.end38.1.5.loopexit:                           ; preds = %for.inc36.1.5
  %partial_sum.3.1.5.lcssa = phi float [ %partial_sum.3.1.5, %for.inc36.1.5 ]
  br label %for.end38.1.5

for.end38.1.5:                                    ; preds = %for.end38.1.5.loopexit, %for.inc53.5371
  %partial_sum.0.lcssa.1.5 = phi float [ 0.000000e+00, %for.inc53.5371 ], [ %partial_sum.3.1.5.lcssa, %for.end38.1.5.loopexit ]
  br i1 %tobool39, label %if.else.1.5, label %if.then40.1.5

if.then40.1.5:                                    ; preds = %for.end38.1.5
  %cmp41.1.5 = fcmp olt float %partial_sum.0.lcssa.1.5, 0.000000e+00
  %sub42.1.5 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.5
  %cond.1.5 = select i1 %cmp41.1.5, float %sub42.1.5, float %partial_sum.0.lcssa.1.5
  %conv.1.5 = fptoui float %cond.1.5 to i8
  %conv43.1.5 = uitofp i8 %conv.1.5 to float
  %461 = add nsw i64 %indvars.iv.next21.5369, %441
  %arrayidx47.1.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %461
  store float %conv43.1.5, float* %arrayidx47.1.5, align 4
  br label %for.inc53.1.5

if.else.1.5:                                      ; preds = %for.end38.1.5
  %462 = add nsw i64 %indvars.iv.next21.5369, %440
  %arrayidx51.1.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %462
  store float %partial_sum.0.lcssa.1.5, float* %arrayidx51.1.5, align 4
  br label %for.inc53.1.5

for.inc53.1.5:                                    ; preds = %if.else.1.5, %if.then40.1.5
  %inc54.1.5 = add nsw i32 %in_j.011.5, 2
  %indvars.iv.next21.1.5 = add nsw i64 %indvars.iv20.5, 2
  br i1 %cmp94, label %for.end38.2.5, label %for.body10.2.5.preheader

for.body10.2.5.preheader:                         ; preds = %for.inc53.1.5
  br label %for.body10.2.5

for.body10.2.5:                                   ; preds = %for.body10.2.5.preheader, %for.inc36.2.5
  %ki.06.2.5 = phi i32 [ %inc37.2.5, %for.inc36.2.5 ], [ 0, %for.body10.2.5.preheader ]
  %partial_sum.05.2.5 = phi float [ %partial_sum.3.2.5, %for.inc36.2.5 ], [ 0.000000e+00, %for.body10.2.5.preheader ]
  %add.2.5 = add nsw i32 %ki.06.2.5, %inc58.4
  %notlhs.2.5 = icmp slt i32 %add.2.5, 0
  %notrhs.2.5 = icmp uge i32 %add.2.5, %img_height
  %.not.2.5 = or i1 %notrhs.2.5, %notlhs.2.5
  %brmerge.2.5 = or i1 %.not.2.5, %cmp151.not.2.5
  br i1 %brmerge.2.5, label %for.inc36.2.5, label %for.body16.lr.ph.2.5

for.body16.lr.ph.2.5:                             ; preds = %for.body10.2.5
  %mul.2.5 = shl i32 %add.2.5, 7
  %mul30.2.5 = mul i32 %ki.06.2.5, %kern_width
  br label %for.body16.2.5

for.body16.2.5:                                   ; preds = %for.inc.2.5, %for.body16.lr.ph.2.5
  %indvars.iv.2.5 = phi i64 [ 0, %for.body16.lr.ph.2.5 ], [ %indvars.iv.next.2.5, %for.inc.2.5 ]
  %partial_sum.12.2.5 = phi float [ %partial_sum.05.2.5, %for.body16.lr.ph.2.5 ], [ %partial_sum.2.2.5, %for.inc.2.5 ]
  %463 = trunc i64 %indvars.iv.2.5 to i32
  %add17.2.5 = add nsw i32 %463, %inc54.1.5
  %cmp18.2.5 = icmp sgt i32 %add17.2.5, -1
  %cmp21.2.5 = icmp ult i32 %add17.2.5, %img_width
  %464 = and i1 %cmp18.2.5, %cmp21.2.5
  br i1 %464, label %if.end26.2.5, label %for.inc.2.5

if.end26.2.5:                                     ; preds = %for.body16.2.5
  %add29.2.5 = add nsw i32 %add17.2.5, %mul.2.5
  %idxprom.2.5 = sext i32 %add29.2.5 to i64
  %arrayidx.2.5 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.5
  %465 = load float, float* %arrayidx.2.5, align 4
  %466 = trunc i64 %indvars.iv.2.5 to i32
  %add31.2.5 = add i32 %466, %mul30.2.5
  %idxprom32.2.5 = zext i32 %add31.2.5 to i64
  %arrayidx33.2.5 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.5
  %467 = load float, float* %arrayidx33.2.5, align 4
  %mul34.2.5 = fmul float %465, %467
  %add35.2.5 = fadd float %partial_sum.12.2.5, %mul34.2.5
  br label %for.inc.2.5

for.inc.2.5:                                      ; preds = %if.end26.2.5, %for.body16.2.5
  %partial_sum.2.2.5 = phi float [ %add35.2.5, %if.end26.2.5 ], [ %partial_sum.12.2.5, %for.body16.2.5 ]
  %indvars.iv.next.2.5 = add nuw nsw i64 %indvars.iv.2.5, 1
  %lftr.wideiv.2.5 = trunc i64 %indvars.iv.next.2.5 to i32
  %exitcond.2.5 = icmp eq i32 %lftr.wideiv.2.5, %kern_width
  br i1 %exitcond.2.5, label %for.inc36.2.5.loopexit, label %for.body16.2.5, !llvm.loop !1

for.inc36.2.5.loopexit:                           ; preds = %for.inc.2.5
  %partial_sum.2.2.5.lcssa = phi float [ %partial_sum.2.2.5, %for.inc.2.5 ]
  br label %for.inc36.2.5

for.inc36.2.5:                                    ; preds = %for.inc36.2.5.loopexit, %for.body10.2.5
  %partial_sum.3.2.5 = phi float [ %partial_sum.05.2.5, %for.body10.2.5 ], [ %partial_sum.2.2.5.lcssa, %for.inc36.2.5.loopexit ]
  %inc37.2.5 = add nuw nsw i32 %ki.06.2.5, 1
  %exitcond19.2.5 = icmp eq i32 %inc37.2.5, %kern_height
  br i1 %exitcond19.2.5, label %for.end38.2.5.loopexit, label %for.body10.2.5, !llvm.loop !3

for.end38.2.5.loopexit:                           ; preds = %for.inc36.2.5
  %partial_sum.3.2.5.lcssa = phi float [ %partial_sum.3.2.5, %for.inc36.2.5 ]
  br label %for.end38.2.5

for.end38.2.5:                                    ; preds = %for.end38.2.5.loopexit, %for.inc53.1.5
  %partial_sum.0.lcssa.2.5 = phi float [ 0.000000e+00, %for.inc53.1.5 ], [ %partial_sum.3.2.5.lcssa, %for.end38.2.5.loopexit ]
  br i1 %tobool39, label %if.else.2.5, label %if.then40.2.5

if.then40.2.5:                                    ; preds = %for.end38.2.5
  %cmp41.2.5 = fcmp olt float %partial_sum.0.lcssa.2.5, 0.000000e+00
  %sub42.2.5 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.5
  %cond.2.5 = select i1 %cmp41.2.5, float %sub42.2.5, float %partial_sum.0.lcssa.2.5
  %conv.2.5 = fptoui float %cond.2.5 to i8
  %conv43.2.5 = uitofp i8 %conv.2.5 to float
  %468 = add nsw i64 %indvars.iv.next21.1.5, %441
  %arrayidx47.2.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %468
  store float %conv43.2.5, float* %arrayidx47.2.5, align 4
  br label %for.inc53.2.5

if.else.2.5:                                      ; preds = %for.end38.2.5
  %469 = add nsw i64 %indvars.iv.next21.1.5, %440
  %arrayidx51.2.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %469
  store float %partial_sum.0.lcssa.2.5, float* %arrayidx51.2.5, align 4
  br label %for.inc53.2.5

for.inc53.2.5:                                    ; preds = %if.else.2.5, %if.then40.2.5
  %inc54.2.5 = add nsw i32 %in_j.011.5, 3
  %indvars.iv.next21.2.5 = add nsw i64 %indvars.iv20.5, 3
  br i1 %cmp94, label %for.end38.3.5, label %for.body10.3.5.preheader

for.body10.3.5.preheader:                         ; preds = %for.inc53.2.5
  br label %for.body10.3.5

for.body10.3.5:                                   ; preds = %for.body10.3.5.preheader, %for.inc36.3.5
  %ki.06.3.5 = phi i32 [ %inc37.3.5, %for.inc36.3.5 ], [ 0, %for.body10.3.5.preheader ]
  %partial_sum.05.3.5 = phi float [ %partial_sum.3.3.5, %for.inc36.3.5 ], [ 0.000000e+00, %for.body10.3.5.preheader ]
  %add.3.5 = add nsw i32 %ki.06.3.5, %inc58.4
  %notlhs.3.5 = icmp slt i32 %add.3.5, 0
  %notrhs.3.5 = icmp uge i32 %add.3.5, %img_height
  %.not.3.5 = or i1 %notrhs.3.5, %notlhs.3.5
  %brmerge.3.5 = or i1 %.not.3.5, %cmp151.not.3.5
  br i1 %brmerge.3.5, label %for.inc36.3.5, label %for.body16.lr.ph.3.5

for.body16.lr.ph.3.5:                             ; preds = %for.body10.3.5
  %mul.3.5 = shl i32 %add.3.5, 7
  %mul30.3.5 = mul i32 %ki.06.3.5, %kern_width
  br label %for.body16.3.5

for.body16.3.5:                                   ; preds = %for.inc.3.5, %for.body16.lr.ph.3.5
  %indvars.iv.3.5 = phi i64 [ 0, %for.body16.lr.ph.3.5 ], [ %indvars.iv.next.3.5, %for.inc.3.5 ]
  %partial_sum.12.3.5 = phi float [ %partial_sum.05.3.5, %for.body16.lr.ph.3.5 ], [ %partial_sum.2.3.5, %for.inc.3.5 ]
  %470 = trunc i64 %indvars.iv.3.5 to i32
  %add17.3.5 = add nsw i32 %470, %inc54.2.5
  %cmp18.3.5 = icmp sgt i32 %add17.3.5, -1
  %cmp21.3.5 = icmp ult i32 %add17.3.5, %img_width
  %471 = and i1 %cmp18.3.5, %cmp21.3.5
  br i1 %471, label %if.end26.3.5, label %for.inc.3.5

if.end26.3.5:                                     ; preds = %for.body16.3.5
  %add29.3.5 = add nsw i32 %add17.3.5, %mul.3.5
  %idxprom.3.5 = sext i32 %add29.3.5 to i64
  %arrayidx.3.5 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.5
  %472 = load float, float* %arrayidx.3.5, align 4
  %473 = trunc i64 %indvars.iv.3.5 to i32
  %add31.3.5 = add i32 %473, %mul30.3.5
  %idxprom32.3.5 = zext i32 %add31.3.5 to i64
  %arrayidx33.3.5 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.5
  %474 = load float, float* %arrayidx33.3.5, align 4
  %mul34.3.5 = fmul float %472, %474
  %add35.3.5 = fadd float %partial_sum.12.3.5, %mul34.3.5
  br label %for.inc.3.5

for.inc.3.5:                                      ; preds = %if.end26.3.5, %for.body16.3.5
  %partial_sum.2.3.5 = phi float [ %add35.3.5, %if.end26.3.5 ], [ %partial_sum.12.3.5, %for.body16.3.5 ]
  %indvars.iv.next.3.5 = add nuw nsw i64 %indvars.iv.3.5, 1
  %lftr.wideiv.3.5 = trunc i64 %indvars.iv.next.3.5 to i32
  %exitcond.3.5 = icmp eq i32 %lftr.wideiv.3.5, %kern_width
  br i1 %exitcond.3.5, label %for.inc36.3.5.loopexit, label %for.body16.3.5, !llvm.loop !1

for.inc36.3.5.loopexit:                           ; preds = %for.inc.3.5
  %partial_sum.2.3.5.lcssa = phi float [ %partial_sum.2.3.5, %for.inc.3.5 ]
  br label %for.inc36.3.5

for.inc36.3.5:                                    ; preds = %for.inc36.3.5.loopexit, %for.body10.3.5
  %partial_sum.3.3.5 = phi float [ %partial_sum.05.3.5, %for.body10.3.5 ], [ %partial_sum.2.3.5.lcssa, %for.inc36.3.5.loopexit ]
  %inc37.3.5 = add nuw nsw i32 %ki.06.3.5, 1
  %exitcond19.3.5 = icmp eq i32 %inc37.3.5, %kern_height
  br i1 %exitcond19.3.5, label %for.end38.3.5.loopexit, label %for.body10.3.5, !llvm.loop !3

for.end38.3.5.loopexit:                           ; preds = %for.inc36.3.5
  %partial_sum.3.3.5.lcssa = phi float [ %partial_sum.3.3.5, %for.inc36.3.5 ]
  br label %for.end38.3.5

for.end38.3.5:                                    ; preds = %for.end38.3.5.loopexit, %for.inc53.2.5
  %partial_sum.0.lcssa.3.5 = phi float [ 0.000000e+00, %for.inc53.2.5 ], [ %partial_sum.3.3.5.lcssa, %for.end38.3.5.loopexit ]
  br i1 %tobool39, label %if.else.3.5, label %if.then40.3.5

if.then40.3.5:                                    ; preds = %for.end38.3.5
  %cmp41.3.5 = fcmp olt float %partial_sum.0.lcssa.3.5, 0.000000e+00
  %sub42.3.5 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.5
  %cond.3.5 = select i1 %cmp41.3.5, float %sub42.3.5, float %partial_sum.0.lcssa.3.5
  %conv.3.5 = fptoui float %cond.3.5 to i8
  %conv43.3.5 = uitofp i8 %conv.3.5 to float
  %475 = add nsw i64 %indvars.iv.next21.2.5, %441
  %arrayidx47.3.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %475
  store float %conv43.3.5, float* %arrayidx47.3.5, align 4
  br label %for.inc53.3.5

if.else.3.5:                                      ; preds = %for.end38.3.5
  %476 = add nsw i64 %indvars.iv.next21.2.5, %440
  %arrayidx51.3.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %476
  store float %partial_sum.0.lcssa.3.5, float* %arrayidx51.3.5, align 4
  br label %for.inc53.3.5

for.inc53.3.5:                                    ; preds = %if.else.3.5, %if.then40.3.5
  %inc54.3.5 = add nsw i32 %in_j.011.5, 4
  %indvars.iv.next21.3.5 = add nsw i64 %indvars.iv20.5, 4
  br i1 %cmp94, label %for.end38.4.5, label %for.body10.4.5.preheader

for.body10.4.5.preheader:                         ; preds = %for.inc53.3.5
  br label %for.body10.4.5

for.body10.4.5:                                   ; preds = %for.body10.4.5.preheader, %for.inc36.4.5
  %ki.06.4.5 = phi i32 [ %inc37.4.5, %for.inc36.4.5 ], [ 0, %for.body10.4.5.preheader ]
  %partial_sum.05.4.5 = phi float [ %partial_sum.3.4.5, %for.inc36.4.5 ], [ 0.000000e+00, %for.body10.4.5.preheader ]
  %add.4.5 = add nsw i32 %ki.06.4.5, %inc58.4
  %notlhs.4.5 = icmp slt i32 %add.4.5, 0
  %notrhs.4.5 = icmp uge i32 %add.4.5, %img_height
  %.not.4.5 = or i1 %notrhs.4.5, %notlhs.4.5
  %brmerge.4.5 = or i1 %.not.4.5, %cmp151.not.4.5
  br i1 %brmerge.4.5, label %for.inc36.4.5, label %for.body16.lr.ph.4.5

for.body16.lr.ph.4.5:                             ; preds = %for.body10.4.5
  %mul.4.5 = shl i32 %add.4.5, 7
  %mul30.4.5 = mul i32 %ki.06.4.5, %kern_width
  br label %for.body16.4.5

for.body16.4.5:                                   ; preds = %for.inc.4.5, %for.body16.lr.ph.4.5
  %indvars.iv.4.5 = phi i64 [ 0, %for.body16.lr.ph.4.5 ], [ %indvars.iv.next.4.5, %for.inc.4.5 ]
  %partial_sum.12.4.5 = phi float [ %partial_sum.05.4.5, %for.body16.lr.ph.4.5 ], [ %partial_sum.2.4.5, %for.inc.4.5 ]
  %477 = trunc i64 %indvars.iv.4.5 to i32
  %add17.4.5 = add nsw i32 %477, %inc54.3.5
  %cmp18.4.5 = icmp sgt i32 %add17.4.5, -1
  %cmp21.4.5 = icmp ult i32 %add17.4.5, %img_width
  %478 = and i1 %cmp18.4.5, %cmp21.4.5
  br i1 %478, label %if.end26.4.5, label %for.inc.4.5

if.end26.4.5:                                     ; preds = %for.body16.4.5
  %add29.4.5 = add nsw i32 %add17.4.5, %mul.4.5
  %idxprom.4.5 = sext i32 %add29.4.5 to i64
  %arrayidx.4.5 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.5
  %479 = load float, float* %arrayidx.4.5, align 4
  %480 = trunc i64 %indvars.iv.4.5 to i32
  %add31.4.5 = add i32 %480, %mul30.4.5
  %idxprom32.4.5 = zext i32 %add31.4.5 to i64
  %arrayidx33.4.5 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.5
  %481 = load float, float* %arrayidx33.4.5, align 4
  %mul34.4.5 = fmul float %479, %481
  %add35.4.5 = fadd float %partial_sum.12.4.5, %mul34.4.5
  br label %for.inc.4.5

for.inc.4.5:                                      ; preds = %if.end26.4.5, %for.body16.4.5
  %partial_sum.2.4.5 = phi float [ %add35.4.5, %if.end26.4.5 ], [ %partial_sum.12.4.5, %for.body16.4.5 ]
  %indvars.iv.next.4.5 = add nuw nsw i64 %indvars.iv.4.5, 1
  %lftr.wideiv.4.5 = trunc i64 %indvars.iv.next.4.5 to i32
  %exitcond.4.5 = icmp eq i32 %lftr.wideiv.4.5, %kern_width
  br i1 %exitcond.4.5, label %for.inc36.4.5.loopexit, label %for.body16.4.5, !llvm.loop !1

for.inc36.4.5.loopexit:                           ; preds = %for.inc.4.5
  %partial_sum.2.4.5.lcssa = phi float [ %partial_sum.2.4.5, %for.inc.4.5 ]
  br label %for.inc36.4.5

for.inc36.4.5:                                    ; preds = %for.inc36.4.5.loopexit, %for.body10.4.5
  %partial_sum.3.4.5 = phi float [ %partial_sum.05.4.5, %for.body10.4.5 ], [ %partial_sum.2.4.5.lcssa, %for.inc36.4.5.loopexit ]
  %inc37.4.5 = add nuw nsw i32 %ki.06.4.5, 1
  %exitcond19.4.5 = icmp eq i32 %inc37.4.5, %kern_height
  br i1 %exitcond19.4.5, label %for.end38.4.5.loopexit, label %for.body10.4.5, !llvm.loop !3

for.end38.4.5.loopexit:                           ; preds = %for.inc36.4.5
  %partial_sum.3.4.5.lcssa = phi float [ %partial_sum.3.4.5, %for.inc36.4.5 ]
  br label %for.end38.4.5

for.end38.4.5:                                    ; preds = %for.end38.4.5.loopexit, %for.inc53.3.5
  %partial_sum.0.lcssa.4.5 = phi float [ 0.000000e+00, %for.inc53.3.5 ], [ %partial_sum.3.4.5.lcssa, %for.end38.4.5.loopexit ]
  br i1 %tobool39, label %if.else.4.5, label %if.then40.4.5

if.then40.4.5:                                    ; preds = %for.end38.4.5
  %cmp41.4.5 = fcmp olt float %partial_sum.0.lcssa.4.5, 0.000000e+00
  %sub42.4.5 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.5
  %cond.4.5 = select i1 %cmp41.4.5, float %sub42.4.5, float %partial_sum.0.lcssa.4.5
  %conv.4.5 = fptoui float %cond.4.5 to i8
  %conv43.4.5 = uitofp i8 %conv.4.5 to float
  %482 = add nsw i64 %indvars.iv.next21.3.5, %441
  %arrayidx47.4.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %482
  store float %conv43.4.5, float* %arrayidx47.4.5, align 4
  br label %for.inc53.4.5

if.else.4.5:                                      ; preds = %for.end38.4.5
  %483 = add nsw i64 %indvars.iv.next21.3.5, %440
  %arrayidx51.4.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %483
  store float %partial_sum.0.lcssa.4.5, float* %arrayidx51.4.5, align 4
  br label %for.inc53.4.5

for.inc53.4.5:                                    ; preds = %if.else.4.5, %if.then40.4.5
  %inc54.4.5 = add nsw i32 %in_j.011.5, 5
  %indvars.iv.next21.4.5 = add nsw i64 %indvars.iv20.5, 5
  br i1 %cmp94, label %for.end38.5.5, label %for.body10.5.5.preheader

for.body10.5.5.preheader:                         ; preds = %for.inc53.4.5
  br label %for.body10.5.5

for.body10.5.5:                                   ; preds = %for.body10.5.5.preheader, %for.inc36.5.5
  %ki.06.5.5 = phi i32 [ %inc37.5.5, %for.inc36.5.5 ], [ 0, %for.body10.5.5.preheader ]
  %partial_sum.05.5.5 = phi float [ %partial_sum.3.5.5, %for.inc36.5.5 ], [ 0.000000e+00, %for.body10.5.5.preheader ]
  %add.5.5 = add nsw i32 %ki.06.5.5, %inc58.4
  %notlhs.5.5 = icmp slt i32 %add.5.5, 0
  %notrhs.5.5 = icmp uge i32 %add.5.5, %img_height
  %.not.5.5 = or i1 %notrhs.5.5, %notlhs.5.5
  %brmerge.5.5 = or i1 %.not.5.5, %cmp151.not.5.5
  br i1 %brmerge.5.5, label %for.inc36.5.5, label %for.body16.lr.ph.5.5

for.body16.lr.ph.5.5:                             ; preds = %for.body10.5.5
  %mul.5.5 = shl i32 %add.5.5, 7
  %mul30.5.5 = mul i32 %ki.06.5.5, %kern_width
  br label %for.body16.5.5

for.body16.5.5:                                   ; preds = %for.inc.5.5, %for.body16.lr.ph.5.5
  %indvars.iv.5.5 = phi i64 [ 0, %for.body16.lr.ph.5.5 ], [ %indvars.iv.next.5.5, %for.inc.5.5 ]
  %partial_sum.12.5.5 = phi float [ %partial_sum.05.5.5, %for.body16.lr.ph.5.5 ], [ %partial_sum.2.5.5, %for.inc.5.5 ]
  %484 = trunc i64 %indvars.iv.5.5 to i32
  %add17.5.5 = add nsw i32 %484, %inc54.4.5
  %cmp18.5.5 = icmp sgt i32 %add17.5.5, -1
  %cmp21.5.5 = icmp ult i32 %add17.5.5, %img_width
  %485 = and i1 %cmp18.5.5, %cmp21.5.5
  br i1 %485, label %if.end26.5.5, label %for.inc.5.5

if.end26.5.5:                                     ; preds = %for.body16.5.5
  %add29.5.5 = add nsw i32 %add17.5.5, %mul.5.5
  %idxprom.5.5 = sext i32 %add29.5.5 to i64
  %arrayidx.5.5 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.5
  %486 = load float, float* %arrayidx.5.5, align 4
  %487 = trunc i64 %indvars.iv.5.5 to i32
  %add31.5.5 = add i32 %487, %mul30.5.5
  %idxprom32.5.5 = zext i32 %add31.5.5 to i64
  %arrayidx33.5.5 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.5
  %488 = load float, float* %arrayidx33.5.5, align 4
  %mul34.5.5 = fmul float %486, %488
  %add35.5.5 = fadd float %partial_sum.12.5.5, %mul34.5.5
  br label %for.inc.5.5

for.inc.5.5:                                      ; preds = %if.end26.5.5, %for.body16.5.5
  %partial_sum.2.5.5 = phi float [ %add35.5.5, %if.end26.5.5 ], [ %partial_sum.12.5.5, %for.body16.5.5 ]
  %indvars.iv.next.5.5 = add nuw nsw i64 %indvars.iv.5.5, 1
  %lftr.wideiv.5.5 = trunc i64 %indvars.iv.next.5.5 to i32
  %exitcond.5.5 = icmp eq i32 %lftr.wideiv.5.5, %kern_width
  br i1 %exitcond.5.5, label %for.inc36.5.5.loopexit, label %for.body16.5.5, !llvm.loop !1

for.inc36.5.5.loopexit:                           ; preds = %for.inc.5.5
  %partial_sum.2.5.5.lcssa = phi float [ %partial_sum.2.5.5, %for.inc.5.5 ]
  br label %for.inc36.5.5

for.inc36.5.5:                                    ; preds = %for.inc36.5.5.loopexit, %for.body10.5.5
  %partial_sum.3.5.5 = phi float [ %partial_sum.05.5.5, %for.body10.5.5 ], [ %partial_sum.2.5.5.lcssa, %for.inc36.5.5.loopexit ]
  %inc37.5.5 = add nuw nsw i32 %ki.06.5.5, 1
  %exitcond19.5.5 = icmp eq i32 %inc37.5.5, %kern_height
  br i1 %exitcond19.5.5, label %for.end38.5.5.loopexit, label %for.body10.5.5, !llvm.loop !3

for.end38.5.5.loopexit:                           ; preds = %for.inc36.5.5
  %partial_sum.3.5.5.lcssa = phi float [ %partial_sum.3.5.5, %for.inc36.5.5 ]
  br label %for.end38.5.5

for.end38.5.5:                                    ; preds = %for.end38.5.5.loopexit, %for.inc53.4.5
  %partial_sum.0.lcssa.5.5 = phi float [ 0.000000e+00, %for.inc53.4.5 ], [ %partial_sum.3.5.5.lcssa, %for.end38.5.5.loopexit ]
  br i1 %tobool39, label %if.else.5.5, label %if.then40.5.5

if.then40.5.5:                                    ; preds = %for.end38.5.5
  %cmp41.5.5 = fcmp olt float %partial_sum.0.lcssa.5.5, 0.000000e+00
  %sub42.5.5 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.5
  %cond.5.5 = select i1 %cmp41.5.5, float %sub42.5.5, float %partial_sum.0.lcssa.5.5
  %conv.5.5 = fptoui float %cond.5.5 to i8
  %conv43.5.5 = uitofp i8 %conv.5.5 to float
  %489 = add nsw i64 %indvars.iv.next21.4.5, %441
  %arrayidx47.5.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %489
  store float %conv43.5.5, float* %arrayidx47.5.5, align 4
  br label %for.inc53.5.5

if.else.5.5:                                      ; preds = %for.end38.5.5
  %490 = add nsw i64 %indvars.iv.next21.4.5, %440
  %arrayidx51.5.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %490
  store float %partial_sum.0.lcssa.5.5, float* %arrayidx51.5.5, align 4
  br label %for.inc53.5.5

for.inc53.5.5:                                    ; preds = %if.else.5.5, %if.then40.5.5
  %inc54.5.5 = add nsw i32 %in_j.011.5, 6
  %indvars.iv.next21.5.5 = add nsw i64 %indvars.iv20.5, 6
  br i1 %cmp94, label %for.end38.6.5, label %for.body10.6.5.preheader

for.body10.6.5.preheader:                         ; preds = %for.inc53.5.5
  br label %for.body10.6.5

for.body10.6.5:                                   ; preds = %for.body10.6.5.preheader, %for.inc36.6.5
  %ki.06.6.5 = phi i32 [ %inc37.6.5, %for.inc36.6.5 ], [ 0, %for.body10.6.5.preheader ]
  %partial_sum.05.6.5 = phi float [ %partial_sum.3.6.5, %for.inc36.6.5 ], [ 0.000000e+00, %for.body10.6.5.preheader ]
  %add.6.5 = add nsw i32 %ki.06.6.5, %inc58.4
  %notlhs.6.5 = icmp slt i32 %add.6.5, 0
  %notrhs.6.5 = icmp uge i32 %add.6.5, %img_height
  %.not.6.5 = or i1 %notrhs.6.5, %notlhs.6.5
  %brmerge.6.5 = or i1 %.not.6.5, %cmp151.not.6.5
  br i1 %brmerge.6.5, label %for.inc36.6.5, label %for.body16.lr.ph.6.5

for.body16.lr.ph.6.5:                             ; preds = %for.body10.6.5
  %mul.6.5 = shl i32 %add.6.5, 7
  %mul30.6.5 = mul i32 %ki.06.6.5, %kern_width
  br label %for.body16.6.5

for.body16.6.5:                                   ; preds = %for.inc.6.5, %for.body16.lr.ph.6.5
  %indvars.iv.6.5 = phi i64 [ 0, %for.body16.lr.ph.6.5 ], [ %indvars.iv.next.6.5, %for.inc.6.5 ]
  %partial_sum.12.6.5 = phi float [ %partial_sum.05.6.5, %for.body16.lr.ph.6.5 ], [ %partial_sum.2.6.5, %for.inc.6.5 ]
  %491 = trunc i64 %indvars.iv.6.5 to i32
  %add17.6.5 = add nsw i32 %491, %inc54.5.5
  %cmp18.6.5 = icmp sgt i32 %add17.6.5, -1
  %cmp21.6.5 = icmp ult i32 %add17.6.5, %img_width
  %492 = and i1 %cmp18.6.5, %cmp21.6.5
  br i1 %492, label %if.end26.6.5, label %for.inc.6.5

if.end26.6.5:                                     ; preds = %for.body16.6.5
  %add29.6.5 = add nsw i32 %add17.6.5, %mul.6.5
  %idxprom.6.5 = sext i32 %add29.6.5 to i64
  %arrayidx.6.5 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.5
  %493 = load float, float* %arrayidx.6.5, align 4
  %494 = trunc i64 %indvars.iv.6.5 to i32
  %add31.6.5 = add i32 %494, %mul30.6.5
  %idxprom32.6.5 = zext i32 %add31.6.5 to i64
  %arrayidx33.6.5 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.5
  %495 = load float, float* %arrayidx33.6.5, align 4
  %mul34.6.5 = fmul float %493, %495
  %add35.6.5 = fadd float %partial_sum.12.6.5, %mul34.6.5
  br label %for.inc.6.5

for.inc.6.5:                                      ; preds = %if.end26.6.5, %for.body16.6.5
  %partial_sum.2.6.5 = phi float [ %add35.6.5, %if.end26.6.5 ], [ %partial_sum.12.6.5, %for.body16.6.5 ]
  %indvars.iv.next.6.5 = add nuw nsw i64 %indvars.iv.6.5, 1
  %lftr.wideiv.6.5 = trunc i64 %indvars.iv.next.6.5 to i32
  %exitcond.6.5 = icmp eq i32 %lftr.wideiv.6.5, %kern_width
  br i1 %exitcond.6.5, label %for.inc36.6.5.loopexit, label %for.body16.6.5, !llvm.loop !1

for.inc36.6.5.loopexit:                           ; preds = %for.inc.6.5
  %partial_sum.2.6.5.lcssa = phi float [ %partial_sum.2.6.5, %for.inc.6.5 ]
  br label %for.inc36.6.5

for.inc36.6.5:                                    ; preds = %for.inc36.6.5.loopexit, %for.body10.6.5
  %partial_sum.3.6.5 = phi float [ %partial_sum.05.6.5, %for.body10.6.5 ], [ %partial_sum.2.6.5.lcssa, %for.inc36.6.5.loopexit ]
  %inc37.6.5 = add nuw nsw i32 %ki.06.6.5, 1
  %exitcond19.6.5 = icmp eq i32 %inc37.6.5, %kern_height
  br i1 %exitcond19.6.5, label %for.end38.6.5.loopexit, label %for.body10.6.5, !llvm.loop !3

for.end38.6.5.loopexit:                           ; preds = %for.inc36.6.5
  %partial_sum.3.6.5.lcssa = phi float [ %partial_sum.3.6.5, %for.inc36.6.5 ]
  br label %for.end38.6.5

for.end38.6.5:                                    ; preds = %for.end38.6.5.loopexit, %for.inc53.5.5
  %partial_sum.0.lcssa.6.5 = phi float [ 0.000000e+00, %for.inc53.5.5 ], [ %partial_sum.3.6.5.lcssa, %for.end38.6.5.loopexit ]
  br i1 %tobool39, label %if.else.6.5, label %if.then40.6.5

if.then40.6.5:                                    ; preds = %for.end38.6.5
  %cmp41.6.5 = fcmp olt float %partial_sum.0.lcssa.6.5, 0.000000e+00
  %sub42.6.5 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.5
  %cond.6.5 = select i1 %cmp41.6.5, float %sub42.6.5, float %partial_sum.0.lcssa.6.5
  %conv.6.5 = fptoui float %cond.6.5 to i8
  %conv43.6.5 = uitofp i8 %conv.6.5 to float
  %496 = add nsw i64 %indvars.iv.next21.5.5, %441
  %arrayidx47.6.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %496
  store float %conv43.6.5, float* %arrayidx47.6.5, align 4
  br label %for.inc53.6.5

if.else.6.5:                                      ; preds = %for.end38.6.5
  %497 = add nsw i64 %indvars.iv.next21.5.5, %440
  %arrayidx51.6.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %497
  store float %partial_sum.0.lcssa.6.5, float* %arrayidx51.6.5, align 4
  br label %for.inc53.6.5

for.inc53.6.5:                                    ; preds = %if.else.6.5, %if.then40.6.5
  %inc54.6.5 = add nsw i32 %in_j.011.5, 7
  %indvars.iv.next21.6.5 = add nsw i64 %indvars.iv20.5, 7
  br i1 %cmp94, label %for.end38.7.5, label %for.body10.7.5.preheader

for.body10.7.5.preheader:                         ; preds = %for.inc53.6.5
  br label %for.body10.7.5

for.body10.7.5:                                   ; preds = %for.body10.7.5.preheader, %for.inc36.7.5
  %ki.06.7.5 = phi i32 [ %inc37.7.5, %for.inc36.7.5 ], [ 0, %for.body10.7.5.preheader ]
  %partial_sum.05.7.5 = phi float [ %partial_sum.3.7.5, %for.inc36.7.5 ], [ 0.000000e+00, %for.body10.7.5.preheader ]
  %add.7.5 = add nsw i32 %ki.06.7.5, %inc58.4
  %notlhs.7.5 = icmp slt i32 %add.7.5, 0
  %notrhs.7.5 = icmp uge i32 %add.7.5, %img_height
  %.not.7.5 = or i1 %notrhs.7.5, %notlhs.7.5
  %brmerge.7.5 = or i1 %.not.7.5, %cmp151.not.7.5
  br i1 %brmerge.7.5, label %for.inc36.7.5, label %for.body16.lr.ph.7.5

for.body16.lr.ph.7.5:                             ; preds = %for.body10.7.5
  %mul.7.5 = shl i32 %add.7.5, 7
  %mul30.7.5 = mul i32 %ki.06.7.5, %kern_width
  br label %for.body16.7.5

for.body16.7.5:                                   ; preds = %for.inc.7.5, %for.body16.lr.ph.7.5
  %indvars.iv.7.5 = phi i64 [ 0, %for.body16.lr.ph.7.5 ], [ %indvars.iv.next.7.5, %for.inc.7.5 ]
  %partial_sum.12.7.5 = phi float [ %partial_sum.05.7.5, %for.body16.lr.ph.7.5 ], [ %partial_sum.2.7.5, %for.inc.7.5 ]
  %498 = trunc i64 %indvars.iv.7.5 to i32
  %add17.7.5 = add nsw i32 %498, %inc54.6.5
  %cmp18.7.5 = icmp sgt i32 %add17.7.5, -1
  %cmp21.7.5 = icmp ult i32 %add17.7.5, %img_width
  %499 = and i1 %cmp18.7.5, %cmp21.7.5
  br i1 %499, label %if.end26.7.5, label %for.inc.7.5

if.end26.7.5:                                     ; preds = %for.body16.7.5
  %add29.7.5 = add nsw i32 %add17.7.5, %mul.7.5
  %idxprom.7.5 = sext i32 %add29.7.5 to i64
  %arrayidx.7.5 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.5
  %500 = load float, float* %arrayidx.7.5, align 4
  %501 = trunc i64 %indvars.iv.7.5 to i32
  %add31.7.5 = add i32 %501, %mul30.7.5
  %idxprom32.7.5 = zext i32 %add31.7.5 to i64
  %arrayidx33.7.5 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.5
  %502 = load float, float* %arrayidx33.7.5, align 4
  %mul34.7.5 = fmul float %500, %502
  %add35.7.5 = fadd float %partial_sum.12.7.5, %mul34.7.5
  br label %for.inc.7.5

for.inc.7.5:                                      ; preds = %if.end26.7.5, %for.body16.7.5
  %partial_sum.2.7.5 = phi float [ %add35.7.5, %if.end26.7.5 ], [ %partial_sum.12.7.5, %for.body16.7.5 ]
  %indvars.iv.next.7.5 = add nuw nsw i64 %indvars.iv.7.5, 1
  %lftr.wideiv.7.5 = trunc i64 %indvars.iv.next.7.5 to i32
  %exitcond.7.5 = icmp eq i32 %lftr.wideiv.7.5, %kern_width
  br i1 %exitcond.7.5, label %for.inc36.7.5.loopexit, label %for.body16.7.5, !llvm.loop !1

for.inc36.7.5.loopexit:                           ; preds = %for.inc.7.5
  %partial_sum.2.7.5.lcssa = phi float [ %partial_sum.2.7.5, %for.inc.7.5 ]
  br label %for.inc36.7.5

for.inc36.7.5:                                    ; preds = %for.inc36.7.5.loopexit, %for.body10.7.5
  %partial_sum.3.7.5 = phi float [ %partial_sum.05.7.5, %for.body10.7.5 ], [ %partial_sum.2.7.5.lcssa, %for.inc36.7.5.loopexit ]
  %inc37.7.5 = add nuw nsw i32 %ki.06.7.5, 1
  %exitcond19.7.5 = icmp eq i32 %inc37.7.5, %kern_height
  br i1 %exitcond19.7.5, label %for.end38.7.5.loopexit, label %for.body10.7.5, !llvm.loop !3

for.end38.7.5.loopexit:                           ; preds = %for.inc36.7.5
  %partial_sum.3.7.5.lcssa = phi float [ %partial_sum.3.7.5, %for.inc36.7.5 ]
  br label %for.end38.7.5

for.end38.7.5:                                    ; preds = %for.end38.7.5.loopexit, %for.inc53.6.5
  %partial_sum.0.lcssa.7.5 = phi float [ 0.000000e+00, %for.inc53.6.5 ], [ %partial_sum.3.7.5.lcssa, %for.end38.7.5.loopexit ]
  br i1 %tobool39, label %if.else.7.5, label %if.then40.7.5

if.then40.7.5:                                    ; preds = %for.end38.7.5
  %cmp41.7.5 = fcmp olt float %partial_sum.0.lcssa.7.5, 0.000000e+00
  %sub42.7.5 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.5
  %cond.7.5 = select i1 %cmp41.7.5, float %sub42.7.5, float %partial_sum.0.lcssa.7.5
  %conv.7.5 = fptoui float %cond.7.5 to i8
  %conv43.7.5 = uitofp i8 %conv.7.5 to float
  %503 = add nsw i64 %indvars.iv.next21.6.5, %441
  %arrayidx47.7.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %503
  store float %conv43.7.5, float* %arrayidx47.7.5, align 4
  br label %for.inc53.7.5

if.else.7.5:                                      ; preds = %for.end38.7.5
  %504 = add nsw i64 %indvars.iv.next21.6.5, %440
  %arrayidx51.7.5 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %504
  store float %partial_sum.0.lcssa.7.5, float* %arrayidx51.7.5, align 4
  br label %for.inc53.7.5

for.inc53.7.5:                                    ; preds = %if.else.7.5, %if.then40.7.5
  %inc54.7.5 = add nsw i32 %in_j.011.5, 8
  %indvars.iv.next21.7.5 = add nsw i64 %indvars.iv20.5, 8
  %lftr.wideiv24.7.5 = trunc i64 %indvars.iv.next21.7.5 to i32
  %exitcond25.7.5 = icmp eq i32 %lftr.wideiv24.7.5, %img_width
  br i1 %exitcond25.7.5, label %for.inc57.5.loopexit, label %for.cond8.preheader.5, !llvm.loop !5

for.inc57.5.loopexit:                             ; preds = %for.inc53.7.5
  br label %for.inc57.5

for.inc57.5:                                      ; preds = %for.inc57.5.loopexit, %for.cond8.preheader.lr.ph.split.5
  %inc58.5 = add nsw i32 %in_i.015, 6
  %indvars.iv.next27.5 = add nsw i64 %indvars.iv26, 6
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.6

for.cond8.preheader.lr.ph.6:                      ; preds = %for.inc57.5
  %505 = trunc i64 %indvars.iv.next27.5 to i32
  %mul48.6 = shl i32 %505, 7
  %506 = trunc i64 %indvars.iv.next27.5 to i32
  %mul44.6 = shl i32 %506, 7
  %507 = sext i32 %mul48.6 to i64
  %508 = sext i32 %mul44.6 to i64
  br i1 %lcmp.mod.6, label %for.cond8.preheader.lr.ph.split.6, label %for.cond8.preheader.prol.6.preheader

for.cond8.preheader.prol.6.preheader:             ; preds = %for.cond8.preheader.lr.ph.6
  br label %for.cond8.preheader.prol.6

for.cond8.preheader.prol.6:                       ; preds = %for.cond8.preheader.prol.6.preheader, %for.inc53.prol.6
  %indvars.iv20.prol.6 = phi i64 [ %indvars.iv.next21.prol.6, %for.inc53.prol.6 ], [ 0, %for.cond8.preheader.prol.6.preheader ]
  %in_j.011.prol.6 = phi i32 [ %inc54.prol.6, %for.inc53.prol.6 ], [ %sub4, %for.cond8.preheader.prol.6.preheader ]
  %prol.iter.6 = phi i32 [ %prol.iter.sub.6, %for.inc53.prol.6 ], [ %xtraiter.6, %for.cond8.preheader.prol.6.preheader ]
  br i1 %cmp94, label %for.end38.prol.6, label %for.body10.prol.6.preheader

for.body10.prol.6.preheader:                      ; preds = %for.cond8.preheader.prol.6
  br label %for.body10.prol.6

for.body10.prol.6:                                ; preds = %for.body10.prol.6.preheader, %for.inc36.prol.6
  %ki.06.prol.6 = phi i32 [ %inc37.prol.6, %for.inc36.prol.6 ], [ 0, %for.body10.prol.6.preheader ]
  %partial_sum.05.prol.6 = phi float [ %partial_sum.3.prol.6, %for.inc36.prol.6 ], [ 0.000000e+00, %for.body10.prol.6.preheader ]
  %add.prol.6 = add nsw i32 %ki.06.prol.6, %inc58.5
  %notlhs.prol.6 = icmp slt i32 %add.prol.6, 0
  %notrhs.prol.6 = icmp uge i32 %add.prol.6, %img_height
  %.not.prol.6 = or i1 %notrhs.prol.6, %notlhs.prol.6
  %brmerge.prol.6 = or i1 %.not.prol.6, %cmp151.not.prol.6
  br i1 %brmerge.prol.6, label %for.inc36.prol.6, label %for.body16.lr.ph.prol.6

for.body16.lr.ph.prol.6:                          ; preds = %for.body10.prol.6
  %mul.prol.6 = shl i32 %add.prol.6, 7
  %mul30.prol.6 = mul i32 %ki.06.prol.6, %kern_width
  br label %for.body16.prol.6

for.body16.prol.6:                                ; preds = %for.inc.prol.6, %for.body16.lr.ph.prol.6
  %indvars.iv.prol.6 = phi i64 [ 0, %for.body16.lr.ph.prol.6 ], [ %indvars.iv.next.prol.6, %for.inc.prol.6 ]
  %partial_sum.12.prol.6 = phi float [ %partial_sum.05.prol.6, %for.body16.lr.ph.prol.6 ], [ %partial_sum.2.prol.6, %for.inc.prol.6 ]
  %509 = trunc i64 %indvars.iv.prol.6 to i32
  %add17.prol.6 = add nsw i32 %509, %in_j.011.prol.6
  %cmp18.prol.6 = icmp sgt i32 %add17.prol.6, -1
  %cmp21.prol.6 = icmp ult i32 %add17.prol.6, %img_width
  %510 = and i1 %cmp18.prol.6, %cmp21.prol.6
  br i1 %510, label %if.end26.prol.6, label %for.inc.prol.6

if.end26.prol.6:                                  ; preds = %for.body16.prol.6
  %add29.prol.6 = add nsw i32 %add17.prol.6, %mul.prol.6
  %idxprom.prol.6 = sext i32 %add29.prol.6 to i64
  %arrayidx.prol.6 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.6
  %511 = load float, float* %arrayidx.prol.6, align 4
  %512 = trunc i64 %indvars.iv.prol.6 to i32
  %add31.prol.6 = add i32 %512, %mul30.prol.6
  %idxprom32.prol.6 = zext i32 %add31.prol.6 to i64
  %arrayidx33.prol.6 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.6
  %513 = load float, float* %arrayidx33.prol.6, align 4
  %mul34.prol.6 = fmul float %511, %513
  %add35.prol.6 = fadd float %partial_sum.12.prol.6, %mul34.prol.6
  br label %for.inc.prol.6

for.inc.prol.6:                                   ; preds = %if.end26.prol.6, %for.body16.prol.6
  %partial_sum.2.prol.6 = phi float [ %add35.prol.6, %if.end26.prol.6 ], [ %partial_sum.12.prol.6, %for.body16.prol.6 ]
  %indvars.iv.next.prol.6 = add nuw nsw i64 %indvars.iv.prol.6, 1
  %lftr.wideiv.prol.6 = trunc i64 %indvars.iv.next.prol.6 to i32
  %exitcond.prol.6 = icmp eq i32 %lftr.wideiv.prol.6, %kern_width
  br i1 %exitcond.prol.6, label %for.inc36.prol.6.loopexit, label %for.body16.prol.6, !llvm.loop !1

for.inc36.prol.6.loopexit:                        ; preds = %for.inc.prol.6
  %partial_sum.2.prol.6.lcssa = phi float [ %partial_sum.2.prol.6, %for.inc.prol.6 ]
  br label %for.inc36.prol.6

for.inc36.prol.6:                                 ; preds = %for.inc36.prol.6.loopexit, %for.body10.prol.6
  %partial_sum.3.prol.6 = phi float [ %partial_sum.05.prol.6, %for.body10.prol.6 ], [ %partial_sum.2.prol.6.lcssa, %for.inc36.prol.6.loopexit ]
  %inc37.prol.6 = add nuw nsw i32 %ki.06.prol.6, 1
  %exitcond19.prol.6 = icmp eq i32 %inc37.prol.6, %kern_height
  br i1 %exitcond19.prol.6, label %for.end38.prol.6.loopexit, label %for.body10.prol.6, !llvm.loop !3

for.end38.prol.6.loopexit:                        ; preds = %for.inc36.prol.6
  %partial_sum.3.prol.6.lcssa = phi float [ %partial_sum.3.prol.6, %for.inc36.prol.6 ]
  br label %for.end38.prol.6

for.end38.prol.6:                                 ; preds = %for.end38.prol.6.loopexit, %for.cond8.preheader.prol.6
  %partial_sum.0.lcssa.prol.6 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.6 ], [ %partial_sum.3.prol.6.lcssa, %for.end38.prol.6.loopexit ]
  br i1 %tobool39, label %if.else.prol.6, label %if.then40.prol.6

if.then40.prol.6:                                 ; preds = %for.end38.prol.6
  %cmp41.prol.6 = fcmp olt float %partial_sum.0.lcssa.prol.6, 0.000000e+00
  %sub42.prol.6 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.6
  %cond.prol.6 = select i1 %cmp41.prol.6, float %sub42.prol.6, float %partial_sum.0.lcssa.prol.6
  %conv.prol.6 = fptoui float %cond.prol.6 to i8
  %conv43.prol.6 = uitofp i8 %conv.prol.6 to float
  %514 = add nsw i64 %indvars.iv20.prol.6, %508
  %arrayidx47.prol.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %514
  store float %conv43.prol.6, float* %arrayidx47.prol.6, align 4
  br label %for.inc53.prol.6

if.else.prol.6:                                   ; preds = %for.end38.prol.6
  %515 = add nsw i64 %indvars.iv20.prol.6, %507
  %arrayidx51.prol.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %515
  store float %partial_sum.0.lcssa.prol.6, float* %arrayidx51.prol.6, align 4
  br label %for.inc53.prol.6

for.inc53.prol.6:                                 ; preds = %if.else.prol.6, %if.then40.prol.6
  %inc54.prol.6 = add nsw i32 %in_j.011.prol.6, 1
  %indvars.iv.next21.prol.6 = add nuw nsw i64 %indvars.iv20.prol.6, 1
  %prol.iter.sub.6 = add i32 %prol.iter.6, -1
  %prol.iter.cmp.6 = icmp eq i32 %prol.iter.sub.6, 0
  br i1 %prol.iter.cmp.6, label %for.cond8.preheader.lr.ph.split.6.loopexit, label %for.cond8.preheader.prol.6, !llvm.loop !4

for.cond8.preheader.lr.ph.split.6.loopexit:       ; preds = %for.inc53.prol.6
  %indvars.iv.next21.prol.6.lcssa = phi i64 [ %indvars.iv.next21.prol.6, %for.inc53.prol.6 ]
  %inc54.prol.6.lcssa = phi i32 [ %inc54.prol.6, %for.inc53.prol.6 ]
  br label %for.cond8.preheader.lr.ph.split.6

for.cond8.preheader.lr.ph.split.6:                ; preds = %for.cond8.preheader.lr.ph.split.6.loopexit, %for.cond8.preheader.lr.ph.6
  %indvars.iv20.unr.6 = phi i64 [ 0, %for.cond8.preheader.lr.ph.6 ], [ %indvars.iv.next21.prol.6.lcssa, %for.cond8.preheader.lr.ph.split.6.loopexit ]
  %in_j.011.unr.6 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.6 ], [ %inc54.prol.6.lcssa, %for.cond8.preheader.lr.ph.split.6.loopexit ]
  br i1 %77, label %for.inc57.6, label %for.cond8.preheader.6.preheader

for.cond8.preheader.6.preheader:                  ; preds = %for.cond8.preheader.lr.ph.split.6
  br label %for.cond8.preheader.6

for.cond8.preheader.6:                            ; preds = %for.cond8.preheader.6.preheader, %for.inc53.7.6
  %indvars.iv20.6 = phi i64 [ %indvars.iv.next21.7.6, %for.inc53.7.6 ], [ %indvars.iv20.unr.6, %for.cond8.preheader.6.preheader ]
  %in_j.011.6 = phi i32 [ %inc54.7.6, %for.inc53.7.6 ], [ %in_j.011.unr.6, %for.cond8.preheader.6.preheader ]
  br i1 %cmp94, label %for.end38.6414, label %for.body10.6381.preheader

for.body10.6381.preheader:                        ; preds = %for.cond8.preheader.6
  br label %for.body10.6381

for.body10.6381:                                  ; preds = %for.body10.6381.preheader, %for.inc36.6410
  %ki.06.6373 = phi i32 [ %inc37.6408, %for.inc36.6410 ], [ 0, %for.body10.6381.preheader ]
  %partial_sum.05.6374 = phi float [ %partial_sum.3.6407, %for.inc36.6410 ], [ 0.000000e+00, %for.body10.6381.preheader ]
  %add.6375 = add nsw i32 %ki.06.6373, %inc58.5
  %notlhs.6376 = icmp slt i32 %add.6375, 0
  %notrhs.6377 = icmp uge i32 %add.6375, %img_height
  %.not.6378 = or i1 %notrhs.6377, %notlhs.6376
  %brmerge.6380 = or i1 %.not.6378, %cmp151.not.6379
  br i1 %brmerge.6380, label %for.inc36.6410, label %for.body16.lr.ph.6384

for.body16.lr.ph.6384:                            ; preds = %for.body10.6381
  %mul.6382 = shl i32 %add.6375, 7
  %mul30.6383 = mul i32 %ki.06.6373, %kern_width
  br label %for.body16.6390

for.body16.6390:                                  ; preds = %for.inc.6404, %for.body16.lr.ph.6384
  %indvars.iv.6385 = phi i64 [ 0, %for.body16.lr.ph.6384 ], [ %indvars.iv.next.6401, %for.inc.6404 ]
  %partial_sum.12.6386 = phi float [ %partial_sum.05.6374, %for.body16.lr.ph.6384 ], [ %partial_sum.2.6400, %for.inc.6404 ]
  %516 = trunc i64 %indvars.iv.6385 to i32
  %add17.6387 = add nsw i32 %516, %in_j.011.6
  %cmp18.6388 = icmp sgt i32 %add17.6387, -1
  %cmp21.6389 = icmp ult i32 %add17.6387, %img_width
  %517 = and i1 %cmp18.6388, %cmp21.6389
  br i1 %517, label %if.end26.6399, label %for.inc.6404

if.end26.6399:                                    ; preds = %for.body16.6390
  %add29.6391 = add nsw i32 %add17.6387, %mul.6382
  %idxprom.6392 = sext i32 %add29.6391 to i64
  %arrayidx.6393 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6392
  %518 = load float, float* %arrayidx.6393, align 4
  %519 = trunc i64 %indvars.iv.6385 to i32
  %add31.6394 = add i32 %519, %mul30.6383
  %idxprom32.6395 = zext i32 %add31.6394 to i64
  %arrayidx33.6396 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6395
  %520 = load float, float* %arrayidx33.6396, align 4
  %mul34.6397 = fmul float %518, %520
  %add35.6398 = fadd float %partial_sum.12.6386, %mul34.6397
  br label %for.inc.6404

for.inc.6404:                                     ; preds = %if.end26.6399, %for.body16.6390
  %partial_sum.2.6400 = phi float [ %add35.6398, %if.end26.6399 ], [ %partial_sum.12.6386, %for.body16.6390 ]
  %indvars.iv.next.6401 = add nuw nsw i64 %indvars.iv.6385, 1
  %lftr.wideiv.6402 = trunc i64 %indvars.iv.next.6401 to i32
  %exitcond.6403 = icmp eq i32 %lftr.wideiv.6402, %kern_width
  br i1 %exitcond.6403, label %for.inc36.6410.loopexit, label %for.body16.6390, !llvm.loop !1

for.inc36.6410.loopexit:                          ; preds = %for.inc.6404
  %partial_sum.2.6400.lcssa = phi float [ %partial_sum.2.6400, %for.inc.6404 ]
  br label %for.inc36.6410

for.inc36.6410:                                   ; preds = %for.inc36.6410.loopexit, %for.body10.6381
  %partial_sum.3.6407 = phi float [ %partial_sum.05.6374, %for.body10.6381 ], [ %partial_sum.2.6400.lcssa, %for.inc36.6410.loopexit ]
  %inc37.6408 = add nuw nsw i32 %ki.06.6373, 1
  %exitcond19.6409 = icmp eq i32 %inc37.6408, %kern_height
  br i1 %exitcond19.6409, label %for.end38.6414.loopexit, label %for.body10.6381, !llvm.loop !3

for.end38.6414.loopexit:                          ; preds = %for.inc36.6410
  %partial_sum.3.6407.lcssa = phi float [ %partial_sum.3.6407, %for.inc36.6410 ]
  br label %for.end38.6414

for.end38.6414:                                   ; preds = %for.end38.6414.loopexit, %for.cond8.preheader.6
  %partial_sum.0.lcssa.6413 = phi float [ 0.000000e+00, %for.cond8.preheader.6 ], [ %partial_sum.3.6407.lcssa, %for.end38.6414.loopexit ]
  br i1 %tobool39, label %if.else.6423, label %if.then40.6421

if.then40.6421:                                   ; preds = %for.end38.6414
  %cmp41.6415 = fcmp olt float %partial_sum.0.lcssa.6413, 0.000000e+00
  %sub42.6416 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6413
  %cond.6417 = select i1 %cmp41.6415, float %sub42.6416, float %partial_sum.0.lcssa.6413
  %conv.6418 = fptoui float %cond.6417 to i8
  %conv43.6419 = uitofp i8 %conv.6418 to float
  %521 = add nsw i64 %indvars.iv20.6, %508
  %arrayidx47.6420 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %521
  store float %conv43.6419, float* %arrayidx47.6420, align 4
  br label %for.inc53.6427

if.else.6423:                                     ; preds = %for.end38.6414
  %522 = add nsw i64 %indvars.iv20.6, %507
  %arrayidx51.6422 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %522
  store float %partial_sum.0.lcssa.6413, float* %arrayidx51.6422, align 4
  br label %for.inc53.6427

for.inc53.6427:                                   ; preds = %if.else.6423, %if.then40.6421
  %inc54.6424 = add nsw i32 %in_j.011.6, 1
  %indvars.iv.next21.6425 = add nuw nsw i64 %indvars.iv20.6, 1
  br i1 %cmp94, label %for.end38.1.6, label %for.body10.1.6.preheader

for.body10.1.6.preheader:                         ; preds = %for.inc53.6427
  br label %for.body10.1.6

for.body10.1.6:                                   ; preds = %for.body10.1.6.preheader, %for.inc36.1.6
  %ki.06.1.6 = phi i32 [ %inc37.1.6, %for.inc36.1.6 ], [ 0, %for.body10.1.6.preheader ]
  %partial_sum.05.1.6 = phi float [ %partial_sum.3.1.6, %for.inc36.1.6 ], [ 0.000000e+00, %for.body10.1.6.preheader ]
  %add.1.6 = add nsw i32 %ki.06.1.6, %inc58.5
  %notlhs.1.6 = icmp slt i32 %add.1.6, 0
  %notrhs.1.6 = icmp uge i32 %add.1.6, %img_height
  %.not.1.6 = or i1 %notrhs.1.6, %notlhs.1.6
  %brmerge.1.6 = or i1 %.not.1.6, %cmp151.not.1.6
  br i1 %brmerge.1.6, label %for.inc36.1.6, label %for.body16.lr.ph.1.6

for.body16.lr.ph.1.6:                             ; preds = %for.body10.1.6
  %mul.1.6 = shl i32 %add.1.6, 7
  %mul30.1.6 = mul i32 %ki.06.1.6, %kern_width
  br label %for.body16.1.6

for.body16.1.6:                                   ; preds = %for.inc.1.6, %for.body16.lr.ph.1.6
  %indvars.iv.1.6 = phi i64 [ 0, %for.body16.lr.ph.1.6 ], [ %indvars.iv.next.1.6, %for.inc.1.6 ]
  %partial_sum.12.1.6 = phi float [ %partial_sum.05.1.6, %for.body16.lr.ph.1.6 ], [ %partial_sum.2.1.6, %for.inc.1.6 ]
  %523 = trunc i64 %indvars.iv.1.6 to i32
  %add17.1.6 = add nsw i32 %523, %inc54.6424
  %cmp18.1.6 = icmp sgt i32 %add17.1.6, -1
  %cmp21.1.6 = icmp ult i32 %add17.1.6, %img_width
  %524 = and i1 %cmp18.1.6, %cmp21.1.6
  br i1 %524, label %if.end26.1.6, label %for.inc.1.6

if.end26.1.6:                                     ; preds = %for.body16.1.6
  %add29.1.6 = add nsw i32 %add17.1.6, %mul.1.6
  %idxprom.1.6 = sext i32 %add29.1.6 to i64
  %arrayidx.1.6 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.6
  %525 = load float, float* %arrayidx.1.6, align 4
  %526 = trunc i64 %indvars.iv.1.6 to i32
  %add31.1.6 = add i32 %526, %mul30.1.6
  %idxprom32.1.6 = zext i32 %add31.1.6 to i64
  %arrayidx33.1.6 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.6
  %527 = load float, float* %arrayidx33.1.6, align 4
  %mul34.1.6 = fmul float %525, %527
  %add35.1.6 = fadd float %partial_sum.12.1.6, %mul34.1.6
  br label %for.inc.1.6

for.inc.1.6:                                      ; preds = %if.end26.1.6, %for.body16.1.6
  %partial_sum.2.1.6 = phi float [ %add35.1.6, %if.end26.1.6 ], [ %partial_sum.12.1.6, %for.body16.1.6 ]
  %indvars.iv.next.1.6 = add nuw nsw i64 %indvars.iv.1.6, 1
  %lftr.wideiv.1.6 = trunc i64 %indvars.iv.next.1.6 to i32
  %exitcond.1.6 = icmp eq i32 %lftr.wideiv.1.6, %kern_width
  br i1 %exitcond.1.6, label %for.inc36.1.6.loopexit, label %for.body16.1.6, !llvm.loop !1

for.inc36.1.6.loopexit:                           ; preds = %for.inc.1.6
  %partial_sum.2.1.6.lcssa = phi float [ %partial_sum.2.1.6, %for.inc.1.6 ]
  br label %for.inc36.1.6

for.inc36.1.6:                                    ; preds = %for.inc36.1.6.loopexit, %for.body10.1.6
  %partial_sum.3.1.6 = phi float [ %partial_sum.05.1.6, %for.body10.1.6 ], [ %partial_sum.2.1.6.lcssa, %for.inc36.1.6.loopexit ]
  %inc37.1.6 = add nuw nsw i32 %ki.06.1.6, 1
  %exitcond19.1.6 = icmp eq i32 %inc37.1.6, %kern_height
  br i1 %exitcond19.1.6, label %for.end38.1.6.loopexit, label %for.body10.1.6, !llvm.loop !3

for.end38.1.6.loopexit:                           ; preds = %for.inc36.1.6
  %partial_sum.3.1.6.lcssa = phi float [ %partial_sum.3.1.6, %for.inc36.1.6 ]
  br label %for.end38.1.6

for.end38.1.6:                                    ; preds = %for.end38.1.6.loopexit, %for.inc53.6427
  %partial_sum.0.lcssa.1.6 = phi float [ 0.000000e+00, %for.inc53.6427 ], [ %partial_sum.3.1.6.lcssa, %for.end38.1.6.loopexit ]
  br i1 %tobool39, label %if.else.1.6, label %if.then40.1.6

if.then40.1.6:                                    ; preds = %for.end38.1.6
  %cmp41.1.6 = fcmp olt float %partial_sum.0.lcssa.1.6, 0.000000e+00
  %sub42.1.6 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.6
  %cond.1.6 = select i1 %cmp41.1.6, float %sub42.1.6, float %partial_sum.0.lcssa.1.6
  %conv.1.6 = fptoui float %cond.1.6 to i8
  %conv43.1.6 = uitofp i8 %conv.1.6 to float
  %528 = add nsw i64 %indvars.iv.next21.6425, %508
  %arrayidx47.1.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %528
  store float %conv43.1.6, float* %arrayidx47.1.6, align 4
  br label %for.inc53.1.6

if.else.1.6:                                      ; preds = %for.end38.1.6
  %529 = add nsw i64 %indvars.iv.next21.6425, %507
  %arrayidx51.1.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %529
  store float %partial_sum.0.lcssa.1.6, float* %arrayidx51.1.6, align 4
  br label %for.inc53.1.6

for.inc53.1.6:                                    ; preds = %if.else.1.6, %if.then40.1.6
  %inc54.1.6 = add nsw i32 %in_j.011.6, 2
  %indvars.iv.next21.1.6 = add nsw i64 %indvars.iv20.6, 2
  br i1 %cmp94, label %for.end38.2.6, label %for.body10.2.6.preheader

for.body10.2.6.preheader:                         ; preds = %for.inc53.1.6
  br label %for.body10.2.6

for.body10.2.6:                                   ; preds = %for.body10.2.6.preheader, %for.inc36.2.6
  %ki.06.2.6 = phi i32 [ %inc37.2.6, %for.inc36.2.6 ], [ 0, %for.body10.2.6.preheader ]
  %partial_sum.05.2.6 = phi float [ %partial_sum.3.2.6, %for.inc36.2.6 ], [ 0.000000e+00, %for.body10.2.6.preheader ]
  %add.2.6 = add nsw i32 %ki.06.2.6, %inc58.5
  %notlhs.2.6 = icmp slt i32 %add.2.6, 0
  %notrhs.2.6 = icmp uge i32 %add.2.6, %img_height
  %.not.2.6 = or i1 %notrhs.2.6, %notlhs.2.6
  %brmerge.2.6 = or i1 %.not.2.6, %cmp151.not.2.6
  br i1 %brmerge.2.6, label %for.inc36.2.6, label %for.body16.lr.ph.2.6

for.body16.lr.ph.2.6:                             ; preds = %for.body10.2.6
  %mul.2.6 = shl i32 %add.2.6, 7
  %mul30.2.6 = mul i32 %ki.06.2.6, %kern_width
  br label %for.body16.2.6

for.body16.2.6:                                   ; preds = %for.inc.2.6, %for.body16.lr.ph.2.6
  %indvars.iv.2.6 = phi i64 [ 0, %for.body16.lr.ph.2.6 ], [ %indvars.iv.next.2.6, %for.inc.2.6 ]
  %partial_sum.12.2.6 = phi float [ %partial_sum.05.2.6, %for.body16.lr.ph.2.6 ], [ %partial_sum.2.2.6, %for.inc.2.6 ]
  %530 = trunc i64 %indvars.iv.2.6 to i32
  %add17.2.6 = add nsw i32 %530, %inc54.1.6
  %cmp18.2.6 = icmp sgt i32 %add17.2.6, -1
  %cmp21.2.6 = icmp ult i32 %add17.2.6, %img_width
  %531 = and i1 %cmp18.2.6, %cmp21.2.6
  br i1 %531, label %if.end26.2.6, label %for.inc.2.6

if.end26.2.6:                                     ; preds = %for.body16.2.6
  %add29.2.6 = add nsw i32 %add17.2.6, %mul.2.6
  %idxprom.2.6 = sext i32 %add29.2.6 to i64
  %arrayidx.2.6 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.6
  %532 = load float, float* %arrayidx.2.6, align 4
  %533 = trunc i64 %indvars.iv.2.6 to i32
  %add31.2.6 = add i32 %533, %mul30.2.6
  %idxprom32.2.6 = zext i32 %add31.2.6 to i64
  %arrayidx33.2.6 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.6
  %534 = load float, float* %arrayidx33.2.6, align 4
  %mul34.2.6 = fmul float %532, %534
  %add35.2.6 = fadd float %partial_sum.12.2.6, %mul34.2.6
  br label %for.inc.2.6

for.inc.2.6:                                      ; preds = %if.end26.2.6, %for.body16.2.6
  %partial_sum.2.2.6 = phi float [ %add35.2.6, %if.end26.2.6 ], [ %partial_sum.12.2.6, %for.body16.2.6 ]
  %indvars.iv.next.2.6 = add nuw nsw i64 %indvars.iv.2.6, 1
  %lftr.wideiv.2.6 = trunc i64 %indvars.iv.next.2.6 to i32
  %exitcond.2.6 = icmp eq i32 %lftr.wideiv.2.6, %kern_width
  br i1 %exitcond.2.6, label %for.inc36.2.6.loopexit, label %for.body16.2.6, !llvm.loop !1

for.inc36.2.6.loopexit:                           ; preds = %for.inc.2.6
  %partial_sum.2.2.6.lcssa = phi float [ %partial_sum.2.2.6, %for.inc.2.6 ]
  br label %for.inc36.2.6

for.inc36.2.6:                                    ; preds = %for.inc36.2.6.loopexit, %for.body10.2.6
  %partial_sum.3.2.6 = phi float [ %partial_sum.05.2.6, %for.body10.2.6 ], [ %partial_sum.2.2.6.lcssa, %for.inc36.2.6.loopexit ]
  %inc37.2.6 = add nuw nsw i32 %ki.06.2.6, 1
  %exitcond19.2.6 = icmp eq i32 %inc37.2.6, %kern_height
  br i1 %exitcond19.2.6, label %for.end38.2.6.loopexit, label %for.body10.2.6, !llvm.loop !3

for.end38.2.6.loopexit:                           ; preds = %for.inc36.2.6
  %partial_sum.3.2.6.lcssa = phi float [ %partial_sum.3.2.6, %for.inc36.2.6 ]
  br label %for.end38.2.6

for.end38.2.6:                                    ; preds = %for.end38.2.6.loopexit, %for.inc53.1.6
  %partial_sum.0.lcssa.2.6 = phi float [ 0.000000e+00, %for.inc53.1.6 ], [ %partial_sum.3.2.6.lcssa, %for.end38.2.6.loopexit ]
  br i1 %tobool39, label %if.else.2.6, label %if.then40.2.6

if.then40.2.6:                                    ; preds = %for.end38.2.6
  %cmp41.2.6 = fcmp olt float %partial_sum.0.lcssa.2.6, 0.000000e+00
  %sub42.2.6 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.6
  %cond.2.6 = select i1 %cmp41.2.6, float %sub42.2.6, float %partial_sum.0.lcssa.2.6
  %conv.2.6 = fptoui float %cond.2.6 to i8
  %conv43.2.6 = uitofp i8 %conv.2.6 to float
  %535 = add nsw i64 %indvars.iv.next21.1.6, %508
  %arrayidx47.2.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %535
  store float %conv43.2.6, float* %arrayidx47.2.6, align 4
  br label %for.inc53.2.6

if.else.2.6:                                      ; preds = %for.end38.2.6
  %536 = add nsw i64 %indvars.iv.next21.1.6, %507
  %arrayidx51.2.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %536
  store float %partial_sum.0.lcssa.2.6, float* %arrayidx51.2.6, align 4
  br label %for.inc53.2.6

for.inc53.2.6:                                    ; preds = %if.else.2.6, %if.then40.2.6
  %inc54.2.6 = add nsw i32 %in_j.011.6, 3
  %indvars.iv.next21.2.6 = add nsw i64 %indvars.iv20.6, 3
  br i1 %cmp94, label %for.end38.3.6, label %for.body10.3.6.preheader

for.body10.3.6.preheader:                         ; preds = %for.inc53.2.6
  br label %for.body10.3.6

for.body10.3.6:                                   ; preds = %for.body10.3.6.preheader, %for.inc36.3.6
  %ki.06.3.6 = phi i32 [ %inc37.3.6, %for.inc36.3.6 ], [ 0, %for.body10.3.6.preheader ]
  %partial_sum.05.3.6 = phi float [ %partial_sum.3.3.6, %for.inc36.3.6 ], [ 0.000000e+00, %for.body10.3.6.preheader ]
  %add.3.6 = add nsw i32 %ki.06.3.6, %inc58.5
  %notlhs.3.6 = icmp slt i32 %add.3.6, 0
  %notrhs.3.6 = icmp uge i32 %add.3.6, %img_height
  %.not.3.6 = or i1 %notrhs.3.6, %notlhs.3.6
  %brmerge.3.6 = or i1 %.not.3.6, %cmp151.not.3.6
  br i1 %brmerge.3.6, label %for.inc36.3.6, label %for.body16.lr.ph.3.6

for.body16.lr.ph.3.6:                             ; preds = %for.body10.3.6
  %mul.3.6 = shl i32 %add.3.6, 7
  %mul30.3.6 = mul i32 %ki.06.3.6, %kern_width
  br label %for.body16.3.6

for.body16.3.6:                                   ; preds = %for.inc.3.6, %for.body16.lr.ph.3.6
  %indvars.iv.3.6 = phi i64 [ 0, %for.body16.lr.ph.3.6 ], [ %indvars.iv.next.3.6, %for.inc.3.6 ]
  %partial_sum.12.3.6 = phi float [ %partial_sum.05.3.6, %for.body16.lr.ph.3.6 ], [ %partial_sum.2.3.6, %for.inc.3.6 ]
  %537 = trunc i64 %indvars.iv.3.6 to i32
  %add17.3.6 = add nsw i32 %537, %inc54.2.6
  %cmp18.3.6 = icmp sgt i32 %add17.3.6, -1
  %cmp21.3.6 = icmp ult i32 %add17.3.6, %img_width
  %538 = and i1 %cmp18.3.6, %cmp21.3.6
  br i1 %538, label %if.end26.3.6, label %for.inc.3.6

if.end26.3.6:                                     ; preds = %for.body16.3.6
  %add29.3.6 = add nsw i32 %add17.3.6, %mul.3.6
  %idxprom.3.6 = sext i32 %add29.3.6 to i64
  %arrayidx.3.6 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.6
  %539 = load float, float* %arrayidx.3.6, align 4
  %540 = trunc i64 %indvars.iv.3.6 to i32
  %add31.3.6 = add i32 %540, %mul30.3.6
  %idxprom32.3.6 = zext i32 %add31.3.6 to i64
  %arrayidx33.3.6 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.6
  %541 = load float, float* %arrayidx33.3.6, align 4
  %mul34.3.6 = fmul float %539, %541
  %add35.3.6 = fadd float %partial_sum.12.3.6, %mul34.3.6
  br label %for.inc.3.6

for.inc.3.6:                                      ; preds = %if.end26.3.6, %for.body16.3.6
  %partial_sum.2.3.6 = phi float [ %add35.3.6, %if.end26.3.6 ], [ %partial_sum.12.3.6, %for.body16.3.6 ]
  %indvars.iv.next.3.6 = add nuw nsw i64 %indvars.iv.3.6, 1
  %lftr.wideiv.3.6 = trunc i64 %indvars.iv.next.3.6 to i32
  %exitcond.3.6 = icmp eq i32 %lftr.wideiv.3.6, %kern_width
  br i1 %exitcond.3.6, label %for.inc36.3.6.loopexit, label %for.body16.3.6, !llvm.loop !1

for.inc36.3.6.loopexit:                           ; preds = %for.inc.3.6
  %partial_sum.2.3.6.lcssa = phi float [ %partial_sum.2.3.6, %for.inc.3.6 ]
  br label %for.inc36.3.6

for.inc36.3.6:                                    ; preds = %for.inc36.3.6.loopexit, %for.body10.3.6
  %partial_sum.3.3.6 = phi float [ %partial_sum.05.3.6, %for.body10.3.6 ], [ %partial_sum.2.3.6.lcssa, %for.inc36.3.6.loopexit ]
  %inc37.3.6 = add nuw nsw i32 %ki.06.3.6, 1
  %exitcond19.3.6 = icmp eq i32 %inc37.3.6, %kern_height
  br i1 %exitcond19.3.6, label %for.end38.3.6.loopexit, label %for.body10.3.6, !llvm.loop !3

for.end38.3.6.loopexit:                           ; preds = %for.inc36.3.6
  %partial_sum.3.3.6.lcssa = phi float [ %partial_sum.3.3.6, %for.inc36.3.6 ]
  br label %for.end38.3.6

for.end38.3.6:                                    ; preds = %for.end38.3.6.loopexit, %for.inc53.2.6
  %partial_sum.0.lcssa.3.6 = phi float [ 0.000000e+00, %for.inc53.2.6 ], [ %partial_sum.3.3.6.lcssa, %for.end38.3.6.loopexit ]
  br i1 %tobool39, label %if.else.3.6, label %if.then40.3.6

if.then40.3.6:                                    ; preds = %for.end38.3.6
  %cmp41.3.6 = fcmp olt float %partial_sum.0.lcssa.3.6, 0.000000e+00
  %sub42.3.6 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.6
  %cond.3.6 = select i1 %cmp41.3.6, float %sub42.3.6, float %partial_sum.0.lcssa.3.6
  %conv.3.6 = fptoui float %cond.3.6 to i8
  %conv43.3.6 = uitofp i8 %conv.3.6 to float
  %542 = add nsw i64 %indvars.iv.next21.2.6, %508
  %arrayidx47.3.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %542
  store float %conv43.3.6, float* %arrayidx47.3.6, align 4
  br label %for.inc53.3.6

if.else.3.6:                                      ; preds = %for.end38.3.6
  %543 = add nsw i64 %indvars.iv.next21.2.6, %507
  %arrayidx51.3.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %543
  store float %partial_sum.0.lcssa.3.6, float* %arrayidx51.3.6, align 4
  br label %for.inc53.3.6

for.inc53.3.6:                                    ; preds = %if.else.3.6, %if.then40.3.6
  %inc54.3.6 = add nsw i32 %in_j.011.6, 4
  %indvars.iv.next21.3.6 = add nsw i64 %indvars.iv20.6, 4
  br i1 %cmp94, label %for.end38.4.6, label %for.body10.4.6.preheader

for.body10.4.6.preheader:                         ; preds = %for.inc53.3.6
  br label %for.body10.4.6

for.body10.4.6:                                   ; preds = %for.body10.4.6.preheader, %for.inc36.4.6
  %ki.06.4.6 = phi i32 [ %inc37.4.6, %for.inc36.4.6 ], [ 0, %for.body10.4.6.preheader ]
  %partial_sum.05.4.6 = phi float [ %partial_sum.3.4.6, %for.inc36.4.6 ], [ 0.000000e+00, %for.body10.4.6.preheader ]
  %add.4.6 = add nsw i32 %ki.06.4.6, %inc58.5
  %notlhs.4.6 = icmp slt i32 %add.4.6, 0
  %notrhs.4.6 = icmp uge i32 %add.4.6, %img_height
  %.not.4.6 = or i1 %notrhs.4.6, %notlhs.4.6
  %brmerge.4.6 = or i1 %.not.4.6, %cmp151.not.4.6
  br i1 %brmerge.4.6, label %for.inc36.4.6, label %for.body16.lr.ph.4.6

for.body16.lr.ph.4.6:                             ; preds = %for.body10.4.6
  %mul.4.6 = shl i32 %add.4.6, 7
  %mul30.4.6 = mul i32 %ki.06.4.6, %kern_width
  br label %for.body16.4.6

for.body16.4.6:                                   ; preds = %for.inc.4.6, %for.body16.lr.ph.4.6
  %indvars.iv.4.6 = phi i64 [ 0, %for.body16.lr.ph.4.6 ], [ %indvars.iv.next.4.6, %for.inc.4.6 ]
  %partial_sum.12.4.6 = phi float [ %partial_sum.05.4.6, %for.body16.lr.ph.4.6 ], [ %partial_sum.2.4.6, %for.inc.4.6 ]
  %544 = trunc i64 %indvars.iv.4.6 to i32
  %add17.4.6 = add nsw i32 %544, %inc54.3.6
  %cmp18.4.6 = icmp sgt i32 %add17.4.6, -1
  %cmp21.4.6 = icmp ult i32 %add17.4.6, %img_width
  %545 = and i1 %cmp18.4.6, %cmp21.4.6
  br i1 %545, label %if.end26.4.6, label %for.inc.4.6

if.end26.4.6:                                     ; preds = %for.body16.4.6
  %add29.4.6 = add nsw i32 %add17.4.6, %mul.4.6
  %idxprom.4.6 = sext i32 %add29.4.6 to i64
  %arrayidx.4.6 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.6
  %546 = load float, float* %arrayidx.4.6, align 4
  %547 = trunc i64 %indvars.iv.4.6 to i32
  %add31.4.6 = add i32 %547, %mul30.4.6
  %idxprom32.4.6 = zext i32 %add31.4.6 to i64
  %arrayidx33.4.6 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.6
  %548 = load float, float* %arrayidx33.4.6, align 4
  %mul34.4.6 = fmul float %546, %548
  %add35.4.6 = fadd float %partial_sum.12.4.6, %mul34.4.6
  br label %for.inc.4.6

for.inc.4.6:                                      ; preds = %if.end26.4.6, %for.body16.4.6
  %partial_sum.2.4.6 = phi float [ %add35.4.6, %if.end26.4.6 ], [ %partial_sum.12.4.6, %for.body16.4.6 ]
  %indvars.iv.next.4.6 = add nuw nsw i64 %indvars.iv.4.6, 1
  %lftr.wideiv.4.6 = trunc i64 %indvars.iv.next.4.6 to i32
  %exitcond.4.6 = icmp eq i32 %lftr.wideiv.4.6, %kern_width
  br i1 %exitcond.4.6, label %for.inc36.4.6.loopexit, label %for.body16.4.6, !llvm.loop !1

for.inc36.4.6.loopexit:                           ; preds = %for.inc.4.6
  %partial_sum.2.4.6.lcssa = phi float [ %partial_sum.2.4.6, %for.inc.4.6 ]
  br label %for.inc36.4.6

for.inc36.4.6:                                    ; preds = %for.inc36.4.6.loopexit, %for.body10.4.6
  %partial_sum.3.4.6 = phi float [ %partial_sum.05.4.6, %for.body10.4.6 ], [ %partial_sum.2.4.6.lcssa, %for.inc36.4.6.loopexit ]
  %inc37.4.6 = add nuw nsw i32 %ki.06.4.6, 1
  %exitcond19.4.6 = icmp eq i32 %inc37.4.6, %kern_height
  br i1 %exitcond19.4.6, label %for.end38.4.6.loopexit, label %for.body10.4.6, !llvm.loop !3

for.end38.4.6.loopexit:                           ; preds = %for.inc36.4.6
  %partial_sum.3.4.6.lcssa = phi float [ %partial_sum.3.4.6, %for.inc36.4.6 ]
  br label %for.end38.4.6

for.end38.4.6:                                    ; preds = %for.end38.4.6.loopexit, %for.inc53.3.6
  %partial_sum.0.lcssa.4.6 = phi float [ 0.000000e+00, %for.inc53.3.6 ], [ %partial_sum.3.4.6.lcssa, %for.end38.4.6.loopexit ]
  br i1 %tobool39, label %if.else.4.6, label %if.then40.4.6

if.then40.4.6:                                    ; preds = %for.end38.4.6
  %cmp41.4.6 = fcmp olt float %partial_sum.0.lcssa.4.6, 0.000000e+00
  %sub42.4.6 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.6
  %cond.4.6 = select i1 %cmp41.4.6, float %sub42.4.6, float %partial_sum.0.lcssa.4.6
  %conv.4.6 = fptoui float %cond.4.6 to i8
  %conv43.4.6 = uitofp i8 %conv.4.6 to float
  %549 = add nsw i64 %indvars.iv.next21.3.6, %508
  %arrayidx47.4.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %549
  store float %conv43.4.6, float* %arrayidx47.4.6, align 4
  br label %for.inc53.4.6

if.else.4.6:                                      ; preds = %for.end38.4.6
  %550 = add nsw i64 %indvars.iv.next21.3.6, %507
  %arrayidx51.4.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %550
  store float %partial_sum.0.lcssa.4.6, float* %arrayidx51.4.6, align 4
  br label %for.inc53.4.6

for.inc53.4.6:                                    ; preds = %if.else.4.6, %if.then40.4.6
  %inc54.4.6 = add nsw i32 %in_j.011.6, 5
  %indvars.iv.next21.4.6 = add nsw i64 %indvars.iv20.6, 5
  br i1 %cmp94, label %for.end38.5.6, label %for.body10.5.6.preheader

for.body10.5.6.preheader:                         ; preds = %for.inc53.4.6
  br label %for.body10.5.6

for.body10.5.6:                                   ; preds = %for.body10.5.6.preheader, %for.inc36.5.6
  %ki.06.5.6 = phi i32 [ %inc37.5.6, %for.inc36.5.6 ], [ 0, %for.body10.5.6.preheader ]
  %partial_sum.05.5.6 = phi float [ %partial_sum.3.5.6, %for.inc36.5.6 ], [ 0.000000e+00, %for.body10.5.6.preheader ]
  %add.5.6 = add nsw i32 %ki.06.5.6, %inc58.5
  %notlhs.5.6 = icmp slt i32 %add.5.6, 0
  %notrhs.5.6 = icmp uge i32 %add.5.6, %img_height
  %.not.5.6 = or i1 %notrhs.5.6, %notlhs.5.6
  %brmerge.5.6 = or i1 %.not.5.6, %cmp151.not.5.6
  br i1 %brmerge.5.6, label %for.inc36.5.6, label %for.body16.lr.ph.5.6

for.body16.lr.ph.5.6:                             ; preds = %for.body10.5.6
  %mul.5.6 = shl i32 %add.5.6, 7
  %mul30.5.6 = mul i32 %ki.06.5.6, %kern_width
  br label %for.body16.5.6

for.body16.5.6:                                   ; preds = %for.inc.5.6, %for.body16.lr.ph.5.6
  %indvars.iv.5.6 = phi i64 [ 0, %for.body16.lr.ph.5.6 ], [ %indvars.iv.next.5.6, %for.inc.5.6 ]
  %partial_sum.12.5.6 = phi float [ %partial_sum.05.5.6, %for.body16.lr.ph.5.6 ], [ %partial_sum.2.5.6, %for.inc.5.6 ]
  %551 = trunc i64 %indvars.iv.5.6 to i32
  %add17.5.6 = add nsw i32 %551, %inc54.4.6
  %cmp18.5.6 = icmp sgt i32 %add17.5.6, -1
  %cmp21.5.6 = icmp ult i32 %add17.5.6, %img_width
  %552 = and i1 %cmp18.5.6, %cmp21.5.6
  br i1 %552, label %if.end26.5.6, label %for.inc.5.6

if.end26.5.6:                                     ; preds = %for.body16.5.6
  %add29.5.6 = add nsw i32 %add17.5.6, %mul.5.6
  %idxprom.5.6 = sext i32 %add29.5.6 to i64
  %arrayidx.5.6 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.6
  %553 = load float, float* %arrayidx.5.6, align 4
  %554 = trunc i64 %indvars.iv.5.6 to i32
  %add31.5.6 = add i32 %554, %mul30.5.6
  %idxprom32.5.6 = zext i32 %add31.5.6 to i64
  %arrayidx33.5.6 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.6
  %555 = load float, float* %arrayidx33.5.6, align 4
  %mul34.5.6 = fmul float %553, %555
  %add35.5.6 = fadd float %partial_sum.12.5.6, %mul34.5.6
  br label %for.inc.5.6

for.inc.5.6:                                      ; preds = %if.end26.5.6, %for.body16.5.6
  %partial_sum.2.5.6 = phi float [ %add35.5.6, %if.end26.5.6 ], [ %partial_sum.12.5.6, %for.body16.5.6 ]
  %indvars.iv.next.5.6 = add nuw nsw i64 %indvars.iv.5.6, 1
  %lftr.wideiv.5.6 = trunc i64 %indvars.iv.next.5.6 to i32
  %exitcond.5.6 = icmp eq i32 %lftr.wideiv.5.6, %kern_width
  br i1 %exitcond.5.6, label %for.inc36.5.6.loopexit, label %for.body16.5.6, !llvm.loop !1

for.inc36.5.6.loopexit:                           ; preds = %for.inc.5.6
  %partial_sum.2.5.6.lcssa = phi float [ %partial_sum.2.5.6, %for.inc.5.6 ]
  br label %for.inc36.5.6

for.inc36.5.6:                                    ; preds = %for.inc36.5.6.loopexit, %for.body10.5.6
  %partial_sum.3.5.6 = phi float [ %partial_sum.05.5.6, %for.body10.5.6 ], [ %partial_sum.2.5.6.lcssa, %for.inc36.5.6.loopexit ]
  %inc37.5.6 = add nuw nsw i32 %ki.06.5.6, 1
  %exitcond19.5.6 = icmp eq i32 %inc37.5.6, %kern_height
  br i1 %exitcond19.5.6, label %for.end38.5.6.loopexit, label %for.body10.5.6, !llvm.loop !3

for.end38.5.6.loopexit:                           ; preds = %for.inc36.5.6
  %partial_sum.3.5.6.lcssa = phi float [ %partial_sum.3.5.6, %for.inc36.5.6 ]
  br label %for.end38.5.6

for.end38.5.6:                                    ; preds = %for.end38.5.6.loopexit, %for.inc53.4.6
  %partial_sum.0.lcssa.5.6 = phi float [ 0.000000e+00, %for.inc53.4.6 ], [ %partial_sum.3.5.6.lcssa, %for.end38.5.6.loopexit ]
  br i1 %tobool39, label %if.else.5.6, label %if.then40.5.6

if.then40.5.6:                                    ; preds = %for.end38.5.6
  %cmp41.5.6 = fcmp olt float %partial_sum.0.lcssa.5.6, 0.000000e+00
  %sub42.5.6 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.6
  %cond.5.6 = select i1 %cmp41.5.6, float %sub42.5.6, float %partial_sum.0.lcssa.5.6
  %conv.5.6 = fptoui float %cond.5.6 to i8
  %conv43.5.6 = uitofp i8 %conv.5.6 to float
  %556 = add nsw i64 %indvars.iv.next21.4.6, %508
  %arrayidx47.5.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %556
  store float %conv43.5.6, float* %arrayidx47.5.6, align 4
  br label %for.inc53.5.6

if.else.5.6:                                      ; preds = %for.end38.5.6
  %557 = add nsw i64 %indvars.iv.next21.4.6, %507
  %arrayidx51.5.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %557
  store float %partial_sum.0.lcssa.5.6, float* %arrayidx51.5.6, align 4
  br label %for.inc53.5.6

for.inc53.5.6:                                    ; preds = %if.else.5.6, %if.then40.5.6
  %inc54.5.6 = add nsw i32 %in_j.011.6, 6
  %indvars.iv.next21.5.6 = add nsw i64 %indvars.iv20.6, 6
  br i1 %cmp94, label %for.end38.6.6, label %for.body10.6.6.preheader

for.body10.6.6.preheader:                         ; preds = %for.inc53.5.6
  br label %for.body10.6.6

for.body10.6.6:                                   ; preds = %for.body10.6.6.preheader, %for.inc36.6.6
  %ki.06.6.6 = phi i32 [ %inc37.6.6, %for.inc36.6.6 ], [ 0, %for.body10.6.6.preheader ]
  %partial_sum.05.6.6 = phi float [ %partial_sum.3.6.6, %for.inc36.6.6 ], [ 0.000000e+00, %for.body10.6.6.preheader ]
  %add.6.6 = add nsw i32 %ki.06.6.6, %inc58.5
  %notlhs.6.6 = icmp slt i32 %add.6.6, 0
  %notrhs.6.6 = icmp uge i32 %add.6.6, %img_height
  %.not.6.6 = or i1 %notrhs.6.6, %notlhs.6.6
  %brmerge.6.6 = or i1 %.not.6.6, %cmp151.not.6.6
  br i1 %brmerge.6.6, label %for.inc36.6.6, label %for.body16.lr.ph.6.6

for.body16.lr.ph.6.6:                             ; preds = %for.body10.6.6
  %mul.6.6 = shl i32 %add.6.6, 7
  %mul30.6.6 = mul i32 %ki.06.6.6, %kern_width
  br label %for.body16.6.6

for.body16.6.6:                                   ; preds = %for.inc.6.6, %for.body16.lr.ph.6.6
  %indvars.iv.6.6 = phi i64 [ 0, %for.body16.lr.ph.6.6 ], [ %indvars.iv.next.6.6, %for.inc.6.6 ]
  %partial_sum.12.6.6 = phi float [ %partial_sum.05.6.6, %for.body16.lr.ph.6.6 ], [ %partial_sum.2.6.6, %for.inc.6.6 ]
  %558 = trunc i64 %indvars.iv.6.6 to i32
  %add17.6.6 = add nsw i32 %558, %inc54.5.6
  %cmp18.6.6 = icmp sgt i32 %add17.6.6, -1
  %cmp21.6.6 = icmp ult i32 %add17.6.6, %img_width
  %559 = and i1 %cmp18.6.6, %cmp21.6.6
  br i1 %559, label %if.end26.6.6, label %for.inc.6.6

if.end26.6.6:                                     ; preds = %for.body16.6.6
  %add29.6.6 = add nsw i32 %add17.6.6, %mul.6.6
  %idxprom.6.6 = sext i32 %add29.6.6 to i64
  %arrayidx.6.6 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.6
  %560 = load float, float* %arrayidx.6.6, align 4
  %561 = trunc i64 %indvars.iv.6.6 to i32
  %add31.6.6 = add i32 %561, %mul30.6.6
  %idxprom32.6.6 = zext i32 %add31.6.6 to i64
  %arrayidx33.6.6 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.6
  %562 = load float, float* %arrayidx33.6.6, align 4
  %mul34.6.6 = fmul float %560, %562
  %add35.6.6 = fadd float %partial_sum.12.6.6, %mul34.6.6
  br label %for.inc.6.6

for.inc.6.6:                                      ; preds = %if.end26.6.6, %for.body16.6.6
  %partial_sum.2.6.6 = phi float [ %add35.6.6, %if.end26.6.6 ], [ %partial_sum.12.6.6, %for.body16.6.6 ]
  %indvars.iv.next.6.6 = add nuw nsw i64 %indvars.iv.6.6, 1
  %lftr.wideiv.6.6 = trunc i64 %indvars.iv.next.6.6 to i32
  %exitcond.6.6 = icmp eq i32 %lftr.wideiv.6.6, %kern_width
  br i1 %exitcond.6.6, label %for.inc36.6.6.loopexit, label %for.body16.6.6, !llvm.loop !1

for.inc36.6.6.loopexit:                           ; preds = %for.inc.6.6
  %partial_sum.2.6.6.lcssa = phi float [ %partial_sum.2.6.6, %for.inc.6.6 ]
  br label %for.inc36.6.6

for.inc36.6.6:                                    ; preds = %for.inc36.6.6.loopexit, %for.body10.6.6
  %partial_sum.3.6.6 = phi float [ %partial_sum.05.6.6, %for.body10.6.6 ], [ %partial_sum.2.6.6.lcssa, %for.inc36.6.6.loopexit ]
  %inc37.6.6 = add nuw nsw i32 %ki.06.6.6, 1
  %exitcond19.6.6 = icmp eq i32 %inc37.6.6, %kern_height
  br i1 %exitcond19.6.6, label %for.end38.6.6.loopexit, label %for.body10.6.6, !llvm.loop !3

for.end38.6.6.loopexit:                           ; preds = %for.inc36.6.6
  %partial_sum.3.6.6.lcssa = phi float [ %partial_sum.3.6.6, %for.inc36.6.6 ]
  br label %for.end38.6.6

for.end38.6.6:                                    ; preds = %for.end38.6.6.loopexit, %for.inc53.5.6
  %partial_sum.0.lcssa.6.6 = phi float [ 0.000000e+00, %for.inc53.5.6 ], [ %partial_sum.3.6.6.lcssa, %for.end38.6.6.loopexit ]
  br i1 %tobool39, label %if.else.6.6, label %if.then40.6.6

if.then40.6.6:                                    ; preds = %for.end38.6.6
  %cmp41.6.6 = fcmp olt float %partial_sum.0.lcssa.6.6, 0.000000e+00
  %sub42.6.6 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.6
  %cond.6.6 = select i1 %cmp41.6.6, float %sub42.6.6, float %partial_sum.0.lcssa.6.6
  %conv.6.6 = fptoui float %cond.6.6 to i8
  %conv43.6.6 = uitofp i8 %conv.6.6 to float
  %563 = add nsw i64 %indvars.iv.next21.5.6, %508
  %arrayidx47.6.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %563
  store float %conv43.6.6, float* %arrayidx47.6.6, align 4
  br label %for.inc53.6.6

if.else.6.6:                                      ; preds = %for.end38.6.6
  %564 = add nsw i64 %indvars.iv.next21.5.6, %507
  %arrayidx51.6.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %564
  store float %partial_sum.0.lcssa.6.6, float* %arrayidx51.6.6, align 4
  br label %for.inc53.6.6

for.inc53.6.6:                                    ; preds = %if.else.6.6, %if.then40.6.6
  %inc54.6.6 = add nsw i32 %in_j.011.6, 7
  %indvars.iv.next21.6.6 = add nsw i64 %indvars.iv20.6, 7
  br i1 %cmp94, label %for.end38.7.6, label %for.body10.7.6.preheader

for.body10.7.6.preheader:                         ; preds = %for.inc53.6.6
  br label %for.body10.7.6

for.body10.7.6:                                   ; preds = %for.body10.7.6.preheader, %for.inc36.7.6
  %ki.06.7.6 = phi i32 [ %inc37.7.6, %for.inc36.7.6 ], [ 0, %for.body10.7.6.preheader ]
  %partial_sum.05.7.6 = phi float [ %partial_sum.3.7.6, %for.inc36.7.6 ], [ 0.000000e+00, %for.body10.7.6.preheader ]
  %add.7.6 = add nsw i32 %ki.06.7.6, %inc58.5
  %notlhs.7.6 = icmp slt i32 %add.7.6, 0
  %notrhs.7.6 = icmp uge i32 %add.7.6, %img_height
  %.not.7.6 = or i1 %notrhs.7.6, %notlhs.7.6
  %brmerge.7.6 = or i1 %.not.7.6, %cmp151.not.7.6
  br i1 %brmerge.7.6, label %for.inc36.7.6, label %for.body16.lr.ph.7.6

for.body16.lr.ph.7.6:                             ; preds = %for.body10.7.6
  %mul.7.6 = shl i32 %add.7.6, 7
  %mul30.7.6 = mul i32 %ki.06.7.6, %kern_width
  br label %for.body16.7.6

for.body16.7.6:                                   ; preds = %for.inc.7.6, %for.body16.lr.ph.7.6
  %indvars.iv.7.6 = phi i64 [ 0, %for.body16.lr.ph.7.6 ], [ %indvars.iv.next.7.6, %for.inc.7.6 ]
  %partial_sum.12.7.6 = phi float [ %partial_sum.05.7.6, %for.body16.lr.ph.7.6 ], [ %partial_sum.2.7.6, %for.inc.7.6 ]
  %565 = trunc i64 %indvars.iv.7.6 to i32
  %add17.7.6 = add nsw i32 %565, %inc54.6.6
  %cmp18.7.6 = icmp sgt i32 %add17.7.6, -1
  %cmp21.7.6 = icmp ult i32 %add17.7.6, %img_width
  %566 = and i1 %cmp18.7.6, %cmp21.7.6
  br i1 %566, label %if.end26.7.6, label %for.inc.7.6

if.end26.7.6:                                     ; preds = %for.body16.7.6
  %add29.7.6 = add nsw i32 %add17.7.6, %mul.7.6
  %idxprom.7.6 = sext i32 %add29.7.6 to i64
  %arrayidx.7.6 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.6
  %567 = load float, float* %arrayidx.7.6, align 4
  %568 = trunc i64 %indvars.iv.7.6 to i32
  %add31.7.6 = add i32 %568, %mul30.7.6
  %idxprom32.7.6 = zext i32 %add31.7.6 to i64
  %arrayidx33.7.6 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.6
  %569 = load float, float* %arrayidx33.7.6, align 4
  %mul34.7.6 = fmul float %567, %569
  %add35.7.6 = fadd float %partial_sum.12.7.6, %mul34.7.6
  br label %for.inc.7.6

for.inc.7.6:                                      ; preds = %if.end26.7.6, %for.body16.7.6
  %partial_sum.2.7.6 = phi float [ %add35.7.6, %if.end26.7.6 ], [ %partial_sum.12.7.6, %for.body16.7.6 ]
  %indvars.iv.next.7.6 = add nuw nsw i64 %indvars.iv.7.6, 1
  %lftr.wideiv.7.6 = trunc i64 %indvars.iv.next.7.6 to i32
  %exitcond.7.6 = icmp eq i32 %lftr.wideiv.7.6, %kern_width
  br i1 %exitcond.7.6, label %for.inc36.7.6.loopexit, label %for.body16.7.6, !llvm.loop !1

for.inc36.7.6.loopexit:                           ; preds = %for.inc.7.6
  %partial_sum.2.7.6.lcssa = phi float [ %partial_sum.2.7.6, %for.inc.7.6 ]
  br label %for.inc36.7.6

for.inc36.7.6:                                    ; preds = %for.inc36.7.6.loopexit, %for.body10.7.6
  %partial_sum.3.7.6 = phi float [ %partial_sum.05.7.6, %for.body10.7.6 ], [ %partial_sum.2.7.6.lcssa, %for.inc36.7.6.loopexit ]
  %inc37.7.6 = add nuw nsw i32 %ki.06.7.6, 1
  %exitcond19.7.6 = icmp eq i32 %inc37.7.6, %kern_height
  br i1 %exitcond19.7.6, label %for.end38.7.6.loopexit, label %for.body10.7.6, !llvm.loop !3

for.end38.7.6.loopexit:                           ; preds = %for.inc36.7.6
  %partial_sum.3.7.6.lcssa = phi float [ %partial_sum.3.7.6, %for.inc36.7.6 ]
  br label %for.end38.7.6

for.end38.7.6:                                    ; preds = %for.end38.7.6.loopexit, %for.inc53.6.6
  %partial_sum.0.lcssa.7.6 = phi float [ 0.000000e+00, %for.inc53.6.6 ], [ %partial_sum.3.7.6.lcssa, %for.end38.7.6.loopexit ]
  br i1 %tobool39, label %if.else.7.6, label %if.then40.7.6

if.then40.7.6:                                    ; preds = %for.end38.7.6
  %cmp41.7.6 = fcmp olt float %partial_sum.0.lcssa.7.6, 0.000000e+00
  %sub42.7.6 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.6
  %cond.7.6 = select i1 %cmp41.7.6, float %sub42.7.6, float %partial_sum.0.lcssa.7.6
  %conv.7.6 = fptoui float %cond.7.6 to i8
  %conv43.7.6 = uitofp i8 %conv.7.6 to float
  %570 = add nsw i64 %indvars.iv.next21.6.6, %508
  %arrayidx47.7.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %570
  store float %conv43.7.6, float* %arrayidx47.7.6, align 4
  br label %for.inc53.7.6

if.else.7.6:                                      ; preds = %for.end38.7.6
  %571 = add nsw i64 %indvars.iv.next21.6.6, %507
  %arrayidx51.7.6 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %571
  store float %partial_sum.0.lcssa.7.6, float* %arrayidx51.7.6, align 4
  br label %for.inc53.7.6

for.inc53.7.6:                                    ; preds = %if.else.7.6, %if.then40.7.6
  %inc54.7.6 = add nsw i32 %in_j.011.6, 8
  %indvars.iv.next21.7.6 = add nsw i64 %indvars.iv20.6, 8
  %lftr.wideiv24.7.6 = trunc i64 %indvars.iv.next21.7.6 to i32
  %exitcond25.7.6 = icmp eq i32 %lftr.wideiv24.7.6, %img_width
  br i1 %exitcond25.7.6, label %for.inc57.6.loopexit, label %for.cond8.preheader.6, !llvm.loop !5

for.inc57.6.loopexit:                             ; preds = %for.inc53.7.6
  br label %for.inc57.6

for.inc57.6:                                      ; preds = %for.inc57.6.loopexit, %for.cond8.preheader.lr.ph.split.6
  %inc58.6 = add nsw i32 %in_i.015, 7
  %indvars.iv.next27.6 = add nsw i64 %indvars.iv26, 7
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.7

for.cond8.preheader.lr.ph.7:                      ; preds = %for.inc57.6
  %572 = trunc i64 %indvars.iv.next27.6 to i32
  %mul48.7 = shl i32 %572, 7
  %573 = trunc i64 %indvars.iv.next27.6 to i32
  %mul44.7 = shl i32 %573, 7
  %574 = sext i32 %mul48.7 to i64
  %575 = sext i32 %mul44.7 to i64
  br i1 %lcmp.mod.7, label %for.cond8.preheader.lr.ph.split.7, label %for.cond8.preheader.prol.7.preheader

for.cond8.preheader.prol.7.preheader:             ; preds = %for.cond8.preheader.lr.ph.7
  br label %for.cond8.preheader.prol.7

for.cond8.preheader.prol.7:                       ; preds = %for.cond8.preheader.prol.7.preheader, %for.inc53.prol.7
  %indvars.iv20.prol.7 = phi i64 [ %indvars.iv.next21.prol.7, %for.inc53.prol.7 ], [ 0, %for.cond8.preheader.prol.7.preheader ]
  %in_j.011.prol.7 = phi i32 [ %inc54.prol.7, %for.inc53.prol.7 ], [ %sub4, %for.cond8.preheader.prol.7.preheader ]
  %prol.iter.7 = phi i32 [ %prol.iter.sub.7, %for.inc53.prol.7 ], [ %xtraiter.7, %for.cond8.preheader.prol.7.preheader ]
  br i1 %cmp94, label %for.end38.prol.7, label %for.body10.prol.7.preheader

for.body10.prol.7.preheader:                      ; preds = %for.cond8.preheader.prol.7
  br label %for.body10.prol.7

for.body10.prol.7:                                ; preds = %for.body10.prol.7.preheader, %for.inc36.prol.7
  %ki.06.prol.7 = phi i32 [ %inc37.prol.7, %for.inc36.prol.7 ], [ 0, %for.body10.prol.7.preheader ]
  %partial_sum.05.prol.7 = phi float [ %partial_sum.3.prol.7, %for.inc36.prol.7 ], [ 0.000000e+00, %for.body10.prol.7.preheader ]
  %add.prol.7 = add nsw i32 %ki.06.prol.7, %inc58.6
  %notlhs.prol.7 = icmp slt i32 %add.prol.7, 0
  %notrhs.prol.7 = icmp uge i32 %add.prol.7, %img_height
  %.not.prol.7 = or i1 %notrhs.prol.7, %notlhs.prol.7
  %brmerge.prol.7 = or i1 %.not.prol.7, %cmp151.not.prol.7
  br i1 %brmerge.prol.7, label %for.inc36.prol.7, label %for.body16.lr.ph.prol.7

for.body16.lr.ph.prol.7:                          ; preds = %for.body10.prol.7
  %mul.prol.7 = shl i32 %add.prol.7, 7
  %mul30.prol.7 = mul i32 %ki.06.prol.7, %kern_width
  br label %for.body16.prol.7

for.body16.prol.7:                                ; preds = %for.inc.prol.7, %for.body16.lr.ph.prol.7
  %indvars.iv.prol.7 = phi i64 [ 0, %for.body16.lr.ph.prol.7 ], [ %indvars.iv.next.prol.7, %for.inc.prol.7 ]
  %partial_sum.12.prol.7 = phi float [ %partial_sum.05.prol.7, %for.body16.lr.ph.prol.7 ], [ %partial_sum.2.prol.7, %for.inc.prol.7 ]
  %576 = trunc i64 %indvars.iv.prol.7 to i32
  %add17.prol.7 = add nsw i32 %576, %in_j.011.prol.7
  %cmp18.prol.7 = icmp sgt i32 %add17.prol.7, -1
  %cmp21.prol.7 = icmp ult i32 %add17.prol.7, %img_width
  %577 = and i1 %cmp18.prol.7, %cmp21.prol.7
  br i1 %577, label %if.end26.prol.7, label %for.inc.prol.7

if.end26.prol.7:                                  ; preds = %for.body16.prol.7
  %add29.prol.7 = add nsw i32 %add17.prol.7, %mul.prol.7
  %idxprom.prol.7 = sext i32 %add29.prol.7 to i64
  %arrayidx.prol.7 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.7
  %578 = load float, float* %arrayidx.prol.7, align 4
  %579 = trunc i64 %indvars.iv.prol.7 to i32
  %add31.prol.7 = add i32 %579, %mul30.prol.7
  %idxprom32.prol.7 = zext i32 %add31.prol.7 to i64
  %arrayidx33.prol.7 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.7
  %580 = load float, float* %arrayidx33.prol.7, align 4
  %mul34.prol.7 = fmul float %578, %580
  %add35.prol.7 = fadd float %partial_sum.12.prol.7, %mul34.prol.7
  br label %for.inc.prol.7

for.inc.prol.7:                                   ; preds = %if.end26.prol.7, %for.body16.prol.7
  %partial_sum.2.prol.7 = phi float [ %add35.prol.7, %if.end26.prol.7 ], [ %partial_sum.12.prol.7, %for.body16.prol.7 ]
  %indvars.iv.next.prol.7 = add nuw nsw i64 %indvars.iv.prol.7, 1
  %lftr.wideiv.prol.7 = trunc i64 %indvars.iv.next.prol.7 to i32
  %exitcond.prol.7 = icmp eq i32 %lftr.wideiv.prol.7, %kern_width
  br i1 %exitcond.prol.7, label %for.inc36.prol.7.loopexit, label %for.body16.prol.7, !llvm.loop !1

for.inc36.prol.7.loopexit:                        ; preds = %for.inc.prol.7
  %partial_sum.2.prol.7.lcssa = phi float [ %partial_sum.2.prol.7, %for.inc.prol.7 ]
  br label %for.inc36.prol.7

for.inc36.prol.7:                                 ; preds = %for.inc36.prol.7.loopexit, %for.body10.prol.7
  %partial_sum.3.prol.7 = phi float [ %partial_sum.05.prol.7, %for.body10.prol.7 ], [ %partial_sum.2.prol.7.lcssa, %for.inc36.prol.7.loopexit ]
  %inc37.prol.7 = add nuw nsw i32 %ki.06.prol.7, 1
  %exitcond19.prol.7 = icmp eq i32 %inc37.prol.7, %kern_height
  br i1 %exitcond19.prol.7, label %for.end38.prol.7.loopexit, label %for.body10.prol.7, !llvm.loop !3

for.end38.prol.7.loopexit:                        ; preds = %for.inc36.prol.7
  %partial_sum.3.prol.7.lcssa = phi float [ %partial_sum.3.prol.7, %for.inc36.prol.7 ]
  br label %for.end38.prol.7

for.end38.prol.7:                                 ; preds = %for.end38.prol.7.loopexit, %for.cond8.preheader.prol.7
  %partial_sum.0.lcssa.prol.7 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.7 ], [ %partial_sum.3.prol.7.lcssa, %for.end38.prol.7.loopexit ]
  br i1 %tobool39, label %if.else.prol.7, label %if.then40.prol.7

if.then40.prol.7:                                 ; preds = %for.end38.prol.7
  %cmp41.prol.7 = fcmp olt float %partial_sum.0.lcssa.prol.7, 0.000000e+00
  %sub42.prol.7 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.7
  %cond.prol.7 = select i1 %cmp41.prol.7, float %sub42.prol.7, float %partial_sum.0.lcssa.prol.7
  %conv.prol.7 = fptoui float %cond.prol.7 to i8
  %conv43.prol.7 = uitofp i8 %conv.prol.7 to float
  %581 = add nsw i64 %indvars.iv20.prol.7, %575
  %arrayidx47.prol.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %581
  store float %conv43.prol.7, float* %arrayidx47.prol.7, align 4
  br label %for.inc53.prol.7

if.else.prol.7:                                   ; preds = %for.end38.prol.7
  %582 = add nsw i64 %indvars.iv20.prol.7, %574
  %arrayidx51.prol.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %582
  store float %partial_sum.0.lcssa.prol.7, float* %arrayidx51.prol.7, align 4
  br label %for.inc53.prol.7

for.inc53.prol.7:                                 ; preds = %if.else.prol.7, %if.then40.prol.7
  %inc54.prol.7 = add nsw i32 %in_j.011.prol.7, 1
  %indvars.iv.next21.prol.7 = add nuw nsw i64 %indvars.iv20.prol.7, 1
  %prol.iter.sub.7 = add i32 %prol.iter.7, -1
  %prol.iter.cmp.7 = icmp eq i32 %prol.iter.sub.7, 0
  br i1 %prol.iter.cmp.7, label %for.cond8.preheader.lr.ph.split.7.loopexit, label %for.cond8.preheader.prol.7, !llvm.loop !4

for.cond8.preheader.lr.ph.split.7.loopexit:       ; preds = %for.inc53.prol.7
  %indvars.iv.next21.prol.7.lcssa = phi i64 [ %indvars.iv.next21.prol.7, %for.inc53.prol.7 ]
  %inc54.prol.7.lcssa = phi i32 [ %inc54.prol.7, %for.inc53.prol.7 ]
  br label %for.cond8.preheader.lr.ph.split.7

for.cond8.preheader.lr.ph.split.7:                ; preds = %for.cond8.preheader.lr.ph.split.7.loopexit, %for.cond8.preheader.lr.ph.7
  %indvars.iv20.unr.7 = phi i64 [ 0, %for.cond8.preheader.lr.ph.7 ], [ %indvars.iv.next21.prol.7.lcssa, %for.cond8.preheader.lr.ph.split.7.loopexit ]
  %in_j.011.unr.7 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.7 ], [ %inc54.prol.7.lcssa, %for.cond8.preheader.lr.ph.split.7.loopexit ]
  br i1 %78, label %for.inc57.7, label %for.cond8.preheader.7.preheader

for.cond8.preheader.7.preheader:                  ; preds = %for.cond8.preheader.lr.ph.split.7
  br label %for.cond8.preheader.7

for.cond8.preheader.7:                            ; preds = %for.cond8.preheader.7.preheader, %for.inc53.7.7
  %indvars.iv20.7 = phi i64 [ %indvars.iv.next21.7.7, %for.inc53.7.7 ], [ %indvars.iv20.unr.7, %for.cond8.preheader.7.preheader ]
  %in_j.011.7 = phi i32 [ %inc54.7.7, %for.inc53.7.7 ], [ %in_j.011.unr.7, %for.cond8.preheader.7.preheader ]
  br i1 %cmp94, label %for.end38.7470, label %for.body10.7437.preheader

for.body10.7437.preheader:                        ; preds = %for.cond8.preheader.7
  br label %for.body10.7437

for.body10.7437:                                  ; preds = %for.body10.7437.preheader, %for.inc36.7466
  %ki.06.7429 = phi i32 [ %inc37.7464, %for.inc36.7466 ], [ 0, %for.body10.7437.preheader ]
  %partial_sum.05.7430 = phi float [ %partial_sum.3.7463, %for.inc36.7466 ], [ 0.000000e+00, %for.body10.7437.preheader ]
  %add.7431 = add nsw i32 %ki.06.7429, %inc58.6
  %notlhs.7432 = icmp slt i32 %add.7431, 0
  %notrhs.7433 = icmp uge i32 %add.7431, %img_height
  %.not.7434 = or i1 %notrhs.7433, %notlhs.7432
  %brmerge.7436 = or i1 %.not.7434, %cmp151.not.7435
  br i1 %brmerge.7436, label %for.inc36.7466, label %for.body16.lr.ph.7440

for.body16.lr.ph.7440:                            ; preds = %for.body10.7437
  %mul.7438 = shl i32 %add.7431, 7
  %mul30.7439 = mul i32 %ki.06.7429, %kern_width
  br label %for.body16.7446

for.body16.7446:                                  ; preds = %for.inc.7460, %for.body16.lr.ph.7440
  %indvars.iv.7441 = phi i64 [ 0, %for.body16.lr.ph.7440 ], [ %indvars.iv.next.7457, %for.inc.7460 ]
  %partial_sum.12.7442 = phi float [ %partial_sum.05.7430, %for.body16.lr.ph.7440 ], [ %partial_sum.2.7456, %for.inc.7460 ]
  %583 = trunc i64 %indvars.iv.7441 to i32
  %add17.7443 = add nsw i32 %583, %in_j.011.7
  %cmp18.7444 = icmp sgt i32 %add17.7443, -1
  %cmp21.7445 = icmp ult i32 %add17.7443, %img_width
  %584 = and i1 %cmp18.7444, %cmp21.7445
  br i1 %584, label %if.end26.7455, label %for.inc.7460

if.end26.7455:                                    ; preds = %for.body16.7446
  %add29.7447 = add nsw i32 %add17.7443, %mul.7438
  %idxprom.7448 = sext i32 %add29.7447 to i64
  %arrayidx.7449 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7448
  %585 = load float, float* %arrayidx.7449, align 4
  %586 = trunc i64 %indvars.iv.7441 to i32
  %add31.7450 = add i32 %586, %mul30.7439
  %idxprom32.7451 = zext i32 %add31.7450 to i64
  %arrayidx33.7452 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7451
  %587 = load float, float* %arrayidx33.7452, align 4
  %mul34.7453 = fmul float %585, %587
  %add35.7454 = fadd float %partial_sum.12.7442, %mul34.7453
  br label %for.inc.7460

for.inc.7460:                                     ; preds = %if.end26.7455, %for.body16.7446
  %partial_sum.2.7456 = phi float [ %add35.7454, %if.end26.7455 ], [ %partial_sum.12.7442, %for.body16.7446 ]
  %indvars.iv.next.7457 = add nuw nsw i64 %indvars.iv.7441, 1
  %lftr.wideiv.7458 = trunc i64 %indvars.iv.next.7457 to i32
  %exitcond.7459 = icmp eq i32 %lftr.wideiv.7458, %kern_width
  br i1 %exitcond.7459, label %for.inc36.7466.loopexit, label %for.body16.7446, !llvm.loop !1

for.inc36.7466.loopexit:                          ; preds = %for.inc.7460
  %partial_sum.2.7456.lcssa = phi float [ %partial_sum.2.7456, %for.inc.7460 ]
  br label %for.inc36.7466

for.inc36.7466:                                   ; preds = %for.inc36.7466.loopexit, %for.body10.7437
  %partial_sum.3.7463 = phi float [ %partial_sum.05.7430, %for.body10.7437 ], [ %partial_sum.2.7456.lcssa, %for.inc36.7466.loopexit ]
  %inc37.7464 = add nuw nsw i32 %ki.06.7429, 1
  %exitcond19.7465 = icmp eq i32 %inc37.7464, %kern_height
  br i1 %exitcond19.7465, label %for.end38.7470.loopexit, label %for.body10.7437, !llvm.loop !3

for.end38.7470.loopexit:                          ; preds = %for.inc36.7466
  %partial_sum.3.7463.lcssa = phi float [ %partial_sum.3.7463, %for.inc36.7466 ]
  br label %for.end38.7470

for.end38.7470:                                   ; preds = %for.end38.7470.loopexit, %for.cond8.preheader.7
  %partial_sum.0.lcssa.7469 = phi float [ 0.000000e+00, %for.cond8.preheader.7 ], [ %partial_sum.3.7463.lcssa, %for.end38.7470.loopexit ]
  br i1 %tobool39, label %if.else.7479, label %if.then40.7477

if.then40.7477:                                   ; preds = %for.end38.7470
  %cmp41.7471 = fcmp olt float %partial_sum.0.lcssa.7469, 0.000000e+00
  %sub42.7472 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7469
  %cond.7473 = select i1 %cmp41.7471, float %sub42.7472, float %partial_sum.0.lcssa.7469
  %conv.7474 = fptoui float %cond.7473 to i8
  %conv43.7475 = uitofp i8 %conv.7474 to float
  %588 = add nsw i64 %indvars.iv20.7, %575
  %arrayidx47.7476 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %588
  store float %conv43.7475, float* %arrayidx47.7476, align 4
  br label %for.inc53.7483

if.else.7479:                                     ; preds = %for.end38.7470
  %589 = add nsw i64 %indvars.iv20.7, %574
  %arrayidx51.7478 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %589
  store float %partial_sum.0.lcssa.7469, float* %arrayidx51.7478, align 4
  br label %for.inc53.7483

for.inc53.7483:                                   ; preds = %if.else.7479, %if.then40.7477
  %inc54.7480 = add nsw i32 %in_j.011.7, 1
  %indvars.iv.next21.7481 = add nuw nsw i64 %indvars.iv20.7, 1
  br i1 %cmp94, label %for.end38.1.7, label %for.body10.1.7.preheader

for.body10.1.7.preheader:                         ; preds = %for.inc53.7483
  br label %for.body10.1.7

for.body10.1.7:                                   ; preds = %for.body10.1.7.preheader, %for.inc36.1.7
  %ki.06.1.7 = phi i32 [ %inc37.1.7, %for.inc36.1.7 ], [ 0, %for.body10.1.7.preheader ]
  %partial_sum.05.1.7 = phi float [ %partial_sum.3.1.7, %for.inc36.1.7 ], [ 0.000000e+00, %for.body10.1.7.preheader ]
  %add.1.7 = add nsw i32 %ki.06.1.7, %inc58.6
  %notlhs.1.7 = icmp slt i32 %add.1.7, 0
  %notrhs.1.7 = icmp uge i32 %add.1.7, %img_height
  %.not.1.7 = or i1 %notrhs.1.7, %notlhs.1.7
  %brmerge.1.7 = or i1 %.not.1.7, %cmp151.not.1.7
  br i1 %brmerge.1.7, label %for.inc36.1.7, label %for.body16.lr.ph.1.7

for.body16.lr.ph.1.7:                             ; preds = %for.body10.1.7
  %mul.1.7 = shl i32 %add.1.7, 7
  %mul30.1.7 = mul i32 %ki.06.1.7, %kern_width
  br label %for.body16.1.7

for.body16.1.7:                                   ; preds = %for.inc.1.7, %for.body16.lr.ph.1.7
  %indvars.iv.1.7 = phi i64 [ 0, %for.body16.lr.ph.1.7 ], [ %indvars.iv.next.1.7, %for.inc.1.7 ]
  %partial_sum.12.1.7 = phi float [ %partial_sum.05.1.7, %for.body16.lr.ph.1.7 ], [ %partial_sum.2.1.7, %for.inc.1.7 ]
  %590 = trunc i64 %indvars.iv.1.7 to i32
  %add17.1.7 = add nsw i32 %590, %inc54.7480
  %cmp18.1.7 = icmp sgt i32 %add17.1.7, -1
  %cmp21.1.7 = icmp ult i32 %add17.1.7, %img_width
  %591 = and i1 %cmp18.1.7, %cmp21.1.7
  br i1 %591, label %if.end26.1.7, label %for.inc.1.7

if.end26.1.7:                                     ; preds = %for.body16.1.7
  %add29.1.7 = add nsw i32 %add17.1.7, %mul.1.7
  %idxprom.1.7 = sext i32 %add29.1.7 to i64
  %arrayidx.1.7 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.7
  %592 = load float, float* %arrayidx.1.7, align 4
  %593 = trunc i64 %indvars.iv.1.7 to i32
  %add31.1.7 = add i32 %593, %mul30.1.7
  %idxprom32.1.7 = zext i32 %add31.1.7 to i64
  %arrayidx33.1.7 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.7
  %594 = load float, float* %arrayidx33.1.7, align 4
  %mul34.1.7 = fmul float %592, %594
  %add35.1.7 = fadd float %partial_sum.12.1.7, %mul34.1.7
  br label %for.inc.1.7

for.inc.1.7:                                      ; preds = %if.end26.1.7, %for.body16.1.7
  %partial_sum.2.1.7 = phi float [ %add35.1.7, %if.end26.1.7 ], [ %partial_sum.12.1.7, %for.body16.1.7 ]
  %indvars.iv.next.1.7 = add nuw nsw i64 %indvars.iv.1.7, 1
  %lftr.wideiv.1.7 = trunc i64 %indvars.iv.next.1.7 to i32
  %exitcond.1.7 = icmp eq i32 %lftr.wideiv.1.7, %kern_width
  br i1 %exitcond.1.7, label %for.inc36.1.7.loopexit, label %for.body16.1.7, !llvm.loop !1

for.inc36.1.7.loopexit:                           ; preds = %for.inc.1.7
  %partial_sum.2.1.7.lcssa = phi float [ %partial_sum.2.1.7, %for.inc.1.7 ]
  br label %for.inc36.1.7

for.inc36.1.7:                                    ; preds = %for.inc36.1.7.loopexit, %for.body10.1.7
  %partial_sum.3.1.7 = phi float [ %partial_sum.05.1.7, %for.body10.1.7 ], [ %partial_sum.2.1.7.lcssa, %for.inc36.1.7.loopexit ]
  %inc37.1.7 = add nuw nsw i32 %ki.06.1.7, 1
  %exitcond19.1.7 = icmp eq i32 %inc37.1.7, %kern_height
  br i1 %exitcond19.1.7, label %for.end38.1.7.loopexit, label %for.body10.1.7, !llvm.loop !3

for.end38.1.7.loopexit:                           ; preds = %for.inc36.1.7
  %partial_sum.3.1.7.lcssa = phi float [ %partial_sum.3.1.7, %for.inc36.1.7 ]
  br label %for.end38.1.7

for.end38.1.7:                                    ; preds = %for.end38.1.7.loopexit, %for.inc53.7483
  %partial_sum.0.lcssa.1.7 = phi float [ 0.000000e+00, %for.inc53.7483 ], [ %partial_sum.3.1.7.lcssa, %for.end38.1.7.loopexit ]
  br i1 %tobool39, label %if.else.1.7, label %if.then40.1.7

if.then40.1.7:                                    ; preds = %for.end38.1.7
  %cmp41.1.7 = fcmp olt float %partial_sum.0.lcssa.1.7, 0.000000e+00
  %sub42.1.7 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.7
  %cond.1.7 = select i1 %cmp41.1.7, float %sub42.1.7, float %partial_sum.0.lcssa.1.7
  %conv.1.7 = fptoui float %cond.1.7 to i8
  %conv43.1.7 = uitofp i8 %conv.1.7 to float
  %595 = add nsw i64 %indvars.iv.next21.7481, %575
  %arrayidx47.1.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %595
  store float %conv43.1.7, float* %arrayidx47.1.7, align 4
  br label %for.inc53.1.7

if.else.1.7:                                      ; preds = %for.end38.1.7
  %596 = add nsw i64 %indvars.iv.next21.7481, %574
  %arrayidx51.1.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %596
  store float %partial_sum.0.lcssa.1.7, float* %arrayidx51.1.7, align 4
  br label %for.inc53.1.7

for.inc53.1.7:                                    ; preds = %if.else.1.7, %if.then40.1.7
  %inc54.1.7 = add nsw i32 %in_j.011.7, 2
  %indvars.iv.next21.1.7 = add nsw i64 %indvars.iv20.7, 2
  br i1 %cmp94, label %for.end38.2.7, label %for.body10.2.7.preheader

for.body10.2.7.preheader:                         ; preds = %for.inc53.1.7
  br label %for.body10.2.7

for.body10.2.7:                                   ; preds = %for.body10.2.7.preheader, %for.inc36.2.7
  %ki.06.2.7 = phi i32 [ %inc37.2.7, %for.inc36.2.7 ], [ 0, %for.body10.2.7.preheader ]
  %partial_sum.05.2.7 = phi float [ %partial_sum.3.2.7, %for.inc36.2.7 ], [ 0.000000e+00, %for.body10.2.7.preheader ]
  %add.2.7 = add nsw i32 %ki.06.2.7, %inc58.6
  %notlhs.2.7 = icmp slt i32 %add.2.7, 0
  %notrhs.2.7 = icmp uge i32 %add.2.7, %img_height
  %.not.2.7 = or i1 %notrhs.2.7, %notlhs.2.7
  %brmerge.2.7 = or i1 %.not.2.7, %cmp151.not.2.7
  br i1 %brmerge.2.7, label %for.inc36.2.7, label %for.body16.lr.ph.2.7

for.body16.lr.ph.2.7:                             ; preds = %for.body10.2.7
  %mul.2.7 = shl i32 %add.2.7, 7
  %mul30.2.7 = mul i32 %ki.06.2.7, %kern_width
  br label %for.body16.2.7

for.body16.2.7:                                   ; preds = %for.inc.2.7, %for.body16.lr.ph.2.7
  %indvars.iv.2.7 = phi i64 [ 0, %for.body16.lr.ph.2.7 ], [ %indvars.iv.next.2.7, %for.inc.2.7 ]
  %partial_sum.12.2.7 = phi float [ %partial_sum.05.2.7, %for.body16.lr.ph.2.7 ], [ %partial_sum.2.2.7, %for.inc.2.7 ]
  %597 = trunc i64 %indvars.iv.2.7 to i32
  %add17.2.7 = add nsw i32 %597, %inc54.1.7
  %cmp18.2.7 = icmp sgt i32 %add17.2.7, -1
  %cmp21.2.7 = icmp ult i32 %add17.2.7, %img_width
  %598 = and i1 %cmp18.2.7, %cmp21.2.7
  br i1 %598, label %if.end26.2.7, label %for.inc.2.7

if.end26.2.7:                                     ; preds = %for.body16.2.7
  %add29.2.7 = add nsw i32 %add17.2.7, %mul.2.7
  %idxprom.2.7 = sext i32 %add29.2.7 to i64
  %arrayidx.2.7 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.7
  %599 = load float, float* %arrayidx.2.7, align 4
  %600 = trunc i64 %indvars.iv.2.7 to i32
  %add31.2.7 = add i32 %600, %mul30.2.7
  %idxprom32.2.7 = zext i32 %add31.2.7 to i64
  %arrayidx33.2.7 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.7
  %601 = load float, float* %arrayidx33.2.7, align 4
  %mul34.2.7 = fmul float %599, %601
  %add35.2.7 = fadd float %partial_sum.12.2.7, %mul34.2.7
  br label %for.inc.2.7

for.inc.2.7:                                      ; preds = %if.end26.2.7, %for.body16.2.7
  %partial_sum.2.2.7 = phi float [ %add35.2.7, %if.end26.2.7 ], [ %partial_sum.12.2.7, %for.body16.2.7 ]
  %indvars.iv.next.2.7 = add nuw nsw i64 %indvars.iv.2.7, 1
  %lftr.wideiv.2.7 = trunc i64 %indvars.iv.next.2.7 to i32
  %exitcond.2.7 = icmp eq i32 %lftr.wideiv.2.7, %kern_width
  br i1 %exitcond.2.7, label %for.inc36.2.7.loopexit, label %for.body16.2.7, !llvm.loop !1

for.inc36.2.7.loopexit:                           ; preds = %for.inc.2.7
  %partial_sum.2.2.7.lcssa = phi float [ %partial_sum.2.2.7, %for.inc.2.7 ]
  br label %for.inc36.2.7

for.inc36.2.7:                                    ; preds = %for.inc36.2.7.loopexit, %for.body10.2.7
  %partial_sum.3.2.7 = phi float [ %partial_sum.05.2.7, %for.body10.2.7 ], [ %partial_sum.2.2.7.lcssa, %for.inc36.2.7.loopexit ]
  %inc37.2.7 = add nuw nsw i32 %ki.06.2.7, 1
  %exitcond19.2.7 = icmp eq i32 %inc37.2.7, %kern_height
  br i1 %exitcond19.2.7, label %for.end38.2.7.loopexit, label %for.body10.2.7, !llvm.loop !3

for.end38.2.7.loopexit:                           ; preds = %for.inc36.2.7
  %partial_sum.3.2.7.lcssa = phi float [ %partial_sum.3.2.7, %for.inc36.2.7 ]
  br label %for.end38.2.7

for.end38.2.7:                                    ; preds = %for.end38.2.7.loopexit, %for.inc53.1.7
  %partial_sum.0.lcssa.2.7 = phi float [ 0.000000e+00, %for.inc53.1.7 ], [ %partial_sum.3.2.7.lcssa, %for.end38.2.7.loopexit ]
  br i1 %tobool39, label %if.else.2.7, label %if.then40.2.7

if.then40.2.7:                                    ; preds = %for.end38.2.7
  %cmp41.2.7 = fcmp olt float %partial_sum.0.lcssa.2.7, 0.000000e+00
  %sub42.2.7 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.7
  %cond.2.7 = select i1 %cmp41.2.7, float %sub42.2.7, float %partial_sum.0.lcssa.2.7
  %conv.2.7 = fptoui float %cond.2.7 to i8
  %conv43.2.7 = uitofp i8 %conv.2.7 to float
  %602 = add nsw i64 %indvars.iv.next21.1.7, %575
  %arrayidx47.2.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %602
  store float %conv43.2.7, float* %arrayidx47.2.7, align 4
  br label %for.inc53.2.7

if.else.2.7:                                      ; preds = %for.end38.2.7
  %603 = add nsw i64 %indvars.iv.next21.1.7, %574
  %arrayidx51.2.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %603
  store float %partial_sum.0.lcssa.2.7, float* %arrayidx51.2.7, align 4
  br label %for.inc53.2.7

for.inc53.2.7:                                    ; preds = %if.else.2.7, %if.then40.2.7
  %inc54.2.7 = add nsw i32 %in_j.011.7, 3
  %indvars.iv.next21.2.7 = add nsw i64 %indvars.iv20.7, 3
  br i1 %cmp94, label %for.end38.3.7, label %for.body10.3.7.preheader

for.body10.3.7.preheader:                         ; preds = %for.inc53.2.7
  br label %for.body10.3.7

for.body10.3.7:                                   ; preds = %for.body10.3.7.preheader, %for.inc36.3.7
  %ki.06.3.7 = phi i32 [ %inc37.3.7, %for.inc36.3.7 ], [ 0, %for.body10.3.7.preheader ]
  %partial_sum.05.3.7 = phi float [ %partial_sum.3.3.7, %for.inc36.3.7 ], [ 0.000000e+00, %for.body10.3.7.preheader ]
  %add.3.7 = add nsw i32 %ki.06.3.7, %inc58.6
  %notlhs.3.7 = icmp slt i32 %add.3.7, 0
  %notrhs.3.7 = icmp uge i32 %add.3.7, %img_height
  %.not.3.7 = or i1 %notrhs.3.7, %notlhs.3.7
  %brmerge.3.7 = or i1 %.not.3.7, %cmp151.not.3.7
  br i1 %brmerge.3.7, label %for.inc36.3.7, label %for.body16.lr.ph.3.7

for.body16.lr.ph.3.7:                             ; preds = %for.body10.3.7
  %mul.3.7 = shl i32 %add.3.7, 7
  %mul30.3.7 = mul i32 %ki.06.3.7, %kern_width
  br label %for.body16.3.7

for.body16.3.7:                                   ; preds = %for.inc.3.7, %for.body16.lr.ph.3.7
  %indvars.iv.3.7 = phi i64 [ 0, %for.body16.lr.ph.3.7 ], [ %indvars.iv.next.3.7, %for.inc.3.7 ]
  %partial_sum.12.3.7 = phi float [ %partial_sum.05.3.7, %for.body16.lr.ph.3.7 ], [ %partial_sum.2.3.7, %for.inc.3.7 ]
  %604 = trunc i64 %indvars.iv.3.7 to i32
  %add17.3.7 = add nsw i32 %604, %inc54.2.7
  %cmp18.3.7 = icmp sgt i32 %add17.3.7, -1
  %cmp21.3.7 = icmp ult i32 %add17.3.7, %img_width
  %605 = and i1 %cmp18.3.7, %cmp21.3.7
  br i1 %605, label %if.end26.3.7, label %for.inc.3.7

if.end26.3.7:                                     ; preds = %for.body16.3.7
  %add29.3.7 = add nsw i32 %add17.3.7, %mul.3.7
  %idxprom.3.7 = sext i32 %add29.3.7 to i64
  %arrayidx.3.7 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.7
  %606 = load float, float* %arrayidx.3.7, align 4
  %607 = trunc i64 %indvars.iv.3.7 to i32
  %add31.3.7 = add i32 %607, %mul30.3.7
  %idxprom32.3.7 = zext i32 %add31.3.7 to i64
  %arrayidx33.3.7 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.7
  %608 = load float, float* %arrayidx33.3.7, align 4
  %mul34.3.7 = fmul float %606, %608
  %add35.3.7 = fadd float %partial_sum.12.3.7, %mul34.3.7
  br label %for.inc.3.7

for.inc.3.7:                                      ; preds = %if.end26.3.7, %for.body16.3.7
  %partial_sum.2.3.7 = phi float [ %add35.3.7, %if.end26.3.7 ], [ %partial_sum.12.3.7, %for.body16.3.7 ]
  %indvars.iv.next.3.7 = add nuw nsw i64 %indvars.iv.3.7, 1
  %lftr.wideiv.3.7 = trunc i64 %indvars.iv.next.3.7 to i32
  %exitcond.3.7 = icmp eq i32 %lftr.wideiv.3.7, %kern_width
  br i1 %exitcond.3.7, label %for.inc36.3.7.loopexit, label %for.body16.3.7, !llvm.loop !1

for.inc36.3.7.loopexit:                           ; preds = %for.inc.3.7
  %partial_sum.2.3.7.lcssa = phi float [ %partial_sum.2.3.7, %for.inc.3.7 ]
  br label %for.inc36.3.7

for.inc36.3.7:                                    ; preds = %for.inc36.3.7.loopexit, %for.body10.3.7
  %partial_sum.3.3.7 = phi float [ %partial_sum.05.3.7, %for.body10.3.7 ], [ %partial_sum.2.3.7.lcssa, %for.inc36.3.7.loopexit ]
  %inc37.3.7 = add nuw nsw i32 %ki.06.3.7, 1
  %exitcond19.3.7 = icmp eq i32 %inc37.3.7, %kern_height
  br i1 %exitcond19.3.7, label %for.end38.3.7.loopexit, label %for.body10.3.7, !llvm.loop !3

for.end38.3.7.loopexit:                           ; preds = %for.inc36.3.7
  %partial_sum.3.3.7.lcssa = phi float [ %partial_sum.3.3.7, %for.inc36.3.7 ]
  br label %for.end38.3.7

for.end38.3.7:                                    ; preds = %for.end38.3.7.loopexit, %for.inc53.2.7
  %partial_sum.0.lcssa.3.7 = phi float [ 0.000000e+00, %for.inc53.2.7 ], [ %partial_sum.3.3.7.lcssa, %for.end38.3.7.loopexit ]
  br i1 %tobool39, label %if.else.3.7, label %if.then40.3.7

if.then40.3.7:                                    ; preds = %for.end38.3.7
  %cmp41.3.7 = fcmp olt float %partial_sum.0.lcssa.3.7, 0.000000e+00
  %sub42.3.7 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.7
  %cond.3.7 = select i1 %cmp41.3.7, float %sub42.3.7, float %partial_sum.0.lcssa.3.7
  %conv.3.7 = fptoui float %cond.3.7 to i8
  %conv43.3.7 = uitofp i8 %conv.3.7 to float
  %609 = add nsw i64 %indvars.iv.next21.2.7, %575
  %arrayidx47.3.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %609
  store float %conv43.3.7, float* %arrayidx47.3.7, align 4
  br label %for.inc53.3.7

if.else.3.7:                                      ; preds = %for.end38.3.7
  %610 = add nsw i64 %indvars.iv.next21.2.7, %574
  %arrayidx51.3.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %610
  store float %partial_sum.0.lcssa.3.7, float* %arrayidx51.3.7, align 4
  br label %for.inc53.3.7

for.inc53.3.7:                                    ; preds = %if.else.3.7, %if.then40.3.7
  %inc54.3.7 = add nsw i32 %in_j.011.7, 4
  %indvars.iv.next21.3.7 = add nsw i64 %indvars.iv20.7, 4
  br i1 %cmp94, label %for.end38.4.7, label %for.body10.4.7.preheader

for.body10.4.7.preheader:                         ; preds = %for.inc53.3.7
  br label %for.body10.4.7

for.body10.4.7:                                   ; preds = %for.body10.4.7.preheader, %for.inc36.4.7
  %ki.06.4.7 = phi i32 [ %inc37.4.7, %for.inc36.4.7 ], [ 0, %for.body10.4.7.preheader ]
  %partial_sum.05.4.7 = phi float [ %partial_sum.3.4.7, %for.inc36.4.7 ], [ 0.000000e+00, %for.body10.4.7.preheader ]
  %add.4.7 = add nsw i32 %ki.06.4.7, %inc58.6
  %notlhs.4.7 = icmp slt i32 %add.4.7, 0
  %notrhs.4.7 = icmp uge i32 %add.4.7, %img_height
  %.not.4.7 = or i1 %notrhs.4.7, %notlhs.4.7
  %brmerge.4.7 = or i1 %.not.4.7, %cmp151.not.4.7
  br i1 %brmerge.4.7, label %for.inc36.4.7, label %for.body16.lr.ph.4.7

for.body16.lr.ph.4.7:                             ; preds = %for.body10.4.7
  %mul.4.7 = shl i32 %add.4.7, 7
  %mul30.4.7 = mul i32 %ki.06.4.7, %kern_width
  br label %for.body16.4.7

for.body16.4.7:                                   ; preds = %for.inc.4.7, %for.body16.lr.ph.4.7
  %indvars.iv.4.7 = phi i64 [ 0, %for.body16.lr.ph.4.7 ], [ %indvars.iv.next.4.7, %for.inc.4.7 ]
  %partial_sum.12.4.7 = phi float [ %partial_sum.05.4.7, %for.body16.lr.ph.4.7 ], [ %partial_sum.2.4.7, %for.inc.4.7 ]
  %611 = trunc i64 %indvars.iv.4.7 to i32
  %add17.4.7 = add nsw i32 %611, %inc54.3.7
  %cmp18.4.7 = icmp sgt i32 %add17.4.7, -1
  %cmp21.4.7 = icmp ult i32 %add17.4.7, %img_width
  %612 = and i1 %cmp18.4.7, %cmp21.4.7
  br i1 %612, label %if.end26.4.7, label %for.inc.4.7

if.end26.4.7:                                     ; preds = %for.body16.4.7
  %add29.4.7 = add nsw i32 %add17.4.7, %mul.4.7
  %idxprom.4.7 = sext i32 %add29.4.7 to i64
  %arrayidx.4.7 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.7
  %613 = load float, float* %arrayidx.4.7, align 4
  %614 = trunc i64 %indvars.iv.4.7 to i32
  %add31.4.7 = add i32 %614, %mul30.4.7
  %idxprom32.4.7 = zext i32 %add31.4.7 to i64
  %arrayidx33.4.7 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.7
  %615 = load float, float* %arrayidx33.4.7, align 4
  %mul34.4.7 = fmul float %613, %615
  %add35.4.7 = fadd float %partial_sum.12.4.7, %mul34.4.7
  br label %for.inc.4.7

for.inc.4.7:                                      ; preds = %if.end26.4.7, %for.body16.4.7
  %partial_sum.2.4.7 = phi float [ %add35.4.7, %if.end26.4.7 ], [ %partial_sum.12.4.7, %for.body16.4.7 ]
  %indvars.iv.next.4.7 = add nuw nsw i64 %indvars.iv.4.7, 1
  %lftr.wideiv.4.7 = trunc i64 %indvars.iv.next.4.7 to i32
  %exitcond.4.7 = icmp eq i32 %lftr.wideiv.4.7, %kern_width
  br i1 %exitcond.4.7, label %for.inc36.4.7.loopexit, label %for.body16.4.7, !llvm.loop !1

for.inc36.4.7.loopexit:                           ; preds = %for.inc.4.7
  %partial_sum.2.4.7.lcssa = phi float [ %partial_sum.2.4.7, %for.inc.4.7 ]
  br label %for.inc36.4.7

for.inc36.4.7:                                    ; preds = %for.inc36.4.7.loopexit, %for.body10.4.7
  %partial_sum.3.4.7 = phi float [ %partial_sum.05.4.7, %for.body10.4.7 ], [ %partial_sum.2.4.7.lcssa, %for.inc36.4.7.loopexit ]
  %inc37.4.7 = add nuw nsw i32 %ki.06.4.7, 1
  %exitcond19.4.7 = icmp eq i32 %inc37.4.7, %kern_height
  br i1 %exitcond19.4.7, label %for.end38.4.7.loopexit, label %for.body10.4.7, !llvm.loop !3

for.end38.4.7.loopexit:                           ; preds = %for.inc36.4.7
  %partial_sum.3.4.7.lcssa = phi float [ %partial_sum.3.4.7, %for.inc36.4.7 ]
  br label %for.end38.4.7

for.end38.4.7:                                    ; preds = %for.end38.4.7.loopexit, %for.inc53.3.7
  %partial_sum.0.lcssa.4.7 = phi float [ 0.000000e+00, %for.inc53.3.7 ], [ %partial_sum.3.4.7.lcssa, %for.end38.4.7.loopexit ]
  br i1 %tobool39, label %if.else.4.7, label %if.then40.4.7

if.then40.4.7:                                    ; preds = %for.end38.4.7
  %cmp41.4.7 = fcmp olt float %partial_sum.0.lcssa.4.7, 0.000000e+00
  %sub42.4.7 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.7
  %cond.4.7 = select i1 %cmp41.4.7, float %sub42.4.7, float %partial_sum.0.lcssa.4.7
  %conv.4.7 = fptoui float %cond.4.7 to i8
  %conv43.4.7 = uitofp i8 %conv.4.7 to float
  %616 = add nsw i64 %indvars.iv.next21.3.7, %575
  %arrayidx47.4.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %616
  store float %conv43.4.7, float* %arrayidx47.4.7, align 4
  br label %for.inc53.4.7

if.else.4.7:                                      ; preds = %for.end38.4.7
  %617 = add nsw i64 %indvars.iv.next21.3.7, %574
  %arrayidx51.4.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %617
  store float %partial_sum.0.lcssa.4.7, float* %arrayidx51.4.7, align 4
  br label %for.inc53.4.7

for.inc53.4.7:                                    ; preds = %if.else.4.7, %if.then40.4.7
  %inc54.4.7 = add nsw i32 %in_j.011.7, 5
  %indvars.iv.next21.4.7 = add nsw i64 %indvars.iv20.7, 5
  br i1 %cmp94, label %for.end38.5.7, label %for.body10.5.7.preheader

for.body10.5.7.preheader:                         ; preds = %for.inc53.4.7
  br label %for.body10.5.7

for.body10.5.7:                                   ; preds = %for.body10.5.7.preheader, %for.inc36.5.7
  %ki.06.5.7 = phi i32 [ %inc37.5.7, %for.inc36.5.7 ], [ 0, %for.body10.5.7.preheader ]
  %partial_sum.05.5.7 = phi float [ %partial_sum.3.5.7, %for.inc36.5.7 ], [ 0.000000e+00, %for.body10.5.7.preheader ]
  %add.5.7 = add nsw i32 %ki.06.5.7, %inc58.6
  %notlhs.5.7 = icmp slt i32 %add.5.7, 0
  %notrhs.5.7 = icmp uge i32 %add.5.7, %img_height
  %.not.5.7 = or i1 %notrhs.5.7, %notlhs.5.7
  %brmerge.5.7 = or i1 %.not.5.7, %cmp151.not.5.7
  br i1 %brmerge.5.7, label %for.inc36.5.7, label %for.body16.lr.ph.5.7

for.body16.lr.ph.5.7:                             ; preds = %for.body10.5.7
  %mul.5.7 = shl i32 %add.5.7, 7
  %mul30.5.7 = mul i32 %ki.06.5.7, %kern_width
  br label %for.body16.5.7

for.body16.5.7:                                   ; preds = %for.inc.5.7, %for.body16.lr.ph.5.7
  %indvars.iv.5.7 = phi i64 [ 0, %for.body16.lr.ph.5.7 ], [ %indvars.iv.next.5.7, %for.inc.5.7 ]
  %partial_sum.12.5.7 = phi float [ %partial_sum.05.5.7, %for.body16.lr.ph.5.7 ], [ %partial_sum.2.5.7, %for.inc.5.7 ]
  %618 = trunc i64 %indvars.iv.5.7 to i32
  %add17.5.7 = add nsw i32 %618, %inc54.4.7
  %cmp18.5.7 = icmp sgt i32 %add17.5.7, -1
  %cmp21.5.7 = icmp ult i32 %add17.5.7, %img_width
  %619 = and i1 %cmp18.5.7, %cmp21.5.7
  br i1 %619, label %if.end26.5.7, label %for.inc.5.7

if.end26.5.7:                                     ; preds = %for.body16.5.7
  %add29.5.7 = add nsw i32 %add17.5.7, %mul.5.7
  %idxprom.5.7 = sext i32 %add29.5.7 to i64
  %arrayidx.5.7 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.7
  %620 = load float, float* %arrayidx.5.7, align 4
  %621 = trunc i64 %indvars.iv.5.7 to i32
  %add31.5.7 = add i32 %621, %mul30.5.7
  %idxprom32.5.7 = zext i32 %add31.5.7 to i64
  %arrayidx33.5.7 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.7
  %622 = load float, float* %arrayidx33.5.7, align 4
  %mul34.5.7 = fmul float %620, %622
  %add35.5.7 = fadd float %partial_sum.12.5.7, %mul34.5.7
  br label %for.inc.5.7

for.inc.5.7:                                      ; preds = %if.end26.5.7, %for.body16.5.7
  %partial_sum.2.5.7 = phi float [ %add35.5.7, %if.end26.5.7 ], [ %partial_sum.12.5.7, %for.body16.5.7 ]
  %indvars.iv.next.5.7 = add nuw nsw i64 %indvars.iv.5.7, 1
  %lftr.wideiv.5.7 = trunc i64 %indvars.iv.next.5.7 to i32
  %exitcond.5.7 = icmp eq i32 %lftr.wideiv.5.7, %kern_width
  br i1 %exitcond.5.7, label %for.inc36.5.7.loopexit, label %for.body16.5.7, !llvm.loop !1

for.inc36.5.7.loopexit:                           ; preds = %for.inc.5.7
  %partial_sum.2.5.7.lcssa = phi float [ %partial_sum.2.5.7, %for.inc.5.7 ]
  br label %for.inc36.5.7

for.inc36.5.7:                                    ; preds = %for.inc36.5.7.loopexit, %for.body10.5.7
  %partial_sum.3.5.7 = phi float [ %partial_sum.05.5.7, %for.body10.5.7 ], [ %partial_sum.2.5.7.lcssa, %for.inc36.5.7.loopexit ]
  %inc37.5.7 = add nuw nsw i32 %ki.06.5.7, 1
  %exitcond19.5.7 = icmp eq i32 %inc37.5.7, %kern_height
  br i1 %exitcond19.5.7, label %for.end38.5.7.loopexit, label %for.body10.5.7, !llvm.loop !3

for.end38.5.7.loopexit:                           ; preds = %for.inc36.5.7
  %partial_sum.3.5.7.lcssa = phi float [ %partial_sum.3.5.7, %for.inc36.5.7 ]
  br label %for.end38.5.7

for.end38.5.7:                                    ; preds = %for.end38.5.7.loopexit, %for.inc53.4.7
  %partial_sum.0.lcssa.5.7 = phi float [ 0.000000e+00, %for.inc53.4.7 ], [ %partial_sum.3.5.7.lcssa, %for.end38.5.7.loopexit ]
  br i1 %tobool39, label %if.else.5.7, label %if.then40.5.7

if.then40.5.7:                                    ; preds = %for.end38.5.7
  %cmp41.5.7 = fcmp olt float %partial_sum.0.lcssa.5.7, 0.000000e+00
  %sub42.5.7 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.7
  %cond.5.7 = select i1 %cmp41.5.7, float %sub42.5.7, float %partial_sum.0.lcssa.5.7
  %conv.5.7 = fptoui float %cond.5.7 to i8
  %conv43.5.7 = uitofp i8 %conv.5.7 to float
  %623 = add nsw i64 %indvars.iv.next21.4.7, %575
  %arrayidx47.5.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %623
  store float %conv43.5.7, float* %arrayidx47.5.7, align 4
  br label %for.inc53.5.7

if.else.5.7:                                      ; preds = %for.end38.5.7
  %624 = add nsw i64 %indvars.iv.next21.4.7, %574
  %arrayidx51.5.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %624
  store float %partial_sum.0.lcssa.5.7, float* %arrayidx51.5.7, align 4
  br label %for.inc53.5.7

for.inc53.5.7:                                    ; preds = %if.else.5.7, %if.then40.5.7
  %inc54.5.7 = add nsw i32 %in_j.011.7, 6
  %indvars.iv.next21.5.7 = add nsw i64 %indvars.iv20.7, 6
  br i1 %cmp94, label %for.end38.6.7, label %for.body10.6.7.preheader

for.body10.6.7.preheader:                         ; preds = %for.inc53.5.7
  br label %for.body10.6.7

for.body10.6.7:                                   ; preds = %for.body10.6.7.preheader, %for.inc36.6.7
  %ki.06.6.7 = phi i32 [ %inc37.6.7, %for.inc36.6.7 ], [ 0, %for.body10.6.7.preheader ]
  %partial_sum.05.6.7 = phi float [ %partial_sum.3.6.7, %for.inc36.6.7 ], [ 0.000000e+00, %for.body10.6.7.preheader ]
  %add.6.7 = add nsw i32 %ki.06.6.7, %inc58.6
  %notlhs.6.7 = icmp slt i32 %add.6.7, 0
  %notrhs.6.7 = icmp uge i32 %add.6.7, %img_height
  %.not.6.7 = or i1 %notrhs.6.7, %notlhs.6.7
  %brmerge.6.7 = or i1 %.not.6.7, %cmp151.not.6.7
  br i1 %brmerge.6.7, label %for.inc36.6.7, label %for.body16.lr.ph.6.7

for.body16.lr.ph.6.7:                             ; preds = %for.body10.6.7
  %mul.6.7 = shl i32 %add.6.7, 7
  %mul30.6.7 = mul i32 %ki.06.6.7, %kern_width
  br label %for.body16.6.7

for.body16.6.7:                                   ; preds = %for.inc.6.7, %for.body16.lr.ph.6.7
  %indvars.iv.6.7 = phi i64 [ 0, %for.body16.lr.ph.6.7 ], [ %indvars.iv.next.6.7, %for.inc.6.7 ]
  %partial_sum.12.6.7 = phi float [ %partial_sum.05.6.7, %for.body16.lr.ph.6.7 ], [ %partial_sum.2.6.7, %for.inc.6.7 ]
  %625 = trunc i64 %indvars.iv.6.7 to i32
  %add17.6.7 = add nsw i32 %625, %inc54.5.7
  %cmp18.6.7 = icmp sgt i32 %add17.6.7, -1
  %cmp21.6.7 = icmp ult i32 %add17.6.7, %img_width
  %626 = and i1 %cmp18.6.7, %cmp21.6.7
  br i1 %626, label %if.end26.6.7, label %for.inc.6.7

if.end26.6.7:                                     ; preds = %for.body16.6.7
  %add29.6.7 = add nsw i32 %add17.6.7, %mul.6.7
  %idxprom.6.7 = sext i32 %add29.6.7 to i64
  %arrayidx.6.7 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.7
  %627 = load float, float* %arrayidx.6.7, align 4
  %628 = trunc i64 %indvars.iv.6.7 to i32
  %add31.6.7 = add i32 %628, %mul30.6.7
  %idxprom32.6.7 = zext i32 %add31.6.7 to i64
  %arrayidx33.6.7 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.7
  %629 = load float, float* %arrayidx33.6.7, align 4
  %mul34.6.7 = fmul float %627, %629
  %add35.6.7 = fadd float %partial_sum.12.6.7, %mul34.6.7
  br label %for.inc.6.7

for.inc.6.7:                                      ; preds = %if.end26.6.7, %for.body16.6.7
  %partial_sum.2.6.7 = phi float [ %add35.6.7, %if.end26.6.7 ], [ %partial_sum.12.6.7, %for.body16.6.7 ]
  %indvars.iv.next.6.7 = add nuw nsw i64 %indvars.iv.6.7, 1
  %lftr.wideiv.6.7 = trunc i64 %indvars.iv.next.6.7 to i32
  %exitcond.6.7 = icmp eq i32 %lftr.wideiv.6.7, %kern_width
  br i1 %exitcond.6.7, label %for.inc36.6.7.loopexit, label %for.body16.6.7, !llvm.loop !1

for.inc36.6.7.loopexit:                           ; preds = %for.inc.6.7
  %partial_sum.2.6.7.lcssa = phi float [ %partial_sum.2.6.7, %for.inc.6.7 ]
  br label %for.inc36.6.7

for.inc36.6.7:                                    ; preds = %for.inc36.6.7.loopexit, %for.body10.6.7
  %partial_sum.3.6.7 = phi float [ %partial_sum.05.6.7, %for.body10.6.7 ], [ %partial_sum.2.6.7.lcssa, %for.inc36.6.7.loopexit ]
  %inc37.6.7 = add nuw nsw i32 %ki.06.6.7, 1
  %exitcond19.6.7 = icmp eq i32 %inc37.6.7, %kern_height
  br i1 %exitcond19.6.7, label %for.end38.6.7.loopexit, label %for.body10.6.7, !llvm.loop !3

for.end38.6.7.loopexit:                           ; preds = %for.inc36.6.7
  %partial_sum.3.6.7.lcssa = phi float [ %partial_sum.3.6.7, %for.inc36.6.7 ]
  br label %for.end38.6.7

for.end38.6.7:                                    ; preds = %for.end38.6.7.loopexit, %for.inc53.5.7
  %partial_sum.0.lcssa.6.7 = phi float [ 0.000000e+00, %for.inc53.5.7 ], [ %partial_sum.3.6.7.lcssa, %for.end38.6.7.loopexit ]
  br i1 %tobool39, label %if.else.6.7, label %if.then40.6.7

if.then40.6.7:                                    ; preds = %for.end38.6.7
  %cmp41.6.7 = fcmp olt float %partial_sum.0.lcssa.6.7, 0.000000e+00
  %sub42.6.7 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.7
  %cond.6.7 = select i1 %cmp41.6.7, float %sub42.6.7, float %partial_sum.0.lcssa.6.7
  %conv.6.7 = fptoui float %cond.6.7 to i8
  %conv43.6.7 = uitofp i8 %conv.6.7 to float
  %630 = add nsw i64 %indvars.iv.next21.5.7, %575
  %arrayidx47.6.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %630
  store float %conv43.6.7, float* %arrayidx47.6.7, align 4
  br label %for.inc53.6.7

if.else.6.7:                                      ; preds = %for.end38.6.7
  %631 = add nsw i64 %indvars.iv.next21.5.7, %574
  %arrayidx51.6.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %631
  store float %partial_sum.0.lcssa.6.7, float* %arrayidx51.6.7, align 4
  br label %for.inc53.6.7

for.inc53.6.7:                                    ; preds = %if.else.6.7, %if.then40.6.7
  %inc54.6.7 = add nsw i32 %in_j.011.7, 7
  %indvars.iv.next21.6.7 = add nsw i64 %indvars.iv20.7, 7
  br i1 %cmp94, label %for.end38.7.7, label %for.body10.7.7.preheader

for.body10.7.7.preheader:                         ; preds = %for.inc53.6.7
  br label %for.body10.7.7

for.body10.7.7:                                   ; preds = %for.body10.7.7.preheader, %for.inc36.7.7
  %ki.06.7.7 = phi i32 [ %inc37.7.7, %for.inc36.7.7 ], [ 0, %for.body10.7.7.preheader ]
  %partial_sum.05.7.7 = phi float [ %partial_sum.3.7.7, %for.inc36.7.7 ], [ 0.000000e+00, %for.body10.7.7.preheader ]
  %add.7.7 = add nsw i32 %ki.06.7.7, %inc58.6
  %notlhs.7.7 = icmp slt i32 %add.7.7, 0
  %notrhs.7.7 = icmp uge i32 %add.7.7, %img_height
  %.not.7.7 = or i1 %notrhs.7.7, %notlhs.7.7
  %brmerge.7.7 = or i1 %.not.7.7, %cmp151.not.7.7
  br i1 %brmerge.7.7, label %for.inc36.7.7, label %for.body16.lr.ph.7.7

for.body16.lr.ph.7.7:                             ; preds = %for.body10.7.7
  %mul.7.7 = shl i32 %add.7.7, 7
  %mul30.7.7 = mul i32 %ki.06.7.7, %kern_width
  br label %for.body16.7.7

for.body16.7.7:                                   ; preds = %for.inc.7.7, %for.body16.lr.ph.7.7
  %indvars.iv.7.7 = phi i64 [ 0, %for.body16.lr.ph.7.7 ], [ %indvars.iv.next.7.7, %for.inc.7.7 ]
  %partial_sum.12.7.7 = phi float [ %partial_sum.05.7.7, %for.body16.lr.ph.7.7 ], [ %partial_sum.2.7.7, %for.inc.7.7 ]
  %632 = trunc i64 %indvars.iv.7.7 to i32
  %add17.7.7 = add nsw i32 %632, %inc54.6.7
  %cmp18.7.7 = icmp sgt i32 %add17.7.7, -1
  %cmp21.7.7 = icmp ult i32 %add17.7.7, %img_width
  %633 = and i1 %cmp18.7.7, %cmp21.7.7
  br i1 %633, label %if.end26.7.7, label %for.inc.7.7

if.end26.7.7:                                     ; preds = %for.body16.7.7
  %add29.7.7 = add nsw i32 %add17.7.7, %mul.7.7
  %idxprom.7.7 = sext i32 %add29.7.7 to i64
  %arrayidx.7.7 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.7
  %634 = load float, float* %arrayidx.7.7, align 4
  %635 = trunc i64 %indvars.iv.7.7 to i32
  %add31.7.7 = add i32 %635, %mul30.7.7
  %idxprom32.7.7 = zext i32 %add31.7.7 to i64
  %arrayidx33.7.7 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.7
  %636 = load float, float* %arrayidx33.7.7, align 4
  %mul34.7.7 = fmul float %634, %636
  %add35.7.7 = fadd float %partial_sum.12.7.7, %mul34.7.7
  br label %for.inc.7.7

for.inc.7.7:                                      ; preds = %if.end26.7.7, %for.body16.7.7
  %partial_sum.2.7.7 = phi float [ %add35.7.7, %if.end26.7.7 ], [ %partial_sum.12.7.7, %for.body16.7.7 ]
  %indvars.iv.next.7.7 = add nuw nsw i64 %indvars.iv.7.7, 1
  %lftr.wideiv.7.7 = trunc i64 %indvars.iv.next.7.7 to i32
  %exitcond.7.7 = icmp eq i32 %lftr.wideiv.7.7, %kern_width
  br i1 %exitcond.7.7, label %for.inc36.7.7.loopexit, label %for.body16.7.7, !llvm.loop !1

for.inc36.7.7.loopexit:                           ; preds = %for.inc.7.7
  %partial_sum.2.7.7.lcssa = phi float [ %partial_sum.2.7.7, %for.inc.7.7 ]
  br label %for.inc36.7.7

for.inc36.7.7:                                    ; preds = %for.inc36.7.7.loopexit, %for.body10.7.7
  %partial_sum.3.7.7 = phi float [ %partial_sum.05.7.7, %for.body10.7.7 ], [ %partial_sum.2.7.7.lcssa, %for.inc36.7.7.loopexit ]
  %inc37.7.7 = add nuw nsw i32 %ki.06.7.7, 1
  %exitcond19.7.7 = icmp eq i32 %inc37.7.7, %kern_height
  br i1 %exitcond19.7.7, label %for.end38.7.7.loopexit, label %for.body10.7.7, !llvm.loop !3

for.end38.7.7.loopexit:                           ; preds = %for.inc36.7.7
  %partial_sum.3.7.7.lcssa = phi float [ %partial_sum.3.7.7, %for.inc36.7.7 ]
  br label %for.end38.7.7

for.end38.7.7:                                    ; preds = %for.end38.7.7.loopexit, %for.inc53.6.7
  %partial_sum.0.lcssa.7.7 = phi float [ 0.000000e+00, %for.inc53.6.7 ], [ %partial_sum.3.7.7.lcssa, %for.end38.7.7.loopexit ]
  br i1 %tobool39, label %if.else.7.7, label %if.then40.7.7

if.then40.7.7:                                    ; preds = %for.end38.7.7
  %cmp41.7.7 = fcmp olt float %partial_sum.0.lcssa.7.7, 0.000000e+00
  %sub42.7.7 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.7
  %cond.7.7 = select i1 %cmp41.7.7, float %sub42.7.7, float %partial_sum.0.lcssa.7.7
  %conv.7.7 = fptoui float %cond.7.7 to i8
  %conv43.7.7 = uitofp i8 %conv.7.7 to float
  %637 = add nsw i64 %indvars.iv.next21.6.7, %575
  %arrayidx47.7.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %637
  store float %conv43.7.7, float* %arrayidx47.7.7, align 4
  br label %for.inc53.7.7

if.else.7.7:                                      ; preds = %for.end38.7.7
  %638 = add nsw i64 %indvars.iv.next21.6.7, %574
  %arrayidx51.7.7 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %638
  store float %partial_sum.0.lcssa.7.7, float* %arrayidx51.7.7, align 4
  br label %for.inc53.7.7

for.inc53.7.7:                                    ; preds = %if.else.7.7, %if.then40.7.7
  %inc54.7.7 = add nsw i32 %in_j.011.7, 8
  %indvars.iv.next21.7.7 = add nsw i64 %indvars.iv20.7, 8
  %lftr.wideiv24.7.7 = trunc i64 %indvars.iv.next21.7.7 to i32
  %exitcond25.7.7 = icmp eq i32 %lftr.wideiv24.7.7, %img_width
  br i1 %exitcond25.7.7, label %for.inc57.7.loopexit, label %for.cond8.preheader.7, !llvm.loop !5

for.inc57.7.loopexit:                             ; preds = %for.inc53.7.7
  br label %for.inc57.7

for.inc57.7:                                      ; preds = %for.inc57.7.loopexit, %for.cond8.preheader.lr.ph.split.7
  %inc58.7 = add nsw i32 %in_i.015, 8
  %indvars.iv.next27.7 = add nsw i64 %indvars.iv26, 8
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.8

for.cond8.preheader.lr.ph.8:                      ; preds = %for.inc57.7
  %639 = trunc i64 %indvars.iv.next27.7 to i32
  %mul48.8 = shl i32 %639, 7
  %640 = trunc i64 %indvars.iv.next27.7 to i32
  %mul44.8 = shl i32 %640, 7
  %641 = sext i32 %mul48.8 to i64
  %642 = sext i32 %mul44.8 to i64
  br i1 %lcmp.mod.8, label %for.cond8.preheader.lr.ph.split.8, label %for.cond8.preheader.prol.8.preheader

for.cond8.preheader.prol.8.preheader:             ; preds = %for.cond8.preheader.lr.ph.8
  br label %for.cond8.preheader.prol.8

for.cond8.preheader.prol.8:                       ; preds = %for.cond8.preheader.prol.8.preheader, %for.inc53.prol.8
  %indvars.iv20.prol.8 = phi i64 [ %indvars.iv.next21.prol.8, %for.inc53.prol.8 ], [ 0, %for.cond8.preheader.prol.8.preheader ]
  %in_j.011.prol.8 = phi i32 [ %inc54.prol.8, %for.inc53.prol.8 ], [ %sub4, %for.cond8.preheader.prol.8.preheader ]
  %prol.iter.8 = phi i32 [ %prol.iter.sub.8, %for.inc53.prol.8 ], [ %xtraiter.8, %for.cond8.preheader.prol.8.preheader ]
  br i1 %cmp94, label %for.end38.prol.8, label %for.body10.prol.8.preheader

for.body10.prol.8.preheader:                      ; preds = %for.cond8.preheader.prol.8
  br label %for.body10.prol.8

for.body10.prol.8:                                ; preds = %for.body10.prol.8.preheader, %for.inc36.prol.8
  %ki.06.prol.8 = phi i32 [ %inc37.prol.8, %for.inc36.prol.8 ], [ 0, %for.body10.prol.8.preheader ]
  %partial_sum.05.prol.8 = phi float [ %partial_sum.3.prol.8, %for.inc36.prol.8 ], [ 0.000000e+00, %for.body10.prol.8.preheader ]
  %add.prol.8 = add nsw i32 %ki.06.prol.8, %inc58.7
  %notlhs.prol.8 = icmp slt i32 %add.prol.8, 0
  %notrhs.prol.8 = icmp uge i32 %add.prol.8, %img_height
  %.not.prol.8 = or i1 %notrhs.prol.8, %notlhs.prol.8
  %brmerge.prol.8 = or i1 %.not.prol.8, %cmp151.not.prol.8
  br i1 %brmerge.prol.8, label %for.inc36.prol.8, label %for.body16.lr.ph.prol.8

for.body16.lr.ph.prol.8:                          ; preds = %for.body10.prol.8
  %mul.prol.8 = shl i32 %add.prol.8, 7
  %mul30.prol.8 = mul i32 %ki.06.prol.8, %kern_width
  br label %for.body16.prol.8

for.body16.prol.8:                                ; preds = %for.inc.prol.8, %for.body16.lr.ph.prol.8
  %indvars.iv.prol.8 = phi i64 [ 0, %for.body16.lr.ph.prol.8 ], [ %indvars.iv.next.prol.8, %for.inc.prol.8 ]
  %partial_sum.12.prol.8 = phi float [ %partial_sum.05.prol.8, %for.body16.lr.ph.prol.8 ], [ %partial_sum.2.prol.8, %for.inc.prol.8 ]
  %643 = trunc i64 %indvars.iv.prol.8 to i32
  %add17.prol.8 = add nsw i32 %643, %in_j.011.prol.8
  %cmp18.prol.8 = icmp sgt i32 %add17.prol.8, -1
  %cmp21.prol.8 = icmp ult i32 %add17.prol.8, %img_width
  %644 = and i1 %cmp18.prol.8, %cmp21.prol.8
  br i1 %644, label %if.end26.prol.8, label %for.inc.prol.8

if.end26.prol.8:                                  ; preds = %for.body16.prol.8
  %add29.prol.8 = add nsw i32 %add17.prol.8, %mul.prol.8
  %idxprom.prol.8 = sext i32 %add29.prol.8 to i64
  %arrayidx.prol.8 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.8
  %645 = load float, float* %arrayidx.prol.8, align 4
  %646 = trunc i64 %indvars.iv.prol.8 to i32
  %add31.prol.8 = add i32 %646, %mul30.prol.8
  %idxprom32.prol.8 = zext i32 %add31.prol.8 to i64
  %arrayidx33.prol.8 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.8
  %647 = load float, float* %arrayidx33.prol.8, align 4
  %mul34.prol.8 = fmul float %645, %647
  %add35.prol.8 = fadd float %partial_sum.12.prol.8, %mul34.prol.8
  br label %for.inc.prol.8

for.inc.prol.8:                                   ; preds = %if.end26.prol.8, %for.body16.prol.8
  %partial_sum.2.prol.8 = phi float [ %add35.prol.8, %if.end26.prol.8 ], [ %partial_sum.12.prol.8, %for.body16.prol.8 ]
  %indvars.iv.next.prol.8 = add nuw nsw i64 %indvars.iv.prol.8, 1
  %lftr.wideiv.prol.8 = trunc i64 %indvars.iv.next.prol.8 to i32
  %exitcond.prol.8 = icmp eq i32 %lftr.wideiv.prol.8, %kern_width
  br i1 %exitcond.prol.8, label %for.inc36.prol.8.loopexit, label %for.body16.prol.8, !llvm.loop !1

for.inc36.prol.8.loopexit:                        ; preds = %for.inc.prol.8
  %partial_sum.2.prol.8.lcssa = phi float [ %partial_sum.2.prol.8, %for.inc.prol.8 ]
  br label %for.inc36.prol.8

for.inc36.prol.8:                                 ; preds = %for.inc36.prol.8.loopexit, %for.body10.prol.8
  %partial_sum.3.prol.8 = phi float [ %partial_sum.05.prol.8, %for.body10.prol.8 ], [ %partial_sum.2.prol.8.lcssa, %for.inc36.prol.8.loopexit ]
  %inc37.prol.8 = add nuw nsw i32 %ki.06.prol.8, 1
  %exitcond19.prol.8 = icmp eq i32 %inc37.prol.8, %kern_height
  br i1 %exitcond19.prol.8, label %for.end38.prol.8.loopexit, label %for.body10.prol.8, !llvm.loop !3

for.end38.prol.8.loopexit:                        ; preds = %for.inc36.prol.8
  %partial_sum.3.prol.8.lcssa = phi float [ %partial_sum.3.prol.8, %for.inc36.prol.8 ]
  br label %for.end38.prol.8

for.end38.prol.8:                                 ; preds = %for.end38.prol.8.loopexit, %for.cond8.preheader.prol.8
  %partial_sum.0.lcssa.prol.8 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.8 ], [ %partial_sum.3.prol.8.lcssa, %for.end38.prol.8.loopexit ]
  br i1 %tobool39, label %if.else.prol.8, label %if.then40.prol.8

if.then40.prol.8:                                 ; preds = %for.end38.prol.8
  %cmp41.prol.8 = fcmp olt float %partial_sum.0.lcssa.prol.8, 0.000000e+00
  %sub42.prol.8 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.8
  %cond.prol.8 = select i1 %cmp41.prol.8, float %sub42.prol.8, float %partial_sum.0.lcssa.prol.8
  %conv.prol.8 = fptoui float %cond.prol.8 to i8
  %conv43.prol.8 = uitofp i8 %conv.prol.8 to float
  %648 = add nsw i64 %indvars.iv20.prol.8, %642
  %arrayidx47.prol.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %648
  store float %conv43.prol.8, float* %arrayidx47.prol.8, align 4
  br label %for.inc53.prol.8

if.else.prol.8:                                   ; preds = %for.end38.prol.8
  %649 = add nsw i64 %indvars.iv20.prol.8, %641
  %arrayidx51.prol.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %649
  store float %partial_sum.0.lcssa.prol.8, float* %arrayidx51.prol.8, align 4
  br label %for.inc53.prol.8

for.inc53.prol.8:                                 ; preds = %if.else.prol.8, %if.then40.prol.8
  %inc54.prol.8 = add nsw i32 %in_j.011.prol.8, 1
  %indvars.iv.next21.prol.8 = add nuw nsw i64 %indvars.iv20.prol.8, 1
  %prol.iter.sub.8 = add i32 %prol.iter.8, -1
  %prol.iter.cmp.8 = icmp eq i32 %prol.iter.sub.8, 0
  br i1 %prol.iter.cmp.8, label %for.cond8.preheader.lr.ph.split.8.loopexit, label %for.cond8.preheader.prol.8, !llvm.loop !4

for.cond8.preheader.lr.ph.split.8.loopexit:       ; preds = %for.inc53.prol.8
  %indvars.iv.next21.prol.8.lcssa = phi i64 [ %indvars.iv.next21.prol.8, %for.inc53.prol.8 ]
  %inc54.prol.8.lcssa = phi i32 [ %inc54.prol.8, %for.inc53.prol.8 ]
  br label %for.cond8.preheader.lr.ph.split.8

for.cond8.preheader.lr.ph.split.8:                ; preds = %for.cond8.preheader.lr.ph.split.8.loopexit, %for.cond8.preheader.lr.ph.8
  %indvars.iv20.unr.8 = phi i64 [ 0, %for.cond8.preheader.lr.ph.8 ], [ %indvars.iv.next21.prol.8.lcssa, %for.cond8.preheader.lr.ph.split.8.loopexit ]
  %in_j.011.unr.8 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.8 ], [ %inc54.prol.8.lcssa, %for.cond8.preheader.lr.ph.split.8.loopexit ]
  br i1 %79, label %for.inc57.8, label %for.cond8.preheader.8.preheader

for.cond8.preheader.8.preheader:                  ; preds = %for.cond8.preheader.lr.ph.split.8
  br label %for.cond8.preheader.8

for.cond8.preheader.8:                            ; preds = %for.cond8.preheader.8.preheader, %for.inc53.7.8
  %indvars.iv20.8 = phi i64 [ %indvars.iv.next21.7.8, %for.inc53.7.8 ], [ %indvars.iv20.unr.8, %for.cond8.preheader.8.preheader ]
  %in_j.011.8 = phi i32 [ %inc54.7.8, %for.inc53.7.8 ], [ %in_j.011.unr.8, %for.cond8.preheader.8.preheader ]
  br i1 %cmp94, label %for.end38.8, label %for.body10.8.preheader

for.body10.8.preheader:                           ; preds = %for.cond8.preheader.8
  br label %for.body10.8

for.body10.8:                                     ; preds = %for.body10.8.preheader, %for.inc36.8
  %ki.06.8 = phi i32 [ %inc37.8, %for.inc36.8 ], [ 0, %for.body10.8.preheader ]
  %partial_sum.05.8 = phi float [ %partial_sum.3.8, %for.inc36.8 ], [ 0.000000e+00, %for.body10.8.preheader ]
  %add.8 = add nsw i32 %ki.06.8, %inc58.7
  %notlhs.8 = icmp slt i32 %add.8, 0
  %notrhs.8 = icmp uge i32 %add.8, %img_height
  %.not.8 = or i1 %notrhs.8, %notlhs.8
  %brmerge.8 = or i1 %.not.8, %cmp151.not.8
  br i1 %brmerge.8, label %for.inc36.8, label %for.body16.lr.ph.8

for.body16.lr.ph.8:                               ; preds = %for.body10.8
  %mul.8 = shl i32 %add.8, 7
  %mul30.8 = mul i32 %ki.06.8, %kern_width
  br label %for.body16.8

for.body16.8:                                     ; preds = %for.inc.8, %for.body16.lr.ph.8
  %indvars.iv.8 = phi i64 [ 0, %for.body16.lr.ph.8 ], [ %indvars.iv.next.8, %for.inc.8 ]
  %partial_sum.12.8 = phi float [ %partial_sum.05.8, %for.body16.lr.ph.8 ], [ %partial_sum.2.8, %for.inc.8 ]
  %650 = trunc i64 %indvars.iv.8 to i32
  %add17.8 = add nsw i32 %650, %in_j.011.8
  %cmp18.8 = icmp sgt i32 %add17.8, -1
  %cmp21.8 = icmp ult i32 %add17.8, %img_width
  %651 = and i1 %cmp18.8, %cmp21.8
  br i1 %651, label %if.end26.8, label %for.inc.8

if.end26.8:                                       ; preds = %for.body16.8
  %add29.8 = add nsw i32 %add17.8, %mul.8
  %idxprom.8 = sext i32 %add29.8 to i64
  %arrayidx.8 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.8
  %652 = load float, float* %arrayidx.8, align 4
  %653 = trunc i64 %indvars.iv.8 to i32
  %add31.8 = add i32 %653, %mul30.8
  %idxprom32.8 = zext i32 %add31.8 to i64
  %arrayidx33.8 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.8
  %654 = load float, float* %arrayidx33.8, align 4
  %mul34.8 = fmul float %652, %654
  %add35.8 = fadd float %partial_sum.12.8, %mul34.8
  br label %for.inc.8

for.inc.8:                                        ; preds = %if.end26.8, %for.body16.8
  %partial_sum.2.8 = phi float [ %add35.8, %if.end26.8 ], [ %partial_sum.12.8, %for.body16.8 ]
  %indvars.iv.next.8 = add nuw nsw i64 %indvars.iv.8, 1
  %lftr.wideiv.8 = trunc i64 %indvars.iv.next.8 to i32
  %exitcond.8 = icmp eq i32 %lftr.wideiv.8, %kern_width
  br i1 %exitcond.8, label %for.inc36.8.loopexit, label %for.body16.8, !llvm.loop !1

for.inc36.8.loopexit:                             ; preds = %for.inc.8
  %partial_sum.2.8.lcssa = phi float [ %partial_sum.2.8, %for.inc.8 ]
  br label %for.inc36.8

for.inc36.8:                                      ; preds = %for.inc36.8.loopexit, %for.body10.8
  %partial_sum.3.8 = phi float [ %partial_sum.05.8, %for.body10.8 ], [ %partial_sum.2.8.lcssa, %for.inc36.8.loopexit ]
  %inc37.8 = add nuw nsw i32 %ki.06.8, 1
  %exitcond19.8 = icmp eq i32 %inc37.8, %kern_height
  br i1 %exitcond19.8, label %for.end38.8.loopexit, label %for.body10.8, !llvm.loop !3

for.end38.8.loopexit:                             ; preds = %for.inc36.8
  %partial_sum.3.8.lcssa = phi float [ %partial_sum.3.8, %for.inc36.8 ]
  br label %for.end38.8

for.end38.8:                                      ; preds = %for.end38.8.loopexit, %for.cond8.preheader.8
  %partial_sum.0.lcssa.8 = phi float [ 0.000000e+00, %for.cond8.preheader.8 ], [ %partial_sum.3.8.lcssa, %for.end38.8.loopexit ]
  br i1 %tobool39, label %if.else.8, label %if.then40.8

if.then40.8:                                      ; preds = %for.end38.8
  %cmp41.8 = fcmp olt float %partial_sum.0.lcssa.8, 0.000000e+00
  %sub42.8 = fsub float -0.000000e+00, %partial_sum.0.lcssa.8
  %cond.8 = select i1 %cmp41.8, float %sub42.8, float %partial_sum.0.lcssa.8
  %conv.8 = fptoui float %cond.8 to i8
  %conv43.8 = uitofp i8 %conv.8 to float
  %655 = add nsw i64 %indvars.iv20.8, %642
  %arrayidx47.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %655
  store float %conv43.8, float* %arrayidx47.8, align 4
  br label %for.inc53.8

if.else.8:                                        ; preds = %for.end38.8
  %656 = add nsw i64 %indvars.iv20.8, %641
  %arrayidx51.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %656
  store float %partial_sum.0.lcssa.8, float* %arrayidx51.8, align 4
  br label %for.inc53.8

for.inc53.8:                                      ; preds = %if.else.8, %if.then40.8
  %inc54.8 = add nsw i32 %in_j.011.8, 1
  %indvars.iv.next21.8 = add nuw nsw i64 %indvars.iv20.8, 1
  br i1 %cmp94, label %for.end38.1.8, label %for.body10.1.8.preheader

for.body10.1.8.preheader:                         ; preds = %for.inc53.8
  br label %for.body10.1.8

for.body10.1.8:                                   ; preds = %for.body10.1.8.preheader, %for.inc36.1.8
  %ki.06.1.8 = phi i32 [ %inc37.1.8, %for.inc36.1.8 ], [ 0, %for.body10.1.8.preheader ]
  %partial_sum.05.1.8 = phi float [ %partial_sum.3.1.8, %for.inc36.1.8 ], [ 0.000000e+00, %for.body10.1.8.preheader ]
  %add.1.8 = add nsw i32 %ki.06.1.8, %inc58.7
  %notlhs.1.8 = icmp slt i32 %add.1.8, 0
  %notrhs.1.8 = icmp uge i32 %add.1.8, %img_height
  %.not.1.8 = or i1 %notrhs.1.8, %notlhs.1.8
  %brmerge.1.8 = or i1 %.not.1.8, %cmp151.not.1.8
  br i1 %brmerge.1.8, label %for.inc36.1.8, label %for.body16.lr.ph.1.8

for.body16.lr.ph.1.8:                             ; preds = %for.body10.1.8
  %mul.1.8 = shl i32 %add.1.8, 7
  %mul30.1.8 = mul i32 %ki.06.1.8, %kern_width
  br label %for.body16.1.8

for.body16.1.8:                                   ; preds = %for.inc.1.8, %for.body16.lr.ph.1.8
  %indvars.iv.1.8 = phi i64 [ 0, %for.body16.lr.ph.1.8 ], [ %indvars.iv.next.1.8, %for.inc.1.8 ]
  %partial_sum.12.1.8 = phi float [ %partial_sum.05.1.8, %for.body16.lr.ph.1.8 ], [ %partial_sum.2.1.8, %for.inc.1.8 ]
  %657 = trunc i64 %indvars.iv.1.8 to i32
  %add17.1.8 = add nsw i32 %657, %inc54.8
  %cmp18.1.8 = icmp sgt i32 %add17.1.8, -1
  %cmp21.1.8 = icmp ult i32 %add17.1.8, %img_width
  %658 = and i1 %cmp18.1.8, %cmp21.1.8
  br i1 %658, label %if.end26.1.8, label %for.inc.1.8

if.end26.1.8:                                     ; preds = %for.body16.1.8
  %add29.1.8 = add nsw i32 %add17.1.8, %mul.1.8
  %idxprom.1.8 = sext i32 %add29.1.8 to i64
  %arrayidx.1.8 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.8
  %659 = load float, float* %arrayidx.1.8, align 4
  %660 = trunc i64 %indvars.iv.1.8 to i32
  %add31.1.8 = add i32 %660, %mul30.1.8
  %idxprom32.1.8 = zext i32 %add31.1.8 to i64
  %arrayidx33.1.8 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.8
  %661 = load float, float* %arrayidx33.1.8, align 4
  %mul34.1.8 = fmul float %659, %661
  %add35.1.8 = fadd float %partial_sum.12.1.8, %mul34.1.8
  br label %for.inc.1.8

for.inc.1.8:                                      ; preds = %if.end26.1.8, %for.body16.1.8
  %partial_sum.2.1.8 = phi float [ %add35.1.8, %if.end26.1.8 ], [ %partial_sum.12.1.8, %for.body16.1.8 ]
  %indvars.iv.next.1.8 = add nuw nsw i64 %indvars.iv.1.8, 1
  %lftr.wideiv.1.8 = trunc i64 %indvars.iv.next.1.8 to i32
  %exitcond.1.8 = icmp eq i32 %lftr.wideiv.1.8, %kern_width
  br i1 %exitcond.1.8, label %for.inc36.1.8.loopexit, label %for.body16.1.8, !llvm.loop !1

for.inc36.1.8.loopexit:                           ; preds = %for.inc.1.8
  %partial_sum.2.1.8.lcssa = phi float [ %partial_sum.2.1.8, %for.inc.1.8 ]
  br label %for.inc36.1.8

for.inc36.1.8:                                    ; preds = %for.inc36.1.8.loopexit, %for.body10.1.8
  %partial_sum.3.1.8 = phi float [ %partial_sum.05.1.8, %for.body10.1.8 ], [ %partial_sum.2.1.8.lcssa, %for.inc36.1.8.loopexit ]
  %inc37.1.8 = add nuw nsw i32 %ki.06.1.8, 1
  %exitcond19.1.8 = icmp eq i32 %inc37.1.8, %kern_height
  br i1 %exitcond19.1.8, label %for.end38.1.8.loopexit, label %for.body10.1.8, !llvm.loop !3

for.end38.1.8.loopexit:                           ; preds = %for.inc36.1.8
  %partial_sum.3.1.8.lcssa = phi float [ %partial_sum.3.1.8, %for.inc36.1.8 ]
  br label %for.end38.1.8

for.end38.1.8:                                    ; preds = %for.end38.1.8.loopexit, %for.inc53.8
  %partial_sum.0.lcssa.1.8 = phi float [ 0.000000e+00, %for.inc53.8 ], [ %partial_sum.3.1.8.lcssa, %for.end38.1.8.loopexit ]
  br i1 %tobool39, label %if.else.1.8, label %if.then40.1.8

if.then40.1.8:                                    ; preds = %for.end38.1.8
  %cmp41.1.8 = fcmp olt float %partial_sum.0.lcssa.1.8, 0.000000e+00
  %sub42.1.8 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.8
  %cond.1.8 = select i1 %cmp41.1.8, float %sub42.1.8, float %partial_sum.0.lcssa.1.8
  %conv.1.8 = fptoui float %cond.1.8 to i8
  %conv43.1.8 = uitofp i8 %conv.1.8 to float
  %662 = add nsw i64 %indvars.iv.next21.8, %642
  %arrayidx47.1.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %662
  store float %conv43.1.8, float* %arrayidx47.1.8, align 4
  br label %for.inc53.1.8

if.else.1.8:                                      ; preds = %for.end38.1.8
  %663 = add nsw i64 %indvars.iv.next21.8, %641
  %arrayidx51.1.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %663
  store float %partial_sum.0.lcssa.1.8, float* %arrayidx51.1.8, align 4
  br label %for.inc53.1.8

for.inc53.1.8:                                    ; preds = %if.else.1.8, %if.then40.1.8
  %inc54.1.8 = add nsw i32 %in_j.011.8, 2
  %indvars.iv.next21.1.8 = add nsw i64 %indvars.iv20.8, 2
  br i1 %cmp94, label %for.end38.2.8, label %for.body10.2.8.preheader

for.body10.2.8.preheader:                         ; preds = %for.inc53.1.8
  br label %for.body10.2.8

for.body10.2.8:                                   ; preds = %for.body10.2.8.preheader, %for.inc36.2.8
  %ki.06.2.8 = phi i32 [ %inc37.2.8, %for.inc36.2.8 ], [ 0, %for.body10.2.8.preheader ]
  %partial_sum.05.2.8 = phi float [ %partial_sum.3.2.8, %for.inc36.2.8 ], [ 0.000000e+00, %for.body10.2.8.preheader ]
  %add.2.8 = add nsw i32 %ki.06.2.8, %inc58.7
  %notlhs.2.8 = icmp slt i32 %add.2.8, 0
  %notrhs.2.8 = icmp uge i32 %add.2.8, %img_height
  %.not.2.8 = or i1 %notrhs.2.8, %notlhs.2.8
  %brmerge.2.8 = or i1 %.not.2.8, %cmp151.not.2.8
  br i1 %brmerge.2.8, label %for.inc36.2.8, label %for.body16.lr.ph.2.8

for.body16.lr.ph.2.8:                             ; preds = %for.body10.2.8
  %mul.2.8 = shl i32 %add.2.8, 7
  %mul30.2.8 = mul i32 %ki.06.2.8, %kern_width
  br label %for.body16.2.8

for.body16.2.8:                                   ; preds = %for.inc.2.8, %for.body16.lr.ph.2.8
  %indvars.iv.2.8 = phi i64 [ 0, %for.body16.lr.ph.2.8 ], [ %indvars.iv.next.2.8, %for.inc.2.8 ]
  %partial_sum.12.2.8 = phi float [ %partial_sum.05.2.8, %for.body16.lr.ph.2.8 ], [ %partial_sum.2.2.8, %for.inc.2.8 ]
  %664 = trunc i64 %indvars.iv.2.8 to i32
  %add17.2.8 = add nsw i32 %664, %inc54.1.8
  %cmp18.2.8 = icmp sgt i32 %add17.2.8, -1
  %cmp21.2.8 = icmp ult i32 %add17.2.8, %img_width
  %665 = and i1 %cmp18.2.8, %cmp21.2.8
  br i1 %665, label %if.end26.2.8, label %for.inc.2.8

if.end26.2.8:                                     ; preds = %for.body16.2.8
  %add29.2.8 = add nsw i32 %add17.2.8, %mul.2.8
  %idxprom.2.8 = sext i32 %add29.2.8 to i64
  %arrayidx.2.8 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.8
  %666 = load float, float* %arrayidx.2.8, align 4
  %667 = trunc i64 %indvars.iv.2.8 to i32
  %add31.2.8 = add i32 %667, %mul30.2.8
  %idxprom32.2.8 = zext i32 %add31.2.8 to i64
  %arrayidx33.2.8 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.8
  %668 = load float, float* %arrayidx33.2.8, align 4
  %mul34.2.8 = fmul float %666, %668
  %add35.2.8 = fadd float %partial_sum.12.2.8, %mul34.2.8
  br label %for.inc.2.8

for.inc.2.8:                                      ; preds = %if.end26.2.8, %for.body16.2.8
  %partial_sum.2.2.8 = phi float [ %add35.2.8, %if.end26.2.8 ], [ %partial_sum.12.2.8, %for.body16.2.8 ]
  %indvars.iv.next.2.8 = add nuw nsw i64 %indvars.iv.2.8, 1
  %lftr.wideiv.2.8 = trunc i64 %indvars.iv.next.2.8 to i32
  %exitcond.2.8 = icmp eq i32 %lftr.wideiv.2.8, %kern_width
  br i1 %exitcond.2.8, label %for.inc36.2.8.loopexit, label %for.body16.2.8, !llvm.loop !1

for.inc36.2.8.loopexit:                           ; preds = %for.inc.2.8
  %partial_sum.2.2.8.lcssa = phi float [ %partial_sum.2.2.8, %for.inc.2.8 ]
  br label %for.inc36.2.8

for.inc36.2.8:                                    ; preds = %for.inc36.2.8.loopexit, %for.body10.2.8
  %partial_sum.3.2.8 = phi float [ %partial_sum.05.2.8, %for.body10.2.8 ], [ %partial_sum.2.2.8.lcssa, %for.inc36.2.8.loopexit ]
  %inc37.2.8 = add nuw nsw i32 %ki.06.2.8, 1
  %exitcond19.2.8 = icmp eq i32 %inc37.2.8, %kern_height
  br i1 %exitcond19.2.8, label %for.end38.2.8.loopexit, label %for.body10.2.8, !llvm.loop !3

for.end38.2.8.loopexit:                           ; preds = %for.inc36.2.8
  %partial_sum.3.2.8.lcssa = phi float [ %partial_sum.3.2.8, %for.inc36.2.8 ]
  br label %for.end38.2.8

for.end38.2.8:                                    ; preds = %for.end38.2.8.loopexit, %for.inc53.1.8
  %partial_sum.0.lcssa.2.8 = phi float [ 0.000000e+00, %for.inc53.1.8 ], [ %partial_sum.3.2.8.lcssa, %for.end38.2.8.loopexit ]
  br i1 %tobool39, label %if.else.2.8, label %if.then40.2.8

if.then40.2.8:                                    ; preds = %for.end38.2.8
  %cmp41.2.8 = fcmp olt float %partial_sum.0.lcssa.2.8, 0.000000e+00
  %sub42.2.8 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.8
  %cond.2.8 = select i1 %cmp41.2.8, float %sub42.2.8, float %partial_sum.0.lcssa.2.8
  %conv.2.8 = fptoui float %cond.2.8 to i8
  %conv43.2.8 = uitofp i8 %conv.2.8 to float
  %669 = add nsw i64 %indvars.iv.next21.1.8, %642
  %arrayidx47.2.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %669
  store float %conv43.2.8, float* %arrayidx47.2.8, align 4
  br label %for.inc53.2.8

if.else.2.8:                                      ; preds = %for.end38.2.8
  %670 = add nsw i64 %indvars.iv.next21.1.8, %641
  %arrayidx51.2.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %670
  store float %partial_sum.0.lcssa.2.8, float* %arrayidx51.2.8, align 4
  br label %for.inc53.2.8

for.inc53.2.8:                                    ; preds = %if.else.2.8, %if.then40.2.8
  %inc54.2.8 = add nsw i32 %in_j.011.8, 3
  %indvars.iv.next21.2.8 = add nsw i64 %indvars.iv20.8, 3
  br i1 %cmp94, label %for.end38.3.8, label %for.body10.3.8.preheader

for.body10.3.8.preheader:                         ; preds = %for.inc53.2.8
  br label %for.body10.3.8

for.body10.3.8:                                   ; preds = %for.body10.3.8.preheader, %for.inc36.3.8
  %ki.06.3.8 = phi i32 [ %inc37.3.8, %for.inc36.3.8 ], [ 0, %for.body10.3.8.preheader ]
  %partial_sum.05.3.8 = phi float [ %partial_sum.3.3.8, %for.inc36.3.8 ], [ 0.000000e+00, %for.body10.3.8.preheader ]
  %add.3.8 = add nsw i32 %ki.06.3.8, %inc58.7
  %notlhs.3.8 = icmp slt i32 %add.3.8, 0
  %notrhs.3.8 = icmp uge i32 %add.3.8, %img_height
  %.not.3.8 = or i1 %notrhs.3.8, %notlhs.3.8
  %brmerge.3.8 = or i1 %.not.3.8, %cmp151.not.3.8
  br i1 %brmerge.3.8, label %for.inc36.3.8, label %for.body16.lr.ph.3.8

for.body16.lr.ph.3.8:                             ; preds = %for.body10.3.8
  %mul.3.8 = shl i32 %add.3.8, 7
  %mul30.3.8 = mul i32 %ki.06.3.8, %kern_width
  br label %for.body16.3.8

for.body16.3.8:                                   ; preds = %for.inc.3.8, %for.body16.lr.ph.3.8
  %indvars.iv.3.8 = phi i64 [ 0, %for.body16.lr.ph.3.8 ], [ %indvars.iv.next.3.8, %for.inc.3.8 ]
  %partial_sum.12.3.8 = phi float [ %partial_sum.05.3.8, %for.body16.lr.ph.3.8 ], [ %partial_sum.2.3.8, %for.inc.3.8 ]
  %671 = trunc i64 %indvars.iv.3.8 to i32
  %add17.3.8 = add nsw i32 %671, %inc54.2.8
  %cmp18.3.8 = icmp sgt i32 %add17.3.8, -1
  %cmp21.3.8 = icmp ult i32 %add17.3.8, %img_width
  %672 = and i1 %cmp18.3.8, %cmp21.3.8
  br i1 %672, label %if.end26.3.8, label %for.inc.3.8

if.end26.3.8:                                     ; preds = %for.body16.3.8
  %add29.3.8 = add nsw i32 %add17.3.8, %mul.3.8
  %idxprom.3.8 = sext i32 %add29.3.8 to i64
  %arrayidx.3.8 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.8
  %673 = load float, float* %arrayidx.3.8, align 4
  %674 = trunc i64 %indvars.iv.3.8 to i32
  %add31.3.8 = add i32 %674, %mul30.3.8
  %idxprom32.3.8 = zext i32 %add31.3.8 to i64
  %arrayidx33.3.8 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.8
  %675 = load float, float* %arrayidx33.3.8, align 4
  %mul34.3.8 = fmul float %673, %675
  %add35.3.8 = fadd float %partial_sum.12.3.8, %mul34.3.8
  br label %for.inc.3.8

for.inc.3.8:                                      ; preds = %if.end26.3.8, %for.body16.3.8
  %partial_sum.2.3.8 = phi float [ %add35.3.8, %if.end26.3.8 ], [ %partial_sum.12.3.8, %for.body16.3.8 ]
  %indvars.iv.next.3.8 = add nuw nsw i64 %indvars.iv.3.8, 1
  %lftr.wideiv.3.8 = trunc i64 %indvars.iv.next.3.8 to i32
  %exitcond.3.8 = icmp eq i32 %lftr.wideiv.3.8, %kern_width
  br i1 %exitcond.3.8, label %for.inc36.3.8.loopexit, label %for.body16.3.8, !llvm.loop !1

for.inc36.3.8.loopexit:                           ; preds = %for.inc.3.8
  %partial_sum.2.3.8.lcssa = phi float [ %partial_sum.2.3.8, %for.inc.3.8 ]
  br label %for.inc36.3.8

for.inc36.3.8:                                    ; preds = %for.inc36.3.8.loopexit, %for.body10.3.8
  %partial_sum.3.3.8 = phi float [ %partial_sum.05.3.8, %for.body10.3.8 ], [ %partial_sum.2.3.8.lcssa, %for.inc36.3.8.loopexit ]
  %inc37.3.8 = add nuw nsw i32 %ki.06.3.8, 1
  %exitcond19.3.8 = icmp eq i32 %inc37.3.8, %kern_height
  br i1 %exitcond19.3.8, label %for.end38.3.8.loopexit, label %for.body10.3.8, !llvm.loop !3

for.end38.3.8.loopexit:                           ; preds = %for.inc36.3.8
  %partial_sum.3.3.8.lcssa = phi float [ %partial_sum.3.3.8, %for.inc36.3.8 ]
  br label %for.end38.3.8

for.end38.3.8:                                    ; preds = %for.end38.3.8.loopexit, %for.inc53.2.8
  %partial_sum.0.lcssa.3.8 = phi float [ 0.000000e+00, %for.inc53.2.8 ], [ %partial_sum.3.3.8.lcssa, %for.end38.3.8.loopexit ]
  br i1 %tobool39, label %if.else.3.8, label %if.then40.3.8

if.then40.3.8:                                    ; preds = %for.end38.3.8
  %cmp41.3.8 = fcmp olt float %partial_sum.0.lcssa.3.8, 0.000000e+00
  %sub42.3.8 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.8
  %cond.3.8 = select i1 %cmp41.3.8, float %sub42.3.8, float %partial_sum.0.lcssa.3.8
  %conv.3.8 = fptoui float %cond.3.8 to i8
  %conv43.3.8 = uitofp i8 %conv.3.8 to float
  %676 = add nsw i64 %indvars.iv.next21.2.8, %642
  %arrayidx47.3.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %676
  store float %conv43.3.8, float* %arrayidx47.3.8, align 4
  br label %for.inc53.3.8

if.else.3.8:                                      ; preds = %for.end38.3.8
  %677 = add nsw i64 %indvars.iv.next21.2.8, %641
  %arrayidx51.3.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %677
  store float %partial_sum.0.lcssa.3.8, float* %arrayidx51.3.8, align 4
  br label %for.inc53.3.8

for.inc53.3.8:                                    ; preds = %if.else.3.8, %if.then40.3.8
  %inc54.3.8 = add nsw i32 %in_j.011.8, 4
  %indvars.iv.next21.3.8 = add nsw i64 %indvars.iv20.8, 4
  br i1 %cmp94, label %for.end38.4.8, label %for.body10.4.8.preheader

for.body10.4.8.preheader:                         ; preds = %for.inc53.3.8
  br label %for.body10.4.8

for.body10.4.8:                                   ; preds = %for.body10.4.8.preheader, %for.inc36.4.8
  %ki.06.4.8 = phi i32 [ %inc37.4.8, %for.inc36.4.8 ], [ 0, %for.body10.4.8.preheader ]
  %partial_sum.05.4.8 = phi float [ %partial_sum.3.4.8, %for.inc36.4.8 ], [ 0.000000e+00, %for.body10.4.8.preheader ]
  %add.4.8 = add nsw i32 %ki.06.4.8, %inc58.7
  %notlhs.4.8 = icmp slt i32 %add.4.8, 0
  %notrhs.4.8 = icmp uge i32 %add.4.8, %img_height
  %.not.4.8 = or i1 %notrhs.4.8, %notlhs.4.8
  %brmerge.4.8 = or i1 %.not.4.8, %cmp151.not.4.8
  br i1 %brmerge.4.8, label %for.inc36.4.8, label %for.body16.lr.ph.4.8

for.body16.lr.ph.4.8:                             ; preds = %for.body10.4.8
  %mul.4.8 = shl i32 %add.4.8, 7
  %mul30.4.8 = mul i32 %ki.06.4.8, %kern_width
  br label %for.body16.4.8

for.body16.4.8:                                   ; preds = %for.inc.4.8, %for.body16.lr.ph.4.8
  %indvars.iv.4.8 = phi i64 [ 0, %for.body16.lr.ph.4.8 ], [ %indvars.iv.next.4.8, %for.inc.4.8 ]
  %partial_sum.12.4.8 = phi float [ %partial_sum.05.4.8, %for.body16.lr.ph.4.8 ], [ %partial_sum.2.4.8, %for.inc.4.8 ]
  %678 = trunc i64 %indvars.iv.4.8 to i32
  %add17.4.8 = add nsw i32 %678, %inc54.3.8
  %cmp18.4.8 = icmp sgt i32 %add17.4.8, -1
  %cmp21.4.8 = icmp ult i32 %add17.4.8, %img_width
  %679 = and i1 %cmp18.4.8, %cmp21.4.8
  br i1 %679, label %if.end26.4.8, label %for.inc.4.8

if.end26.4.8:                                     ; preds = %for.body16.4.8
  %add29.4.8 = add nsw i32 %add17.4.8, %mul.4.8
  %idxprom.4.8 = sext i32 %add29.4.8 to i64
  %arrayidx.4.8 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.8
  %680 = load float, float* %arrayidx.4.8, align 4
  %681 = trunc i64 %indvars.iv.4.8 to i32
  %add31.4.8 = add i32 %681, %mul30.4.8
  %idxprom32.4.8 = zext i32 %add31.4.8 to i64
  %arrayidx33.4.8 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.8
  %682 = load float, float* %arrayidx33.4.8, align 4
  %mul34.4.8 = fmul float %680, %682
  %add35.4.8 = fadd float %partial_sum.12.4.8, %mul34.4.8
  br label %for.inc.4.8

for.inc.4.8:                                      ; preds = %if.end26.4.8, %for.body16.4.8
  %partial_sum.2.4.8 = phi float [ %add35.4.8, %if.end26.4.8 ], [ %partial_sum.12.4.8, %for.body16.4.8 ]
  %indvars.iv.next.4.8 = add nuw nsw i64 %indvars.iv.4.8, 1
  %lftr.wideiv.4.8 = trunc i64 %indvars.iv.next.4.8 to i32
  %exitcond.4.8 = icmp eq i32 %lftr.wideiv.4.8, %kern_width
  br i1 %exitcond.4.8, label %for.inc36.4.8.loopexit, label %for.body16.4.8, !llvm.loop !1

for.inc36.4.8.loopexit:                           ; preds = %for.inc.4.8
  %partial_sum.2.4.8.lcssa = phi float [ %partial_sum.2.4.8, %for.inc.4.8 ]
  br label %for.inc36.4.8

for.inc36.4.8:                                    ; preds = %for.inc36.4.8.loopexit, %for.body10.4.8
  %partial_sum.3.4.8 = phi float [ %partial_sum.05.4.8, %for.body10.4.8 ], [ %partial_sum.2.4.8.lcssa, %for.inc36.4.8.loopexit ]
  %inc37.4.8 = add nuw nsw i32 %ki.06.4.8, 1
  %exitcond19.4.8 = icmp eq i32 %inc37.4.8, %kern_height
  br i1 %exitcond19.4.8, label %for.end38.4.8.loopexit, label %for.body10.4.8, !llvm.loop !3

for.end38.4.8.loopexit:                           ; preds = %for.inc36.4.8
  %partial_sum.3.4.8.lcssa = phi float [ %partial_sum.3.4.8, %for.inc36.4.8 ]
  br label %for.end38.4.8

for.end38.4.8:                                    ; preds = %for.end38.4.8.loopexit, %for.inc53.3.8
  %partial_sum.0.lcssa.4.8 = phi float [ 0.000000e+00, %for.inc53.3.8 ], [ %partial_sum.3.4.8.lcssa, %for.end38.4.8.loopexit ]
  br i1 %tobool39, label %if.else.4.8, label %if.then40.4.8

if.then40.4.8:                                    ; preds = %for.end38.4.8
  %cmp41.4.8 = fcmp olt float %partial_sum.0.lcssa.4.8, 0.000000e+00
  %sub42.4.8 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.8
  %cond.4.8 = select i1 %cmp41.4.8, float %sub42.4.8, float %partial_sum.0.lcssa.4.8
  %conv.4.8 = fptoui float %cond.4.8 to i8
  %conv43.4.8 = uitofp i8 %conv.4.8 to float
  %683 = add nsw i64 %indvars.iv.next21.3.8, %642
  %arrayidx47.4.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %683
  store float %conv43.4.8, float* %arrayidx47.4.8, align 4
  br label %for.inc53.4.8

if.else.4.8:                                      ; preds = %for.end38.4.8
  %684 = add nsw i64 %indvars.iv.next21.3.8, %641
  %arrayidx51.4.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %684
  store float %partial_sum.0.lcssa.4.8, float* %arrayidx51.4.8, align 4
  br label %for.inc53.4.8

for.inc53.4.8:                                    ; preds = %if.else.4.8, %if.then40.4.8
  %inc54.4.8 = add nsw i32 %in_j.011.8, 5
  %indvars.iv.next21.4.8 = add nsw i64 %indvars.iv20.8, 5
  br i1 %cmp94, label %for.end38.5.8, label %for.body10.5.8.preheader

for.body10.5.8.preheader:                         ; preds = %for.inc53.4.8
  br label %for.body10.5.8

for.body10.5.8:                                   ; preds = %for.body10.5.8.preheader, %for.inc36.5.8
  %ki.06.5.8 = phi i32 [ %inc37.5.8, %for.inc36.5.8 ], [ 0, %for.body10.5.8.preheader ]
  %partial_sum.05.5.8 = phi float [ %partial_sum.3.5.8, %for.inc36.5.8 ], [ 0.000000e+00, %for.body10.5.8.preheader ]
  %add.5.8 = add nsw i32 %ki.06.5.8, %inc58.7
  %notlhs.5.8 = icmp slt i32 %add.5.8, 0
  %notrhs.5.8 = icmp uge i32 %add.5.8, %img_height
  %.not.5.8 = or i1 %notrhs.5.8, %notlhs.5.8
  %brmerge.5.8 = or i1 %.not.5.8, %cmp151.not.5.8
  br i1 %brmerge.5.8, label %for.inc36.5.8, label %for.body16.lr.ph.5.8

for.body16.lr.ph.5.8:                             ; preds = %for.body10.5.8
  %mul.5.8 = shl i32 %add.5.8, 7
  %mul30.5.8 = mul i32 %ki.06.5.8, %kern_width
  br label %for.body16.5.8

for.body16.5.8:                                   ; preds = %for.inc.5.8, %for.body16.lr.ph.5.8
  %indvars.iv.5.8 = phi i64 [ 0, %for.body16.lr.ph.5.8 ], [ %indvars.iv.next.5.8, %for.inc.5.8 ]
  %partial_sum.12.5.8 = phi float [ %partial_sum.05.5.8, %for.body16.lr.ph.5.8 ], [ %partial_sum.2.5.8, %for.inc.5.8 ]
  %685 = trunc i64 %indvars.iv.5.8 to i32
  %add17.5.8 = add nsw i32 %685, %inc54.4.8
  %cmp18.5.8 = icmp sgt i32 %add17.5.8, -1
  %cmp21.5.8 = icmp ult i32 %add17.5.8, %img_width
  %686 = and i1 %cmp18.5.8, %cmp21.5.8
  br i1 %686, label %if.end26.5.8, label %for.inc.5.8

if.end26.5.8:                                     ; preds = %for.body16.5.8
  %add29.5.8 = add nsw i32 %add17.5.8, %mul.5.8
  %idxprom.5.8 = sext i32 %add29.5.8 to i64
  %arrayidx.5.8 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.8
  %687 = load float, float* %arrayidx.5.8, align 4
  %688 = trunc i64 %indvars.iv.5.8 to i32
  %add31.5.8 = add i32 %688, %mul30.5.8
  %idxprom32.5.8 = zext i32 %add31.5.8 to i64
  %arrayidx33.5.8 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.8
  %689 = load float, float* %arrayidx33.5.8, align 4
  %mul34.5.8 = fmul float %687, %689
  %add35.5.8 = fadd float %partial_sum.12.5.8, %mul34.5.8
  br label %for.inc.5.8

for.inc.5.8:                                      ; preds = %if.end26.5.8, %for.body16.5.8
  %partial_sum.2.5.8 = phi float [ %add35.5.8, %if.end26.5.8 ], [ %partial_sum.12.5.8, %for.body16.5.8 ]
  %indvars.iv.next.5.8 = add nuw nsw i64 %indvars.iv.5.8, 1
  %lftr.wideiv.5.8 = trunc i64 %indvars.iv.next.5.8 to i32
  %exitcond.5.8 = icmp eq i32 %lftr.wideiv.5.8, %kern_width
  br i1 %exitcond.5.8, label %for.inc36.5.8.loopexit, label %for.body16.5.8, !llvm.loop !1

for.inc36.5.8.loopexit:                           ; preds = %for.inc.5.8
  %partial_sum.2.5.8.lcssa = phi float [ %partial_sum.2.5.8, %for.inc.5.8 ]
  br label %for.inc36.5.8

for.inc36.5.8:                                    ; preds = %for.inc36.5.8.loopexit, %for.body10.5.8
  %partial_sum.3.5.8 = phi float [ %partial_sum.05.5.8, %for.body10.5.8 ], [ %partial_sum.2.5.8.lcssa, %for.inc36.5.8.loopexit ]
  %inc37.5.8 = add nuw nsw i32 %ki.06.5.8, 1
  %exitcond19.5.8 = icmp eq i32 %inc37.5.8, %kern_height
  br i1 %exitcond19.5.8, label %for.end38.5.8.loopexit, label %for.body10.5.8, !llvm.loop !3

for.end38.5.8.loopexit:                           ; preds = %for.inc36.5.8
  %partial_sum.3.5.8.lcssa = phi float [ %partial_sum.3.5.8, %for.inc36.5.8 ]
  br label %for.end38.5.8

for.end38.5.8:                                    ; preds = %for.end38.5.8.loopexit, %for.inc53.4.8
  %partial_sum.0.lcssa.5.8 = phi float [ 0.000000e+00, %for.inc53.4.8 ], [ %partial_sum.3.5.8.lcssa, %for.end38.5.8.loopexit ]
  br i1 %tobool39, label %if.else.5.8, label %if.then40.5.8

if.then40.5.8:                                    ; preds = %for.end38.5.8
  %cmp41.5.8 = fcmp olt float %partial_sum.0.lcssa.5.8, 0.000000e+00
  %sub42.5.8 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.8
  %cond.5.8 = select i1 %cmp41.5.8, float %sub42.5.8, float %partial_sum.0.lcssa.5.8
  %conv.5.8 = fptoui float %cond.5.8 to i8
  %conv43.5.8 = uitofp i8 %conv.5.8 to float
  %690 = add nsw i64 %indvars.iv.next21.4.8, %642
  %arrayidx47.5.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %690
  store float %conv43.5.8, float* %arrayidx47.5.8, align 4
  br label %for.inc53.5.8

if.else.5.8:                                      ; preds = %for.end38.5.8
  %691 = add nsw i64 %indvars.iv.next21.4.8, %641
  %arrayidx51.5.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %691
  store float %partial_sum.0.lcssa.5.8, float* %arrayidx51.5.8, align 4
  br label %for.inc53.5.8

for.inc53.5.8:                                    ; preds = %if.else.5.8, %if.then40.5.8
  %inc54.5.8 = add nsw i32 %in_j.011.8, 6
  %indvars.iv.next21.5.8 = add nsw i64 %indvars.iv20.8, 6
  br i1 %cmp94, label %for.end38.6.8, label %for.body10.6.8.preheader

for.body10.6.8.preheader:                         ; preds = %for.inc53.5.8
  br label %for.body10.6.8

for.body10.6.8:                                   ; preds = %for.body10.6.8.preheader, %for.inc36.6.8
  %ki.06.6.8 = phi i32 [ %inc37.6.8, %for.inc36.6.8 ], [ 0, %for.body10.6.8.preheader ]
  %partial_sum.05.6.8 = phi float [ %partial_sum.3.6.8, %for.inc36.6.8 ], [ 0.000000e+00, %for.body10.6.8.preheader ]
  %add.6.8 = add nsw i32 %ki.06.6.8, %inc58.7
  %notlhs.6.8 = icmp slt i32 %add.6.8, 0
  %notrhs.6.8 = icmp uge i32 %add.6.8, %img_height
  %.not.6.8 = or i1 %notrhs.6.8, %notlhs.6.8
  %brmerge.6.8 = or i1 %.not.6.8, %cmp151.not.6.8
  br i1 %brmerge.6.8, label %for.inc36.6.8, label %for.body16.lr.ph.6.8

for.body16.lr.ph.6.8:                             ; preds = %for.body10.6.8
  %mul.6.8 = shl i32 %add.6.8, 7
  %mul30.6.8 = mul i32 %ki.06.6.8, %kern_width
  br label %for.body16.6.8

for.body16.6.8:                                   ; preds = %for.inc.6.8, %for.body16.lr.ph.6.8
  %indvars.iv.6.8 = phi i64 [ 0, %for.body16.lr.ph.6.8 ], [ %indvars.iv.next.6.8, %for.inc.6.8 ]
  %partial_sum.12.6.8 = phi float [ %partial_sum.05.6.8, %for.body16.lr.ph.6.8 ], [ %partial_sum.2.6.8, %for.inc.6.8 ]
  %692 = trunc i64 %indvars.iv.6.8 to i32
  %add17.6.8 = add nsw i32 %692, %inc54.5.8
  %cmp18.6.8 = icmp sgt i32 %add17.6.8, -1
  %cmp21.6.8 = icmp ult i32 %add17.6.8, %img_width
  %693 = and i1 %cmp18.6.8, %cmp21.6.8
  br i1 %693, label %if.end26.6.8, label %for.inc.6.8

if.end26.6.8:                                     ; preds = %for.body16.6.8
  %add29.6.8 = add nsw i32 %add17.6.8, %mul.6.8
  %idxprom.6.8 = sext i32 %add29.6.8 to i64
  %arrayidx.6.8 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.8
  %694 = load float, float* %arrayidx.6.8, align 4
  %695 = trunc i64 %indvars.iv.6.8 to i32
  %add31.6.8 = add i32 %695, %mul30.6.8
  %idxprom32.6.8 = zext i32 %add31.6.8 to i64
  %arrayidx33.6.8 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.8
  %696 = load float, float* %arrayidx33.6.8, align 4
  %mul34.6.8 = fmul float %694, %696
  %add35.6.8 = fadd float %partial_sum.12.6.8, %mul34.6.8
  br label %for.inc.6.8

for.inc.6.8:                                      ; preds = %if.end26.6.8, %for.body16.6.8
  %partial_sum.2.6.8 = phi float [ %add35.6.8, %if.end26.6.8 ], [ %partial_sum.12.6.8, %for.body16.6.8 ]
  %indvars.iv.next.6.8 = add nuw nsw i64 %indvars.iv.6.8, 1
  %lftr.wideiv.6.8 = trunc i64 %indvars.iv.next.6.8 to i32
  %exitcond.6.8 = icmp eq i32 %lftr.wideiv.6.8, %kern_width
  br i1 %exitcond.6.8, label %for.inc36.6.8.loopexit, label %for.body16.6.8, !llvm.loop !1

for.inc36.6.8.loopexit:                           ; preds = %for.inc.6.8
  %partial_sum.2.6.8.lcssa = phi float [ %partial_sum.2.6.8, %for.inc.6.8 ]
  br label %for.inc36.6.8

for.inc36.6.8:                                    ; preds = %for.inc36.6.8.loopexit, %for.body10.6.8
  %partial_sum.3.6.8 = phi float [ %partial_sum.05.6.8, %for.body10.6.8 ], [ %partial_sum.2.6.8.lcssa, %for.inc36.6.8.loopexit ]
  %inc37.6.8 = add nuw nsw i32 %ki.06.6.8, 1
  %exitcond19.6.8 = icmp eq i32 %inc37.6.8, %kern_height
  br i1 %exitcond19.6.8, label %for.end38.6.8.loopexit, label %for.body10.6.8, !llvm.loop !3

for.end38.6.8.loopexit:                           ; preds = %for.inc36.6.8
  %partial_sum.3.6.8.lcssa = phi float [ %partial_sum.3.6.8, %for.inc36.6.8 ]
  br label %for.end38.6.8

for.end38.6.8:                                    ; preds = %for.end38.6.8.loopexit, %for.inc53.5.8
  %partial_sum.0.lcssa.6.8 = phi float [ 0.000000e+00, %for.inc53.5.8 ], [ %partial_sum.3.6.8.lcssa, %for.end38.6.8.loopexit ]
  br i1 %tobool39, label %if.else.6.8, label %if.then40.6.8

if.then40.6.8:                                    ; preds = %for.end38.6.8
  %cmp41.6.8 = fcmp olt float %partial_sum.0.lcssa.6.8, 0.000000e+00
  %sub42.6.8 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.8
  %cond.6.8 = select i1 %cmp41.6.8, float %sub42.6.8, float %partial_sum.0.lcssa.6.8
  %conv.6.8 = fptoui float %cond.6.8 to i8
  %conv43.6.8 = uitofp i8 %conv.6.8 to float
  %697 = add nsw i64 %indvars.iv.next21.5.8, %642
  %arrayidx47.6.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %697
  store float %conv43.6.8, float* %arrayidx47.6.8, align 4
  br label %for.inc53.6.8

if.else.6.8:                                      ; preds = %for.end38.6.8
  %698 = add nsw i64 %indvars.iv.next21.5.8, %641
  %arrayidx51.6.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %698
  store float %partial_sum.0.lcssa.6.8, float* %arrayidx51.6.8, align 4
  br label %for.inc53.6.8

for.inc53.6.8:                                    ; preds = %if.else.6.8, %if.then40.6.8
  %inc54.6.8 = add nsw i32 %in_j.011.8, 7
  %indvars.iv.next21.6.8 = add nsw i64 %indvars.iv20.8, 7
  br i1 %cmp94, label %for.end38.7.8, label %for.body10.7.8.preheader

for.body10.7.8.preheader:                         ; preds = %for.inc53.6.8
  br label %for.body10.7.8

for.body10.7.8:                                   ; preds = %for.body10.7.8.preheader, %for.inc36.7.8
  %ki.06.7.8 = phi i32 [ %inc37.7.8, %for.inc36.7.8 ], [ 0, %for.body10.7.8.preheader ]
  %partial_sum.05.7.8 = phi float [ %partial_sum.3.7.8, %for.inc36.7.8 ], [ 0.000000e+00, %for.body10.7.8.preheader ]
  %add.7.8 = add nsw i32 %ki.06.7.8, %inc58.7
  %notlhs.7.8 = icmp slt i32 %add.7.8, 0
  %notrhs.7.8 = icmp uge i32 %add.7.8, %img_height
  %.not.7.8 = or i1 %notrhs.7.8, %notlhs.7.8
  %brmerge.7.8 = or i1 %.not.7.8, %cmp151.not.7.8
  br i1 %brmerge.7.8, label %for.inc36.7.8, label %for.body16.lr.ph.7.8

for.body16.lr.ph.7.8:                             ; preds = %for.body10.7.8
  %mul.7.8 = shl i32 %add.7.8, 7
  %mul30.7.8 = mul i32 %ki.06.7.8, %kern_width
  br label %for.body16.7.8

for.body16.7.8:                                   ; preds = %for.inc.7.8, %for.body16.lr.ph.7.8
  %indvars.iv.7.8 = phi i64 [ 0, %for.body16.lr.ph.7.8 ], [ %indvars.iv.next.7.8, %for.inc.7.8 ]
  %partial_sum.12.7.8 = phi float [ %partial_sum.05.7.8, %for.body16.lr.ph.7.8 ], [ %partial_sum.2.7.8, %for.inc.7.8 ]
  %699 = trunc i64 %indvars.iv.7.8 to i32
  %add17.7.8 = add nsw i32 %699, %inc54.6.8
  %cmp18.7.8 = icmp sgt i32 %add17.7.8, -1
  %cmp21.7.8 = icmp ult i32 %add17.7.8, %img_width
  %700 = and i1 %cmp18.7.8, %cmp21.7.8
  br i1 %700, label %if.end26.7.8, label %for.inc.7.8

if.end26.7.8:                                     ; preds = %for.body16.7.8
  %add29.7.8 = add nsw i32 %add17.7.8, %mul.7.8
  %idxprom.7.8 = sext i32 %add29.7.8 to i64
  %arrayidx.7.8 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.8
  %701 = load float, float* %arrayidx.7.8, align 4
  %702 = trunc i64 %indvars.iv.7.8 to i32
  %add31.7.8 = add i32 %702, %mul30.7.8
  %idxprom32.7.8 = zext i32 %add31.7.8 to i64
  %arrayidx33.7.8 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.8
  %703 = load float, float* %arrayidx33.7.8, align 4
  %mul34.7.8 = fmul float %701, %703
  %add35.7.8 = fadd float %partial_sum.12.7.8, %mul34.7.8
  br label %for.inc.7.8

for.inc.7.8:                                      ; preds = %if.end26.7.8, %for.body16.7.8
  %partial_sum.2.7.8 = phi float [ %add35.7.8, %if.end26.7.8 ], [ %partial_sum.12.7.8, %for.body16.7.8 ]
  %indvars.iv.next.7.8 = add nuw nsw i64 %indvars.iv.7.8, 1
  %lftr.wideiv.7.8 = trunc i64 %indvars.iv.next.7.8 to i32
  %exitcond.7.8 = icmp eq i32 %lftr.wideiv.7.8, %kern_width
  br i1 %exitcond.7.8, label %for.inc36.7.8.loopexit, label %for.body16.7.8, !llvm.loop !1

for.inc36.7.8.loopexit:                           ; preds = %for.inc.7.8
  %partial_sum.2.7.8.lcssa = phi float [ %partial_sum.2.7.8, %for.inc.7.8 ]
  br label %for.inc36.7.8

for.inc36.7.8:                                    ; preds = %for.inc36.7.8.loopexit, %for.body10.7.8
  %partial_sum.3.7.8 = phi float [ %partial_sum.05.7.8, %for.body10.7.8 ], [ %partial_sum.2.7.8.lcssa, %for.inc36.7.8.loopexit ]
  %inc37.7.8 = add nuw nsw i32 %ki.06.7.8, 1
  %exitcond19.7.8 = icmp eq i32 %inc37.7.8, %kern_height
  br i1 %exitcond19.7.8, label %for.end38.7.8.loopexit, label %for.body10.7.8, !llvm.loop !3

for.end38.7.8.loopexit:                           ; preds = %for.inc36.7.8
  %partial_sum.3.7.8.lcssa = phi float [ %partial_sum.3.7.8, %for.inc36.7.8 ]
  br label %for.end38.7.8

for.end38.7.8:                                    ; preds = %for.end38.7.8.loopexit, %for.inc53.6.8
  %partial_sum.0.lcssa.7.8 = phi float [ 0.000000e+00, %for.inc53.6.8 ], [ %partial_sum.3.7.8.lcssa, %for.end38.7.8.loopexit ]
  br i1 %tobool39, label %if.else.7.8, label %if.then40.7.8

if.then40.7.8:                                    ; preds = %for.end38.7.8
  %cmp41.7.8 = fcmp olt float %partial_sum.0.lcssa.7.8, 0.000000e+00
  %sub42.7.8 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.8
  %cond.7.8 = select i1 %cmp41.7.8, float %sub42.7.8, float %partial_sum.0.lcssa.7.8
  %conv.7.8 = fptoui float %cond.7.8 to i8
  %conv43.7.8 = uitofp i8 %conv.7.8 to float
  %704 = add nsw i64 %indvars.iv.next21.6.8, %642
  %arrayidx47.7.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %704
  store float %conv43.7.8, float* %arrayidx47.7.8, align 4
  br label %for.inc53.7.8

if.else.7.8:                                      ; preds = %for.end38.7.8
  %705 = add nsw i64 %indvars.iv.next21.6.8, %641
  %arrayidx51.7.8 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %705
  store float %partial_sum.0.lcssa.7.8, float* %arrayidx51.7.8, align 4
  br label %for.inc53.7.8

for.inc53.7.8:                                    ; preds = %if.else.7.8, %if.then40.7.8
  %inc54.7.8 = add nsw i32 %in_j.011.8, 8
  %indvars.iv.next21.7.8 = add nsw i64 %indvars.iv20.8, 8
  %lftr.wideiv24.7.8 = trunc i64 %indvars.iv.next21.7.8 to i32
  %exitcond25.7.8 = icmp eq i32 %lftr.wideiv24.7.8, %img_width
  br i1 %exitcond25.7.8, label %for.inc57.8.loopexit, label %for.cond8.preheader.8, !llvm.loop !5

for.inc57.8.loopexit:                             ; preds = %for.inc53.7.8
  br label %for.inc57.8

for.inc57.8:                                      ; preds = %for.inc57.8.loopexit, %for.cond8.preheader.lr.ph.split.8
  %inc58.8 = add nsw i32 %in_i.015, 9
  %indvars.iv.next27.8 = add nsw i64 %indvars.iv26, 9
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.9

for.cond8.preheader.lr.ph.9:                      ; preds = %for.inc57.8
  %706 = trunc i64 %indvars.iv.next27.8 to i32
  %mul48.9 = shl i32 %706, 7
  %707 = trunc i64 %indvars.iv.next27.8 to i32
  %mul44.9 = shl i32 %707, 7
  %708 = sext i32 %mul48.9 to i64
  %709 = sext i32 %mul44.9 to i64
  br i1 %lcmp.mod.9, label %for.cond8.preheader.lr.ph.split.9, label %for.cond8.preheader.prol.9.preheader

for.cond8.preheader.prol.9.preheader:             ; preds = %for.cond8.preheader.lr.ph.9
  br label %for.cond8.preheader.prol.9

for.cond8.preheader.prol.9:                       ; preds = %for.cond8.preheader.prol.9.preheader, %for.inc53.prol.9
  %indvars.iv20.prol.9 = phi i64 [ %indvars.iv.next21.prol.9, %for.inc53.prol.9 ], [ 0, %for.cond8.preheader.prol.9.preheader ]
  %in_j.011.prol.9 = phi i32 [ %inc54.prol.9, %for.inc53.prol.9 ], [ %sub4, %for.cond8.preheader.prol.9.preheader ]
  %prol.iter.9 = phi i32 [ %prol.iter.sub.9, %for.inc53.prol.9 ], [ %xtraiter.9, %for.cond8.preheader.prol.9.preheader ]
  br i1 %cmp94, label %for.end38.prol.9, label %for.body10.prol.9.preheader

for.body10.prol.9.preheader:                      ; preds = %for.cond8.preheader.prol.9
  br label %for.body10.prol.9

for.body10.prol.9:                                ; preds = %for.body10.prol.9.preheader, %for.inc36.prol.9
  %ki.06.prol.9 = phi i32 [ %inc37.prol.9, %for.inc36.prol.9 ], [ 0, %for.body10.prol.9.preheader ]
  %partial_sum.05.prol.9 = phi float [ %partial_sum.3.prol.9, %for.inc36.prol.9 ], [ 0.000000e+00, %for.body10.prol.9.preheader ]
  %add.prol.9 = add nsw i32 %ki.06.prol.9, %inc58.8
  %notlhs.prol.9 = icmp slt i32 %add.prol.9, 0
  %notrhs.prol.9 = icmp uge i32 %add.prol.9, %img_height
  %.not.prol.9 = or i1 %notrhs.prol.9, %notlhs.prol.9
  %brmerge.prol.9 = or i1 %.not.prol.9, %cmp151.not.prol.9
  br i1 %brmerge.prol.9, label %for.inc36.prol.9, label %for.body16.lr.ph.prol.9

for.body16.lr.ph.prol.9:                          ; preds = %for.body10.prol.9
  %mul.prol.9 = shl i32 %add.prol.9, 7
  %mul30.prol.9 = mul i32 %ki.06.prol.9, %kern_width
  br label %for.body16.prol.9

for.body16.prol.9:                                ; preds = %for.inc.prol.9, %for.body16.lr.ph.prol.9
  %indvars.iv.prol.9 = phi i64 [ 0, %for.body16.lr.ph.prol.9 ], [ %indvars.iv.next.prol.9, %for.inc.prol.9 ]
  %partial_sum.12.prol.9 = phi float [ %partial_sum.05.prol.9, %for.body16.lr.ph.prol.9 ], [ %partial_sum.2.prol.9, %for.inc.prol.9 ]
  %710 = trunc i64 %indvars.iv.prol.9 to i32
  %add17.prol.9 = add nsw i32 %710, %in_j.011.prol.9
  %cmp18.prol.9 = icmp sgt i32 %add17.prol.9, -1
  %cmp21.prol.9 = icmp ult i32 %add17.prol.9, %img_width
  %711 = and i1 %cmp18.prol.9, %cmp21.prol.9
  br i1 %711, label %if.end26.prol.9, label %for.inc.prol.9

if.end26.prol.9:                                  ; preds = %for.body16.prol.9
  %add29.prol.9 = add nsw i32 %add17.prol.9, %mul.prol.9
  %idxprom.prol.9 = sext i32 %add29.prol.9 to i64
  %arrayidx.prol.9 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.9
  %712 = load float, float* %arrayidx.prol.9, align 4
  %713 = trunc i64 %indvars.iv.prol.9 to i32
  %add31.prol.9 = add i32 %713, %mul30.prol.9
  %idxprom32.prol.9 = zext i32 %add31.prol.9 to i64
  %arrayidx33.prol.9 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.9
  %714 = load float, float* %arrayidx33.prol.9, align 4
  %mul34.prol.9 = fmul float %712, %714
  %add35.prol.9 = fadd float %partial_sum.12.prol.9, %mul34.prol.9
  br label %for.inc.prol.9

for.inc.prol.9:                                   ; preds = %if.end26.prol.9, %for.body16.prol.9
  %partial_sum.2.prol.9 = phi float [ %add35.prol.9, %if.end26.prol.9 ], [ %partial_sum.12.prol.9, %for.body16.prol.9 ]
  %indvars.iv.next.prol.9 = add nuw nsw i64 %indvars.iv.prol.9, 1
  %lftr.wideiv.prol.9 = trunc i64 %indvars.iv.next.prol.9 to i32
  %exitcond.prol.9 = icmp eq i32 %lftr.wideiv.prol.9, %kern_width
  br i1 %exitcond.prol.9, label %for.inc36.prol.9.loopexit, label %for.body16.prol.9, !llvm.loop !1

for.inc36.prol.9.loopexit:                        ; preds = %for.inc.prol.9
  %partial_sum.2.prol.9.lcssa = phi float [ %partial_sum.2.prol.9, %for.inc.prol.9 ]
  br label %for.inc36.prol.9

for.inc36.prol.9:                                 ; preds = %for.inc36.prol.9.loopexit, %for.body10.prol.9
  %partial_sum.3.prol.9 = phi float [ %partial_sum.05.prol.9, %for.body10.prol.9 ], [ %partial_sum.2.prol.9.lcssa, %for.inc36.prol.9.loopexit ]
  %inc37.prol.9 = add nuw nsw i32 %ki.06.prol.9, 1
  %exitcond19.prol.9 = icmp eq i32 %inc37.prol.9, %kern_height
  br i1 %exitcond19.prol.9, label %for.end38.prol.9.loopexit, label %for.body10.prol.9, !llvm.loop !3

for.end38.prol.9.loopexit:                        ; preds = %for.inc36.prol.9
  %partial_sum.3.prol.9.lcssa = phi float [ %partial_sum.3.prol.9, %for.inc36.prol.9 ]
  br label %for.end38.prol.9

for.end38.prol.9:                                 ; preds = %for.end38.prol.9.loopexit, %for.cond8.preheader.prol.9
  %partial_sum.0.lcssa.prol.9 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.9 ], [ %partial_sum.3.prol.9.lcssa, %for.end38.prol.9.loopexit ]
  br i1 %tobool39, label %if.else.prol.9, label %if.then40.prol.9

if.then40.prol.9:                                 ; preds = %for.end38.prol.9
  %cmp41.prol.9 = fcmp olt float %partial_sum.0.lcssa.prol.9, 0.000000e+00
  %sub42.prol.9 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.9
  %cond.prol.9 = select i1 %cmp41.prol.9, float %sub42.prol.9, float %partial_sum.0.lcssa.prol.9
  %conv.prol.9 = fptoui float %cond.prol.9 to i8
  %conv43.prol.9 = uitofp i8 %conv.prol.9 to float
  %715 = add nsw i64 %indvars.iv20.prol.9, %709
  %arrayidx47.prol.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %715
  store float %conv43.prol.9, float* %arrayidx47.prol.9, align 4
  br label %for.inc53.prol.9

if.else.prol.9:                                   ; preds = %for.end38.prol.9
  %716 = add nsw i64 %indvars.iv20.prol.9, %708
  %arrayidx51.prol.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %716
  store float %partial_sum.0.lcssa.prol.9, float* %arrayidx51.prol.9, align 4
  br label %for.inc53.prol.9

for.inc53.prol.9:                                 ; preds = %if.else.prol.9, %if.then40.prol.9
  %inc54.prol.9 = add nsw i32 %in_j.011.prol.9, 1
  %indvars.iv.next21.prol.9 = add nuw nsw i64 %indvars.iv20.prol.9, 1
  %prol.iter.sub.9 = add i32 %prol.iter.9, -1
  %prol.iter.cmp.9 = icmp eq i32 %prol.iter.sub.9, 0
  br i1 %prol.iter.cmp.9, label %for.cond8.preheader.lr.ph.split.9.loopexit, label %for.cond8.preheader.prol.9, !llvm.loop !4

for.cond8.preheader.lr.ph.split.9.loopexit:       ; preds = %for.inc53.prol.9
  %indvars.iv.next21.prol.9.lcssa = phi i64 [ %indvars.iv.next21.prol.9, %for.inc53.prol.9 ]
  %inc54.prol.9.lcssa = phi i32 [ %inc54.prol.9, %for.inc53.prol.9 ]
  br label %for.cond8.preheader.lr.ph.split.9

for.cond8.preheader.lr.ph.split.9:                ; preds = %for.cond8.preheader.lr.ph.split.9.loopexit, %for.cond8.preheader.lr.ph.9
  %indvars.iv20.unr.9 = phi i64 [ 0, %for.cond8.preheader.lr.ph.9 ], [ %indvars.iv.next21.prol.9.lcssa, %for.cond8.preheader.lr.ph.split.9.loopexit ]
  %in_j.011.unr.9 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.9 ], [ %inc54.prol.9.lcssa, %for.cond8.preheader.lr.ph.split.9.loopexit ]
  br i1 %80, label %for.inc57.9, label %for.cond8.preheader.9.preheader

for.cond8.preheader.9.preheader:                  ; preds = %for.cond8.preheader.lr.ph.split.9
  br label %for.cond8.preheader.9

for.cond8.preheader.9:                            ; preds = %for.cond8.preheader.9.preheader, %for.inc53.7.9
  %indvars.iv20.9 = phi i64 [ %indvars.iv.next21.7.9, %for.inc53.7.9 ], [ %indvars.iv20.unr.9, %for.cond8.preheader.9.preheader ]
  %in_j.011.9 = phi i32 [ %inc54.7.9, %for.inc53.7.9 ], [ %in_j.011.unr.9, %for.cond8.preheader.9.preheader ]
  br i1 %cmp94, label %for.end38.9, label %for.body10.9.preheader

for.body10.9.preheader:                           ; preds = %for.cond8.preheader.9
  br label %for.body10.9

for.body10.9:                                     ; preds = %for.body10.9.preheader, %for.inc36.9
  %ki.06.9 = phi i32 [ %inc37.9, %for.inc36.9 ], [ 0, %for.body10.9.preheader ]
  %partial_sum.05.9 = phi float [ %partial_sum.3.9, %for.inc36.9 ], [ 0.000000e+00, %for.body10.9.preheader ]
  %add.9 = add nsw i32 %ki.06.9, %inc58.8
  %notlhs.9 = icmp slt i32 %add.9, 0
  %notrhs.9 = icmp uge i32 %add.9, %img_height
  %.not.9 = or i1 %notrhs.9, %notlhs.9
  %brmerge.9 = or i1 %.not.9, %cmp151.not.9
  br i1 %brmerge.9, label %for.inc36.9, label %for.body16.lr.ph.9

for.body16.lr.ph.9:                               ; preds = %for.body10.9
  %mul.9 = shl i32 %add.9, 7
  %mul30.9 = mul i32 %ki.06.9, %kern_width
  br label %for.body16.9

for.body16.9:                                     ; preds = %for.inc.9, %for.body16.lr.ph.9
  %indvars.iv.9 = phi i64 [ 0, %for.body16.lr.ph.9 ], [ %indvars.iv.next.9, %for.inc.9 ]
  %partial_sum.12.9 = phi float [ %partial_sum.05.9, %for.body16.lr.ph.9 ], [ %partial_sum.2.9, %for.inc.9 ]
  %717 = trunc i64 %indvars.iv.9 to i32
  %add17.9 = add nsw i32 %717, %in_j.011.9
  %cmp18.9 = icmp sgt i32 %add17.9, -1
  %cmp21.9 = icmp ult i32 %add17.9, %img_width
  %718 = and i1 %cmp18.9, %cmp21.9
  br i1 %718, label %if.end26.9, label %for.inc.9

if.end26.9:                                       ; preds = %for.body16.9
  %add29.9 = add nsw i32 %add17.9, %mul.9
  %idxprom.9 = sext i32 %add29.9 to i64
  %arrayidx.9 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.9
  %719 = load float, float* %arrayidx.9, align 4
  %720 = trunc i64 %indvars.iv.9 to i32
  %add31.9 = add i32 %720, %mul30.9
  %idxprom32.9 = zext i32 %add31.9 to i64
  %arrayidx33.9 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.9
  %721 = load float, float* %arrayidx33.9, align 4
  %mul34.9 = fmul float %719, %721
  %add35.9 = fadd float %partial_sum.12.9, %mul34.9
  br label %for.inc.9

for.inc.9:                                        ; preds = %if.end26.9, %for.body16.9
  %partial_sum.2.9 = phi float [ %add35.9, %if.end26.9 ], [ %partial_sum.12.9, %for.body16.9 ]
  %indvars.iv.next.9 = add nuw nsw i64 %indvars.iv.9, 1
  %lftr.wideiv.9 = trunc i64 %indvars.iv.next.9 to i32
  %exitcond.9 = icmp eq i32 %lftr.wideiv.9, %kern_width
  br i1 %exitcond.9, label %for.inc36.9.loopexit, label %for.body16.9, !llvm.loop !1

for.inc36.9.loopexit:                             ; preds = %for.inc.9
  %partial_sum.2.9.lcssa = phi float [ %partial_sum.2.9, %for.inc.9 ]
  br label %for.inc36.9

for.inc36.9:                                      ; preds = %for.inc36.9.loopexit, %for.body10.9
  %partial_sum.3.9 = phi float [ %partial_sum.05.9, %for.body10.9 ], [ %partial_sum.2.9.lcssa, %for.inc36.9.loopexit ]
  %inc37.9 = add nuw nsw i32 %ki.06.9, 1
  %exitcond19.9 = icmp eq i32 %inc37.9, %kern_height
  br i1 %exitcond19.9, label %for.end38.9.loopexit, label %for.body10.9, !llvm.loop !3

for.end38.9.loopexit:                             ; preds = %for.inc36.9
  %partial_sum.3.9.lcssa = phi float [ %partial_sum.3.9, %for.inc36.9 ]
  br label %for.end38.9

for.end38.9:                                      ; preds = %for.end38.9.loopexit, %for.cond8.preheader.9
  %partial_sum.0.lcssa.9 = phi float [ 0.000000e+00, %for.cond8.preheader.9 ], [ %partial_sum.3.9.lcssa, %for.end38.9.loopexit ]
  br i1 %tobool39, label %if.else.9, label %if.then40.9

if.then40.9:                                      ; preds = %for.end38.9
  %cmp41.9 = fcmp olt float %partial_sum.0.lcssa.9, 0.000000e+00
  %sub42.9 = fsub float -0.000000e+00, %partial_sum.0.lcssa.9
  %cond.9 = select i1 %cmp41.9, float %sub42.9, float %partial_sum.0.lcssa.9
  %conv.9 = fptoui float %cond.9 to i8
  %conv43.9 = uitofp i8 %conv.9 to float
  %722 = add nsw i64 %indvars.iv20.9, %709
  %arrayidx47.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %722
  store float %conv43.9, float* %arrayidx47.9, align 4
  br label %for.inc53.9

if.else.9:                                        ; preds = %for.end38.9
  %723 = add nsw i64 %indvars.iv20.9, %708
  %arrayidx51.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %723
  store float %partial_sum.0.lcssa.9, float* %arrayidx51.9, align 4
  br label %for.inc53.9

for.inc53.9:                                      ; preds = %if.else.9, %if.then40.9
  %inc54.9 = add nsw i32 %in_j.011.9, 1
  %indvars.iv.next21.9 = add nuw nsw i64 %indvars.iv20.9, 1
  br i1 %cmp94, label %for.end38.1.9, label %for.body10.1.9.preheader

for.body10.1.9.preheader:                         ; preds = %for.inc53.9
  br label %for.body10.1.9

for.body10.1.9:                                   ; preds = %for.body10.1.9.preheader, %for.inc36.1.9
  %ki.06.1.9 = phi i32 [ %inc37.1.9, %for.inc36.1.9 ], [ 0, %for.body10.1.9.preheader ]
  %partial_sum.05.1.9 = phi float [ %partial_sum.3.1.9, %for.inc36.1.9 ], [ 0.000000e+00, %for.body10.1.9.preheader ]
  %add.1.9 = add nsw i32 %ki.06.1.9, %inc58.8
  %notlhs.1.9 = icmp slt i32 %add.1.9, 0
  %notrhs.1.9 = icmp uge i32 %add.1.9, %img_height
  %.not.1.9 = or i1 %notrhs.1.9, %notlhs.1.9
  %brmerge.1.9 = or i1 %.not.1.9, %cmp151.not.1.9
  br i1 %brmerge.1.9, label %for.inc36.1.9, label %for.body16.lr.ph.1.9

for.body16.lr.ph.1.9:                             ; preds = %for.body10.1.9
  %mul.1.9 = shl i32 %add.1.9, 7
  %mul30.1.9 = mul i32 %ki.06.1.9, %kern_width
  br label %for.body16.1.9

for.body16.1.9:                                   ; preds = %for.inc.1.9, %for.body16.lr.ph.1.9
  %indvars.iv.1.9 = phi i64 [ 0, %for.body16.lr.ph.1.9 ], [ %indvars.iv.next.1.9, %for.inc.1.9 ]
  %partial_sum.12.1.9 = phi float [ %partial_sum.05.1.9, %for.body16.lr.ph.1.9 ], [ %partial_sum.2.1.9, %for.inc.1.9 ]
  %724 = trunc i64 %indvars.iv.1.9 to i32
  %add17.1.9 = add nsw i32 %724, %inc54.9
  %cmp18.1.9 = icmp sgt i32 %add17.1.9, -1
  %cmp21.1.9 = icmp ult i32 %add17.1.9, %img_width
  %725 = and i1 %cmp18.1.9, %cmp21.1.9
  br i1 %725, label %if.end26.1.9, label %for.inc.1.9

if.end26.1.9:                                     ; preds = %for.body16.1.9
  %add29.1.9 = add nsw i32 %add17.1.9, %mul.1.9
  %idxprom.1.9 = sext i32 %add29.1.9 to i64
  %arrayidx.1.9 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.9
  %726 = load float, float* %arrayidx.1.9, align 4
  %727 = trunc i64 %indvars.iv.1.9 to i32
  %add31.1.9 = add i32 %727, %mul30.1.9
  %idxprom32.1.9 = zext i32 %add31.1.9 to i64
  %arrayidx33.1.9 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.9
  %728 = load float, float* %arrayidx33.1.9, align 4
  %mul34.1.9 = fmul float %726, %728
  %add35.1.9 = fadd float %partial_sum.12.1.9, %mul34.1.9
  br label %for.inc.1.9

for.inc.1.9:                                      ; preds = %if.end26.1.9, %for.body16.1.9
  %partial_sum.2.1.9 = phi float [ %add35.1.9, %if.end26.1.9 ], [ %partial_sum.12.1.9, %for.body16.1.9 ]
  %indvars.iv.next.1.9 = add nuw nsw i64 %indvars.iv.1.9, 1
  %lftr.wideiv.1.9 = trunc i64 %indvars.iv.next.1.9 to i32
  %exitcond.1.9 = icmp eq i32 %lftr.wideiv.1.9, %kern_width
  br i1 %exitcond.1.9, label %for.inc36.1.9.loopexit, label %for.body16.1.9, !llvm.loop !1

for.inc36.1.9.loopexit:                           ; preds = %for.inc.1.9
  %partial_sum.2.1.9.lcssa = phi float [ %partial_sum.2.1.9, %for.inc.1.9 ]
  br label %for.inc36.1.9

for.inc36.1.9:                                    ; preds = %for.inc36.1.9.loopexit, %for.body10.1.9
  %partial_sum.3.1.9 = phi float [ %partial_sum.05.1.9, %for.body10.1.9 ], [ %partial_sum.2.1.9.lcssa, %for.inc36.1.9.loopexit ]
  %inc37.1.9 = add nuw nsw i32 %ki.06.1.9, 1
  %exitcond19.1.9 = icmp eq i32 %inc37.1.9, %kern_height
  br i1 %exitcond19.1.9, label %for.end38.1.9.loopexit, label %for.body10.1.9, !llvm.loop !3

for.end38.1.9.loopexit:                           ; preds = %for.inc36.1.9
  %partial_sum.3.1.9.lcssa = phi float [ %partial_sum.3.1.9, %for.inc36.1.9 ]
  br label %for.end38.1.9

for.end38.1.9:                                    ; preds = %for.end38.1.9.loopexit, %for.inc53.9
  %partial_sum.0.lcssa.1.9 = phi float [ 0.000000e+00, %for.inc53.9 ], [ %partial_sum.3.1.9.lcssa, %for.end38.1.9.loopexit ]
  br i1 %tobool39, label %if.else.1.9, label %if.then40.1.9

if.then40.1.9:                                    ; preds = %for.end38.1.9
  %cmp41.1.9 = fcmp olt float %partial_sum.0.lcssa.1.9, 0.000000e+00
  %sub42.1.9 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.9
  %cond.1.9 = select i1 %cmp41.1.9, float %sub42.1.9, float %partial_sum.0.lcssa.1.9
  %conv.1.9 = fptoui float %cond.1.9 to i8
  %conv43.1.9 = uitofp i8 %conv.1.9 to float
  %729 = add nsw i64 %indvars.iv.next21.9, %709
  %arrayidx47.1.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %729
  store float %conv43.1.9, float* %arrayidx47.1.9, align 4
  br label %for.inc53.1.9

if.else.1.9:                                      ; preds = %for.end38.1.9
  %730 = add nsw i64 %indvars.iv.next21.9, %708
  %arrayidx51.1.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %730
  store float %partial_sum.0.lcssa.1.9, float* %arrayidx51.1.9, align 4
  br label %for.inc53.1.9

for.inc53.1.9:                                    ; preds = %if.else.1.9, %if.then40.1.9
  %inc54.1.9 = add nsw i32 %in_j.011.9, 2
  %indvars.iv.next21.1.9 = add nsw i64 %indvars.iv20.9, 2
  br i1 %cmp94, label %for.end38.2.9, label %for.body10.2.9.preheader

for.body10.2.9.preheader:                         ; preds = %for.inc53.1.9
  br label %for.body10.2.9

for.body10.2.9:                                   ; preds = %for.body10.2.9.preheader, %for.inc36.2.9
  %ki.06.2.9 = phi i32 [ %inc37.2.9, %for.inc36.2.9 ], [ 0, %for.body10.2.9.preheader ]
  %partial_sum.05.2.9 = phi float [ %partial_sum.3.2.9, %for.inc36.2.9 ], [ 0.000000e+00, %for.body10.2.9.preheader ]
  %add.2.9 = add nsw i32 %ki.06.2.9, %inc58.8
  %notlhs.2.9 = icmp slt i32 %add.2.9, 0
  %notrhs.2.9 = icmp uge i32 %add.2.9, %img_height
  %.not.2.9 = or i1 %notrhs.2.9, %notlhs.2.9
  %brmerge.2.9 = or i1 %.not.2.9, %cmp151.not.2.9
  br i1 %brmerge.2.9, label %for.inc36.2.9, label %for.body16.lr.ph.2.9

for.body16.lr.ph.2.9:                             ; preds = %for.body10.2.9
  %mul.2.9 = shl i32 %add.2.9, 7
  %mul30.2.9 = mul i32 %ki.06.2.9, %kern_width
  br label %for.body16.2.9

for.body16.2.9:                                   ; preds = %for.inc.2.9, %for.body16.lr.ph.2.9
  %indvars.iv.2.9 = phi i64 [ 0, %for.body16.lr.ph.2.9 ], [ %indvars.iv.next.2.9, %for.inc.2.9 ]
  %partial_sum.12.2.9 = phi float [ %partial_sum.05.2.9, %for.body16.lr.ph.2.9 ], [ %partial_sum.2.2.9, %for.inc.2.9 ]
  %731 = trunc i64 %indvars.iv.2.9 to i32
  %add17.2.9 = add nsw i32 %731, %inc54.1.9
  %cmp18.2.9 = icmp sgt i32 %add17.2.9, -1
  %cmp21.2.9 = icmp ult i32 %add17.2.9, %img_width
  %732 = and i1 %cmp18.2.9, %cmp21.2.9
  br i1 %732, label %if.end26.2.9, label %for.inc.2.9

if.end26.2.9:                                     ; preds = %for.body16.2.9
  %add29.2.9 = add nsw i32 %add17.2.9, %mul.2.9
  %idxprom.2.9 = sext i32 %add29.2.9 to i64
  %arrayidx.2.9 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.9
  %733 = load float, float* %arrayidx.2.9, align 4
  %734 = trunc i64 %indvars.iv.2.9 to i32
  %add31.2.9 = add i32 %734, %mul30.2.9
  %idxprom32.2.9 = zext i32 %add31.2.9 to i64
  %arrayidx33.2.9 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.9
  %735 = load float, float* %arrayidx33.2.9, align 4
  %mul34.2.9 = fmul float %733, %735
  %add35.2.9 = fadd float %partial_sum.12.2.9, %mul34.2.9
  br label %for.inc.2.9

for.inc.2.9:                                      ; preds = %if.end26.2.9, %for.body16.2.9
  %partial_sum.2.2.9 = phi float [ %add35.2.9, %if.end26.2.9 ], [ %partial_sum.12.2.9, %for.body16.2.9 ]
  %indvars.iv.next.2.9 = add nuw nsw i64 %indvars.iv.2.9, 1
  %lftr.wideiv.2.9 = trunc i64 %indvars.iv.next.2.9 to i32
  %exitcond.2.9 = icmp eq i32 %lftr.wideiv.2.9, %kern_width
  br i1 %exitcond.2.9, label %for.inc36.2.9.loopexit, label %for.body16.2.9, !llvm.loop !1

for.inc36.2.9.loopexit:                           ; preds = %for.inc.2.9
  %partial_sum.2.2.9.lcssa = phi float [ %partial_sum.2.2.9, %for.inc.2.9 ]
  br label %for.inc36.2.9

for.inc36.2.9:                                    ; preds = %for.inc36.2.9.loopexit, %for.body10.2.9
  %partial_sum.3.2.9 = phi float [ %partial_sum.05.2.9, %for.body10.2.9 ], [ %partial_sum.2.2.9.lcssa, %for.inc36.2.9.loopexit ]
  %inc37.2.9 = add nuw nsw i32 %ki.06.2.9, 1
  %exitcond19.2.9 = icmp eq i32 %inc37.2.9, %kern_height
  br i1 %exitcond19.2.9, label %for.end38.2.9.loopexit, label %for.body10.2.9, !llvm.loop !3

for.end38.2.9.loopexit:                           ; preds = %for.inc36.2.9
  %partial_sum.3.2.9.lcssa = phi float [ %partial_sum.3.2.9, %for.inc36.2.9 ]
  br label %for.end38.2.9

for.end38.2.9:                                    ; preds = %for.end38.2.9.loopexit, %for.inc53.1.9
  %partial_sum.0.lcssa.2.9 = phi float [ 0.000000e+00, %for.inc53.1.9 ], [ %partial_sum.3.2.9.lcssa, %for.end38.2.9.loopexit ]
  br i1 %tobool39, label %if.else.2.9, label %if.then40.2.9

if.then40.2.9:                                    ; preds = %for.end38.2.9
  %cmp41.2.9 = fcmp olt float %partial_sum.0.lcssa.2.9, 0.000000e+00
  %sub42.2.9 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.9
  %cond.2.9 = select i1 %cmp41.2.9, float %sub42.2.9, float %partial_sum.0.lcssa.2.9
  %conv.2.9 = fptoui float %cond.2.9 to i8
  %conv43.2.9 = uitofp i8 %conv.2.9 to float
  %736 = add nsw i64 %indvars.iv.next21.1.9, %709
  %arrayidx47.2.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %736
  store float %conv43.2.9, float* %arrayidx47.2.9, align 4
  br label %for.inc53.2.9

if.else.2.9:                                      ; preds = %for.end38.2.9
  %737 = add nsw i64 %indvars.iv.next21.1.9, %708
  %arrayidx51.2.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %737
  store float %partial_sum.0.lcssa.2.9, float* %arrayidx51.2.9, align 4
  br label %for.inc53.2.9

for.inc53.2.9:                                    ; preds = %if.else.2.9, %if.then40.2.9
  %inc54.2.9 = add nsw i32 %in_j.011.9, 3
  %indvars.iv.next21.2.9 = add nsw i64 %indvars.iv20.9, 3
  br i1 %cmp94, label %for.end38.3.9, label %for.body10.3.9.preheader

for.body10.3.9.preheader:                         ; preds = %for.inc53.2.9
  br label %for.body10.3.9

for.body10.3.9:                                   ; preds = %for.body10.3.9.preheader, %for.inc36.3.9
  %ki.06.3.9 = phi i32 [ %inc37.3.9, %for.inc36.3.9 ], [ 0, %for.body10.3.9.preheader ]
  %partial_sum.05.3.9 = phi float [ %partial_sum.3.3.9, %for.inc36.3.9 ], [ 0.000000e+00, %for.body10.3.9.preheader ]
  %add.3.9 = add nsw i32 %ki.06.3.9, %inc58.8
  %notlhs.3.9 = icmp slt i32 %add.3.9, 0
  %notrhs.3.9 = icmp uge i32 %add.3.9, %img_height
  %.not.3.9 = or i1 %notrhs.3.9, %notlhs.3.9
  %brmerge.3.9 = or i1 %.not.3.9, %cmp151.not.3.9
  br i1 %brmerge.3.9, label %for.inc36.3.9, label %for.body16.lr.ph.3.9

for.body16.lr.ph.3.9:                             ; preds = %for.body10.3.9
  %mul.3.9 = shl i32 %add.3.9, 7
  %mul30.3.9 = mul i32 %ki.06.3.9, %kern_width
  br label %for.body16.3.9

for.body16.3.9:                                   ; preds = %for.inc.3.9, %for.body16.lr.ph.3.9
  %indvars.iv.3.9 = phi i64 [ 0, %for.body16.lr.ph.3.9 ], [ %indvars.iv.next.3.9, %for.inc.3.9 ]
  %partial_sum.12.3.9 = phi float [ %partial_sum.05.3.9, %for.body16.lr.ph.3.9 ], [ %partial_sum.2.3.9, %for.inc.3.9 ]
  %738 = trunc i64 %indvars.iv.3.9 to i32
  %add17.3.9 = add nsw i32 %738, %inc54.2.9
  %cmp18.3.9 = icmp sgt i32 %add17.3.9, -1
  %cmp21.3.9 = icmp ult i32 %add17.3.9, %img_width
  %739 = and i1 %cmp18.3.9, %cmp21.3.9
  br i1 %739, label %if.end26.3.9, label %for.inc.3.9

if.end26.3.9:                                     ; preds = %for.body16.3.9
  %add29.3.9 = add nsw i32 %add17.3.9, %mul.3.9
  %idxprom.3.9 = sext i32 %add29.3.9 to i64
  %arrayidx.3.9 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.9
  %740 = load float, float* %arrayidx.3.9, align 4
  %741 = trunc i64 %indvars.iv.3.9 to i32
  %add31.3.9 = add i32 %741, %mul30.3.9
  %idxprom32.3.9 = zext i32 %add31.3.9 to i64
  %arrayidx33.3.9 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.9
  %742 = load float, float* %arrayidx33.3.9, align 4
  %mul34.3.9 = fmul float %740, %742
  %add35.3.9 = fadd float %partial_sum.12.3.9, %mul34.3.9
  br label %for.inc.3.9

for.inc.3.9:                                      ; preds = %if.end26.3.9, %for.body16.3.9
  %partial_sum.2.3.9 = phi float [ %add35.3.9, %if.end26.3.9 ], [ %partial_sum.12.3.9, %for.body16.3.9 ]
  %indvars.iv.next.3.9 = add nuw nsw i64 %indvars.iv.3.9, 1
  %lftr.wideiv.3.9 = trunc i64 %indvars.iv.next.3.9 to i32
  %exitcond.3.9 = icmp eq i32 %lftr.wideiv.3.9, %kern_width
  br i1 %exitcond.3.9, label %for.inc36.3.9.loopexit, label %for.body16.3.9, !llvm.loop !1

for.inc36.3.9.loopexit:                           ; preds = %for.inc.3.9
  %partial_sum.2.3.9.lcssa = phi float [ %partial_sum.2.3.9, %for.inc.3.9 ]
  br label %for.inc36.3.9

for.inc36.3.9:                                    ; preds = %for.inc36.3.9.loopexit, %for.body10.3.9
  %partial_sum.3.3.9 = phi float [ %partial_sum.05.3.9, %for.body10.3.9 ], [ %partial_sum.2.3.9.lcssa, %for.inc36.3.9.loopexit ]
  %inc37.3.9 = add nuw nsw i32 %ki.06.3.9, 1
  %exitcond19.3.9 = icmp eq i32 %inc37.3.9, %kern_height
  br i1 %exitcond19.3.9, label %for.end38.3.9.loopexit, label %for.body10.3.9, !llvm.loop !3

for.end38.3.9.loopexit:                           ; preds = %for.inc36.3.9
  %partial_sum.3.3.9.lcssa = phi float [ %partial_sum.3.3.9, %for.inc36.3.9 ]
  br label %for.end38.3.9

for.end38.3.9:                                    ; preds = %for.end38.3.9.loopexit, %for.inc53.2.9
  %partial_sum.0.lcssa.3.9 = phi float [ 0.000000e+00, %for.inc53.2.9 ], [ %partial_sum.3.3.9.lcssa, %for.end38.3.9.loopexit ]
  br i1 %tobool39, label %if.else.3.9, label %if.then40.3.9

if.then40.3.9:                                    ; preds = %for.end38.3.9
  %cmp41.3.9 = fcmp olt float %partial_sum.0.lcssa.3.9, 0.000000e+00
  %sub42.3.9 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.9
  %cond.3.9 = select i1 %cmp41.3.9, float %sub42.3.9, float %partial_sum.0.lcssa.3.9
  %conv.3.9 = fptoui float %cond.3.9 to i8
  %conv43.3.9 = uitofp i8 %conv.3.9 to float
  %743 = add nsw i64 %indvars.iv.next21.2.9, %709
  %arrayidx47.3.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %743
  store float %conv43.3.9, float* %arrayidx47.3.9, align 4
  br label %for.inc53.3.9

if.else.3.9:                                      ; preds = %for.end38.3.9
  %744 = add nsw i64 %indvars.iv.next21.2.9, %708
  %arrayidx51.3.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %744
  store float %partial_sum.0.lcssa.3.9, float* %arrayidx51.3.9, align 4
  br label %for.inc53.3.9

for.inc53.3.9:                                    ; preds = %if.else.3.9, %if.then40.3.9
  %inc54.3.9 = add nsw i32 %in_j.011.9, 4
  %indvars.iv.next21.3.9 = add nsw i64 %indvars.iv20.9, 4
  br i1 %cmp94, label %for.end38.4.9, label %for.body10.4.9.preheader

for.body10.4.9.preheader:                         ; preds = %for.inc53.3.9
  br label %for.body10.4.9

for.body10.4.9:                                   ; preds = %for.body10.4.9.preheader, %for.inc36.4.9
  %ki.06.4.9 = phi i32 [ %inc37.4.9, %for.inc36.4.9 ], [ 0, %for.body10.4.9.preheader ]
  %partial_sum.05.4.9 = phi float [ %partial_sum.3.4.9, %for.inc36.4.9 ], [ 0.000000e+00, %for.body10.4.9.preheader ]
  %add.4.9 = add nsw i32 %ki.06.4.9, %inc58.8
  %notlhs.4.9 = icmp slt i32 %add.4.9, 0
  %notrhs.4.9 = icmp uge i32 %add.4.9, %img_height
  %.not.4.9 = or i1 %notrhs.4.9, %notlhs.4.9
  %brmerge.4.9 = or i1 %.not.4.9, %cmp151.not.4.9
  br i1 %brmerge.4.9, label %for.inc36.4.9, label %for.body16.lr.ph.4.9

for.body16.lr.ph.4.9:                             ; preds = %for.body10.4.9
  %mul.4.9 = shl i32 %add.4.9, 7
  %mul30.4.9 = mul i32 %ki.06.4.9, %kern_width
  br label %for.body16.4.9

for.body16.4.9:                                   ; preds = %for.inc.4.9, %for.body16.lr.ph.4.9
  %indvars.iv.4.9 = phi i64 [ 0, %for.body16.lr.ph.4.9 ], [ %indvars.iv.next.4.9, %for.inc.4.9 ]
  %partial_sum.12.4.9 = phi float [ %partial_sum.05.4.9, %for.body16.lr.ph.4.9 ], [ %partial_sum.2.4.9, %for.inc.4.9 ]
  %745 = trunc i64 %indvars.iv.4.9 to i32
  %add17.4.9 = add nsw i32 %745, %inc54.3.9
  %cmp18.4.9 = icmp sgt i32 %add17.4.9, -1
  %cmp21.4.9 = icmp ult i32 %add17.4.9, %img_width
  %746 = and i1 %cmp18.4.9, %cmp21.4.9
  br i1 %746, label %if.end26.4.9, label %for.inc.4.9

if.end26.4.9:                                     ; preds = %for.body16.4.9
  %add29.4.9 = add nsw i32 %add17.4.9, %mul.4.9
  %idxprom.4.9 = sext i32 %add29.4.9 to i64
  %arrayidx.4.9 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.9
  %747 = load float, float* %arrayidx.4.9, align 4
  %748 = trunc i64 %indvars.iv.4.9 to i32
  %add31.4.9 = add i32 %748, %mul30.4.9
  %idxprom32.4.9 = zext i32 %add31.4.9 to i64
  %arrayidx33.4.9 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.9
  %749 = load float, float* %arrayidx33.4.9, align 4
  %mul34.4.9 = fmul float %747, %749
  %add35.4.9 = fadd float %partial_sum.12.4.9, %mul34.4.9
  br label %for.inc.4.9

for.inc.4.9:                                      ; preds = %if.end26.4.9, %for.body16.4.9
  %partial_sum.2.4.9 = phi float [ %add35.4.9, %if.end26.4.9 ], [ %partial_sum.12.4.9, %for.body16.4.9 ]
  %indvars.iv.next.4.9 = add nuw nsw i64 %indvars.iv.4.9, 1
  %lftr.wideiv.4.9 = trunc i64 %indvars.iv.next.4.9 to i32
  %exitcond.4.9 = icmp eq i32 %lftr.wideiv.4.9, %kern_width
  br i1 %exitcond.4.9, label %for.inc36.4.9.loopexit, label %for.body16.4.9, !llvm.loop !1

for.inc36.4.9.loopexit:                           ; preds = %for.inc.4.9
  %partial_sum.2.4.9.lcssa = phi float [ %partial_sum.2.4.9, %for.inc.4.9 ]
  br label %for.inc36.4.9

for.inc36.4.9:                                    ; preds = %for.inc36.4.9.loopexit, %for.body10.4.9
  %partial_sum.3.4.9 = phi float [ %partial_sum.05.4.9, %for.body10.4.9 ], [ %partial_sum.2.4.9.lcssa, %for.inc36.4.9.loopexit ]
  %inc37.4.9 = add nuw nsw i32 %ki.06.4.9, 1
  %exitcond19.4.9 = icmp eq i32 %inc37.4.9, %kern_height
  br i1 %exitcond19.4.9, label %for.end38.4.9.loopexit, label %for.body10.4.9, !llvm.loop !3

for.end38.4.9.loopexit:                           ; preds = %for.inc36.4.9
  %partial_sum.3.4.9.lcssa = phi float [ %partial_sum.3.4.9, %for.inc36.4.9 ]
  br label %for.end38.4.9

for.end38.4.9:                                    ; preds = %for.end38.4.9.loopexit, %for.inc53.3.9
  %partial_sum.0.lcssa.4.9 = phi float [ 0.000000e+00, %for.inc53.3.9 ], [ %partial_sum.3.4.9.lcssa, %for.end38.4.9.loopexit ]
  br i1 %tobool39, label %if.else.4.9, label %if.then40.4.9

if.then40.4.9:                                    ; preds = %for.end38.4.9
  %cmp41.4.9 = fcmp olt float %partial_sum.0.lcssa.4.9, 0.000000e+00
  %sub42.4.9 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.9
  %cond.4.9 = select i1 %cmp41.4.9, float %sub42.4.9, float %partial_sum.0.lcssa.4.9
  %conv.4.9 = fptoui float %cond.4.9 to i8
  %conv43.4.9 = uitofp i8 %conv.4.9 to float
  %750 = add nsw i64 %indvars.iv.next21.3.9, %709
  %arrayidx47.4.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %750
  store float %conv43.4.9, float* %arrayidx47.4.9, align 4
  br label %for.inc53.4.9

if.else.4.9:                                      ; preds = %for.end38.4.9
  %751 = add nsw i64 %indvars.iv.next21.3.9, %708
  %arrayidx51.4.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %751
  store float %partial_sum.0.lcssa.4.9, float* %arrayidx51.4.9, align 4
  br label %for.inc53.4.9

for.inc53.4.9:                                    ; preds = %if.else.4.9, %if.then40.4.9
  %inc54.4.9 = add nsw i32 %in_j.011.9, 5
  %indvars.iv.next21.4.9 = add nsw i64 %indvars.iv20.9, 5
  br i1 %cmp94, label %for.end38.5.9, label %for.body10.5.9.preheader

for.body10.5.9.preheader:                         ; preds = %for.inc53.4.9
  br label %for.body10.5.9

for.body10.5.9:                                   ; preds = %for.body10.5.9.preheader, %for.inc36.5.9
  %ki.06.5.9 = phi i32 [ %inc37.5.9, %for.inc36.5.9 ], [ 0, %for.body10.5.9.preheader ]
  %partial_sum.05.5.9 = phi float [ %partial_sum.3.5.9, %for.inc36.5.9 ], [ 0.000000e+00, %for.body10.5.9.preheader ]
  %add.5.9 = add nsw i32 %ki.06.5.9, %inc58.8
  %notlhs.5.9 = icmp slt i32 %add.5.9, 0
  %notrhs.5.9 = icmp uge i32 %add.5.9, %img_height
  %.not.5.9 = or i1 %notrhs.5.9, %notlhs.5.9
  %brmerge.5.9 = or i1 %.not.5.9, %cmp151.not.5.9
  br i1 %brmerge.5.9, label %for.inc36.5.9, label %for.body16.lr.ph.5.9

for.body16.lr.ph.5.9:                             ; preds = %for.body10.5.9
  %mul.5.9 = shl i32 %add.5.9, 7
  %mul30.5.9 = mul i32 %ki.06.5.9, %kern_width
  br label %for.body16.5.9

for.body16.5.9:                                   ; preds = %for.inc.5.9, %for.body16.lr.ph.5.9
  %indvars.iv.5.9 = phi i64 [ 0, %for.body16.lr.ph.5.9 ], [ %indvars.iv.next.5.9, %for.inc.5.9 ]
  %partial_sum.12.5.9 = phi float [ %partial_sum.05.5.9, %for.body16.lr.ph.5.9 ], [ %partial_sum.2.5.9, %for.inc.5.9 ]
  %752 = trunc i64 %indvars.iv.5.9 to i32
  %add17.5.9 = add nsw i32 %752, %inc54.4.9
  %cmp18.5.9 = icmp sgt i32 %add17.5.9, -1
  %cmp21.5.9 = icmp ult i32 %add17.5.9, %img_width
  %753 = and i1 %cmp18.5.9, %cmp21.5.9
  br i1 %753, label %if.end26.5.9, label %for.inc.5.9

if.end26.5.9:                                     ; preds = %for.body16.5.9
  %add29.5.9 = add nsw i32 %add17.5.9, %mul.5.9
  %idxprom.5.9 = sext i32 %add29.5.9 to i64
  %arrayidx.5.9 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.9
  %754 = load float, float* %arrayidx.5.9, align 4
  %755 = trunc i64 %indvars.iv.5.9 to i32
  %add31.5.9 = add i32 %755, %mul30.5.9
  %idxprom32.5.9 = zext i32 %add31.5.9 to i64
  %arrayidx33.5.9 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.9
  %756 = load float, float* %arrayidx33.5.9, align 4
  %mul34.5.9 = fmul float %754, %756
  %add35.5.9 = fadd float %partial_sum.12.5.9, %mul34.5.9
  br label %for.inc.5.9

for.inc.5.9:                                      ; preds = %if.end26.5.9, %for.body16.5.9
  %partial_sum.2.5.9 = phi float [ %add35.5.9, %if.end26.5.9 ], [ %partial_sum.12.5.9, %for.body16.5.9 ]
  %indvars.iv.next.5.9 = add nuw nsw i64 %indvars.iv.5.9, 1
  %lftr.wideiv.5.9 = trunc i64 %indvars.iv.next.5.9 to i32
  %exitcond.5.9 = icmp eq i32 %lftr.wideiv.5.9, %kern_width
  br i1 %exitcond.5.9, label %for.inc36.5.9.loopexit, label %for.body16.5.9, !llvm.loop !1

for.inc36.5.9.loopexit:                           ; preds = %for.inc.5.9
  %partial_sum.2.5.9.lcssa = phi float [ %partial_sum.2.5.9, %for.inc.5.9 ]
  br label %for.inc36.5.9

for.inc36.5.9:                                    ; preds = %for.inc36.5.9.loopexit, %for.body10.5.9
  %partial_sum.3.5.9 = phi float [ %partial_sum.05.5.9, %for.body10.5.9 ], [ %partial_sum.2.5.9.lcssa, %for.inc36.5.9.loopexit ]
  %inc37.5.9 = add nuw nsw i32 %ki.06.5.9, 1
  %exitcond19.5.9 = icmp eq i32 %inc37.5.9, %kern_height
  br i1 %exitcond19.5.9, label %for.end38.5.9.loopexit, label %for.body10.5.9, !llvm.loop !3

for.end38.5.9.loopexit:                           ; preds = %for.inc36.5.9
  %partial_sum.3.5.9.lcssa = phi float [ %partial_sum.3.5.9, %for.inc36.5.9 ]
  br label %for.end38.5.9

for.end38.5.9:                                    ; preds = %for.end38.5.9.loopexit, %for.inc53.4.9
  %partial_sum.0.lcssa.5.9 = phi float [ 0.000000e+00, %for.inc53.4.9 ], [ %partial_sum.3.5.9.lcssa, %for.end38.5.9.loopexit ]
  br i1 %tobool39, label %if.else.5.9, label %if.then40.5.9

if.then40.5.9:                                    ; preds = %for.end38.5.9
  %cmp41.5.9 = fcmp olt float %partial_sum.0.lcssa.5.9, 0.000000e+00
  %sub42.5.9 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.9
  %cond.5.9 = select i1 %cmp41.5.9, float %sub42.5.9, float %partial_sum.0.lcssa.5.9
  %conv.5.9 = fptoui float %cond.5.9 to i8
  %conv43.5.9 = uitofp i8 %conv.5.9 to float
  %757 = add nsw i64 %indvars.iv.next21.4.9, %709
  %arrayidx47.5.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %757
  store float %conv43.5.9, float* %arrayidx47.5.9, align 4
  br label %for.inc53.5.9

if.else.5.9:                                      ; preds = %for.end38.5.9
  %758 = add nsw i64 %indvars.iv.next21.4.9, %708
  %arrayidx51.5.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %758
  store float %partial_sum.0.lcssa.5.9, float* %arrayidx51.5.9, align 4
  br label %for.inc53.5.9

for.inc53.5.9:                                    ; preds = %if.else.5.9, %if.then40.5.9
  %inc54.5.9 = add nsw i32 %in_j.011.9, 6
  %indvars.iv.next21.5.9 = add nsw i64 %indvars.iv20.9, 6
  br i1 %cmp94, label %for.end38.6.9, label %for.body10.6.9.preheader

for.body10.6.9.preheader:                         ; preds = %for.inc53.5.9
  br label %for.body10.6.9

for.body10.6.9:                                   ; preds = %for.body10.6.9.preheader, %for.inc36.6.9
  %ki.06.6.9 = phi i32 [ %inc37.6.9, %for.inc36.6.9 ], [ 0, %for.body10.6.9.preheader ]
  %partial_sum.05.6.9 = phi float [ %partial_sum.3.6.9, %for.inc36.6.9 ], [ 0.000000e+00, %for.body10.6.9.preheader ]
  %add.6.9 = add nsw i32 %ki.06.6.9, %inc58.8
  %notlhs.6.9 = icmp slt i32 %add.6.9, 0
  %notrhs.6.9 = icmp uge i32 %add.6.9, %img_height
  %.not.6.9 = or i1 %notrhs.6.9, %notlhs.6.9
  %brmerge.6.9 = or i1 %.not.6.9, %cmp151.not.6.9
  br i1 %brmerge.6.9, label %for.inc36.6.9, label %for.body16.lr.ph.6.9

for.body16.lr.ph.6.9:                             ; preds = %for.body10.6.9
  %mul.6.9 = shl i32 %add.6.9, 7
  %mul30.6.9 = mul i32 %ki.06.6.9, %kern_width
  br label %for.body16.6.9

for.body16.6.9:                                   ; preds = %for.inc.6.9, %for.body16.lr.ph.6.9
  %indvars.iv.6.9 = phi i64 [ 0, %for.body16.lr.ph.6.9 ], [ %indvars.iv.next.6.9, %for.inc.6.9 ]
  %partial_sum.12.6.9 = phi float [ %partial_sum.05.6.9, %for.body16.lr.ph.6.9 ], [ %partial_sum.2.6.9, %for.inc.6.9 ]
  %759 = trunc i64 %indvars.iv.6.9 to i32
  %add17.6.9 = add nsw i32 %759, %inc54.5.9
  %cmp18.6.9 = icmp sgt i32 %add17.6.9, -1
  %cmp21.6.9 = icmp ult i32 %add17.6.9, %img_width
  %760 = and i1 %cmp18.6.9, %cmp21.6.9
  br i1 %760, label %if.end26.6.9, label %for.inc.6.9

if.end26.6.9:                                     ; preds = %for.body16.6.9
  %add29.6.9 = add nsw i32 %add17.6.9, %mul.6.9
  %idxprom.6.9 = sext i32 %add29.6.9 to i64
  %arrayidx.6.9 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.9
  %761 = load float, float* %arrayidx.6.9, align 4
  %762 = trunc i64 %indvars.iv.6.9 to i32
  %add31.6.9 = add i32 %762, %mul30.6.9
  %idxprom32.6.9 = zext i32 %add31.6.9 to i64
  %arrayidx33.6.9 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.9
  %763 = load float, float* %arrayidx33.6.9, align 4
  %mul34.6.9 = fmul float %761, %763
  %add35.6.9 = fadd float %partial_sum.12.6.9, %mul34.6.9
  br label %for.inc.6.9

for.inc.6.9:                                      ; preds = %if.end26.6.9, %for.body16.6.9
  %partial_sum.2.6.9 = phi float [ %add35.6.9, %if.end26.6.9 ], [ %partial_sum.12.6.9, %for.body16.6.9 ]
  %indvars.iv.next.6.9 = add nuw nsw i64 %indvars.iv.6.9, 1
  %lftr.wideiv.6.9 = trunc i64 %indvars.iv.next.6.9 to i32
  %exitcond.6.9 = icmp eq i32 %lftr.wideiv.6.9, %kern_width
  br i1 %exitcond.6.9, label %for.inc36.6.9.loopexit, label %for.body16.6.9, !llvm.loop !1

for.inc36.6.9.loopexit:                           ; preds = %for.inc.6.9
  %partial_sum.2.6.9.lcssa = phi float [ %partial_sum.2.6.9, %for.inc.6.9 ]
  br label %for.inc36.6.9

for.inc36.6.9:                                    ; preds = %for.inc36.6.9.loopexit, %for.body10.6.9
  %partial_sum.3.6.9 = phi float [ %partial_sum.05.6.9, %for.body10.6.9 ], [ %partial_sum.2.6.9.lcssa, %for.inc36.6.9.loopexit ]
  %inc37.6.9 = add nuw nsw i32 %ki.06.6.9, 1
  %exitcond19.6.9 = icmp eq i32 %inc37.6.9, %kern_height
  br i1 %exitcond19.6.9, label %for.end38.6.9.loopexit, label %for.body10.6.9, !llvm.loop !3

for.end38.6.9.loopexit:                           ; preds = %for.inc36.6.9
  %partial_sum.3.6.9.lcssa = phi float [ %partial_sum.3.6.9, %for.inc36.6.9 ]
  br label %for.end38.6.9

for.end38.6.9:                                    ; preds = %for.end38.6.9.loopexit, %for.inc53.5.9
  %partial_sum.0.lcssa.6.9 = phi float [ 0.000000e+00, %for.inc53.5.9 ], [ %partial_sum.3.6.9.lcssa, %for.end38.6.9.loopexit ]
  br i1 %tobool39, label %if.else.6.9, label %if.then40.6.9

if.then40.6.9:                                    ; preds = %for.end38.6.9
  %cmp41.6.9 = fcmp olt float %partial_sum.0.lcssa.6.9, 0.000000e+00
  %sub42.6.9 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.9
  %cond.6.9 = select i1 %cmp41.6.9, float %sub42.6.9, float %partial_sum.0.lcssa.6.9
  %conv.6.9 = fptoui float %cond.6.9 to i8
  %conv43.6.9 = uitofp i8 %conv.6.9 to float
  %764 = add nsw i64 %indvars.iv.next21.5.9, %709
  %arrayidx47.6.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %764
  store float %conv43.6.9, float* %arrayidx47.6.9, align 4
  br label %for.inc53.6.9

if.else.6.9:                                      ; preds = %for.end38.6.9
  %765 = add nsw i64 %indvars.iv.next21.5.9, %708
  %arrayidx51.6.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %765
  store float %partial_sum.0.lcssa.6.9, float* %arrayidx51.6.9, align 4
  br label %for.inc53.6.9

for.inc53.6.9:                                    ; preds = %if.else.6.9, %if.then40.6.9
  %inc54.6.9 = add nsw i32 %in_j.011.9, 7
  %indvars.iv.next21.6.9 = add nsw i64 %indvars.iv20.9, 7
  br i1 %cmp94, label %for.end38.7.9, label %for.body10.7.9.preheader

for.body10.7.9.preheader:                         ; preds = %for.inc53.6.9
  br label %for.body10.7.9

for.body10.7.9:                                   ; preds = %for.body10.7.9.preheader, %for.inc36.7.9
  %ki.06.7.9 = phi i32 [ %inc37.7.9, %for.inc36.7.9 ], [ 0, %for.body10.7.9.preheader ]
  %partial_sum.05.7.9 = phi float [ %partial_sum.3.7.9, %for.inc36.7.9 ], [ 0.000000e+00, %for.body10.7.9.preheader ]
  %add.7.9 = add nsw i32 %ki.06.7.9, %inc58.8
  %notlhs.7.9 = icmp slt i32 %add.7.9, 0
  %notrhs.7.9 = icmp uge i32 %add.7.9, %img_height
  %.not.7.9 = or i1 %notrhs.7.9, %notlhs.7.9
  %brmerge.7.9 = or i1 %.not.7.9, %cmp151.not.7.9
  br i1 %brmerge.7.9, label %for.inc36.7.9, label %for.body16.lr.ph.7.9

for.body16.lr.ph.7.9:                             ; preds = %for.body10.7.9
  %mul.7.9 = shl i32 %add.7.9, 7
  %mul30.7.9 = mul i32 %ki.06.7.9, %kern_width
  br label %for.body16.7.9

for.body16.7.9:                                   ; preds = %for.inc.7.9, %for.body16.lr.ph.7.9
  %indvars.iv.7.9 = phi i64 [ 0, %for.body16.lr.ph.7.9 ], [ %indvars.iv.next.7.9, %for.inc.7.9 ]
  %partial_sum.12.7.9 = phi float [ %partial_sum.05.7.9, %for.body16.lr.ph.7.9 ], [ %partial_sum.2.7.9, %for.inc.7.9 ]
  %766 = trunc i64 %indvars.iv.7.9 to i32
  %add17.7.9 = add nsw i32 %766, %inc54.6.9
  %cmp18.7.9 = icmp sgt i32 %add17.7.9, -1
  %cmp21.7.9 = icmp ult i32 %add17.7.9, %img_width
  %767 = and i1 %cmp18.7.9, %cmp21.7.9
  br i1 %767, label %if.end26.7.9, label %for.inc.7.9

if.end26.7.9:                                     ; preds = %for.body16.7.9
  %add29.7.9 = add nsw i32 %add17.7.9, %mul.7.9
  %idxprom.7.9 = sext i32 %add29.7.9 to i64
  %arrayidx.7.9 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.9
  %768 = load float, float* %arrayidx.7.9, align 4
  %769 = trunc i64 %indvars.iv.7.9 to i32
  %add31.7.9 = add i32 %769, %mul30.7.9
  %idxprom32.7.9 = zext i32 %add31.7.9 to i64
  %arrayidx33.7.9 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.9
  %770 = load float, float* %arrayidx33.7.9, align 4
  %mul34.7.9 = fmul float %768, %770
  %add35.7.9 = fadd float %partial_sum.12.7.9, %mul34.7.9
  br label %for.inc.7.9

for.inc.7.9:                                      ; preds = %if.end26.7.9, %for.body16.7.9
  %partial_sum.2.7.9 = phi float [ %add35.7.9, %if.end26.7.9 ], [ %partial_sum.12.7.9, %for.body16.7.9 ]
  %indvars.iv.next.7.9 = add nuw nsw i64 %indvars.iv.7.9, 1
  %lftr.wideiv.7.9 = trunc i64 %indvars.iv.next.7.9 to i32
  %exitcond.7.9 = icmp eq i32 %lftr.wideiv.7.9, %kern_width
  br i1 %exitcond.7.9, label %for.inc36.7.9.loopexit, label %for.body16.7.9, !llvm.loop !1

for.inc36.7.9.loopexit:                           ; preds = %for.inc.7.9
  %partial_sum.2.7.9.lcssa = phi float [ %partial_sum.2.7.9, %for.inc.7.9 ]
  br label %for.inc36.7.9

for.inc36.7.9:                                    ; preds = %for.inc36.7.9.loopexit, %for.body10.7.9
  %partial_sum.3.7.9 = phi float [ %partial_sum.05.7.9, %for.body10.7.9 ], [ %partial_sum.2.7.9.lcssa, %for.inc36.7.9.loopexit ]
  %inc37.7.9 = add nuw nsw i32 %ki.06.7.9, 1
  %exitcond19.7.9 = icmp eq i32 %inc37.7.9, %kern_height
  br i1 %exitcond19.7.9, label %for.end38.7.9.loopexit, label %for.body10.7.9, !llvm.loop !3

for.end38.7.9.loopexit:                           ; preds = %for.inc36.7.9
  %partial_sum.3.7.9.lcssa = phi float [ %partial_sum.3.7.9, %for.inc36.7.9 ]
  br label %for.end38.7.9

for.end38.7.9:                                    ; preds = %for.end38.7.9.loopexit, %for.inc53.6.9
  %partial_sum.0.lcssa.7.9 = phi float [ 0.000000e+00, %for.inc53.6.9 ], [ %partial_sum.3.7.9.lcssa, %for.end38.7.9.loopexit ]
  br i1 %tobool39, label %if.else.7.9, label %if.then40.7.9

if.then40.7.9:                                    ; preds = %for.end38.7.9
  %cmp41.7.9 = fcmp olt float %partial_sum.0.lcssa.7.9, 0.000000e+00
  %sub42.7.9 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.9
  %cond.7.9 = select i1 %cmp41.7.9, float %sub42.7.9, float %partial_sum.0.lcssa.7.9
  %conv.7.9 = fptoui float %cond.7.9 to i8
  %conv43.7.9 = uitofp i8 %conv.7.9 to float
  %771 = add nsw i64 %indvars.iv.next21.6.9, %709
  %arrayidx47.7.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %771
  store float %conv43.7.9, float* %arrayidx47.7.9, align 4
  br label %for.inc53.7.9

if.else.7.9:                                      ; preds = %for.end38.7.9
  %772 = add nsw i64 %indvars.iv.next21.6.9, %708
  %arrayidx51.7.9 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %772
  store float %partial_sum.0.lcssa.7.9, float* %arrayidx51.7.9, align 4
  br label %for.inc53.7.9

for.inc53.7.9:                                    ; preds = %if.else.7.9, %if.then40.7.9
  %inc54.7.9 = add nsw i32 %in_j.011.9, 8
  %indvars.iv.next21.7.9 = add nsw i64 %indvars.iv20.9, 8
  %lftr.wideiv24.7.9 = trunc i64 %indvars.iv.next21.7.9 to i32
  %exitcond25.7.9 = icmp eq i32 %lftr.wideiv24.7.9, %img_width
  br i1 %exitcond25.7.9, label %for.inc57.9.loopexit, label %for.cond8.preheader.9, !llvm.loop !5

for.inc57.9.loopexit:                             ; preds = %for.inc53.7.9
  br label %for.inc57.9

for.inc57.9:                                      ; preds = %for.inc57.9.loopexit, %for.cond8.preheader.lr.ph.split.9
  %inc58.9 = add nsw i32 %in_i.015, 10
  %indvars.iv.next27.9 = add nsw i64 %indvars.iv26, 10
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.10

for.cond8.preheader.lr.ph.10:                     ; preds = %for.inc57.9
  %773 = trunc i64 %indvars.iv.next27.9 to i32
  %mul48.10 = shl i32 %773, 7
  %774 = trunc i64 %indvars.iv.next27.9 to i32
  %mul44.10 = shl i32 %774, 7
  %775 = sext i32 %mul48.10 to i64
  %776 = sext i32 %mul44.10 to i64
  br i1 %lcmp.mod.10, label %for.cond8.preheader.lr.ph.split.10, label %for.cond8.preheader.prol.10.preheader

for.cond8.preheader.prol.10.preheader:            ; preds = %for.cond8.preheader.lr.ph.10
  br label %for.cond8.preheader.prol.10

for.cond8.preheader.prol.10:                      ; preds = %for.cond8.preheader.prol.10.preheader, %for.inc53.prol.10
  %indvars.iv20.prol.10 = phi i64 [ %indvars.iv.next21.prol.10, %for.inc53.prol.10 ], [ 0, %for.cond8.preheader.prol.10.preheader ]
  %in_j.011.prol.10 = phi i32 [ %inc54.prol.10, %for.inc53.prol.10 ], [ %sub4, %for.cond8.preheader.prol.10.preheader ]
  %prol.iter.10 = phi i32 [ %prol.iter.sub.10, %for.inc53.prol.10 ], [ %xtraiter.10, %for.cond8.preheader.prol.10.preheader ]
  br i1 %cmp94, label %for.end38.prol.10, label %for.body10.prol.10.preheader

for.body10.prol.10.preheader:                     ; preds = %for.cond8.preheader.prol.10
  br label %for.body10.prol.10

for.body10.prol.10:                               ; preds = %for.body10.prol.10.preheader, %for.inc36.prol.10
  %ki.06.prol.10 = phi i32 [ %inc37.prol.10, %for.inc36.prol.10 ], [ 0, %for.body10.prol.10.preheader ]
  %partial_sum.05.prol.10 = phi float [ %partial_sum.3.prol.10, %for.inc36.prol.10 ], [ 0.000000e+00, %for.body10.prol.10.preheader ]
  %add.prol.10 = add nsw i32 %ki.06.prol.10, %inc58.9
  %notlhs.prol.10 = icmp slt i32 %add.prol.10, 0
  %notrhs.prol.10 = icmp uge i32 %add.prol.10, %img_height
  %.not.prol.10 = or i1 %notrhs.prol.10, %notlhs.prol.10
  %brmerge.prol.10 = or i1 %.not.prol.10, %cmp151.not.prol.10
  br i1 %brmerge.prol.10, label %for.inc36.prol.10, label %for.body16.lr.ph.prol.10

for.body16.lr.ph.prol.10:                         ; preds = %for.body10.prol.10
  %mul.prol.10 = shl i32 %add.prol.10, 7
  %mul30.prol.10 = mul i32 %ki.06.prol.10, %kern_width
  br label %for.body16.prol.10

for.body16.prol.10:                               ; preds = %for.inc.prol.10, %for.body16.lr.ph.prol.10
  %indvars.iv.prol.10 = phi i64 [ 0, %for.body16.lr.ph.prol.10 ], [ %indvars.iv.next.prol.10, %for.inc.prol.10 ]
  %partial_sum.12.prol.10 = phi float [ %partial_sum.05.prol.10, %for.body16.lr.ph.prol.10 ], [ %partial_sum.2.prol.10, %for.inc.prol.10 ]
  %777 = trunc i64 %indvars.iv.prol.10 to i32
  %add17.prol.10 = add nsw i32 %777, %in_j.011.prol.10
  %cmp18.prol.10 = icmp sgt i32 %add17.prol.10, -1
  %cmp21.prol.10 = icmp ult i32 %add17.prol.10, %img_width
  %778 = and i1 %cmp18.prol.10, %cmp21.prol.10
  br i1 %778, label %if.end26.prol.10, label %for.inc.prol.10

if.end26.prol.10:                                 ; preds = %for.body16.prol.10
  %add29.prol.10 = add nsw i32 %add17.prol.10, %mul.prol.10
  %idxprom.prol.10 = sext i32 %add29.prol.10 to i64
  %arrayidx.prol.10 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.10
  %779 = load float, float* %arrayidx.prol.10, align 4
  %780 = trunc i64 %indvars.iv.prol.10 to i32
  %add31.prol.10 = add i32 %780, %mul30.prol.10
  %idxprom32.prol.10 = zext i32 %add31.prol.10 to i64
  %arrayidx33.prol.10 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.10
  %781 = load float, float* %arrayidx33.prol.10, align 4
  %mul34.prol.10 = fmul float %779, %781
  %add35.prol.10 = fadd float %partial_sum.12.prol.10, %mul34.prol.10
  br label %for.inc.prol.10

for.inc.prol.10:                                  ; preds = %if.end26.prol.10, %for.body16.prol.10
  %partial_sum.2.prol.10 = phi float [ %add35.prol.10, %if.end26.prol.10 ], [ %partial_sum.12.prol.10, %for.body16.prol.10 ]
  %indvars.iv.next.prol.10 = add nuw nsw i64 %indvars.iv.prol.10, 1
  %lftr.wideiv.prol.10 = trunc i64 %indvars.iv.next.prol.10 to i32
  %exitcond.prol.10 = icmp eq i32 %lftr.wideiv.prol.10, %kern_width
  br i1 %exitcond.prol.10, label %for.inc36.prol.10.loopexit, label %for.body16.prol.10, !llvm.loop !1

for.inc36.prol.10.loopexit:                       ; preds = %for.inc.prol.10
  %partial_sum.2.prol.10.lcssa = phi float [ %partial_sum.2.prol.10, %for.inc.prol.10 ]
  br label %for.inc36.prol.10

for.inc36.prol.10:                                ; preds = %for.inc36.prol.10.loopexit, %for.body10.prol.10
  %partial_sum.3.prol.10 = phi float [ %partial_sum.05.prol.10, %for.body10.prol.10 ], [ %partial_sum.2.prol.10.lcssa, %for.inc36.prol.10.loopexit ]
  %inc37.prol.10 = add nuw nsw i32 %ki.06.prol.10, 1
  %exitcond19.prol.10 = icmp eq i32 %inc37.prol.10, %kern_height
  br i1 %exitcond19.prol.10, label %for.end38.prol.10.loopexit, label %for.body10.prol.10, !llvm.loop !3

for.end38.prol.10.loopexit:                       ; preds = %for.inc36.prol.10
  %partial_sum.3.prol.10.lcssa = phi float [ %partial_sum.3.prol.10, %for.inc36.prol.10 ]
  br label %for.end38.prol.10

for.end38.prol.10:                                ; preds = %for.end38.prol.10.loopexit, %for.cond8.preheader.prol.10
  %partial_sum.0.lcssa.prol.10 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.10 ], [ %partial_sum.3.prol.10.lcssa, %for.end38.prol.10.loopexit ]
  br i1 %tobool39, label %if.else.prol.10, label %if.then40.prol.10

if.then40.prol.10:                                ; preds = %for.end38.prol.10
  %cmp41.prol.10 = fcmp olt float %partial_sum.0.lcssa.prol.10, 0.000000e+00
  %sub42.prol.10 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.10
  %cond.prol.10 = select i1 %cmp41.prol.10, float %sub42.prol.10, float %partial_sum.0.lcssa.prol.10
  %conv.prol.10 = fptoui float %cond.prol.10 to i8
  %conv43.prol.10 = uitofp i8 %conv.prol.10 to float
  %782 = add nsw i64 %indvars.iv20.prol.10, %776
  %arrayidx47.prol.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %782
  store float %conv43.prol.10, float* %arrayidx47.prol.10, align 4
  br label %for.inc53.prol.10

if.else.prol.10:                                  ; preds = %for.end38.prol.10
  %783 = add nsw i64 %indvars.iv20.prol.10, %775
  %arrayidx51.prol.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %783
  store float %partial_sum.0.lcssa.prol.10, float* %arrayidx51.prol.10, align 4
  br label %for.inc53.prol.10

for.inc53.prol.10:                                ; preds = %if.else.prol.10, %if.then40.prol.10
  %inc54.prol.10 = add nsw i32 %in_j.011.prol.10, 1
  %indvars.iv.next21.prol.10 = add nuw nsw i64 %indvars.iv20.prol.10, 1
  %prol.iter.sub.10 = add i32 %prol.iter.10, -1
  %prol.iter.cmp.10 = icmp eq i32 %prol.iter.sub.10, 0
  br i1 %prol.iter.cmp.10, label %for.cond8.preheader.lr.ph.split.10.loopexit, label %for.cond8.preheader.prol.10, !llvm.loop !4

for.cond8.preheader.lr.ph.split.10.loopexit:      ; preds = %for.inc53.prol.10
  %indvars.iv.next21.prol.10.lcssa = phi i64 [ %indvars.iv.next21.prol.10, %for.inc53.prol.10 ]
  %inc54.prol.10.lcssa = phi i32 [ %inc54.prol.10, %for.inc53.prol.10 ]
  br label %for.cond8.preheader.lr.ph.split.10

for.cond8.preheader.lr.ph.split.10:               ; preds = %for.cond8.preheader.lr.ph.split.10.loopexit, %for.cond8.preheader.lr.ph.10
  %indvars.iv20.unr.10 = phi i64 [ 0, %for.cond8.preheader.lr.ph.10 ], [ %indvars.iv.next21.prol.10.lcssa, %for.cond8.preheader.lr.ph.split.10.loopexit ]
  %in_j.011.unr.10 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.10 ], [ %inc54.prol.10.lcssa, %for.cond8.preheader.lr.ph.split.10.loopexit ]
  br i1 %81, label %for.inc57.10, label %for.cond8.preheader.10.preheader

for.cond8.preheader.10.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.10
  br label %for.cond8.preheader.10

for.cond8.preheader.10:                           ; preds = %for.cond8.preheader.10.preheader, %for.inc53.7.10
  %indvars.iv20.10 = phi i64 [ %indvars.iv.next21.7.10, %for.inc53.7.10 ], [ %indvars.iv20.unr.10, %for.cond8.preheader.10.preheader ]
  %in_j.011.10 = phi i32 [ %inc54.7.10, %for.inc53.7.10 ], [ %in_j.011.unr.10, %for.cond8.preheader.10.preheader ]
  br i1 %cmp94, label %for.end38.10, label %for.body10.10.preheader

for.body10.10.preheader:                          ; preds = %for.cond8.preheader.10
  br label %for.body10.10

for.body10.10:                                    ; preds = %for.body10.10.preheader, %for.inc36.10
  %ki.06.10 = phi i32 [ %inc37.10, %for.inc36.10 ], [ 0, %for.body10.10.preheader ]
  %partial_sum.05.10 = phi float [ %partial_sum.3.10, %for.inc36.10 ], [ 0.000000e+00, %for.body10.10.preheader ]
  %add.10 = add nsw i32 %ki.06.10, %inc58.9
  %notlhs.10 = icmp slt i32 %add.10, 0
  %notrhs.10 = icmp uge i32 %add.10, %img_height
  %.not.10 = or i1 %notrhs.10, %notlhs.10
  %brmerge.10 = or i1 %.not.10, %cmp151.not.10
  br i1 %brmerge.10, label %for.inc36.10, label %for.body16.lr.ph.10

for.body16.lr.ph.10:                              ; preds = %for.body10.10
  %mul.10 = shl i32 %add.10, 7
  %mul30.10 = mul i32 %ki.06.10, %kern_width
  br label %for.body16.10

for.body16.10:                                    ; preds = %for.inc.10, %for.body16.lr.ph.10
  %indvars.iv.10 = phi i64 [ 0, %for.body16.lr.ph.10 ], [ %indvars.iv.next.10, %for.inc.10 ]
  %partial_sum.12.10 = phi float [ %partial_sum.05.10, %for.body16.lr.ph.10 ], [ %partial_sum.2.10, %for.inc.10 ]
  %784 = trunc i64 %indvars.iv.10 to i32
  %add17.10 = add nsw i32 %784, %in_j.011.10
  %cmp18.10 = icmp sgt i32 %add17.10, -1
  %cmp21.10 = icmp ult i32 %add17.10, %img_width
  %785 = and i1 %cmp18.10, %cmp21.10
  br i1 %785, label %if.end26.10, label %for.inc.10

if.end26.10:                                      ; preds = %for.body16.10
  %add29.10 = add nsw i32 %add17.10, %mul.10
  %idxprom.10 = sext i32 %add29.10 to i64
  %arrayidx.10 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.10
  %786 = load float, float* %arrayidx.10, align 4
  %787 = trunc i64 %indvars.iv.10 to i32
  %add31.10 = add i32 %787, %mul30.10
  %idxprom32.10 = zext i32 %add31.10 to i64
  %arrayidx33.10 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.10
  %788 = load float, float* %arrayidx33.10, align 4
  %mul34.10 = fmul float %786, %788
  %add35.10 = fadd float %partial_sum.12.10, %mul34.10
  br label %for.inc.10

for.inc.10:                                       ; preds = %if.end26.10, %for.body16.10
  %partial_sum.2.10 = phi float [ %add35.10, %if.end26.10 ], [ %partial_sum.12.10, %for.body16.10 ]
  %indvars.iv.next.10 = add nuw nsw i64 %indvars.iv.10, 1
  %lftr.wideiv.10 = trunc i64 %indvars.iv.next.10 to i32
  %exitcond.10 = icmp eq i32 %lftr.wideiv.10, %kern_width
  br i1 %exitcond.10, label %for.inc36.10.loopexit, label %for.body16.10, !llvm.loop !1

for.inc36.10.loopexit:                            ; preds = %for.inc.10
  %partial_sum.2.10.lcssa = phi float [ %partial_sum.2.10, %for.inc.10 ]
  br label %for.inc36.10

for.inc36.10:                                     ; preds = %for.inc36.10.loopexit, %for.body10.10
  %partial_sum.3.10 = phi float [ %partial_sum.05.10, %for.body10.10 ], [ %partial_sum.2.10.lcssa, %for.inc36.10.loopexit ]
  %inc37.10 = add nuw nsw i32 %ki.06.10, 1
  %exitcond19.10 = icmp eq i32 %inc37.10, %kern_height
  br i1 %exitcond19.10, label %for.end38.10.loopexit, label %for.body10.10, !llvm.loop !3

for.end38.10.loopexit:                            ; preds = %for.inc36.10
  %partial_sum.3.10.lcssa = phi float [ %partial_sum.3.10, %for.inc36.10 ]
  br label %for.end38.10

for.end38.10:                                     ; preds = %for.end38.10.loopexit, %for.cond8.preheader.10
  %partial_sum.0.lcssa.10 = phi float [ 0.000000e+00, %for.cond8.preheader.10 ], [ %partial_sum.3.10.lcssa, %for.end38.10.loopexit ]
  br i1 %tobool39, label %if.else.10, label %if.then40.10

if.then40.10:                                     ; preds = %for.end38.10
  %cmp41.10 = fcmp olt float %partial_sum.0.lcssa.10, 0.000000e+00
  %sub42.10 = fsub float -0.000000e+00, %partial_sum.0.lcssa.10
  %cond.10 = select i1 %cmp41.10, float %sub42.10, float %partial_sum.0.lcssa.10
  %conv.10 = fptoui float %cond.10 to i8
  %conv43.10 = uitofp i8 %conv.10 to float
  %789 = add nsw i64 %indvars.iv20.10, %776
  %arrayidx47.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %789
  store float %conv43.10, float* %arrayidx47.10, align 4
  br label %for.inc53.10

if.else.10:                                       ; preds = %for.end38.10
  %790 = add nsw i64 %indvars.iv20.10, %775
  %arrayidx51.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %790
  store float %partial_sum.0.lcssa.10, float* %arrayidx51.10, align 4
  br label %for.inc53.10

for.inc53.10:                                     ; preds = %if.else.10, %if.then40.10
  %inc54.10 = add nsw i32 %in_j.011.10, 1
  %indvars.iv.next21.10 = add nuw nsw i64 %indvars.iv20.10, 1
  br i1 %cmp94, label %for.end38.1.10, label %for.body10.1.10.preheader

for.body10.1.10.preheader:                        ; preds = %for.inc53.10
  br label %for.body10.1.10

for.body10.1.10:                                  ; preds = %for.body10.1.10.preheader, %for.inc36.1.10
  %ki.06.1.10 = phi i32 [ %inc37.1.10, %for.inc36.1.10 ], [ 0, %for.body10.1.10.preheader ]
  %partial_sum.05.1.10 = phi float [ %partial_sum.3.1.10, %for.inc36.1.10 ], [ 0.000000e+00, %for.body10.1.10.preheader ]
  %add.1.10 = add nsw i32 %ki.06.1.10, %inc58.9
  %notlhs.1.10 = icmp slt i32 %add.1.10, 0
  %notrhs.1.10 = icmp uge i32 %add.1.10, %img_height
  %.not.1.10 = or i1 %notrhs.1.10, %notlhs.1.10
  %brmerge.1.10 = or i1 %.not.1.10, %cmp151.not.1.10
  br i1 %brmerge.1.10, label %for.inc36.1.10, label %for.body16.lr.ph.1.10

for.body16.lr.ph.1.10:                            ; preds = %for.body10.1.10
  %mul.1.10 = shl i32 %add.1.10, 7
  %mul30.1.10 = mul i32 %ki.06.1.10, %kern_width
  br label %for.body16.1.10

for.body16.1.10:                                  ; preds = %for.inc.1.10, %for.body16.lr.ph.1.10
  %indvars.iv.1.10 = phi i64 [ 0, %for.body16.lr.ph.1.10 ], [ %indvars.iv.next.1.10, %for.inc.1.10 ]
  %partial_sum.12.1.10 = phi float [ %partial_sum.05.1.10, %for.body16.lr.ph.1.10 ], [ %partial_sum.2.1.10, %for.inc.1.10 ]
  %791 = trunc i64 %indvars.iv.1.10 to i32
  %add17.1.10 = add nsw i32 %791, %inc54.10
  %cmp18.1.10 = icmp sgt i32 %add17.1.10, -1
  %cmp21.1.10 = icmp ult i32 %add17.1.10, %img_width
  %792 = and i1 %cmp18.1.10, %cmp21.1.10
  br i1 %792, label %if.end26.1.10, label %for.inc.1.10

if.end26.1.10:                                    ; preds = %for.body16.1.10
  %add29.1.10 = add nsw i32 %add17.1.10, %mul.1.10
  %idxprom.1.10 = sext i32 %add29.1.10 to i64
  %arrayidx.1.10 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.10
  %793 = load float, float* %arrayidx.1.10, align 4
  %794 = trunc i64 %indvars.iv.1.10 to i32
  %add31.1.10 = add i32 %794, %mul30.1.10
  %idxprom32.1.10 = zext i32 %add31.1.10 to i64
  %arrayidx33.1.10 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.10
  %795 = load float, float* %arrayidx33.1.10, align 4
  %mul34.1.10 = fmul float %793, %795
  %add35.1.10 = fadd float %partial_sum.12.1.10, %mul34.1.10
  br label %for.inc.1.10

for.inc.1.10:                                     ; preds = %if.end26.1.10, %for.body16.1.10
  %partial_sum.2.1.10 = phi float [ %add35.1.10, %if.end26.1.10 ], [ %partial_sum.12.1.10, %for.body16.1.10 ]
  %indvars.iv.next.1.10 = add nuw nsw i64 %indvars.iv.1.10, 1
  %lftr.wideiv.1.10 = trunc i64 %indvars.iv.next.1.10 to i32
  %exitcond.1.10 = icmp eq i32 %lftr.wideiv.1.10, %kern_width
  br i1 %exitcond.1.10, label %for.inc36.1.10.loopexit, label %for.body16.1.10, !llvm.loop !1

for.inc36.1.10.loopexit:                          ; preds = %for.inc.1.10
  %partial_sum.2.1.10.lcssa = phi float [ %partial_sum.2.1.10, %for.inc.1.10 ]
  br label %for.inc36.1.10

for.inc36.1.10:                                   ; preds = %for.inc36.1.10.loopexit, %for.body10.1.10
  %partial_sum.3.1.10 = phi float [ %partial_sum.05.1.10, %for.body10.1.10 ], [ %partial_sum.2.1.10.lcssa, %for.inc36.1.10.loopexit ]
  %inc37.1.10 = add nuw nsw i32 %ki.06.1.10, 1
  %exitcond19.1.10 = icmp eq i32 %inc37.1.10, %kern_height
  br i1 %exitcond19.1.10, label %for.end38.1.10.loopexit, label %for.body10.1.10, !llvm.loop !3

for.end38.1.10.loopexit:                          ; preds = %for.inc36.1.10
  %partial_sum.3.1.10.lcssa = phi float [ %partial_sum.3.1.10, %for.inc36.1.10 ]
  br label %for.end38.1.10

for.end38.1.10:                                   ; preds = %for.end38.1.10.loopexit, %for.inc53.10
  %partial_sum.0.lcssa.1.10 = phi float [ 0.000000e+00, %for.inc53.10 ], [ %partial_sum.3.1.10.lcssa, %for.end38.1.10.loopexit ]
  br i1 %tobool39, label %if.else.1.10, label %if.then40.1.10

if.then40.1.10:                                   ; preds = %for.end38.1.10
  %cmp41.1.10 = fcmp olt float %partial_sum.0.lcssa.1.10, 0.000000e+00
  %sub42.1.10 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.10
  %cond.1.10 = select i1 %cmp41.1.10, float %sub42.1.10, float %partial_sum.0.lcssa.1.10
  %conv.1.10 = fptoui float %cond.1.10 to i8
  %conv43.1.10 = uitofp i8 %conv.1.10 to float
  %796 = add nsw i64 %indvars.iv.next21.10, %776
  %arrayidx47.1.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %796
  store float %conv43.1.10, float* %arrayidx47.1.10, align 4
  br label %for.inc53.1.10

if.else.1.10:                                     ; preds = %for.end38.1.10
  %797 = add nsw i64 %indvars.iv.next21.10, %775
  %arrayidx51.1.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %797
  store float %partial_sum.0.lcssa.1.10, float* %arrayidx51.1.10, align 4
  br label %for.inc53.1.10

for.inc53.1.10:                                   ; preds = %if.else.1.10, %if.then40.1.10
  %inc54.1.10 = add nsw i32 %in_j.011.10, 2
  %indvars.iv.next21.1.10 = add nsw i64 %indvars.iv20.10, 2
  br i1 %cmp94, label %for.end38.2.10, label %for.body10.2.10.preheader

for.body10.2.10.preheader:                        ; preds = %for.inc53.1.10
  br label %for.body10.2.10

for.body10.2.10:                                  ; preds = %for.body10.2.10.preheader, %for.inc36.2.10
  %ki.06.2.10 = phi i32 [ %inc37.2.10, %for.inc36.2.10 ], [ 0, %for.body10.2.10.preheader ]
  %partial_sum.05.2.10 = phi float [ %partial_sum.3.2.10, %for.inc36.2.10 ], [ 0.000000e+00, %for.body10.2.10.preheader ]
  %add.2.10 = add nsw i32 %ki.06.2.10, %inc58.9
  %notlhs.2.10 = icmp slt i32 %add.2.10, 0
  %notrhs.2.10 = icmp uge i32 %add.2.10, %img_height
  %.not.2.10 = or i1 %notrhs.2.10, %notlhs.2.10
  %brmerge.2.10 = or i1 %.not.2.10, %cmp151.not.2.10
  br i1 %brmerge.2.10, label %for.inc36.2.10, label %for.body16.lr.ph.2.10

for.body16.lr.ph.2.10:                            ; preds = %for.body10.2.10
  %mul.2.10 = shl i32 %add.2.10, 7
  %mul30.2.10 = mul i32 %ki.06.2.10, %kern_width
  br label %for.body16.2.10

for.body16.2.10:                                  ; preds = %for.inc.2.10, %for.body16.lr.ph.2.10
  %indvars.iv.2.10 = phi i64 [ 0, %for.body16.lr.ph.2.10 ], [ %indvars.iv.next.2.10, %for.inc.2.10 ]
  %partial_sum.12.2.10 = phi float [ %partial_sum.05.2.10, %for.body16.lr.ph.2.10 ], [ %partial_sum.2.2.10, %for.inc.2.10 ]
  %798 = trunc i64 %indvars.iv.2.10 to i32
  %add17.2.10 = add nsw i32 %798, %inc54.1.10
  %cmp18.2.10 = icmp sgt i32 %add17.2.10, -1
  %cmp21.2.10 = icmp ult i32 %add17.2.10, %img_width
  %799 = and i1 %cmp18.2.10, %cmp21.2.10
  br i1 %799, label %if.end26.2.10, label %for.inc.2.10

if.end26.2.10:                                    ; preds = %for.body16.2.10
  %add29.2.10 = add nsw i32 %add17.2.10, %mul.2.10
  %idxprom.2.10 = sext i32 %add29.2.10 to i64
  %arrayidx.2.10 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.10
  %800 = load float, float* %arrayidx.2.10, align 4
  %801 = trunc i64 %indvars.iv.2.10 to i32
  %add31.2.10 = add i32 %801, %mul30.2.10
  %idxprom32.2.10 = zext i32 %add31.2.10 to i64
  %arrayidx33.2.10 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.10
  %802 = load float, float* %arrayidx33.2.10, align 4
  %mul34.2.10 = fmul float %800, %802
  %add35.2.10 = fadd float %partial_sum.12.2.10, %mul34.2.10
  br label %for.inc.2.10

for.inc.2.10:                                     ; preds = %if.end26.2.10, %for.body16.2.10
  %partial_sum.2.2.10 = phi float [ %add35.2.10, %if.end26.2.10 ], [ %partial_sum.12.2.10, %for.body16.2.10 ]
  %indvars.iv.next.2.10 = add nuw nsw i64 %indvars.iv.2.10, 1
  %lftr.wideiv.2.10 = trunc i64 %indvars.iv.next.2.10 to i32
  %exitcond.2.10 = icmp eq i32 %lftr.wideiv.2.10, %kern_width
  br i1 %exitcond.2.10, label %for.inc36.2.10.loopexit, label %for.body16.2.10, !llvm.loop !1

for.inc36.2.10.loopexit:                          ; preds = %for.inc.2.10
  %partial_sum.2.2.10.lcssa = phi float [ %partial_sum.2.2.10, %for.inc.2.10 ]
  br label %for.inc36.2.10

for.inc36.2.10:                                   ; preds = %for.inc36.2.10.loopexit, %for.body10.2.10
  %partial_sum.3.2.10 = phi float [ %partial_sum.05.2.10, %for.body10.2.10 ], [ %partial_sum.2.2.10.lcssa, %for.inc36.2.10.loopexit ]
  %inc37.2.10 = add nuw nsw i32 %ki.06.2.10, 1
  %exitcond19.2.10 = icmp eq i32 %inc37.2.10, %kern_height
  br i1 %exitcond19.2.10, label %for.end38.2.10.loopexit, label %for.body10.2.10, !llvm.loop !3

for.end38.2.10.loopexit:                          ; preds = %for.inc36.2.10
  %partial_sum.3.2.10.lcssa = phi float [ %partial_sum.3.2.10, %for.inc36.2.10 ]
  br label %for.end38.2.10

for.end38.2.10:                                   ; preds = %for.end38.2.10.loopexit, %for.inc53.1.10
  %partial_sum.0.lcssa.2.10 = phi float [ 0.000000e+00, %for.inc53.1.10 ], [ %partial_sum.3.2.10.lcssa, %for.end38.2.10.loopexit ]
  br i1 %tobool39, label %if.else.2.10, label %if.then40.2.10

if.then40.2.10:                                   ; preds = %for.end38.2.10
  %cmp41.2.10 = fcmp olt float %partial_sum.0.lcssa.2.10, 0.000000e+00
  %sub42.2.10 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.10
  %cond.2.10 = select i1 %cmp41.2.10, float %sub42.2.10, float %partial_sum.0.lcssa.2.10
  %conv.2.10 = fptoui float %cond.2.10 to i8
  %conv43.2.10 = uitofp i8 %conv.2.10 to float
  %803 = add nsw i64 %indvars.iv.next21.1.10, %776
  %arrayidx47.2.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %803
  store float %conv43.2.10, float* %arrayidx47.2.10, align 4
  br label %for.inc53.2.10

if.else.2.10:                                     ; preds = %for.end38.2.10
  %804 = add nsw i64 %indvars.iv.next21.1.10, %775
  %arrayidx51.2.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %804
  store float %partial_sum.0.lcssa.2.10, float* %arrayidx51.2.10, align 4
  br label %for.inc53.2.10

for.inc53.2.10:                                   ; preds = %if.else.2.10, %if.then40.2.10
  %inc54.2.10 = add nsw i32 %in_j.011.10, 3
  %indvars.iv.next21.2.10 = add nsw i64 %indvars.iv20.10, 3
  br i1 %cmp94, label %for.end38.3.10, label %for.body10.3.10.preheader

for.body10.3.10.preheader:                        ; preds = %for.inc53.2.10
  br label %for.body10.3.10

for.body10.3.10:                                  ; preds = %for.body10.3.10.preheader, %for.inc36.3.10
  %ki.06.3.10 = phi i32 [ %inc37.3.10, %for.inc36.3.10 ], [ 0, %for.body10.3.10.preheader ]
  %partial_sum.05.3.10 = phi float [ %partial_sum.3.3.10, %for.inc36.3.10 ], [ 0.000000e+00, %for.body10.3.10.preheader ]
  %add.3.10 = add nsw i32 %ki.06.3.10, %inc58.9
  %notlhs.3.10 = icmp slt i32 %add.3.10, 0
  %notrhs.3.10 = icmp uge i32 %add.3.10, %img_height
  %.not.3.10 = or i1 %notrhs.3.10, %notlhs.3.10
  %brmerge.3.10 = or i1 %.not.3.10, %cmp151.not.3.10
  br i1 %brmerge.3.10, label %for.inc36.3.10, label %for.body16.lr.ph.3.10

for.body16.lr.ph.3.10:                            ; preds = %for.body10.3.10
  %mul.3.10 = shl i32 %add.3.10, 7
  %mul30.3.10 = mul i32 %ki.06.3.10, %kern_width
  br label %for.body16.3.10

for.body16.3.10:                                  ; preds = %for.inc.3.10, %for.body16.lr.ph.3.10
  %indvars.iv.3.10 = phi i64 [ 0, %for.body16.lr.ph.3.10 ], [ %indvars.iv.next.3.10, %for.inc.3.10 ]
  %partial_sum.12.3.10 = phi float [ %partial_sum.05.3.10, %for.body16.lr.ph.3.10 ], [ %partial_sum.2.3.10, %for.inc.3.10 ]
  %805 = trunc i64 %indvars.iv.3.10 to i32
  %add17.3.10 = add nsw i32 %805, %inc54.2.10
  %cmp18.3.10 = icmp sgt i32 %add17.3.10, -1
  %cmp21.3.10 = icmp ult i32 %add17.3.10, %img_width
  %806 = and i1 %cmp18.3.10, %cmp21.3.10
  br i1 %806, label %if.end26.3.10, label %for.inc.3.10

if.end26.3.10:                                    ; preds = %for.body16.3.10
  %add29.3.10 = add nsw i32 %add17.3.10, %mul.3.10
  %idxprom.3.10 = sext i32 %add29.3.10 to i64
  %arrayidx.3.10 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.10
  %807 = load float, float* %arrayidx.3.10, align 4
  %808 = trunc i64 %indvars.iv.3.10 to i32
  %add31.3.10 = add i32 %808, %mul30.3.10
  %idxprom32.3.10 = zext i32 %add31.3.10 to i64
  %arrayidx33.3.10 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.10
  %809 = load float, float* %arrayidx33.3.10, align 4
  %mul34.3.10 = fmul float %807, %809
  %add35.3.10 = fadd float %partial_sum.12.3.10, %mul34.3.10
  br label %for.inc.3.10

for.inc.3.10:                                     ; preds = %if.end26.3.10, %for.body16.3.10
  %partial_sum.2.3.10 = phi float [ %add35.3.10, %if.end26.3.10 ], [ %partial_sum.12.3.10, %for.body16.3.10 ]
  %indvars.iv.next.3.10 = add nuw nsw i64 %indvars.iv.3.10, 1
  %lftr.wideiv.3.10 = trunc i64 %indvars.iv.next.3.10 to i32
  %exitcond.3.10 = icmp eq i32 %lftr.wideiv.3.10, %kern_width
  br i1 %exitcond.3.10, label %for.inc36.3.10.loopexit, label %for.body16.3.10, !llvm.loop !1

for.inc36.3.10.loopexit:                          ; preds = %for.inc.3.10
  %partial_sum.2.3.10.lcssa = phi float [ %partial_sum.2.3.10, %for.inc.3.10 ]
  br label %for.inc36.3.10

for.inc36.3.10:                                   ; preds = %for.inc36.3.10.loopexit, %for.body10.3.10
  %partial_sum.3.3.10 = phi float [ %partial_sum.05.3.10, %for.body10.3.10 ], [ %partial_sum.2.3.10.lcssa, %for.inc36.3.10.loopexit ]
  %inc37.3.10 = add nuw nsw i32 %ki.06.3.10, 1
  %exitcond19.3.10 = icmp eq i32 %inc37.3.10, %kern_height
  br i1 %exitcond19.3.10, label %for.end38.3.10.loopexit, label %for.body10.3.10, !llvm.loop !3

for.end38.3.10.loopexit:                          ; preds = %for.inc36.3.10
  %partial_sum.3.3.10.lcssa = phi float [ %partial_sum.3.3.10, %for.inc36.3.10 ]
  br label %for.end38.3.10

for.end38.3.10:                                   ; preds = %for.end38.3.10.loopexit, %for.inc53.2.10
  %partial_sum.0.lcssa.3.10 = phi float [ 0.000000e+00, %for.inc53.2.10 ], [ %partial_sum.3.3.10.lcssa, %for.end38.3.10.loopexit ]
  br i1 %tobool39, label %if.else.3.10, label %if.then40.3.10

if.then40.3.10:                                   ; preds = %for.end38.3.10
  %cmp41.3.10 = fcmp olt float %partial_sum.0.lcssa.3.10, 0.000000e+00
  %sub42.3.10 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.10
  %cond.3.10 = select i1 %cmp41.3.10, float %sub42.3.10, float %partial_sum.0.lcssa.3.10
  %conv.3.10 = fptoui float %cond.3.10 to i8
  %conv43.3.10 = uitofp i8 %conv.3.10 to float
  %810 = add nsw i64 %indvars.iv.next21.2.10, %776
  %arrayidx47.3.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %810
  store float %conv43.3.10, float* %arrayidx47.3.10, align 4
  br label %for.inc53.3.10

if.else.3.10:                                     ; preds = %for.end38.3.10
  %811 = add nsw i64 %indvars.iv.next21.2.10, %775
  %arrayidx51.3.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %811
  store float %partial_sum.0.lcssa.3.10, float* %arrayidx51.3.10, align 4
  br label %for.inc53.3.10

for.inc53.3.10:                                   ; preds = %if.else.3.10, %if.then40.3.10
  %inc54.3.10 = add nsw i32 %in_j.011.10, 4
  %indvars.iv.next21.3.10 = add nsw i64 %indvars.iv20.10, 4
  br i1 %cmp94, label %for.end38.4.10, label %for.body10.4.10.preheader

for.body10.4.10.preheader:                        ; preds = %for.inc53.3.10
  br label %for.body10.4.10

for.body10.4.10:                                  ; preds = %for.body10.4.10.preheader, %for.inc36.4.10
  %ki.06.4.10 = phi i32 [ %inc37.4.10, %for.inc36.4.10 ], [ 0, %for.body10.4.10.preheader ]
  %partial_sum.05.4.10 = phi float [ %partial_sum.3.4.10, %for.inc36.4.10 ], [ 0.000000e+00, %for.body10.4.10.preheader ]
  %add.4.10 = add nsw i32 %ki.06.4.10, %inc58.9
  %notlhs.4.10 = icmp slt i32 %add.4.10, 0
  %notrhs.4.10 = icmp uge i32 %add.4.10, %img_height
  %.not.4.10 = or i1 %notrhs.4.10, %notlhs.4.10
  %brmerge.4.10 = or i1 %.not.4.10, %cmp151.not.4.10
  br i1 %brmerge.4.10, label %for.inc36.4.10, label %for.body16.lr.ph.4.10

for.body16.lr.ph.4.10:                            ; preds = %for.body10.4.10
  %mul.4.10 = shl i32 %add.4.10, 7
  %mul30.4.10 = mul i32 %ki.06.4.10, %kern_width
  br label %for.body16.4.10

for.body16.4.10:                                  ; preds = %for.inc.4.10, %for.body16.lr.ph.4.10
  %indvars.iv.4.10 = phi i64 [ 0, %for.body16.lr.ph.4.10 ], [ %indvars.iv.next.4.10, %for.inc.4.10 ]
  %partial_sum.12.4.10 = phi float [ %partial_sum.05.4.10, %for.body16.lr.ph.4.10 ], [ %partial_sum.2.4.10, %for.inc.4.10 ]
  %812 = trunc i64 %indvars.iv.4.10 to i32
  %add17.4.10 = add nsw i32 %812, %inc54.3.10
  %cmp18.4.10 = icmp sgt i32 %add17.4.10, -1
  %cmp21.4.10 = icmp ult i32 %add17.4.10, %img_width
  %813 = and i1 %cmp18.4.10, %cmp21.4.10
  br i1 %813, label %if.end26.4.10, label %for.inc.4.10

if.end26.4.10:                                    ; preds = %for.body16.4.10
  %add29.4.10 = add nsw i32 %add17.4.10, %mul.4.10
  %idxprom.4.10 = sext i32 %add29.4.10 to i64
  %arrayidx.4.10 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.10
  %814 = load float, float* %arrayidx.4.10, align 4
  %815 = trunc i64 %indvars.iv.4.10 to i32
  %add31.4.10 = add i32 %815, %mul30.4.10
  %idxprom32.4.10 = zext i32 %add31.4.10 to i64
  %arrayidx33.4.10 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.10
  %816 = load float, float* %arrayidx33.4.10, align 4
  %mul34.4.10 = fmul float %814, %816
  %add35.4.10 = fadd float %partial_sum.12.4.10, %mul34.4.10
  br label %for.inc.4.10

for.inc.4.10:                                     ; preds = %if.end26.4.10, %for.body16.4.10
  %partial_sum.2.4.10 = phi float [ %add35.4.10, %if.end26.4.10 ], [ %partial_sum.12.4.10, %for.body16.4.10 ]
  %indvars.iv.next.4.10 = add nuw nsw i64 %indvars.iv.4.10, 1
  %lftr.wideiv.4.10 = trunc i64 %indvars.iv.next.4.10 to i32
  %exitcond.4.10 = icmp eq i32 %lftr.wideiv.4.10, %kern_width
  br i1 %exitcond.4.10, label %for.inc36.4.10.loopexit, label %for.body16.4.10, !llvm.loop !1

for.inc36.4.10.loopexit:                          ; preds = %for.inc.4.10
  %partial_sum.2.4.10.lcssa = phi float [ %partial_sum.2.4.10, %for.inc.4.10 ]
  br label %for.inc36.4.10

for.inc36.4.10:                                   ; preds = %for.inc36.4.10.loopexit, %for.body10.4.10
  %partial_sum.3.4.10 = phi float [ %partial_sum.05.4.10, %for.body10.4.10 ], [ %partial_sum.2.4.10.lcssa, %for.inc36.4.10.loopexit ]
  %inc37.4.10 = add nuw nsw i32 %ki.06.4.10, 1
  %exitcond19.4.10 = icmp eq i32 %inc37.4.10, %kern_height
  br i1 %exitcond19.4.10, label %for.end38.4.10.loopexit, label %for.body10.4.10, !llvm.loop !3

for.end38.4.10.loopexit:                          ; preds = %for.inc36.4.10
  %partial_sum.3.4.10.lcssa = phi float [ %partial_sum.3.4.10, %for.inc36.4.10 ]
  br label %for.end38.4.10

for.end38.4.10:                                   ; preds = %for.end38.4.10.loopexit, %for.inc53.3.10
  %partial_sum.0.lcssa.4.10 = phi float [ 0.000000e+00, %for.inc53.3.10 ], [ %partial_sum.3.4.10.lcssa, %for.end38.4.10.loopexit ]
  br i1 %tobool39, label %if.else.4.10, label %if.then40.4.10

if.then40.4.10:                                   ; preds = %for.end38.4.10
  %cmp41.4.10 = fcmp olt float %partial_sum.0.lcssa.4.10, 0.000000e+00
  %sub42.4.10 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.10
  %cond.4.10 = select i1 %cmp41.4.10, float %sub42.4.10, float %partial_sum.0.lcssa.4.10
  %conv.4.10 = fptoui float %cond.4.10 to i8
  %conv43.4.10 = uitofp i8 %conv.4.10 to float
  %817 = add nsw i64 %indvars.iv.next21.3.10, %776
  %arrayidx47.4.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %817
  store float %conv43.4.10, float* %arrayidx47.4.10, align 4
  br label %for.inc53.4.10

if.else.4.10:                                     ; preds = %for.end38.4.10
  %818 = add nsw i64 %indvars.iv.next21.3.10, %775
  %arrayidx51.4.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %818
  store float %partial_sum.0.lcssa.4.10, float* %arrayidx51.4.10, align 4
  br label %for.inc53.4.10

for.inc53.4.10:                                   ; preds = %if.else.4.10, %if.then40.4.10
  %inc54.4.10 = add nsw i32 %in_j.011.10, 5
  %indvars.iv.next21.4.10 = add nsw i64 %indvars.iv20.10, 5
  br i1 %cmp94, label %for.end38.5.10, label %for.body10.5.10.preheader

for.body10.5.10.preheader:                        ; preds = %for.inc53.4.10
  br label %for.body10.5.10

for.body10.5.10:                                  ; preds = %for.body10.5.10.preheader, %for.inc36.5.10
  %ki.06.5.10 = phi i32 [ %inc37.5.10, %for.inc36.5.10 ], [ 0, %for.body10.5.10.preheader ]
  %partial_sum.05.5.10 = phi float [ %partial_sum.3.5.10, %for.inc36.5.10 ], [ 0.000000e+00, %for.body10.5.10.preheader ]
  %add.5.10 = add nsw i32 %ki.06.5.10, %inc58.9
  %notlhs.5.10 = icmp slt i32 %add.5.10, 0
  %notrhs.5.10 = icmp uge i32 %add.5.10, %img_height
  %.not.5.10 = or i1 %notrhs.5.10, %notlhs.5.10
  %brmerge.5.10 = or i1 %.not.5.10, %cmp151.not.5.10
  br i1 %brmerge.5.10, label %for.inc36.5.10, label %for.body16.lr.ph.5.10

for.body16.lr.ph.5.10:                            ; preds = %for.body10.5.10
  %mul.5.10 = shl i32 %add.5.10, 7
  %mul30.5.10 = mul i32 %ki.06.5.10, %kern_width
  br label %for.body16.5.10

for.body16.5.10:                                  ; preds = %for.inc.5.10, %for.body16.lr.ph.5.10
  %indvars.iv.5.10 = phi i64 [ 0, %for.body16.lr.ph.5.10 ], [ %indvars.iv.next.5.10, %for.inc.5.10 ]
  %partial_sum.12.5.10 = phi float [ %partial_sum.05.5.10, %for.body16.lr.ph.5.10 ], [ %partial_sum.2.5.10, %for.inc.5.10 ]
  %819 = trunc i64 %indvars.iv.5.10 to i32
  %add17.5.10 = add nsw i32 %819, %inc54.4.10
  %cmp18.5.10 = icmp sgt i32 %add17.5.10, -1
  %cmp21.5.10 = icmp ult i32 %add17.5.10, %img_width
  %820 = and i1 %cmp18.5.10, %cmp21.5.10
  br i1 %820, label %if.end26.5.10, label %for.inc.5.10

if.end26.5.10:                                    ; preds = %for.body16.5.10
  %add29.5.10 = add nsw i32 %add17.5.10, %mul.5.10
  %idxprom.5.10 = sext i32 %add29.5.10 to i64
  %arrayidx.5.10 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.10
  %821 = load float, float* %arrayidx.5.10, align 4
  %822 = trunc i64 %indvars.iv.5.10 to i32
  %add31.5.10 = add i32 %822, %mul30.5.10
  %idxprom32.5.10 = zext i32 %add31.5.10 to i64
  %arrayidx33.5.10 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.10
  %823 = load float, float* %arrayidx33.5.10, align 4
  %mul34.5.10 = fmul float %821, %823
  %add35.5.10 = fadd float %partial_sum.12.5.10, %mul34.5.10
  br label %for.inc.5.10

for.inc.5.10:                                     ; preds = %if.end26.5.10, %for.body16.5.10
  %partial_sum.2.5.10 = phi float [ %add35.5.10, %if.end26.5.10 ], [ %partial_sum.12.5.10, %for.body16.5.10 ]
  %indvars.iv.next.5.10 = add nuw nsw i64 %indvars.iv.5.10, 1
  %lftr.wideiv.5.10 = trunc i64 %indvars.iv.next.5.10 to i32
  %exitcond.5.10 = icmp eq i32 %lftr.wideiv.5.10, %kern_width
  br i1 %exitcond.5.10, label %for.inc36.5.10.loopexit, label %for.body16.5.10, !llvm.loop !1

for.inc36.5.10.loopexit:                          ; preds = %for.inc.5.10
  %partial_sum.2.5.10.lcssa = phi float [ %partial_sum.2.5.10, %for.inc.5.10 ]
  br label %for.inc36.5.10

for.inc36.5.10:                                   ; preds = %for.inc36.5.10.loopexit, %for.body10.5.10
  %partial_sum.3.5.10 = phi float [ %partial_sum.05.5.10, %for.body10.5.10 ], [ %partial_sum.2.5.10.lcssa, %for.inc36.5.10.loopexit ]
  %inc37.5.10 = add nuw nsw i32 %ki.06.5.10, 1
  %exitcond19.5.10 = icmp eq i32 %inc37.5.10, %kern_height
  br i1 %exitcond19.5.10, label %for.end38.5.10.loopexit, label %for.body10.5.10, !llvm.loop !3

for.end38.5.10.loopexit:                          ; preds = %for.inc36.5.10
  %partial_sum.3.5.10.lcssa = phi float [ %partial_sum.3.5.10, %for.inc36.5.10 ]
  br label %for.end38.5.10

for.end38.5.10:                                   ; preds = %for.end38.5.10.loopexit, %for.inc53.4.10
  %partial_sum.0.lcssa.5.10 = phi float [ 0.000000e+00, %for.inc53.4.10 ], [ %partial_sum.3.5.10.lcssa, %for.end38.5.10.loopexit ]
  br i1 %tobool39, label %if.else.5.10, label %if.then40.5.10

if.then40.5.10:                                   ; preds = %for.end38.5.10
  %cmp41.5.10 = fcmp olt float %partial_sum.0.lcssa.5.10, 0.000000e+00
  %sub42.5.10 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.10
  %cond.5.10 = select i1 %cmp41.5.10, float %sub42.5.10, float %partial_sum.0.lcssa.5.10
  %conv.5.10 = fptoui float %cond.5.10 to i8
  %conv43.5.10 = uitofp i8 %conv.5.10 to float
  %824 = add nsw i64 %indvars.iv.next21.4.10, %776
  %arrayidx47.5.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %824
  store float %conv43.5.10, float* %arrayidx47.5.10, align 4
  br label %for.inc53.5.10

if.else.5.10:                                     ; preds = %for.end38.5.10
  %825 = add nsw i64 %indvars.iv.next21.4.10, %775
  %arrayidx51.5.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %825
  store float %partial_sum.0.lcssa.5.10, float* %arrayidx51.5.10, align 4
  br label %for.inc53.5.10

for.inc53.5.10:                                   ; preds = %if.else.5.10, %if.then40.5.10
  %inc54.5.10 = add nsw i32 %in_j.011.10, 6
  %indvars.iv.next21.5.10 = add nsw i64 %indvars.iv20.10, 6
  br i1 %cmp94, label %for.end38.6.10, label %for.body10.6.10.preheader

for.body10.6.10.preheader:                        ; preds = %for.inc53.5.10
  br label %for.body10.6.10

for.body10.6.10:                                  ; preds = %for.body10.6.10.preheader, %for.inc36.6.10
  %ki.06.6.10 = phi i32 [ %inc37.6.10, %for.inc36.6.10 ], [ 0, %for.body10.6.10.preheader ]
  %partial_sum.05.6.10 = phi float [ %partial_sum.3.6.10, %for.inc36.6.10 ], [ 0.000000e+00, %for.body10.6.10.preheader ]
  %add.6.10 = add nsw i32 %ki.06.6.10, %inc58.9
  %notlhs.6.10 = icmp slt i32 %add.6.10, 0
  %notrhs.6.10 = icmp uge i32 %add.6.10, %img_height
  %.not.6.10 = or i1 %notrhs.6.10, %notlhs.6.10
  %brmerge.6.10 = or i1 %.not.6.10, %cmp151.not.6.10
  br i1 %brmerge.6.10, label %for.inc36.6.10, label %for.body16.lr.ph.6.10

for.body16.lr.ph.6.10:                            ; preds = %for.body10.6.10
  %mul.6.10 = shl i32 %add.6.10, 7
  %mul30.6.10 = mul i32 %ki.06.6.10, %kern_width
  br label %for.body16.6.10

for.body16.6.10:                                  ; preds = %for.inc.6.10, %for.body16.lr.ph.6.10
  %indvars.iv.6.10 = phi i64 [ 0, %for.body16.lr.ph.6.10 ], [ %indvars.iv.next.6.10, %for.inc.6.10 ]
  %partial_sum.12.6.10 = phi float [ %partial_sum.05.6.10, %for.body16.lr.ph.6.10 ], [ %partial_sum.2.6.10, %for.inc.6.10 ]
  %826 = trunc i64 %indvars.iv.6.10 to i32
  %add17.6.10 = add nsw i32 %826, %inc54.5.10
  %cmp18.6.10 = icmp sgt i32 %add17.6.10, -1
  %cmp21.6.10 = icmp ult i32 %add17.6.10, %img_width
  %827 = and i1 %cmp18.6.10, %cmp21.6.10
  br i1 %827, label %if.end26.6.10, label %for.inc.6.10

if.end26.6.10:                                    ; preds = %for.body16.6.10
  %add29.6.10 = add nsw i32 %add17.6.10, %mul.6.10
  %idxprom.6.10 = sext i32 %add29.6.10 to i64
  %arrayidx.6.10 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.10
  %828 = load float, float* %arrayidx.6.10, align 4
  %829 = trunc i64 %indvars.iv.6.10 to i32
  %add31.6.10 = add i32 %829, %mul30.6.10
  %idxprom32.6.10 = zext i32 %add31.6.10 to i64
  %arrayidx33.6.10 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.10
  %830 = load float, float* %arrayidx33.6.10, align 4
  %mul34.6.10 = fmul float %828, %830
  %add35.6.10 = fadd float %partial_sum.12.6.10, %mul34.6.10
  br label %for.inc.6.10

for.inc.6.10:                                     ; preds = %if.end26.6.10, %for.body16.6.10
  %partial_sum.2.6.10 = phi float [ %add35.6.10, %if.end26.6.10 ], [ %partial_sum.12.6.10, %for.body16.6.10 ]
  %indvars.iv.next.6.10 = add nuw nsw i64 %indvars.iv.6.10, 1
  %lftr.wideiv.6.10 = trunc i64 %indvars.iv.next.6.10 to i32
  %exitcond.6.10 = icmp eq i32 %lftr.wideiv.6.10, %kern_width
  br i1 %exitcond.6.10, label %for.inc36.6.10.loopexit, label %for.body16.6.10, !llvm.loop !1

for.inc36.6.10.loopexit:                          ; preds = %for.inc.6.10
  %partial_sum.2.6.10.lcssa = phi float [ %partial_sum.2.6.10, %for.inc.6.10 ]
  br label %for.inc36.6.10

for.inc36.6.10:                                   ; preds = %for.inc36.6.10.loopexit, %for.body10.6.10
  %partial_sum.3.6.10 = phi float [ %partial_sum.05.6.10, %for.body10.6.10 ], [ %partial_sum.2.6.10.lcssa, %for.inc36.6.10.loopexit ]
  %inc37.6.10 = add nuw nsw i32 %ki.06.6.10, 1
  %exitcond19.6.10 = icmp eq i32 %inc37.6.10, %kern_height
  br i1 %exitcond19.6.10, label %for.end38.6.10.loopexit, label %for.body10.6.10, !llvm.loop !3

for.end38.6.10.loopexit:                          ; preds = %for.inc36.6.10
  %partial_sum.3.6.10.lcssa = phi float [ %partial_sum.3.6.10, %for.inc36.6.10 ]
  br label %for.end38.6.10

for.end38.6.10:                                   ; preds = %for.end38.6.10.loopexit, %for.inc53.5.10
  %partial_sum.0.lcssa.6.10 = phi float [ 0.000000e+00, %for.inc53.5.10 ], [ %partial_sum.3.6.10.lcssa, %for.end38.6.10.loopexit ]
  br i1 %tobool39, label %if.else.6.10, label %if.then40.6.10

if.then40.6.10:                                   ; preds = %for.end38.6.10
  %cmp41.6.10 = fcmp olt float %partial_sum.0.lcssa.6.10, 0.000000e+00
  %sub42.6.10 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.10
  %cond.6.10 = select i1 %cmp41.6.10, float %sub42.6.10, float %partial_sum.0.lcssa.6.10
  %conv.6.10 = fptoui float %cond.6.10 to i8
  %conv43.6.10 = uitofp i8 %conv.6.10 to float
  %831 = add nsw i64 %indvars.iv.next21.5.10, %776
  %arrayidx47.6.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %831
  store float %conv43.6.10, float* %arrayidx47.6.10, align 4
  br label %for.inc53.6.10

if.else.6.10:                                     ; preds = %for.end38.6.10
  %832 = add nsw i64 %indvars.iv.next21.5.10, %775
  %arrayidx51.6.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %832
  store float %partial_sum.0.lcssa.6.10, float* %arrayidx51.6.10, align 4
  br label %for.inc53.6.10

for.inc53.6.10:                                   ; preds = %if.else.6.10, %if.then40.6.10
  %inc54.6.10 = add nsw i32 %in_j.011.10, 7
  %indvars.iv.next21.6.10 = add nsw i64 %indvars.iv20.10, 7
  br i1 %cmp94, label %for.end38.7.10, label %for.body10.7.10.preheader

for.body10.7.10.preheader:                        ; preds = %for.inc53.6.10
  br label %for.body10.7.10

for.body10.7.10:                                  ; preds = %for.body10.7.10.preheader, %for.inc36.7.10
  %ki.06.7.10 = phi i32 [ %inc37.7.10, %for.inc36.7.10 ], [ 0, %for.body10.7.10.preheader ]
  %partial_sum.05.7.10 = phi float [ %partial_sum.3.7.10, %for.inc36.7.10 ], [ 0.000000e+00, %for.body10.7.10.preheader ]
  %add.7.10 = add nsw i32 %ki.06.7.10, %inc58.9
  %notlhs.7.10 = icmp slt i32 %add.7.10, 0
  %notrhs.7.10 = icmp uge i32 %add.7.10, %img_height
  %.not.7.10 = or i1 %notrhs.7.10, %notlhs.7.10
  %brmerge.7.10 = or i1 %.not.7.10, %cmp151.not.7.10
  br i1 %brmerge.7.10, label %for.inc36.7.10, label %for.body16.lr.ph.7.10

for.body16.lr.ph.7.10:                            ; preds = %for.body10.7.10
  %mul.7.10 = shl i32 %add.7.10, 7
  %mul30.7.10 = mul i32 %ki.06.7.10, %kern_width
  br label %for.body16.7.10

for.body16.7.10:                                  ; preds = %for.inc.7.10, %for.body16.lr.ph.7.10
  %indvars.iv.7.10 = phi i64 [ 0, %for.body16.lr.ph.7.10 ], [ %indvars.iv.next.7.10, %for.inc.7.10 ]
  %partial_sum.12.7.10 = phi float [ %partial_sum.05.7.10, %for.body16.lr.ph.7.10 ], [ %partial_sum.2.7.10, %for.inc.7.10 ]
  %833 = trunc i64 %indvars.iv.7.10 to i32
  %add17.7.10 = add nsw i32 %833, %inc54.6.10
  %cmp18.7.10 = icmp sgt i32 %add17.7.10, -1
  %cmp21.7.10 = icmp ult i32 %add17.7.10, %img_width
  %834 = and i1 %cmp18.7.10, %cmp21.7.10
  br i1 %834, label %if.end26.7.10, label %for.inc.7.10

if.end26.7.10:                                    ; preds = %for.body16.7.10
  %add29.7.10 = add nsw i32 %add17.7.10, %mul.7.10
  %idxprom.7.10 = sext i32 %add29.7.10 to i64
  %arrayidx.7.10 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.10
  %835 = load float, float* %arrayidx.7.10, align 4
  %836 = trunc i64 %indvars.iv.7.10 to i32
  %add31.7.10 = add i32 %836, %mul30.7.10
  %idxprom32.7.10 = zext i32 %add31.7.10 to i64
  %arrayidx33.7.10 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.10
  %837 = load float, float* %arrayidx33.7.10, align 4
  %mul34.7.10 = fmul float %835, %837
  %add35.7.10 = fadd float %partial_sum.12.7.10, %mul34.7.10
  br label %for.inc.7.10

for.inc.7.10:                                     ; preds = %if.end26.7.10, %for.body16.7.10
  %partial_sum.2.7.10 = phi float [ %add35.7.10, %if.end26.7.10 ], [ %partial_sum.12.7.10, %for.body16.7.10 ]
  %indvars.iv.next.7.10 = add nuw nsw i64 %indvars.iv.7.10, 1
  %lftr.wideiv.7.10 = trunc i64 %indvars.iv.next.7.10 to i32
  %exitcond.7.10 = icmp eq i32 %lftr.wideiv.7.10, %kern_width
  br i1 %exitcond.7.10, label %for.inc36.7.10.loopexit, label %for.body16.7.10, !llvm.loop !1

for.inc36.7.10.loopexit:                          ; preds = %for.inc.7.10
  %partial_sum.2.7.10.lcssa = phi float [ %partial_sum.2.7.10, %for.inc.7.10 ]
  br label %for.inc36.7.10

for.inc36.7.10:                                   ; preds = %for.inc36.7.10.loopexit, %for.body10.7.10
  %partial_sum.3.7.10 = phi float [ %partial_sum.05.7.10, %for.body10.7.10 ], [ %partial_sum.2.7.10.lcssa, %for.inc36.7.10.loopexit ]
  %inc37.7.10 = add nuw nsw i32 %ki.06.7.10, 1
  %exitcond19.7.10 = icmp eq i32 %inc37.7.10, %kern_height
  br i1 %exitcond19.7.10, label %for.end38.7.10.loopexit, label %for.body10.7.10, !llvm.loop !3

for.end38.7.10.loopexit:                          ; preds = %for.inc36.7.10
  %partial_sum.3.7.10.lcssa = phi float [ %partial_sum.3.7.10, %for.inc36.7.10 ]
  br label %for.end38.7.10

for.end38.7.10:                                   ; preds = %for.end38.7.10.loopexit, %for.inc53.6.10
  %partial_sum.0.lcssa.7.10 = phi float [ 0.000000e+00, %for.inc53.6.10 ], [ %partial_sum.3.7.10.lcssa, %for.end38.7.10.loopexit ]
  br i1 %tobool39, label %if.else.7.10, label %if.then40.7.10

if.then40.7.10:                                   ; preds = %for.end38.7.10
  %cmp41.7.10 = fcmp olt float %partial_sum.0.lcssa.7.10, 0.000000e+00
  %sub42.7.10 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.10
  %cond.7.10 = select i1 %cmp41.7.10, float %sub42.7.10, float %partial_sum.0.lcssa.7.10
  %conv.7.10 = fptoui float %cond.7.10 to i8
  %conv43.7.10 = uitofp i8 %conv.7.10 to float
  %838 = add nsw i64 %indvars.iv.next21.6.10, %776
  %arrayidx47.7.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %838
  store float %conv43.7.10, float* %arrayidx47.7.10, align 4
  br label %for.inc53.7.10

if.else.7.10:                                     ; preds = %for.end38.7.10
  %839 = add nsw i64 %indvars.iv.next21.6.10, %775
  %arrayidx51.7.10 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %839
  store float %partial_sum.0.lcssa.7.10, float* %arrayidx51.7.10, align 4
  br label %for.inc53.7.10

for.inc53.7.10:                                   ; preds = %if.else.7.10, %if.then40.7.10
  %inc54.7.10 = add nsw i32 %in_j.011.10, 8
  %indvars.iv.next21.7.10 = add nsw i64 %indvars.iv20.10, 8
  %lftr.wideiv24.7.10 = trunc i64 %indvars.iv.next21.7.10 to i32
  %exitcond25.7.10 = icmp eq i32 %lftr.wideiv24.7.10, %img_width
  br i1 %exitcond25.7.10, label %for.inc57.10.loopexit, label %for.cond8.preheader.10, !llvm.loop !5

for.inc57.10.loopexit:                            ; preds = %for.inc53.7.10
  br label %for.inc57.10

for.inc57.10:                                     ; preds = %for.inc57.10.loopexit, %for.cond8.preheader.lr.ph.split.10
  %inc58.10 = add nsw i32 %in_i.015, 11
  %indvars.iv.next27.10 = add nsw i64 %indvars.iv26, 11
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.11

for.cond8.preheader.lr.ph.11:                     ; preds = %for.inc57.10
  %840 = trunc i64 %indvars.iv.next27.10 to i32
  %mul48.11 = shl i32 %840, 7
  %841 = trunc i64 %indvars.iv.next27.10 to i32
  %mul44.11 = shl i32 %841, 7
  %842 = sext i32 %mul48.11 to i64
  %843 = sext i32 %mul44.11 to i64
  br i1 %lcmp.mod.11, label %for.cond8.preheader.lr.ph.split.11, label %for.cond8.preheader.prol.11.preheader

for.cond8.preheader.prol.11.preheader:            ; preds = %for.cond8.preheader.lr.ph.11
  br label %for.cond8.preheader.prol.11

for.cond8.preheader.prol.11:                      ; preds = %for.cond8.preheader.prol.11.preheader, %for.inc53.prol.11
  %indvars.iv20.prol.11 = phi i64 [ %indvars.iv.next21.prol.11, %for.inc53.prol.11 ], [ 0, %for.cond8.preheader.prol.11.preheader ]
  %in_j.011.prol.11 = phi i32 [ %inc54.prol.11, %for.inc53.prol.11 ], [ %sub4, %for.cond8.preheader.prol.11.preheader ]
  %prol.iter.11 = phi i32 [ %prol.iter.sub.11, %for.inc53.prol.11 ], [ %xtraiter.11, %for.cond8.preheader.prol.11.preheader ]
  br i1 %cmp94, label %for.end38.prol.11, label %for.body10.prol.11.preheader

for.body10.prol.11.preheader:                     ; preds = %for.cond8.preheader.prol.11
  br label %for.body10.prol.11

for.body10.prol.11:                               ; preds = %for.body10.prol.11.preheader, %for.inc36.prol.11
  %ki.06.prol.11 = phi i32 [ %inc37.prol.11, %for.inc36.prol.11 ], [ 0, %for.body10.prol.11.preheader ]
  %partial_sum.05.prol.11 = phi float [ %partial_sum.3.prol.11, %for.inc36.prol.11 ], [ 0.000000e+00, %for.body10.prol.11.preheader ]
  %add.prol.11 = add nsw i32 %ki.06.prol.11, %inc58.10
  %notlhs.prol.11 = icmp slt i32 %add.prol.11, 0
  %notrhs.prol.11 = icmp uge i32 %add.prol.11, %img_height
  %.not.prol.11 = or i1 %notrhs.prol.11, %notlhs.prol.11
  %brmerge.prol.11 = or i1 %.not.prol.11, %cmp151.not.prol.11
  br i1 %brmerge.prol.11, label %for.inc36.prol.11, label %for.body16.lr.ph.prol.11

for.body16.lr.ph.prol.11:                         ; preds = %for.body10.prol.11
  %mul.prol.11 = shl i32 %add.prol.11, 7
  %mul30.prol.11 = mul i32 %ki.06.prol.11, %kern_width
  br label %for.body16.prol.11

for.body16.prol.11:                               ; preds = %for.inc.prol.11, %for.body16.lr.ph.prol.11
  %indvars.iv.prol.11 = phi i64 [ 0, %for.body16.lr.ph.prol.11 ], [ %indvars.iv.next.prol.11, %for.inc.prol.11 ]
  %partial_sum.12.prol.11 = phi float [ %partial_sum.05.prol.11, %for.body16.lr.ph.prol.11 ], [ %partial_sum.2.prol.11, %for.inc.prol.11 ]
  %844 = trunc i64 %indvars.iv.prol.11 to i32
  %add17.prol.11 = add nsw i32 %844, %in_j.011.prol.11
  %cmp18.prol.11 = icmp sgt i32 %add17.prol.11, -1
  %cmp21.prol.11 = icmp ult i32 %add17.prol.11, %img_width
  %845 = and i1 %cmp18.prol.11, %cmp21.prol.11
  br i1 %845, label %if.end26.prol.11, label %for.inc.prol.11

if.end26.prol.11:                                 ; preds = %for.body16.prol.11
  %add29.prol.11 = add nsw i32 %add17.prol.11, %mul.prol.11
  %idxprom.prol.11 = sext i32 %add29.prol.11 to i64
  %arrayidx.prol.11 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.11
  %846 = load float, float* %arrayidx.prol.11, align 4
  %847 = trunc i64 %indvars.iv.prol.11 to i32
  %add31.prol.11 = add i32 %847, %mul30.prol.11
  %idxprom32.prol.11 = zext i32 %add31.prol.11 to i64
  %arrayidx33.prol.11 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.11
  %848 = load float, float* %arrayidx33.prol.11, align 4
  %mul34.prol.11 = fmul float %846, %848
  %add35.prol.11 = fadd float %partial_sum.12.prol.11, %mul34.prol.11
  br label %for.inc.prol.11

for.inc.prol.11:                                  ; preds = %if.end26.prol.11, %for.body16.prol.11
  %partial_sum.2.prol.11 = phi float [ %add35.prol.11, %if.end26.prol.11 ], [ %partial_sum.12.prol.11, %for.body16.prol.11 ]
  %indvars.iv.next.prol.11 = add nuw nsw i64 %indvars.iv.prol.11, 1
  %lftr.wideiv.prol.11 = trunc i64 %indvars.iv.next.prol.11 to i32
  %exitcond.prol.11 = icmp eq i32 %lftr.wideiv.prol.11, %kern_width
  br i1 %exitcond.prol.11, label %for.inc36.prol.11.loopexit, label %for.body16.prol.11, !llvm.loop !1

for.inc36.prol.11.loopexit:                       ; preds = %for.inc.prol.11
  %partial_sum.2.prol.11.lcssa = phi float [ %partial_sum.2.prol.11, %for.inc.prol.11 ]
  br label %for.inc36.prol.11

for.inc36.prol.11:                                ; preds = %for.inc36.prol.11.loopexit, %for.body10.prol.11
  %partial_sum.3.prol.11 = phi float [ %partial_sum.05.prol.11, %for.body10.prol.11 ], [ %partial_sum.2.prol.11.lcssa, %for.inc36.prol.11.loopexit ]
  %inc37.prol.11 = add nuw nsw i32 %ki.06.prol.11, 1
  %exitcond19.prol.11 = icmp eq i32 %inc37.prol.11, %kern_height
  br i1 %exitcond19.prol.11, label %for.end38.prol.11.loopexit, label %for.body10.prol.11, !llvm.loop !3

for.end38.prol.11.loopexit:                       ; preds = %for.inc36.prol.11
  %partial_sum.3.prol.11.lcssa = phi float [ %partial_sum.3.prol.11, %for.inc36.prol.11 ]
  br label %for.end38.prol.11

for.end38.prol.11:                                ; preds = %for.end38.prol.11.loopexit, %for.cond8.preheader.prol.11
  %partial_sum.0.lcssa.prol.11 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.11 ], [ %partial_sum.3.prol.11.lcssa, %for.end38.prol.11.loopexit ]
  br i1 %tobool39, label %if.else.prol.11, label %if.then40.prol.11

if.then40.prol.11:                                ; preds = %for.end38.prol.11
  %cmp41.prol.11 = fcmp olt float %partial_sum.0.lcssa.prol.11, 0.000000e+00
  %sub42.prol.11 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.11
  %cond.prol.11 = select i1 %cmp41.prol.11, float %sub42.prol.11, float %partial_sum.0.lcssa.prol.11
  %conv.prol.11 = fptoui float %cond.prol.11 to i8
  %conv43.prol.11 = uitofp i8 %conv.prol.11 to float
  %849 = add nsw i64 %indvars.iv20.prol.11, %843
  %arrayidx47.prol.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %849
  store float %conv43.prol.11, float* %arrayidx47.prol.11, align 4
  br label %for.inc53.prol.11

if.else.prol.11:                                  ; preds = %for.end38.prol.11
  %850 = add nsw i64 %indvars.iv20.prol.11, %842
  %arrayidx51.prol.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %850
  store float %partial_sum.0.lcssa.prol.11, float* %arrayidx51.prol.11, align 4
  br label %for.inc53.prol.11

for.inc53.prol.11:                                ; preds = %if.else.prol.11, %if.then40.prol.11
  %inc54.prol.11 = add nsw i32 %in_j.011.prol.11, 1
  %indvars.iv.next21.prol.11 = add nuw nsw i64 %indvars.iv20.prol.11, 1
  %prol.iter.sub.11 = add i32 %prol.iter.11, -1
  %prol.iter.cmp.11 = icmp eq i32 %prol.iter.sub.11, 0
  br i1 %prol.iter.cmp.11, label %for.cond8.preheader.lr.ph.split.11.loopexit, label %for.cond8.preheader.prol.11, !llvm.loop !4

for.cond8.preheader.lr.ph.split.11.loopexit:      ; preds = %for.inc53.prol.11
  %indvars.iv.next21.prol.11.lcssa = phi i64 [ %indvars.iv.next21.prol.11, %for.inc53.prol.11 ]
  %inc54.prol.11.lcssa = phi i32 [ %inc54.prol.11, %for.inc53.prol.11 ]
  br label %for.cond8.preheader.lr.ph.split.11

for.cond8.preheader.lr.ph.split.11:               ; preds = %for.cond8.preheader.lr.ph.split.11.loopexit, %for.cond8.preheader.lr.ph.11
  %indvars.iv20.unr.11 = phi i64 [ 0, %for.cond8.preheader.lr.ph.11 ], [ %indvars.iv.next21.prol.11.lcssa, %for.cond8.preheader.lr.ph.split.11.loopexit ]
  %in_j.011.unr.11 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.11 ], [ %inc54.prol.11.lcssa, %for.cond8.preheader.lr.ph.split.11.loopexit ]
  br i1 %82, label %for.inc57.11, label %for.cond8.preheader.11.preheader

for.cond8.preheader.11.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.11
  br label %for.cond8.preheader.11

for.cond8.preheader.11:                           ; preds = %for.cond8.preheader.11.preheader, %for.inc53.7.11
  %indvars.iv20.11 = phi i64 [ %indvars.iv.next21.7.11, %for.inc53.7.11 ], [ %indvars.iv20.unr.11, %for.cond8.preheader.11.preheader ]
  %in_j.011.11 = phi i32 [ %inc54.7.11, %for.inc53.7.11 ], [ %in_j.011.unr.11, %for.cond8.preheader.11.preheader ]
  br i1 %cmp94, label %for.end38.11, label %for.body10.11.preheader

for.body10.11.preheader:                          ; preds = %for.cond8.preheader.11
  br label %for.body10.11

for.body10.11:                                    ; preds = %for.body10.11.preheader, %for.inc36.11
  %ki.06.11 = phi i32 [ %inc37.11, %for.inc36.11 ], [ 0, %for.body10.11.preheader ]
  %partial_sum.05.11 = phi float [ %partial_sum.3.11, %for.inc36.11 ], [ 0.000000e+00, %for.body10.11.preheader ]
  %add.11 = add nsw i32 %ki.06.11, %inc58.10
  %notlhs.11 = icmp slt i32 %add.11, 0
  %notrhs.11 = icmp uge i32 %add.11, %img_height
  %.not.11 = or i1 %notrhs.11, %notlhs.11
  %brmerge.11 = or i1 %.not.11, %cmp151.not.11
  br i1 %brmerge.11, label %for.inc36.11, label %for.body16.lr.ph.11

for.body16.lr.ph.11:                              ; preds = %for.body10.11
  %mul.11 = shl i32 %add.11, 7
  %mul30.11 = mul i32 %ki.06.11, %kern_width
  br label %for.body16.11

for.body16.11:                                    ; preds = %for.inc.11, %for.body16.lr.ph.11
  %indvars.iv.11 = phi i64 [ 0, %for.body16.lr.ph.11 ], [ %indvars.iv.next.11, %for.inc.11 ]
  %partial_sum.12.11 = phi float [ %partial_sum.05.11, %for.body16.lr.ph.11 ], [ %partial_sum.2.11, %for.inc.11 ]
  %851 = trunc i64 %indvars.iv.11 to i32
  %add17.11 = add nsw i32 %851, %in_j.011.11
  %cmp18.11 = icmp sgt i32 %add17.11, -1
  %cmp21.11 = icmp ult i32 %add17.11, %img_width
  %852 = and i1 %cmp18.11, %cmp21.11
  br i1 %852, label %if.end26.11, label %for.inc.11

if.end26.11:                                      ; preds = %for.body16.11
  %add29.11 = add nsw i32 %add17.11, %mul.11
  %idxprom.11 = sext i32 %add29.11 to i64
  %arrayidx.11 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.11
  %853 = load float, float* %arrayidx.11, align 4
  %854 = trunc i64 %indvars.iv.11 to i32
  %add31.11 = add i32 %854, %mul30.11
  %idxprom32.11 = zext i32 %add31.11 to i64
  %arrayidx33.11 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.11
  %855 = load float, float* %arrayidx33.11, align 4
  %mul34.11 = fmul float %853, %855
  %add35.11 = fadd float %partial_sum.12.11, %mul34.11
  br label %for.inc.11

for.inc.11:                                       ; preds = %if.end26.11, %for.body16.11
  %partial_sum.2.11 = phi float [ %add35.11, %if.end26.11 ], [ %partial_sum.12.11, %for.body16.11 ]
  %indvars.iv.next.11 = add nuw nsw i64 %indvars.iv.11, 1
  %lftr.wideiv.11 = trunc i64 %indvars.iv.next.11 to i32
  %exitcond.11 = icmp eq i32 %lftr.wideiv.11, %kern_width
  br i1 %exitcond.11, label %for.inc36.11.loopexit, label %for.body16.11, !llvm.loop !1

for.inc36.11.loopexit:                            ; preds = %for.inc.11
  %partial_sum.2.11.lcssa = phi float [ %partial_sum.2.11, %for.inc.11 ]
  br label %for.inc36.11

for.inc36.11:                                     ; preds = %for.inc36.11.loopexit, %for.body10.11
  %partial_sum.3.11 = phi float [ %partial_sum.05.11, %for.body10.11 ], [ %partial_sum.2.11.lcssa, %for.inc36.11.loopexit ]
  %inc37.11 = add nuw nsw i32 %ki.06.11, 1
  %exitcond19.11 = icmp eq i32 %inc37.11, %kern_height
  br i1 %exitcond19.11, label %for.end38.11.loopexit, label %for.body10.11, !llvm.loop !3

for.end38.11.loopexit:                            ; preds = %for.inc36.11
  %partial_sum.3.11.lcssa = phi float [ %partial_sum.3.11, %for.inc36.11 ]
  br label %for.end38.11

for.end38.11:                                     ; preds = %for.end38.11.loopexit, %for.cond8.preheader.11
  %partial_sum.0.lcssa.11 = phi float [ 0.000000e+00, %for.cond8.preheader.11 ], [ %partial_sum.3.11.lcssa, %for.end38.11.loopexit ]
  br i1 %tobool39, label %if.else.11, label %if.then40.11

if.then40.11:                                     ; preds = %for.end38.11
  %cmp41.11 = fcmp olt float %partial_sum.0.lcssa.11, 0.000000e+00
  %sub42.11 = fsub float -0.000000e+00, %partial_sum.0.lcssa.11
  %cond.11 = select i1 %cmp41.11, float %sub42.11, float %partial_sum.0.lcssa.11
  %conv.11 = fptoui float %cond.11 to i8
  %conv43.11 = uitofp i8 %conv.11 to float
  %856 = add nsw i64 %indvars.iv20.11, %843
  %arrayidx47.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %856
  store float %conv43.11, float* %arrayidx47.11, align 4
  br label %for.inc53.11

if.else.11:                                       ; preds = %for.end38.11
  %857 = add nsw i64 %indvars.iv20.11, %842
  %arrayidx51.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %857
  store float %partial_sum.0.lcssa.11, float* %arrayidx51.11, align 4
  br label %for.inc53.11

for.inc53.11:                                     ; preds = %if.else.11, %if.then40.11
  %inc54.11 = add nsw i32 %in_j.011.11, 1
  %indvars.iv.next21.11 = add nuw nsw i64 %indvars.iv20.11, 1
  br i1 %cmp94, label %for.end38.1.11, label %for.body10.1.11.preheader

for.body10.1.11.preheader:                        ; preds = %for.inc53.11
  br label %for.body10.1.11

for.body10.1.11:                                  ; preds = %for.body10.1.11.preheader, %for.inc36.1.11
  %ki.06.1.11 = phi i32 [ %inc37.1.11, %for.inc36.1.11 ], [ 0, %for.body10.1.11.preheader ]
  %partial_sum.05.1.11 = phi float [ %partial_sum.3.1.11, %for.inc36.1.11 ], [ 0.000000e+00, %for.body10.1.11.preheader ]
  %add.1.11 = add nsw i32 %ki.06.1.11, %inc58.10
  %notlhs.1.11 = icmp slt i32 %add.1.11, 0
  %notrhs.1.11 = icmp uge i32 %add.1.11, %img_height
  %.not.1.11 = or i1 %notrhs.1.11, %notlhs.1.11
  %brmerge.1.11 = or i1 %.not.1.11, %cmp151.not.1.11
  br i1 %brmerge.1.11, label %for.inc36.1.11, label %for.body16.lr.ph.1.11

for.body16.lr.ph.1.11:                            ; preds = %for.body10.1.11
  %mul.1.11 = shl i32 %add.1.11, 7
  %mul30.1.11 = mul i32 %ki.06.1.11, %kern_width
  br label %for.body16.1.11

for.body16.1.11:                                  ; preds = %for.inc.1.11, %for.body16.lr.ph.1.11
  %indvars.iv.1.11 = phi i64 [ 0, %for.body16.lr.ph.1.11 ], [ %indvars.iv.next.1.11, %for.inc.1.11 ]
  %partial_sum.12.1.11 = phi float [ %partial_sum.05.1.11, %for.body16.lr.ph.1.11 ], [ %partial_sum.2.1.11, %for.inc.1.11 ]
  %858 = trunc i64 %indvars.iv.1.11 to i32
  %add17.1.11 = add nsw i32 %858, %inc54.11
  %cmp18.1.11 = icmp sgt i32 %add17.1.11, -1
  %cmp21.1.11 = icmp ult i32 %add17.1.11, %img_width
  %859 = and i1 %cmp18.1.11, %cmp21.1.11
  br i1 %859, label %if.end26.1.11, label %for.inc.1.11

if.end26.1.11:                                    ; preds = %for.body16.1.11
  %add29.1.11 = add nsw i32 %add17.1.11, %mul.1.11
  %idxprom.1.11 = sext i32 %add29.1.11 to i64
  %arrayidx.1.11 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.11
  %860 = load float, float* %arrayidx.1.11, align 4
  %861 = trunc i64 %indvars.iv.1.11 to i32
  %add31.1.11 = add i32 %861, %mul30.1.11
  %idxprom32.1.11 = zext i32 %add31.1.11 to i64
  %arrayidx33.1.11 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.11
  %862 = load float, float* %arrayidx33.1.11, align 4
  %mul34.1.11 = fmul float %860, %862
  %add35.1.11 = fadd float %partial_sum.12.1.11, %mul34.1.11
  br label %for.inc.1.11

for.inc.1.11:                                     ; preds = %if.end26.1.11, %for.body16.1.11
  %partial_sum.2.1.11 = phi float [ %add35.1.11, %if.end26.1.11 ], [ %partial_sum.12.1.11, %for.body16.1.11 ]
  %indvars.iv.next.1.11 = add nuw nsw i64 %indvars.iv.1.11, 1
  %lftr.wideiv.1.11 = trunc i64 %indvars.iv.next.1.11 to i32
  %exitcond.1.11 = icmp eq i32 %lftr.wideiv.1.11, %kern_width
  br i1 %exitcond.1.11, label %for.inc36.1.11.loopexit, label %for.body16.1.11, !llvm.loop !1

for.inc36.1.11.loopexit:                          ; preds = %for.inc.1.11
  %partial_sum.2.1.11.lcssa = phi float [ %partial_sum.2.1.11, %for.inc.1.11 ]
  br label %for.inc36.1.11

for.inc36.1.11:                                   ; preds = %for.inc36.1.11.loopexit, %for.body10.1.11
  %partial_sum.3.1.11 = phi float [ %partial_sum.05.1.11, %for.body10.1.11 ], [ %partial_sum.2.1.11.lcssa, %for.inc36.1.11.loopexit ]
  %inc37.1.11 = add nuw nsw i32 %ki.06.1.11, 1
  %exitcond19.1.11 = icmp eq i32 %inc37.1.11, %kern_height
  br i1 %exitcond19.1.11, label %for.end38.1.11.loopexit, label %for.body10.1.11, !llvm.loop !3

for.end38.1.11.loopexit:                          ; preds = %for.inc36.1.11
  %partial_sum.3.1.11.lcssa = phi float [ %partial_sum.3.1.11, %for.inc36.1.11 ]
  br label %for.end38.1.11

for.end38.1.11:                                   ; preds = %for.end38.1.11.loopexit, %for.inc53.11
  %partial_sum.0.lcssa.1.11 = phi float [ 0.000000e+00, %for.inc53.11 ], [ %partial_sum.3.1.11.lcssa, %for.end38.1.11.loopexit ]
  br i1 %tobool39, label %if.else.1.11, label %if.then40.1.11

if.then40.1.11:                                   ; preds = %for.end38.1.11
  %cmp41.1.11 = fcmp olt float %partial_sum.0.lcssa.1.11, 0.000000e+00
  %sub42.1.11 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.11
  %cond.1.11 = select i1 %cmp41.1.11, float %sub42.1.11, float %partial_sum.0.lcssa.1.11
  %conv.1.11 = fptoui float %cond.1.11 to i8
  %conv43.1.11 = uitofp i8 %conv.1.11 to float
  %863 = add nsw i64 %indvars.iv.next21.11, %843
  %arrayidx47.1.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %863
  store float %conv43.1.11, float* %arrayidx47.1.11, align 4
  br label %for.inc53.1.11

if.else.1.11:                                     ; preds = %for.end38.1.11
  %864 = add nsw i64 %indvars.iv.next21.11, %842
  %arrayidx51.1.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %864
  store float %partial_sum.0.lcssa.1.11, float* %arrayidx51.1.11, align 4
  br label %for.inc53.1.11

for.inc53.1.11:                                   ; preds = %if.else.1.11, %if.then40.1.11
  %inc54.1.11 = add nsw i32 %in_j.011.11, 2
  %indvars.iv.next21.1.11 = add nsw i64 %indvars.iv20.11, 2
  br i1 %cmp94, label %for.end38.2.11, label %for.body10.2.11.preheader

for.body10.2.11.preheader:                        ; preds = %for.inc53.1.11
  br label %for.body10.2.11

for.body10.2.11:                                  ; preds = %for.body10.2.11.preheader, %for.inc36.2.11
  %ki.06.2.11 = phi i32 [ %inc37.2.11, %for.inc36.2.11 ], [ 0, %for.body10.2.11.preheader ]
  %partial_sum.05.2.11 = phi float [ %partial_sum.3.2.11, %for.inc36.2.11 ], [ 0.000000e+00, %for.body10.2.11.preheader ]
  %add.2.11 = add nsw i32 %ki.06.2.11, %inc58.10
  %notlhs.2.11 = icmp slt i32 %add.2.11, 0
  %notrhs.2.11 = icmp uge i32 %add.2.11, %img_height
  %.not.2.11 = or i1 %notrhs.2.11, %notlhs.2.11
  %brmerge.2.11 = or i1 %.not.2.11, %cmp151.not.2.11
  br i1 %brmerge.2.11, label %for.inc36.2.11, label %for.body16.lr.ph.2.11

for.body16.lr.ph.2.11:                            ; preds = %for.body10.2.11
  %mul.2.11 = shl i32 %add.2.11, 7
  %mul30.2.11 = mul i32 %ki.06.2.11, %kern_width
  br label %for.body16.2.11

for.body16.2.11:                                  ; preds = %for.inc.2.11, %for.body16.lr.ph.2.11
  %indvars.iv.2.11 = phi i64 [ 0, %for.body16.lr.ph.2.11 ], [ %indvars.iv.next.2.11, %for.inc.2.11 ]
  %partial_sum.12.2.11 = phi float [ %partial_sum.05.2.11, %for.body16.lr.ph.2.11 ], [ %partial_sum.2.2.11, %for.inc.2.11 ]
  %865 = trunc i64 %indvars.iv.2.11 to i32
  %add17.2.11 = add nsw i32 %865, %inc54.1.11
  %cmp18.2.11 = icmp sgt i32 %add17.2.11, -1
  %cmp21.2.11 = icmp ult i32 %add17.2.11, %img_width
  %866 = and i1 %cmp18.2.11, %cmp21.2.11
  br i1 %866, label %if.end26.2.11, label %for.inc.2.11

if.end26.2.11:                                    ; preds = %for.body16.2.11
  %add29.2.11 = add nsw i32 %add17.2.11, %mul.2.11
  %idxprom.2.11 = sext i32 %add29.2.11 to i64
  %arrayidx.2.11 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.11
  %867 = load float, float* %arrayidx.2.11, align 4
  %868 = trunc i64 %indvars.iv.2.11 to i32
  %add31.2.11 = add i32 %868, %mul30.2.11
  %idxprom32.2.11 = zext i32 %add31.2.11 to i64
  %arrayidx33.2.11 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.11
  %869 = load float, float* %arrayidx33.2.11, align 4
  %mul34.2.11 = fmul float %867, %869
  %add35.2.11 = fadd float %partial_sum.12.2.11, %mul34.2.11
  br label %for.inc.2.11

for.inc.2.11:                                     ; preds = %if.end26.2.11, %for.body16.2.11
  %partial_sum.2.2.11 = phi float [ %add35.2.11, %if.end26.2.11 ], [ %partial_sum.12.2.11, %for.body16.2.11 ]
  %indvars.iv.next.2.11 = add nuw nsw i64 %indvars.iv.2.11, 1
  %lftr.wideiv.2.11 = trunc i64 %indvars.iv.next.2.11 to i32
  %exitcond.2.11 = icmp eq i32 %lftr.wideiv.2.11, %kern_width
  br i1 %exitcond.2.11, label %for.inc36.2.11.loopexit, label %for.body16.2.11, !llvm.loop !1

for.inc36.2.11.loopexit:                          ; preds = %for.inc.2.11
  %partial_sum.2.2.11.lcssa = phi float [ %partial_sum.2.2.11, %for.inc.2.11 ]
  br label %for.inc36.2.11

for.inc36.2.11:                                   ; preds = %for.inc36.2.11.loopexit, %for.body10.2.11
  %partial_sum.3.2.11 = phi float [ %partial_sum.05.2.11, %for.body10.2.11 ], [ %partial_sum.2.2.11.lcssa, %for.inc36.2.11.loopexit ]
  %inc37.2.11 = add nuw nsw i32 %ki.06.2.11, 1
  %exitcond19.2.11 = icmp eq i32 %inc37.2.11, %kern_height
  br i1 %exitcond19.2.11, label %for.end38.2.11.loopexit, label %for.body10.2.11, !llvm.loop !3

for.end38.2.11.loopexit:                          ; preds = %for.inc36.2.11
  %partial_sum.3.2.11.lcssa = phi float [ %partial_sum.3.2.11, %for.inc36.2.11 ]
  br label %for.end38.2.11

for.end38.2.11:                                   ; preds = %for.end38.2.11.loopexit, %for.inc53.1.11
  %partial_sum.0.lcssa.2.11 = phi float [ 0.000000e+00, %for.inc53.1.11 ], [ %partial_sum.3.2.11.lcssa, %for.end38.2.11.loopexit ]
  br i1 %tobool39, label %if.else.2.11, label %if.then40.2.11

if.then40.2.11:                                   ; preds = %for.end38.2.11
  %cmp41.2.11 = fcmp olt float %partial_sum.0.lcssa.2.11, 0.000000e+00
  %sub42.2.11 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.11
  %cond.2.11 = select i1 %cmp41.2.11, float %sub42.2.11, float %partial_sum.0.lcssa.2.11
  %conv.2.11 = fptoui float %cond.2.11 to i8
  %conv43.2.11 = uitofp i8 %conv.2.11 to float
  %870 = add nsw i64 %indvars.iv.next21.1.11, %843
  %arrayidx47.2.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %870
  store float %conv43.2.11, float* %arrayidx47.2.11, align 4
  br label %for.inc53.2.11

if.else.2.11:                                     ; preds = %for.end38.2.11
  %871 = add nsw i64 %indvars.iv.next21.1.11, %842
  %arrayidx51.2.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %871
  store float %partial_sum.0.lcssa.2.11, float* %arrayidx51.2.11, align 4
  br label %for.inc53.2.11

for.inc53.2.11:                                   ; preds = %if.else.2.11, %if.then40.2.11
  %inc54.2.11 = add nsw i32 %in_j.011.11, 3
  %indvars.iv.next21.2.11 = add nsw i64 %indvars.iv20.11, 3
  br i1 %cmp94, label %for.end38.3.11, label %for.body10.3.11.preheader

for.body10.3.11.preheader:                        ; preds = %for.inc53.2.11
  br label %for.body10.3.11

for.body10.3.11:                                  ; preds = %for.body10.3.11.preheader, %for.inc36.3.11
  %ki.06.3.11 = phi i32 [ %inc37.3.11, %for.inc36.3.11 ], [ 0, %for.body10.3.11.preheader ]
  %partial_sum.05.3.11 = phi float [ %partial_sum.3.3.11, %for.inc36.3.11 ], [ 0.000000e+00, %for.body10.3.11.preheader ]
  %add.3.11 = add nsw i32 %ki.06.3.11, %inc58.10
  %notlhs.3.11 = icmp slt i32 %add.3.11, 0
  %notrhs.3.11 = icmp uge i32 %add.3.11, %img_height
  %.not.3.11 = or i1 %notrhs.3.11, %notlhs.3.11
  %brmerge.3.11 = or i1 %.not.3.11, %cmp151.not.3.11
  br i1 %brmerge.3.11, label %for.inc36.3.11, label %for.body16.lr.ph.3.11

for.body16.lr.ph.3.11:                            ; preds = %for.body10.3.11
  %mul.3.11 = shl i32 %add.3.11, 7
  %mul30.3.11 = mul i32 %ki.06.3.11, %kern_width
  br label %for.body16.3.11

for.body16.3.11:                                  ; preds = %for.inc.3.11, %for.body16.lr.ph.3.11
  %indvars.iv.3.11 = phi i64 [ 0, %for.body16.lr.ph.3.11 ], [ %indvars.iv.next.3.11, %for.inc.3.11 ]
  %partial_sum.12.3.11 = phi float [ %partial_sum.05.3.11, %for.body16.lr.ph.3.11 ], [ %partial_sum.2.3.11, %for.inc.3.11 ]
  %872 = trunc i64 %indvars.iv.3.11 to i32
  %add17.3.11 = add nsw i32 %872, %inc54.2.11
  %cmp18.3.11 = icmp sgt i32 %add17.3.11, -1
  %cmp21.3.11 = icmp ult i32 %add17.3.11, %img_width
  %873 = and i1 %cmp18.3.11, %cmp21.3.11
  br i1 %873, label %if.end26.3.11, label %for.inc.3.11

if.end26.3.11:                                    ; preds = %for.body16.3.11
  %add29.3.11 = add nsw i32 %add17.3.11, %mul.3.11
  %idxprom.3.11 = sext i32 %add29.3.11 to i64
  %arrayidx.3.11 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.11
  %874 = load float, float* %arrayidx.3.11, align 4
  %875 = trunc i64 %indvars.iv.3.11 to i32
  %add31.3.11 = add i32 %875, %mul30.3.11
  %idxprom32.3.11 = zext i32 %add31.3.11 to i64
  %arrayidx33.3.11 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.11
  %876 = load float, float* %arrayidx33.3.11, align 4
  %mul34.3.11 = fmul float %874, %876
  %add35.3.11 = fadd float %partial_sum.12.3.11, %mul34.3.11
  br label %for.inc.3.11

for.inc.3.11:                                     ; preds = %if.end26.3.11, %for.body16.3.11
  %partial_sum.2.3.11 = phi float [ %add35.3.11, %if.end26.3.11 ], [ %partial_sum.12.3.11, %for.body16.3.11 ]
  %indvars.iv.next.3.11 = add nuw nsw i64 %indvars.iv.3.11, 1
  %lftr.wideiv.3.11 = trunc i64 %indvars.iv.next.3.11 to i32
  %exitcond.3.11 = icmp eq i32 %lftr.wideiv.3.11, %kern_width
  br i1 %exitcond.3.11, label %for.inc36.3.11.loopexit, label %for.body16.3.11, !llvm.loop !1

for.inc36.3.11.loopexit:                          ; preds = %for.inc.3.11
  %partial_sum.2.3.11.lcssa = phi float [ %partial_sum.2.3.11, %for.inc.3.11 ]
  br label %for.inc36.3.11

for.inc36.3.11:                                   ; preds = %for.inc36.3.11.loopexit, %for.body10.3.11
  %partial_sum.3.3.11 = phi float [ %partial_sum.05.3.11, %for.body10.3.11 ], [ %partial_sum.2.3.11.lcssa, %for.inc36.3.11.loopexit ]
  %inc37.3.11 = add nuw nsw i32 %ki.06.3.11, 1
  %exitcond19.3.11 = icmp eq i32 %inc37.3.11, %kern_height
  br i1 %exitcond19.3.11, label %for.end38.3.11.loopexit, label %for.body10.3.11, !llvm.loop !3

for.end38.3.11.loopexit:                          ; preds = %for.inc36.3.11
  %partial_sum.3.3.11.lcssa = phi float [ %partial_sum.3.3.11, %for.inc36.3.11 ]
  br label %for.end38.3.11

for.end38.3.11:                                   ; preds = %for.end38.3.11.loopexit, %for.inc53.2.11
  %partial_sum.0.lcssa.3.11 = phi float [ 0.000000e+00, %for.inc53.2.11 ], [ %partial_sum.3.3.11.lcssa, %for.end38.3.11.loopexit ]
  br i1 %tobool39, label %if.else.3.11, label %if.then40.3.11

if.then40.3.11:                                   ; preds = %for.end38.3.11
  %cmp41.3.11 = fcmp olt float %partial_sum.0.lcssa.3.11, 0.000000e+00
  %sub42.3.11 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.11
  %cond.3.11 = select i1 %cmp41.3.11, float %sub42.3.11, float %partial_sum.0.lcssa.3.11
  %conv.3.11 = fptoui float %cond.3.11 to i8
  %conv43.3.11 = uitofp i8 %conv.3.11 to float
  %877 = add nsw i64 %indvars.iv.next21.2.11, %843
  %arrayidx47.3.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %877
  store float %conv43.3.11, float* %arrayidx47.3.11, align 4
  br label %for.inc53.3.11

if.else.3.11:                                     ; preds = %for.end38.3.11
  %878 = add nsw i64 %indvars.iv.next21.2.11, %842
  %arrayidx51.3.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %878
  store float %partial_sum.0.lcssa.3.11, float* %arrayidx51.3.11, align 4
  br label %for.inc53.3.11

for.inc53.3.11:                                   ; preds = %if.else.3.11, %if.then40.3.11
  %inc54.3.11 = add nsw i32 %in_j.011.11, 4
  %indvars.iv.next21.3.11 = add nsw i64 %indvars.iv20.11, 4
  br i1 %cmp94, label %for.end38.4.11, label %for.body10.4.11.preheader

for.body10.4.11.preheader:                        ; preds = %for.inc53.3.11
  br label %for.body10.4.11

for.body10.4.11:                                  ; preds = %for.body10.4.11.preheader, %for.inc36.4.11
  %ki.06.4.11 = phi i32 [ %inc37.4.11, %for.inc36.4.11 ], [ 0, %for.body10.4.11.preheader ]
  %partial_sum.05.4.11 = phi float [ %partial_sum.3.4.11, %for.inc36.4.11 ], [ 0.000000e+00, %for.body10.4.11.preheader ]
  %add.4.11 = add nsw i32 %ki.06.4.11, %inc58.10
  %notlhs.4.11 = icmp slt i32 %add.4.11, 0
  %notrhs.4.11 = icmp uge i32 %add.4.11, %img_height
  %.not.4.11 = or i1 %notrhs.4.11, %notlhs.4.11
  %brmerge.4.11 = or i1 %.not.4.11, %cmp151.not.4.11
  br i1 %brmerge.4.11, label %for.inc36.4.11, label %for.body16.lr.ph.4.11

for.body16.lr.ph.4.11:                            ; preds = %for.body10.4.11
  %mul.4.11 = shl i32 %add.4.11, 7
  %mul30.4.11 = mul i32 %ki.06.4.11, %kern_width
  br label %for.body16.4.11

for.body16.4.11:                                  ; preds = %for.inc.4.11, %for.body16.lr.ph.4.11
  %indvars.iv.4.11 = phi i64 [ 0, %for.body16.lr.ph.4.11 ], [ %indvars.iv.next.4.11, %for.inc.4.11 ]
  %partial_sum.12.4.11 = phi float [ %partial_sum.05.4.11, %for.body16.lr.ph.4.11 ], [ %partial_sum.2.4.11, %for.inc.4.11 ]
  %879 = trunc i64 %indvars.iv.4.11 to i32
  %add17.4.11 = add nsw i32 %879, %inc54.3.11
  %cmp18.4.11 = icmp sgt i32 %add17.4.11, -1
  %cmp21.4.11 = icmp ult i32 %add17.4.11, %img_width
  %880 = and i1 %cmp18.4.11, %cmp21.4.11
  br i1 %880, label %if.end26.4.11, label %for.inc.4.11

if.end26.4.11:                                    ; preds = %for.body16.4.11
  %add29.4.11 = add nsw i32 %add17.4.11, %mul.4.11
  %idxprom.4.11 = sext i32 %add29.4.11 to i64
  %arrayidx.4.11 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.11
  %881 = load float, float* %arrayidx.4.11, align 4
  %882 = trunc i64 %indvars.iv.4.11 to i32
  %add31.4.11 = add i32 %882, %mul30.4.11
  %idxprom32.4.11 = zext i32 %add31.4.11 to i64
  %arrayidx33.4.11 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.11
  %883 = load float, float* %arrayidx33.4.11, align 4
  %mul34.4.11 = fmul float %881, %883
  %add35.4.11 = fadd float %partial_sum.12.4.11, %mul34.4.11
  br label %for.inc.4.11

for.inc.4.11:                                     ; preds = %if.end26.4.11, %for.body16.4.11
  %partial_sum.2.4.11 = phi float [ %add35.4.11, %if.end26.4.11 ], [ %partial_sum.12.4.11, %for.body16.4.11 ]
  %indvars.iv.next.4.11 = add nuw nsw i64 %indvars.iv.4.11, 1
  %lftr.wideiv.4.11 = trunc i64 %indvars.iv.next.4.11 to i32
  %exitcond.4.11 = icmp eq i32 %lftr.wideiv.4.11, %kern_width
  br i1 %exitcond.4.11, label %for.inc36.4.11.loopexit, label %for.body16.4.11, !llvm.loop !1

for.inc36.4.11.loopexit:                          ; preds = %for.inc.4.11
  %partial_sum.2.4.11.lcssa = phi float [ %partial_sum.2.4.11, %for.inc.4.11 ]
  br label %for.inc36.4.11

for.inc36.4.11:                                   ; preds = %for.inc36.4.11.loopexit, %for.body10.4.11
  %partial_sum.3.4.11 = phi float [ %partial_sum.05.4.11, %for.body10.4.11 ], [ %partial_sum.2.4.11.lcssa, %for.inc36.4.11.loopexit ]
  %inc37.4.11 = add nuw nsw i32 %ki.06.4.11, 1
  %exitcond19.4.11 = icmp eq i32 %inc37.4.11, %kern_height
  br i1 %exitcond19.4.11, label %for.end38.4.11.loopexit, label %for.body10.4.11, !llvm.loop !3

for.end38.4.11.loopexit:                          ; preds = %for.inc36.4.11
  %partial_sum.3.4.11.lcssa = phi float [ %partial_sum.3.4.11, %for.inc36.4.11 ]
  br label %for.end38.4.11

for.end38.4.11:                                   ; preds = %for.end38.4.11.loopexit, %for.inc53.3.11
  %partial_sum.0.lcssa.4.11 = phi float [ 0.000000e+00, %for.inc53.3.11 ], [ %partial_sum.3.4.11.lcssa, %for.end38.4.11.loopexit ]
  br i1 %tobool39, label %if.else.4.11, label %if.then40.4.11

if.then40.4.11:                                   ; preds = %for.end38.4.11
  %cmp41.4.11 = fcmp olt float %partial_sum.0.lcssa.4.11, 0.000000e+00
  %sub42.4.11 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.11
  %cond.4.11 = select i1 %cmp41.4.11, float %sub42.4.11, float %partial_sum.0.lcssa.4.11
  %conv.4.11 = fptoui float %cond.4.11 to i8
  %conv43.4.11 = uitofp i8 %conv.4.11 to float
  %884 = add nsw i64 %indvars.iv.next21.3.11, %843
  %arrayidx47.4.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %884
  store float %conv43.4.11, float* %arrayidx47.4.11, align 4
  br label %for.inc53.4.11

if.else.4.11:                                     ; preds = %for.end38.4.11
  %885 = add nsw i64 %indvars.iv.next21.3.11, %842
  %arrayidx51.4.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %885
  store float %partial_sum.0.lcssa.4.11, float* %arrayidx51.4.11, align 4
  br label %for.inc53.4.11

for.inc53.4.11:                                   ; preds = %if.else.4.11, %if.then40.4.11
  %inc54.4.11 = add nsw i32 %in_j.011.11, 5
  %indvars.iv.next21.4.11 = add nsw i64 %indvars.iv20.11, 5
  br i1 %cmp94, label %for.end38.5.11, label %for.body10.5.11.preheader

for.body10.5.11.preheader:                        ; preds = %for.inc53.4.11
  br label %for.body10.5.11

for.body10.5.11:                                  ; preds = %for.body10.5.11.preheader, %for.inc36.5.11
  %ki.06.5.11 = phi i32 [ %inc37.5.11, %for.inc36.5.11 ], [ 0, %for.body10.5.11.preheader ]
  %partial_sum.05.5.11 = phi float [ %partial_sum.3.5.11, %for.inc36.5.11 ], [ 0.000000e+00, %for.body10.5.11.preheader ]
  %add.5.11 = add nsw i32 %ki.06.5.11, %inc58.10
  %notlhs.5.11 = icmp slt i32 %add.5.11, 0
  %notrhs.5.11 = icmp uge i32 %add.5.11, %img_height
  %.not.5.11 = or i1 %notrhs.5.11, %notlhs.5.11
  %brmerge.5.11 = or i1 %.not.5.11, %cmp151.not.5.11
  br i1 %brmerge.5.11, label %for.inc36.5.11, label %for.body16.lr.ph.5.11

for.body16.lr.ph.5.11:                            ; preds = %for.body10.5.11
  %mul.5.11 = shl i32 %add.5.11, 7
  %mul30.5.11 = mul i32 %ki.06.5.11, %kern_width
  br label %for.body16.5.11

for.body16.5.11:                                  ; preds = %for.inc.5.11, %for.body16.lr.ph.5.11
  %indvars.iv.5.11 = phi i64 [ 0, %for.body16.lr.ph.5.11 ], [ %indvars.iv.next.5.11, %for.inc.5.11 ]
  %partial_sum.12.5.11 = phi float [ %partial_sum.05.5.11, %for.body16.lr.ph.5.11 ], [ %partial_sum.2.5.11, %for.inc.5.11 ]
  %886 = trunc i64 %indvars.iv.5.11 to i32
  %add17.5.11 = add nsw i32 %886, %inc54.4.11
  %cmp18.5.11 = icmp sgt i32 %add17.5.11, -1
  %cmp21.5.11 = icmp ult i32 %add17.5.11, %img_width
  %887 = and i1 %cmp18.5.11, %cmp21.5.11
  br i1 %887, label %if.end26.5.11, label %for.inc.5.11

if.end26.5.11:                                    ; preds = %for.body16.5.11
  %add29.5.11 = add nsw i32 %add17.5.11, %mul.5.11
  %idxprom.5.11 = sext i32 %add29.5.11 to i64
  %arrayidx.5.11 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.11
  %888 = load float, float* %arrayidx.5.11, align 4
  %889 = trunc i64 %indvars.iv.5.11 to i32
  %add31.5.11 = add i32 %889, %mul30.5.11
  %idxprom32.5.11 = zext i32 %add31.5.11 to i64
  %arrayidx33.5.11 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.11
  %890 = load float, float* %arrayidx33.5.11, align 4
  %mul34.5.11 = fmul float %888, %890
  %add35.5.11 = fadd float %partial_sum.12.5.11, %mul34.5.11
  br label %for.inc.5.11

for.inc.5.11:                                     ; preds = %if.end26.5.11, %for.body16.5.11
  %partial_sum.2.5.11 = phi float [ %add35.5.11, %if.end26.5.11 ], [ %partial_sum.12.5.11, %for.body16.5.11 ]
  %indvars.iv.next.5.11 = add nuw nsw i64 %indvars.iv.5.11, 1
  %lftr.wideiv.5.11 = trunc i64 %indvars.iv.next.5.11 to i32
  %exitcond.5.11 = icmp eq i32 %lftr.wideiv.5.11, %kern_width
  br i1 %exitcond.5.11, label %for.inc36.5.11.loopexit, label %for.body16.5.11, !llvm.loop !1

for.inc36.5.11.loopexit:                          ; preds = %for.inc.5.11
  %partial_sum.2.5.11.lcssa = phi float [ %partial_sum.2.5.11, %for.inc.5.11 ]
  br label %for.inc36.5.11

for.inc36.5.11:                                   ; preds = %for.inc36.5.11.loopexit, %for.body10.5.11
  %partial_sum.3.5.11 = phi float [ %partial_sum.05.5.11, %for.body10.5.11 ], [ %partial_sum.2.5.11.lcssa, %for.inc36.5.11.loopexit ]
  %inc37.5.11 = add nuw nsw i32 %ki.06.5.11, 1
  %exitcond19.5.11 = icmp eq i32 %inc37.5.11, %kern_height
  br i1 %exitcond19.5.11, label %for.end38.5.11.loopexit, label %for.body10.5.11, !llvm.loop !3

for.end38.5.11.loopexit:                          ; preds = %for.inc36.5.11
  %partial_sum.3.5.11.lcssa = phi float [ %partial_sum.3.5.11, %for.inc36.5.11 ]
  br label %for.end38.5.11

for.end38.5.11:                                   ; preds = %for.end38.5.11.loopexit, %for.inc53.4.11
  %partial_sum.0.lcssa.5.11 = phi float [ 0.000000e+00, %for.inc53.4.11 ], [ %partial_sum.3.5.11.lcssa, %for.end38.5.11.loopexit ]
  br i1 %tobool39, label %if.else.5.11, label %if.then40.5.11

if.then40.5.11:                                   ; preds = %for.end38.5.11
  %cmp41.5.11 = fcmp olt float %partial_sum.0.lcssa.5.11, 0.000000e+00
  %sub42.5.11 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.11
  %cond.5.11 = select i1 %cmp41.5.11, float %sub42.5.11, float %partial_sum.0.lcssa.5.11
  %conv.5.11 = fptoui float %cond.5.11 to i8
  %conv43.5.11 = uitofp i8 %conv.5.11 to float
  %891 = add nsw i64 %indvars.iv.next21.4.11, %843
  %arrayidx47.5.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %891
  store float %conv43.5.11, float* %arrayidx47.5.11, align 4
  br label %for.inc53.5.11

if.else.5.11:                                     ; preds = %for.end38.5.11
  %892 = add nsw i64 %indvars.iv.next21.4.11, %842
  %arrayidx51.5.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %892
  store float %partial_sum.0.lcssa.5.11, float* %arrayidx51.5.11, align 4
  br label %for.inc53.5.11

for.inc53.5.11:                                   ; preds = %if.else.5.11, %if.then40.5.11
  %inc54.5.11 = add nsw i32 %in_j.011.11, 6
  %indvars.iv.next21.5.11 = add nsw i64 %indvars.iv20.11, 6
  br i1 %cmp94, label %for.end38.6.11, label %for.body10.6.11.preheader

for.body10.6.11.preheader:                        ; preds = %for.inc53.5.11
  br label %for.body10.6.11

for.body10.6.11:                                  ; preds = %for.body10.6.11.preheader, %for.inc36.6.11
  %ki.06.6.11 = phi i32 [ %inc37.6.11, %for.inc36.6.11 ], [ 0, %for.body10.6.11.preheader ]
  %partial_sum.05.6.11 = phi float [ %partial_sum.3.6.11, %for.inc36.6.11 ], [ 0.000000e+00, %for.body10.6.11.preheader ]
  %add.6.11 = add nsw i32 %ki.06.6.11, %inc58.10
  %notlhs.6.11 = icmp slt i32 %add.6.11, 0
  %notrhs.6.11 = icmp uge i32 %add.6.11, %img_height
  %.not.6.11 = or i1 %notrhs.6.11, %notlhs.6.11
  %brmerge.6.11 = or i1 %.not.6.11, %cmp151.not.6.11
  br i1 %brmerge.6.11, label %for.inc36.6.11, label %for.body16.lr.ph.6.11

for.body16.lr.ph.6.11:                            ; preds = %for.body10.6.11
  %mul.6.11 = shl i32 %add.6.11, 7
  %mul30.6.11 = mul i32 %ki.06.6.11, %kern_width
  br label %for.body16.6.11

for.body16.6.11:                                  ; preds = %for.inc.6.11, %for.body16.lr.ph.6.11
  %indvars.iv.6.11 = phi i64 [ 0, %for.body16.lr.ph.6.11 ], [ %indvars.iv.next.6.11, %for.inc.6.11 ]
  %partial_sum.12.6.11 = phi float [ %partial_sum.05.6.11, %for.body16.lr.ph.6.11 ], [ %partial_sum.2.6.11, %for.inc.6.11 ]
  %893 = trunc i64 %indvars.iv.6.11 to i32
  %add17.6.11 = add nsw i32 %893, %inc54.5.11
  %cmp18.6.11 = icmp sgt i32 %add17.6.11, -1
  %cmp21.6.11 = icmp ult i32 %add17.6.11, %img_width
  %894 = and i1 %cmp18.6.11, %cmp21.6.11
  br i1 %894, label %if.end26.6.11, label %for.inc.6.11

if.end26.6.11:                                    ; preds = %for.body16.6.11
  %add29.6.11 = add nsw i32 %add17.6.11, %mul.6.11
  %idxprom.6.11 = sext i32 %add29.6.11 to i64
  %arrayidx.6.11 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.11
  %895 = load float, float* %arrayidx.6.11, align 4
  %896 = trunc i64 %indvars.iv.6.11 to i32
  %add31.6.11 = add i32 %896, %mul30.6.11
  %idxprom32.6.11 = zext i32 %add31.6.11 to i64
  %arrayidx33.6.11 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.11
  %897 = load float, float* %arrayidx33.6.11, align 4
  %mul34.6.11 = fmul float %895, %897
  %add35.6.11 = fadd float %partial_sum.12.6.11, %mul34.6.11
  br label %for.inc.6.11

for.inc.6.11:                                     ; preds = %if.end26.6.11, %for.body16.6.11
  %partial_sum.2.6.11 = phi float [ %add35.6.11, %if.end26.6.11 ], [ %partial_sum.12.6.11, %for.body16.6.11 ]
  %indvars.iv.next.6.11 = add nuw nsw i64 %indvars.iv.6.11, 1
  %lftr.wideiv.6.11 = trunc i64 %indvars.iv.next.6.11 to i32
  %exitcond.6.11 = icmp eq i32 %lftr.wideiv.6.11, %kern_width
  br i1 %exitcond.6.11, label %for.inc36.6.11.loopexit, label %for.body16.6.11, !llvm.loop !1

for.inc36.6.11.loopexit:                          ; preds = %for.inc.6.11
  %partial_sum.2.6.11.lcssa = phi float [ %partial_sum.2.6.11, %for.inc.6.11 ]
  br label %for.inc36.6.11

for.inc36.6.11:                                   ; preds = %for.inc36.6.11.loopexit, %for.body10.6.11
  %partial_sum.3.6.11 = phi float [ %partial_sum.05.6.11, %for.body10.6.11 ], [ %partial_sum.2.6.11.lcssa, %for.inc36.6.11.loopexit ]
  %inc37.6.11 = add nuw nsw i32 %ki.06.6.11, 1
  %exitcond19.6.11 = icmp eq i32 %inc37.6.11, %kern_height
  br i1 %exitcond19.6.11, label %for.end38.6.11.loopexit, label %for.body10.6.11, !llvm.loop !3

for.end38.6.11.loopexit:                          ; preds = %for.inc36.6.11
  %partial_sum.3.6.11.lcssa = phi float [ %partial_sum.3.6.11, %for.inc36.6.11 ]
  br label %for.end38.6.11

for.end38.6.11:                                   ; preds = %for.end38.6.11.loopexit, %for.inc53.5.11
  %partial_sum.0.lcssa.6.11 = phi float [ 0.000000e+00, %for.inc53.5.11 ], [ %partial_sum.3.6.11.lcssa, %for.end38.6.11.loopexit ]
  br i1 %tobool39, label %if.else.6.11, label %if.then40.6.11

if.then40.6.11:                                   ; preds = %for.end38.6.11
  %cmp41.6.11 = fcmp olt float %partial_sum.0.lcssa.6.11, 0.000000e+00
  %sub42.6.11 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.11
  %cond.6.11 = select i1 %cmp41.6.11, float %sub42.6.11, float %partial_sum.0.lcssa.6.11
  %conv.6.11 = fptoui float %cond.6.11 to i8
  %conv43.6.11 = uitofp i8 %conv.6.11 to float
  %898 = add nsw i64 %indvars.iv.next21.5.11, %843
  %arrayidx47.6.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %898
  store float %conv43.6.11, float* %arrayidx47.6.11, align 4
  br label %for.inc53.6.11

if.else.6.11:                                     ; preds = %for.end38.6.11
  %899 = add nsw i64 %indvars.iv.next21.5.11, %842
  %arrayidx51.6.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %899
  store float %partial_sum.0.lcssa.6.11, float* %arrayidx51.6.11, align 4
  br label %for.inc53.6.11

for.inc53.6.11:                                   ; preds = %if.else.6.11, %if.then40.6.11
  %inc54.6.11 = add nsw i32 %in_j.011.11, 7
  %indvars.iv.next21.6.11 = add nsw i64 %indvars.iv20.11, 7
  br i1 %cmp94, label %for.end38.7.11, label %for.body10.7.11.preheader

for.body10.7.11.preheader:                        ; preds = %for.inc53.6.11
  br label %for.body10.7.11

for.body10.7.11:                                  ; preds = %for.body10.7.11.preheader, %for.inc36.7.11
  %ki.06.7.11 = phi i32 [ %inc37.7.11, %for.inc36.7.11 ], [ 0, %for.body10.7.11.preheader ]
  %partial_sum.05.7.11 = phi float [ %partial_sum.3.7.11, %for.inc36.7.11 ], [ 0.000000e+00, %for.body10.7.11.preheader ]
  %add.7.11 = add nsw i32 %ki.06.7.11, %inc58.10
  %notlhs.7.11 = icmp slt i32 %add.7.11, 0
  %notrhs.7.11 = icmp uge i32 %add.7.11, %img_height
  %.not.7.11 = or i1 %notrhs.7.11, %notlhs.7.11
  %brmerge.7.11 = or i1 %.not.7.11, %cmp151.not.7.11
  br i1 %brmerge.7.11, label %for.inc36.7.11, label %for.body16.lr.ph.7.11

for.body16.lr.ph.7.11:                            ; preds = %for.body10.7.11
  %mul.7.11 = shl i32 %add.7.11, 7
  %mul30.7.11 = mul i32 %ki.06.7.11, %kern_width
  br label %for.body16.7.11

for.body16.7.11:                                  ; preds = %for.inc.7.11, %for.body16.lr.ph.7.11
  %indvars.iv.7.11 = phi i64 [ 0, %for.body16.lr.ph.7.11 ], [ %indvars.iv.next.7.11, %for.inc.7.11 ]
  %partial_sum.12.7.11 = phi float [ %partial_sum.05.7.11, %for.body16.lr.ph.7.11 ], [ %partial_sum.2.7.11, %for.inc.7.11 ]
  %900 = trunc i64 %indvars.iv.7.11 to i32
  %add17.7.11 = add nsw i32 %900, %inc54.6.11
  %cmp18.7.11 = icmp sgt i32 %add17.7.11, -1
  %cmp21.7.11 = icmp ult i32 %add17.7.11, %img_width
  %901 = and i1 %cmp18.7.11, %cmp21.7.11
  br i1 %901, label %if.end26.7.11, label %for.inc.7.11

if.end26.7.11:                                    ; preds = %for.body16.7.11
  %add29.7.11 = add nsw i32 %add17.7.11, %mul.7.11
  %idxprom.7.11 = sext i32 %add29.7.11 to i64
  %arrayidx.7.11 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.11
  %902 = load float, float* %arrayidx.7.11, align 4
  %903 = trunc i64 %indvars.iv.7.11 to i32
  %add31.7.11 = add i32 %903, %mul30.7.11
  %idxprom32.7.11 = zext i32 %add31.7.11 to i64
  %arrayidx33.7.11 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.11
  %904 = load float, float* %arrayidx33.7.11, align 4
  %mul34.7.11 = fmul float %902, %904
  %add35.7.11 = fadd float %partial_sum.12.7.11, %mul34.7.11
  br label %for.inc.7.11

for.inc.7.11:                                     ; preds = %if.end26.7.11, %for.body16.7.11
  %partial_sum.2.7.11 = phi float [ %add35.7.11, %if.end26.7.11 ], [ %partial_sum.12.7.11, %for.body16.7.11 ]
  %indvars.iv.next.7.11 = add nuw nsw i64 %indvars.iv.7.11, 1
  %lftr.wideiv.7.11 = trunc i64 %indvars.iv.next.7.11 to i32
  %exitcond.7.11 = icmp eq i32 %lftr.wideiv.7.11, %kern_width
  br i1 %exitcond.7.11, label %for.inc36.7.11.loopexit, label %for.body16.7.11, !llvm.loop !1

for.inc36.7.11.loopexit:                          ; preds = %for.inc.7.11
  %partial_sum.2.7.11.lcssa = phi float [ %partial_sum.2.7.11, %for.inc.7.11 ]
  br label %for.inc36.7.11

for.inc36.7.11:                                   ; preds = %for.inc36.7.11.loopexit, %for.body10.7.11
  %partial_sum.3.7.11 = phi float [ %partial_sum.05.7.11, %for.body10.7.11 ], [ %partial_sum.2.7.11.lcssa, %for.inc36.7.11.loopexit ]
  %inc37.7.11 = add nuw nsw i32 %ki.06.7.11, 1
  %exitcond19.7.11 = icmp eq i32 %inc37.7.11, %kern_height
  br i1 %exitcond19.7.11, label %for.end38.7.11.loopexit, label %for.body10.7.11, !llvm.loop !3

for.end38.7.11.loopexit:                          ; preds = %for.inc36.7.11
  %partial_sum.3.7.11.lcssa = phi float [ %partial_sum.3.7.11, %for.inc36.7.11 ]
  br label %for.end38.7.11

for.end38.7.11:                                   ; preds = %for.end38.7.11.loopexit, %for.inc53.6.11
  %partial_sum.0.lcssa.7.11 = phi float [ 0.000000e+00, %for.inc53.6.11 ], [ %partial_sum.3.7.11.lcssa, %for.end38.7.11.loopexit ]
  br i1 %tobool39, label %if.else.7.11, label %if.then40.7.11

if.then40.7.11:                                   ; preds = %for.end38.7.11
  %cmp41.7.11 = fcmp olt float %partial_sum.0.lcssa.7.11, 0.000000e+00
  %sub42.7.11 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.11
  %cond.7.11 = select i1 %cmp41.7.11, float %sub42.7.11, float %partial_sum.0.lcssa.7.11
  %conv.7.11 = fptoui float %cond.7.11 to i8
  %conv43.7.11 = uitofp i8 %conv.7.11 to float
  %905 = add nsw i64 %indvars.iv.next21.6.11, %843
  %arrayidx47.7.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %905
  store float %conv43.7.11, float* %arrayidx47.7.11, align 4
  br label %for.inc53.7.11

if.else.7.11:                                     ; preds = %for.end38.7.11
  %906 = add nsw i64 %indvars.iv.next21.6.11, %842
  %arrayidx51.7.11 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %906
  store float %partial_sum.0.lcssa.7.11, float* %arrayidx51.7.11, align 4
  br label %for.inc53.7.11

for.inc53.7.11:                                   ; preds = %if.else.7.11, %if.then40.7.11
  %inc54.7.11 = add nsw i32 %in_j.011.11, 8
  %indvars.iv.next21.7.11 = add nsw i64 %indvars.iv20.11, 8
  %lftr.wideiv24.7.11 = trunc i64 %indvars.iv.next21.7.11 to i32
  %exitcond25.7.11 = icmp eq i32 %lftr.wideiv24.7.11, %img_width
  br i1 %exitcond25.7.11, label %for.inc57.11.loopexit, label %for.cond8.preheader.11, !llvm.loop !5

for.inc57.11.loopexit:                            ; preds = %for.inc53.7.11
  br label %for.inc57.11

for.inc57.11:                                     ; preds = %for.inc57.11.loopexit, %for.cond8.preheader.lr.ph.split.11
  %inc58.11 = add nsw i32 %in_i.015, 12
  %indvars.iv.next27.11 = add nsw i64 %indvars.iv26, 12
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.12

for.cond8.preheader.lr.ph.12:                     ; preds = %for.inc57.11
  %907 = trunc i64 %indvars.iv.next27.11 to i32
  %mul48.12 = shl i32 %907, 7
  %908 = trunc i64 %indvars.iv.next27.11 to i32
  %mul44.12 = shl i32 %908, 7
  %909 = sext i32 %mul48.12 to i64
  %910 = sext i32 %mul44.12 to i64
  br i1 %lcmp.mod.12, label %for.cond8.preheader.lr.ph.split.12, label %for.cond8.preheader.prol.12.preheader

for.cond8.preheader.prol.12.preheader:            ; preds = %for.cond8.preheader.lr.ph.12
  br label %for.cond8.preheader.prol.12

for.cond8.preheader.prol.12:                      ; preds = %for.cond8.preheader.prol.12.preheader, %for.inc53.prol.12
  %indvars.iv20.prol.12 = phi i64 [ %indvars.iv.next21.prol.12, %for.inc53.prol.12 ], [ 0, %for.cond8.preheader.prol.12.preheader ]
  %in_j.011.prol.12 = phi i32 [ %inc54.prol.12, %for.inc53.prol.12 ], [ %sub4, %for.cond8.preheader.prol.12.preheader ]
  %prol.iter.12 = phi i32 [ %prol.iter.sub.12, %for.inc53.prol.12 ], [ %xtraiter.12, %for.cond8.preheader.prol.12.preheader ]
  br i1 %cmp94, label %for.end38.prol.12, label %for.body10.prol.12.preheader

for.body10.prol.12.preheader:                     ; preds = %for.cond8.preheader.prol.12
  br label %for.body10.prol.12

for.body10.prol.12:                               ; preds = %for.body10.prol.12.preheader, %for.inc36.prol.12
  %ki.06.prol.12 = phi i32 [ %inc37.prol.12, %for.inc36.prol.12 ], [ 0, %for.body10.prol.12.preheader ]
  %partial_sum.05.prol.12 = phi float [ %partial_sum.3.prol.12, %for.inc36.prol.12 ], [ 0.000000e+00, %for.body10.prol.12.preheader ]
  %add.prol.12 = add nsw i32 %ki.06.prol.12, %inc58.11
  %notlhs.prol.12 = icmp slt i32 %add.prol.12, 0
  %notrhs.prol.12 = icmp uge i32 %add.prol.12, %img_height
  %.not.prol.12 = or i1 %notrhs.prol.12, %notlhs.prol.12
  %brmerge.prol.12 = or i1 %.not.prol.12, %cmp151.not.prol.12
  br i1 %brmerge.prol.12, label %for.inc36.prol.12, label %for.body16.lr.ph.prol.12

for.body16.lr.ph.prol.12:                         ; preds = %for.body10.prol.12
  %mul.prol.12 = shl i32 %add.prol.12, 7
  %mul30.prol.12 = mul i32 %ki.06.prol.12, %kern_width
  br label %for.body16.prol.12

for.body16.prol.12:                               ; preds = %for.inc.prol.12, %for.body16.lr.ph.prol.12
  %indvars.iv.prol.12 = phi i64 [ 0, %for.body16.lr.ph.prol.12 ], [ %indvars.iv.next.prol.12, %for.inc.prol.12 ]
  %partial_sum.12.prol.12 = phi float [ %partial_sum.05.prol.12, %for.body16.lr.ph.prol.12 ], [ %partial_sum.2.prol.12, %for.inc.prol.12 ]
  %911 = trunc i64 %indvars.iv.prol.12 to i32
  %add17.prol.12 = add nsw i32 %911, %in_j.011.prol.12
  %cmp18.prol.12 = icmp sgt i32 %add17.prol.12, -1
  %cmp21.prol.12 = icmp ult i32 %add17.prol.12, %img_width
  %912 = and i1 %cmp18.prol.12, %cmp21.prol.12
  br i1 %912, label %if.end26.prol.12, label %for.inc.prol.12

if.end26.prol.12:                                 ; preds = %for.body16.prol.12
  %add29.prol.12 = add nsw i32 %add17.prol.12, %mul.prol.12
  %idxprom.prol.12 = sext i32 %add29.prol.12 to i64
  %arrayidx.prol.12 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.12
  %913 = load float, float* %arrayidx.prol.12, align 4
  %914 = trunc i64 %indvars.iv.prol.12 to i32
  %add31.prol.12 = add i32 %914, %mul30.prol.12
  %idxprom32.prol.12 = zext i32 %add31.prol.12 to i64
  %arrayidx33.prol.12 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.12
  %915 = load float, float* %arrayidx33.prol.12, align 4
  %mul34.prol.12 = fmul float %913, %915
  %add35.prol.12 = fadd float %partial_sum.12.prol.12, %mul34.prol.12
  br label %for.inc.prol.12

for.inc.prol.12:                                  ; preds = %if.end26.prol.12, %for.body16.prol.12
  %partial_sum.2.prol.12 = phi float [ %add35.prol.12, %if.end26.prol.12 ], [ %partial_sum.12.prol.12, %for.body16.prol.12 ]
  %indvars.iv.next.prol.12 = add nuw nsw i64 %indvars.iv.prol.12, 1
  %lftr.wideiv.prol.12 = trunc i64 %indvars.iv.next.prol.12 to i32
  %exitcond.prol.12 = icmp eq i32 %lftr.wideiv.prol.12, %kern_width
  br i1 %exitcond.prol.12, label %for.inc36.prol.12.loopexit, label %for.body16.prol.12, !llvm.loop !1

for.inc36.prol.12.loopexit:                       ; preds = %for.inc.prol.12
  %partial_sum.2.prol.12.lcssa = phi float [ %partial_sum.2.prol.12, %for.inc.prol.12 ]
  br label %for.inc36.prol.12

for.inc36.prol.12:                                ; preds = %for.inc36.prol.12.loopexit, %for.body10.prol.12
  %partial_sum.3.prol.12 = phi float [ %partial_sum.05.prol.12, %for.body10.prol.12 ], [ %partial_sum.2.prol.12.lcssa, %for.inc36.prol.12.loopexit ]
  %inc37.prol.12 = add nuw nsw i32 %ki.06.prol.12, 1
  %exitcond19.prol.12 = icmp eq i32 %inc37.prol.12, %kern_height
  br i1 %exitcond19.prol.12, label %for.end38.prol.12.loopexit, label %for.body10.prol.12, !llvm.loop !3

for.end38.prol.12.loopexit:                       ; preds = %for.inc36.prol.12
  %partial_sum.3.prol.12.lcssa = phi float [ %partial_sum.3.prol.12, %for.inc36.prol.12 ]
  br label %for.end38.prol.12

for.end38.prol.12:                                ; preds = %for.end38.prol.12.loopexit, %for.cond8.preheader.prol.12
  %partial_sum.0.lcssa.prol.12 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.12 ], [ %partial_sum.3.prol.12.lcssa, %for.end38.prol.12.loopexit ]
  br i1 %tobool39, label %if.else.prol.12, label %if.then40.prol.12

if.then40.prol.12:                                ; preds = %for.end38.prol.12
  %cmp41.prol.12 = fcmp olt float %partial_sum.0.lcssa.prol.12, 0.000000e+00
  %sub42.prol.12 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.12
  %cond.prol.12 = select i1 %cmp41.prol.12, float %sub42.prol.12, float %partial_sum.0.lcssa.prol.12
  %conv.prol.12 = fptoui float %cond.prol.12 to i8
  %conv43.prol.12 = uitofp i8 %conv.prol.12 to float
  %916 = add nsw i64 %indvars.iv20.prol.12, %910
  %arrayidx47.prol.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %916
  store float %conv43.prol.12, float* %arrayidx47.prol.12, align 4
  br label %for.inc53.prol.12

if.else.prol.12:                                  ; preds = %for.end38.prol.12
  %917 = add nsw i64 %indvars.iv20.prol.12, %909
  %arrayidx51.prol.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %917
  store float %partial_sum.0.lcssa.prol.12, float* %arrayidx51.prol.12, align 4
  br label %for.inc53.prol.12

for.inc53.prol.12:                                ; preds = %if.else.prol.12, %if.then40.prol.12
  %inc54.prol.12 = add nsw i32 %in_j.011.prol.12, 1
  %indvars.iv.next21.prol.12 = add nuw nsw i64 %indvars.iv20.prol.12, 1
  %prol.iter.sub.12 = add i32 %prol.iter.12, -1
  %prol.iter.cmp.12 = icmp eq i32 %prol.iter.sub.12, 0
  br i1 %prol.iter.cmp.12, label %for.cond8.preheader.lr.ph.split.12.loopexit, label %for.cond8.preheader.prol.12, !llvm.loop !4

for.cond8.preheader.lr.ph.split.12.loopexit:      ; preds = %for.inc53.prol.12
  %indvars.iv.next21.prol.12.lcssa = phi i64 [ %indvars.iv.next21.prol.12, %for.inc53.prol.12 ]
  %inc54.prol.12.lcssa = phi i32 [ %inc54.prol.12, %for.inc53.prol.12 ]
  br label %for.cond8.preheader.lr.ph.split.12

for.cond8.preheader.lr.ph.split.12:               ; preds = %for.cond8.preheader.lr.ph.split.12.loopexit, %for.cond8.preheader.lr.ph.12
  %indvars.iv20.unr.12 = phi i64 [ 0, %for.cond8.preheader.lr.ph.12 ], [ %indvars.iv.next21.prol.12.lcssa, %for.cond8.preheader.lr.ph.split.12.loopexit ]
  %in_j.011.unr.12 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.12 ], [ %inc54.prol.12.lcssa, %for.cond8.preheader.lr.ph.split.12.loopexit ]
  br i1 %83, label %for.inc57.12, label %for.cond8.preheader.12.preheader

for.cond8.preheader.12.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.12
  br label %for.cond8.preheader.12

for.cond8.preheader.12:                           ; preds = %for.cond8.preheader.12.preheader, %for.inc53.7.12
  %indvars.iv20.12 = phi i64 [ %indvars.iv.next21.7.12, %for.inc53.7.12 ], [ %indvars.iv20.unr.12, %for.cond8.preheader.12.preheader ]
  %in_j.011.12 = phi i32 [ %inc54.7.12, %for.inc53.7.12 ], [ %in_j.011.unr.12, %for.cond8.preheader.12.preheader ]
  br i1 %cmp94, label %for.end38.12, label %for.body10.12.preheader

for.body10.12.preheader:                          ; preds = %for.cond8.preheader.12
  br label %for.body10.12

for.body10.12:                                    ; preds = %for.body10.12.preheader, %for.inc36.12
  %ki.06.12 = phi i32 [ %inc37.12, %for.inc36.12 ], [ 0, %for.body10.12.preheader ]
  %partial_sum.05.12 = phi float [ %partial_sum.3.12, %for.inc36.12 ], [ 0.000000e+00, %for.body10.12.preheader ]
  %add.12 = add nsw i32 %ki.06.12, %inc58.11
  %notlhs.12 = icmp slt i32 %add.12, 0
  %notrhs.12 = icmp uge i32 %add.12, %img_height
  %.not.12 = or i1 %notrhs.12, %notlhs.12
  %brmerge.12 = or i1 %.not.12, %cmp151.not.12
  br i1 %brmerge.12, label %for.inc36.12, label %for.body16.lr.ph.12

for.body16.lr.ph.12:                              ; preds = %for.body10.12
  %mul.12 = shl i32 %add.12, 7
  %mul30.12 = mul i32 %ki.06.12, %kern_width
  br label %for.body16.12

for.body16.12:                                    ; preds = %for.inc.12, %for.body16.lr.ph.12
  %indvars.iv.12 = phi i64 [ 0, %for.body16.lr.ph.12 ], [ %indvars.iv.next.12, %for.inc.12 ]
  %partial_sum.12.12 = phi float [ %partial_sum.05.12, %for.body16.lr.ph.12 ], [ %partial_sum.2.12, %for.inc.12 ]
  %918 = trunc i64 %indvars.iv.12 to i32
  %add17.12 = add nsw i32 %918, %in_j.011.12
  %cmp18.12 = icmp sgt i32 %add17.12, -1
  %cmp21.12 = icmp ult i32 %add17.12, %img_width
  %919 = and i1 %cmp18.12, %cmp21.12
  br i1 %919, label %if.end26.12, label %for.inc.12

if.end26.12:                                      ; preds = %for.body16.12
  %add29.12 = add nsw i32 %add17.12, %mul.12
  %idxprom.12 = sext i32 %add29.12 to i64
  %arrayidx.12 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.12
  %920 = load float, float* %arrayidx.12, align 4
  %921 = trunc i64 %indvars.iv.12 to i32
  %add31.12 = add i32 %921, %mul30.12
  %idxprom32.12 = zext i32 %add31.12 to i64
  %arrayidx33.12 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.12
  %922 = load float, float* %arrayidx33.12, align 4
  %mul34.12 = fmul float %920, %922
  %add35.12 = fadd float %partial_sum.12.12, %mul34.12
  br label %for.inc.12

for.inc.12:                                       ; preds = %if.end26.12, %for.body16.12
  %partial_sum.2.12 = phi float [ %add35.12, %if.end26.12 ], [ %partial_sum.12.12, %for.body16.12 ]
  %indvars.iv.next.12 = add nuw nsw i64 %indvars.iv.12, 1
  %lftr.wideiv.12 = trunc i64 %indvars.iv.next.12 to i32
  %exitcond.12 = icmp eq i32 %lftr.wideiv.12, %kern_width
  br i1 %exitcond.12, label %for.inc36.12.loopexit, label %for.body16.12, !llvm.loop !1

for.inc36.12.loopexit:                            ; preds = %for.inc.12
  %partial_sum.2.12.lcssa = phi float [ %partial_sum.2.12, %for.inc.12 ]
  br label %for.inc36.12

for.inc36.12:                                     ; preds = %for.inc36.12.loopexit, %for.body10.12
  %partial_sum.3.12 = phi float [ %partial_sum.05.12, %for.body10.12 ], [ %partial_sum.2.12.lcssa, %for.inc36.12.loopexit ]
  %inc37.12 = add nuw nsw i32 %ki.06.12, 1
  %exitcond19.12 = icmp eq i32 %inc37.12, %kern_height
  br i1 %exitcond19.12, label %for.end38.12.loopexit, label %for.body10.12, !llvm.loop !3

for.end38.12.loopexit:                            ; preds = %for.inc36.12
  %partial_sum.3.12.lcssa = phi float [ %partial_sum.3.12, %for.inc36.12 ]
  br label %for.end38.12

for.end38.12:                                     ; preds = %for.end38.12.loopexit, %for.cond8.preheader.12
  %partial_sum.0.lcssa.12 = phi float [ 0.000000e+00, %for.cond8.preheader.12 ], [ %partial_sum.3.12.lcssa, %for.end38.12.loopexit ]
  br i1 %tobool39, label %if.else.12, label %if.then40.12

if.then40.12:                                     ; preds = %for.end38.12
  %cmp41.12 = fcmp olt float %partial_sum.0.lcssa.12, 0.000000e+00
  %sub42.12 = fsub float -0.000000e+00, %partial_sum.0.lcssa.12
  %cond.12 = select i1 %cmp41.12, float %sub42.12, float %partial_sum.0.lcssa.12
  %conv.12 = fptoui float %cond.12 to i8
  %conv43.12 = uitofp i8 %conv.12 to float
  %923 = add nsw i64 %indvars.iv20.12, %910
  %arrayidx47.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %923
  store float %conv43.12, float* %arrayidx47.12, align 4
  br label %for.inc53.12

if.else.12:                                       ; preds = %for.end38.12
  %924 = add nsw i64 %indvars.iv20.12, %909
  %arrayidx51.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %924
  store float %partial_sum.0.lcssa.12, float* %arrayidx51.12, align 4
  br label %for.inc53.12

for.inc53.12:                                     ; preds = %if.else.12, %if.then40.12
  %inc54.12 = add nsw i32 %in_j.011.12, 1
  %indvars.iv.next21.12 = add nuw nsw i64 %indvars.iv20.12, 1
  br i1 %cmp94, label %for.end38.1.12, label %for.body10.1.12.preheader

for.body10.1.12.preheader:                        ; preds = %for.inc53.12
  br label %for.body10.1.12

for.body10.1.12:                                  ; preds = %for.body10.1.12.preheader, %for.inc36.1.12
  %ki.06.1.12 = phi i32 [ %inc37.1.12, %for.inc36.1.12 ], [ 0, %for.body10.1.12.preheader ]
  %partial_sum.05.1.12 = phi float [ %partial_sum.3.1.12, %for.inc36.1.12 ], [ 0.000000e+00, %for.body10.1.12.preheader ]
  %add.1.12 = add nsw i32 %ki.06.1.12, %inc58.11
  %notlhs.1.12 = icmp slt i32 %add.1.12, 0
  %notrhs.1.12 = icmp uge i32 %add.1.12, %img_height
  %.not.1.12 = or i1 %notrhs.1.12, %notlhs.1.12
  %brmerge.1.12 = or i1 %.not.1.12, %cmp151.not.1.12
  br i1 %brmerge.1.12, label %for.inc36.1.12, label %for.body16.lr.ph.1.12

for.body16.lr.ph.1.12:                            ; preds = %for.body10.1.12
  %mul.1.12 = shl i32 %add.1.12, 7
  %mul30.1.12 = mul i32 %ki.06.1.12, %kern_width
  br label %for.body16.1.12

for.body16.1.12:                                  ; preds = %for.inc.1.12, %for.body16.lr.ph.1.12
  %indvars.iv.1.12 = phi i64 [ 0, %for.body16.lr.ph.1.12 ], [ %indvars.iv.next.1.12, %for.inc.1.12 ]
  %partial_sum.12.1.12 = phi float [ %partial_sum.05.1.12, %for.body16.lr.ph.1.12 ], [ %partial_sum.2.1.12, %for.inc.1.12 ]
  %925 = trunc i64 %indvars.iv.1.12 to i32
  %add17.1.12 = add nsw i32 %925, %inc54.12
  %cmp18.1.12 = icmp sgt i32 %add17.1.12, -1
  %cmp21.1.12 = icmp ult i32 %add17.1.12, %img_width
  %926 = and i1 %cmp18.1.12, %cmp21.1.12
  br i1 %926, label %if.end26.1.12, label %for.inc.1.12

if.end26.1.12:                                    ; preds = %for.body16.1.12
  %add29.1.12 = add nsw i32 %add17.1.12, %mul.1.12
  %idxprom.1.12 = sext i32 %add29.1.12 to i64
  %arrayidx.1.12 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.12
  %927 = load float, float* %arrayidx.1.12, align 4
  %928 = trunc i64 %indvars.iv.1.12 to i32
  %add31.1.12 = add i32 %928, %mul30.1.12
  %idxprom32.1.12 = zext i32 %add31.1.12 to i64
  %arrayidx33.1.12 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.12
  %929 = load float, float* %arrayidx33.1.12, align 4
  %mul34.1.12 = fmul float %927, %929
  %add35.1.12 = fadd float %partial_sum.12.1.12, %mul34.1.12
  br label %for.inc.1.12

for.inc.1.12:                                     ; preds = %if.end26.1.12, %for.body16.1.12
  %partial_sum.2.1.12 = phi float [ %add35.1.12, %if.end26.1.12 ], [ %partial_sum.12.1.12, %for.body16.1.12 ]
  %indvars.iv.next.1.12 = add nuw nsw i64 %indvars.iv.1.12, 1
  %lftr.wideiv.1.12 = trunc i64 %indvars.iv.next.1.12 to i32
  %exitcond.1.12 = icmp eq i32 %lftr.wideiv.1.12, %kern_width
  br i1 %exitcond.1.12, label %for.inc36.1.12.loopexit, label %for.body16.1.12, !llvm.loop !1

for.inc36.1.12.loopexit:                          ; preds = %for.inc.1.12
  %partial_sum.2.1.12.lcssa = phi float [ %partial_sum.2.1.12, %for.inc.1.12 ]
  br label %for.inc36.1.12

for.inc36.1.12:                                   ; preds = %for.inc36.1.12.loopexit, %for.body10.1.12
  %partial_sum.3.1.12 = phi float [ %partial_sum.05.1.12, %for.body10.1.12 ], [ %partial_sum.2.1.12.lcssa, %for.inc36.1.12.loopexit ]
  %inc37.1.12 = add nuw nsw i32 %ki.06.1.12, 1
  %exitcond19.1.12 = icmp eq i32 %inc37.1.12, %kern_height
  br i1 %exitcond19.1.12, label %for.end38.1.12.loopexit, label %for.body10.1.12, !llvm.loop !3

for.end38.1.12.loopexit:                          ; preds = %for.inc36.1.12
  %partial_sum.3.1.12.lcssa = phi float [ %partial_sum.3.1.12, %for.inc36.1.12 ]
  br label %for.end38.1.12

for.end38.1.12:                                   ; preds = %for.end38.1.12.loopexit, %for.inc53.12
  %partial_sum.0.lcssa.1.12 = phi float [ 0.000000e+00, %for.inc53.12 ], [ %partial_sum.3.1.12.lcssa, %for.end38.1.12.loopexit ]
  br i1 %tobool39, label %if.else.1.12, label %if.then40.1.12

if.then40.1.12:                                   ; preds = %for.end38.1.12
  %cmp41.1.12 = fcmp olt float %partial_sum.0.lcssa.1.12, 0.000000e+00
  %sub42.1.12 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.12
  %cond.1.12 = select i1 %cmp41.1.12, float %sub42.1.12, float %partial_sum.0.lcssa.1.12
  %conv.1.12 = fptoui float %cond.1.12 to i8
  %conv43.1.12 = uitofp i8 %conv.1.12 to float
  %930 = add nsw i64 %indvars.iv.next21.12, %910
  %arrayidx47.1.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %930
  store float %conv43.1.12, float* %arrayidx47.1.12, align 4
  br label %for.inc53.1.12

if.else.1.12:                                     ; preds = %for.end38.1.12
  %931 = add nsw i64 %indvars.iv.next21.12, %909
  %arrayidx51.1.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %931
  store float %partial_sum.0.lcssa.1.12, float* %arrayidx51.1.12, align 4
  br label %for.inc53.1.12

for.inc53.1.12:                                   ; preds = %if.else.1.12, %if.then40.1.12
  %inc54.1.12 = add nsw i32 %in_j.011.12, 2
  %indvars.iv.next21.1.12 = add nsw i64 %indvars.iv20.12, 2
  br i1 %cmp94, label %for.end38.2.12, label %for.body10.2.12.preheader

for.body10.2.12.preheader:                        ; preds = %for.inc53.1.12
  br label %for.body10.2.12

for.body10.2.12:                                  ; preds = %for.body10.2.12.preheader, %for.inc36.2.12
  %ki.06.2.12 = phi i32 [ %inc37.2.12, %for.inc36.2.12 ], [ 0, %for.body10.2.12.preheader ]
  %partial_sum.05.2.12 = phi float [ %partial_sum.3.2.12, %for.inc36.2.12 ], [ 0.000000e+00, %for.body10.2.12.preheader ]
  %add.2.12 = add nsw i32 %ki.06.2.12, %inc58.11
  %notlhs.2.12 = icmp slt i32 %add.2.12, 0
  %notrhs.2.12 = icmp uge i32 %add.2.12, %img_height
  %.not.2.12 = or i1 %notrhs.2.12, %notlhs.2.12
  %brmerge.2.12 = or i1 %.not.2.12, %cmp151.not.2.12
  br i1 %brmerge.2.12, label %for.inc36.2.12, label %for.body16.lr.ph.2.12

for.body16.lr.ph.2.12:                            ; preds = %for.body10.2.12
  %mul.2.12 = shl i32 %add.2.12, 7
  %mul30.2.12 = mul i32 %ki.06.2.12, %kern_width
  br label %for.body16.2.12

for.body16.2.12:                                  ; preds = %for.inc.2.12, %for.body16.lr.ph.2.12
  %indvars.iv.2.12 = phi i64 [ 0, %for.body16.lr.ph.2.12 ], [ %indvars.iv.next.2.12, %for.inc.2.12 ]
  %partial_sum.12.2.12 = phi float [ %partial_sum.05.2.12, %for.body16.lr.ph.2.12 ], [ %partial_sum.2.2.12, %for.inc.2.12 ]
  %932 = trunc i64 %indvars.iv.2.12 to i32
  %add17.2.12 = add nsw i32 %932, %inc54.1.12
  %cmp18.2.12 = icmp sgt i32 %add17.2.12, -1
  %cmp21.2.12 = icmp ult i32 %add17.2.12, %img_width
  %933 = and i1 %cmp18.2.12, %cmp21.2.12
  br i1 %933, label %if.end26.2.12, label %for.inc.2.12

if.end26.2.12:                                    ; preds = %for.body16.2.12
  %add29.2.12 = add nsw i32 %add17.2.12, %mul.2.12
  %idxprom.2.12 = sext i32 %add29.2.12 to i64
  %arrayidx.2.12 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.12
  %934 = load float, float* %arrayidx.2.12, align 4
  %935 = trunc i64 %indvars.iv.2.12 to i32
  %add31.2.12 = add i32 %935, %mul30.2.12
  %idxprom32.2.12 = zext i32 %add31.2.12 to i64
  %arrayidx33.2.12 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.12
  %936 = load float, float* %arrayidx33.2.12, align 4
  %mul34.2.12 = fmul float %934, %936
  %add35.2.12 = fadd float %partial_sum.12.2.12, %mul34.2.12
  br label %for.inc.2.12

for.inc.2.12:                                     ; preds = %if.end26.2.12, %for.body16.2.12
  %partial_sum.2.2.12 = phi float [ %add35.2.12, %if.end26.2.12 ], [ %partial_sum.12.2.12, %for.body16.2.12 ]
  %indvars.iv.next.2.12 = add nuw nsw i64 %indvars.iv.2.12, 1
  %lftr.wideiv.2.12 = trunc i64 %indvars.iv.next.2.12 to i32
  %exitcond.2.12 = icmp eq i32 %lftr.wideiv.2.12, %kern_width
  br i1 %exitcond.2.12, label %for.inc36.2.12.loopexit, label %for.body16.2.12, !llvm.loop !1

for.inc36.2.12.loopexit:                          ; preds = %for.inc.2.12
  %partial_sum.2.2.12.lcssa = phi float [ %partial_sum.2.2.12, %for.inc.2.12 ]
  br label %for.inc36.2.12

for.inc36.2.12:                                   ; preds = %for.inc36.2.12.loopexit, %for.body10.2.12
  %partial_sum.3.2.12 = phi float [ %partial_sum.05.2.12, %for.body10.2.12 ], [ %partial_sum.2.2.12.lcssa, %for.inc36.2.12.loopexit ]
  %inc37.2.12 = add nuw nsw i32 %ki.06.2.12, 1
  %exitcond19.2.12 = icmp eq i32 %inc37.2.12, %kern_height
  br i1 %exitcond19.2.12, label %for.end38.2.12.loopexit, label %for.body10.2.12, !llvm.loop !3

for.end38.2.12.loopexit:                          ; preds = %for.inc36.2.12
  %partial_sum.3.2.12.lcssa = phi float [ %partial_sum.3.2.12, %for.inc36.2.12 ]
  br label %for.end38.2.12

for.end38.2.12:                                   ; preds = %for.end38.2.12.loopexit, %for.inc53.1.12
  %partial_sum.0.lcssa.2.12 = phi float [ 0.000000e+00, %for.inc53.1.12 ], [ %partial_sum.3.2.12.lcssa, %for.end38.2.12.loopexit ]
  br i1 %tobool39, label %if.else.2.12, label %if.then40.2.12

if.then40.2.12:                                   ; preds = %for.end38.2.12
  %cmp41.2.12 = fcmp olt float %partial_sum.0.lcssa.2.12, 0.000000e+00
  %sub42.2.12 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.12
  %cond.2.12 = select i1 %cmp41.2.12, float %sub42.2.12, float %partial_sum.0.lcssa.2.12
  %conv.2.12 = fptoui float %cond.2.12 to i8
  %conv43.2.12 = uitofp i8 %conv.2.12 to float
  %937 = add nsw i64 %indvars.iv.next21.1.12, %910
  %arrayidx47.2.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %937
  store float %conv43.2.12, float* %arrayidx47.2.12, align 4
  br label %for.inc53.2.12

if.else.2.12:                                     ; preds = %for.end38.2.12
  %938 = add nsw i64 %indvars.iv.next21.1.12, %909
  %arrayidx51.2.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %938
  store float %partial_sum.0.lcssa.2.12, float* %arrayidx51.2.12, align 4
  br label %for.inc53.2.12

for.inc53.2.12:                                   ; preds = %if.else.2.12, %if.then40.2.12
  %inc54.2.12 = add nsw i32 %in_j.011.12, 3
  %indvars.iv.next21.2.12 = add nsw i64 %indvars.iv20.12, 3
  br i1 %cmp94, label %for.end38.3.12, label %for.body10.3.12.preheader

for.body10.3.12.preheader:                        ; preds = %for.inc53.2.12
  br label %for.body10.3.12

for.body10.3.12:                                  ; preds = %for.body10.3.12.preheader, %for.inc36.3.12
  %ki.06.3.12 = phi i32 [ %inc37.3.12, %for.inc36.3.12 ], [ 0, %for.body10.3.12.preheader ]
  %partial_sum.05.3.12 = phi float [ %partial_sum.3.3.12, %for.inc36.3.12 ], [ 0.000000e+00, %for.body10.3.12.preheader ]
  %add.3.12 = add nsw i32 %ki.06.3.12, %inc58.11
  %notlhs.3.12 = icmp slt i32 %add.3.12, 0
  %notrhs.3.12 = icmp uge i32 %add.3.12, %img_height
  %.not.3.12 = or i1 %notrhs.3.12, %notlhs.3.12
  %brmerge.3.12 = or i1 %.not.3.12, %cmp151.not.3.12
  br i1 %brmerge.3.12, label %for.inc36.3.12, label %for.body16.lr.ph.3.12

for.body16.lr.ph.3.12:                            ; preds = %for.body10.3.12
  %mul.3.12 = shl i32 %add.3.12, 7
  %mul30.3.12 = mul i32 %ki.06.3.12, %kern_width
  br label %for.body16.3.12

for.body16.3.12:                                  ; preds = %for.inc.3.12, %for.body16.lr.ph.3.12
  %indvars.iv.3.12 = phi i64 [ 0, %for.body16.lr.ph.3.12 ], [ %indvars.iv.next.3.12, %for.inc.3.12 ]
  %partial_sum.12.3.12 = phi float [ %partial_sum.05.3.12, %for.body16.lr.ph.3.12 ], [ %partial_sum.2.3.12, %for.inc.3.12 ]
  %939 = trunc i64 %indvars.iv.3.12 to i32
  %add17.3.12 = add nsw i32 %939, %inc54.2.12
  %cmp18.3.12 = icmp sgt i32 %add17.3.12, -1
  %cmp21.3.12 = icmp ult i32 %add17.3.12, %img_width
  %940 = and i1 %cmp18.3.12, %cmp21.3.12
  br i1 %940, label %if.end26.3.12, label %for.inc.3.12

if.end26.3.12:                                    ; preds = %for.body16.3.12
  %add29.3.12 = add nsw i32 %add17.3.12, %mul.3.12
  %idxprom.3.12 = sext i32 %add29.3.12 to i64
  %arrayidx.3.12 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.12
  %941 = load float, float* %arrayidx.3.12, align 4
  %942 = trunc i64 %indvars.iv.3.12 to i32
  %add31.3.12 = add i32 %942, %mul30.3.12
  %idxprom32.3.12 = zext i32 %add31.3.12 to i64
  %arrayidx33.3.12 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.12
  %943 = load float, float* %arrayidx33.3.12, align 4
  %mul34.3.12 = fmul float %941, %943
  %add35.3.12 = fadd float %partial_sum.12.3.12, %mul34.3.12
  br label %for.inc.3.12

for.inc.3.12:                                     ; preds = %if.end26.3.12, %for.body16.3.12
  %partial_sum.2.3.12 = phi float [ %add35.3.12, %if.end26.3.12 ], [ %partial_sum.12.3.12, %for.body16.3.12 ]
  %indvars.iv.next.3.12 = add nuw nsw i64 %indvars.iv.3.12, 1
  %lftr.wideiv.3.12 = trunc i64 %indvars.iv.next.3.12 to i32
  %exitcond.3.12 = icmp eq i32 %lftr.wideiv.3.12, %kern_width
  br i1 %exitcond.3.12, label %for.inc36.3.12.loopexit, label %for.body16.3.12, !llvm.loop !1

for.inc36.3.12.loopexit:                          ; preds = %for.inc.3.12
  %partial_sum.2.3.12.lcssa = phi float [ %partial_sum.2.3.12, %for.inc.3.12 ]
  br label %for.inc36.3.12

for.inc36.3.12:                                   ; preds = %for.inc36.3.12.loopexit, %for.body10.3.12
  %partial_sum.3.3.12 = phi float [ %partial_sum.05.3.12, %for.body10.3.12 ], [ %partial_sum.2.3.12.lcssa, %for.inc36.3.12.loopexit ]
  %inc37.3.12 = add nuw nsw i32 %ki.06.3.12, 1
  %exitcond19.3.12 = icmp eq i32 %inc37.3.12, %kern_height
  br i1 %exitcond19.3.12, label %for.end38.3.12.loopexit, label %for.body10.3.12, !llvm.loop !3

for.end38.3.12.loopexit:                          ; preds = %for.inc36.3.12
  %partial_sum.3.3.12.lcssa = phi float [ %partial_sum.3.3.12, %for.inc36.3.12 ]
  br label %for.end38.3.12

for.end38.3.12:                                   ; preds = %for.end38.3.12.loopexit, %for.inc53.2.12
  %partial_sum.0.lcssa.3.12 = phi float [ 0.000000e+00, %for.inc53.2.12 ], [ %partial_sum.3.3.12.lcssa, %for.end38.3.12.loopexit ]
  br i1 %tobool39, label %if.else.3.12, label %if.then40.3.12

if.then40.3.12:                                   ; preds = %for.end38.3.12
  %cmp41.3.12 = fcmp olt float %partial_sum.0.lcssa.3.12, 0.000000e+00
  %sub42.3.12 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.12
  %cond.3.12 = select i1 %cmp41.3.12, float %sub42.3.12, float %partial_sum.0.lcssa.3.12
  %conv.3.12 = fptoui float %cond.3.12 to i8
  %conv43.3.12 = uitofp i8 %conv.3.12 to float
  %944 = add nsw i64 %indvars.iv.next21.2.12, %910
  %arrayidx47.3.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %944
  store float %conv43.3.12, float* %arrayidx47.3.12, align 4
  br label %for.inc53.3.12

if.else.3.12:                                     ; preds = %for.end38.3.12
  %945 = add nsw i64 %indvars.iv.next21.2.12, %909
  %arrayidx51.3.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %945
  store float %partial_sum.0.lcssa.3.12, float* %arrayidx51.3.12, align 4
  br label %for.inc53.3.12

for.inc53.3.12:                                   ; preds = %if.else.3.12, %if.then40.3.12
  %inc54.3.12 = add nsw i32 %in_j.011.12, 4
  %indvars.iv.next21.3.12 = add nsw i64 %indvars.iv20.12, 4
  br i1 %cmp94, label %for.end38.4.12, label %for.body10.4.12.preheader

for.body10.4.12.preheader:                        ; preds = %for.inc53.3.12
  br label %for.body10.4.12

for.body10.4.12:                                  ; preds = %for.body10.4.12.preheader, %for.inc36.4.12
  %ki.06.4.12 = phi i32 [ %inc37.4.12, %for.inc36.4.12 ], [ 0, %for.body10.4.12.preheader ]
  %partial_sum.05.4.12 = phi float [ %partial_sum.3.4.12, %for.inc36.4.12 ], [ 0.000000e+00, %for.body10.4.12.preheader ]
  %add.4.12 = add nsw i32 %ki.06.4.12, %inc58.11
  %notlhs.4.12 = icmp slt i32 %add.4.12, 0
  %notrhs.4.12 = icmp uge i32 %add.4.12, %img_height
  %.not.4.12 = or i1 %notrhs.4.12, %notlhs.4.12
  %brmerge.4.12 = or i1 %.not.4.12, %cmp151.not.4.12
  br i1 %brmerge.4.12, label %for.inc36.4.12, label %for.body16.lr.ph.4.12

for.body16.lr.ph.4.12:                            ; preds = %for.body10.4.12
  %mul.4.12 = shl i32 %add.4.12, 7
  %mul30.4.12 = mul i32 %ki.06.4.12, %kern_width
  br label %for.body16.4.12

for.body16.4.12:                                  ; preds = %for.inc.4.12, %for.body16.lr.ph.4.12
  %indvars.iv.4.12 = phi i64 [ 0, %for.body16.lr.ph.4.12 ], [ %indvars.iv.next.4.12, %for.inc.4.12 ]
  %partial_sum.12.4.12 = phi float [ %partial_sum.05.4.12, %for.body16.lr.ph.4.12 ], [ %partial_sum.2.4.12, %for.inc.4.12 ]
  %946 = trunc i64 %indvars.iv.4.12 to i32
  %add17.4.12 = add nsw i32 %946, %inc54.3.12
  %cmp18.4.12 = icmp sgt i32 %add17.4.12, -1
  %cmp21.4.12 = icmp ult i32 %add17.4.12, %img_width
  %947 = and i1 %cmp18.4.12, %cmp21.4.12
  br i1 %947, label %if.end26.4.12, label %for.inc.4.12

if.end26.4.12:                                    ; preds = %for.body16.4.12
  %add29.4.12 = add nsw i32 %add17.4.12, %mul.4.12
  %idxprom.4.12 = sext i32 %add29.4.12 to i64
  %arrayidx.4.12 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.12
  %948 = load float, float* %arrayidx.4.12, align 4
  %949 = trunc i64 %indvars.iv.4.12 to i32
  %add31.4.12 = add i32 %949, %mul30.4.12
  %idxprom32.4.12 = zext i32 %add31.4.12 to i64
  %arrayidx33.4.12 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.12
  %950 = load float, float* %arrayidx33.4.12, align 4
  %mul34.4.12 = fmul float %948, %950
  %add35.4.12 = fadd float %partial_sum.12.4.12, %mul34.4.12
  br label %for.inc.4.12

for.inc.4.12:                                     ; preds = %if.end26.4.12, %for.body16.4.12
  %partial_sum.2.4.12 = phi float [ %add35.4.12, %if.end26.4.12 ], [ %partial_sum.12.4.12, %for.body16.4.12 ]
  %indvars.iv.next.4.12 = add nuw nsw i64 %indvars.iv.4.12, 1
  %lftr.wideiv.4.12 = trunc i64 %indvars.iv.next.4.12 to i32
  %exitcond.4.12 = icmp eq i32 %lftr.wideiv.4.12, %kern_width
  br i1 %exitcond.4.12, label %for.inc36.4.12.loopexit, label %for.body16.4.12, !llvm.loop !1

for.inc36.4.12.loopexit:                          ; preds = %for.inc.4.12
  %partial_sum.2.4.12.lcssa = phi float [ %partial_sum.2.4.12, %for.inc.4.12 ]
  br label %for.inc36.4.12

for.inc36.4.12:                                   ; preds = %for.inc36.4.12.loopexit, %for.body10.4.12
  %partial_sum.3.4.12 = phi float [ %partial_sum.05.4.12, %for.body10.4.12 ], [ %partial_sum.2.4.12.lcssa, %for.inc36.4.12.loopexit ]
  %inc37.4.12 = add nuw nsw i32 %ki.06.4.12, 1
  %exitcond19.4.12 = icmp eq i32 %inc37.4.12, %kern_height
  br i1 %exitcond19.4.12, label %for.end38.4.12.loopexit, label %for.body10.4.12, !llvm.loop !3

for.end38.4.12.loopexit:                          ; preds = %for.inc36.4.12
  %partial_sum.3.4.12.lcssa = phi float [ %partial_sum.3.4.12, %for.inc36.4.12 ]
  br label %for.end38.4.12

for.end38.4.12:                                   ; preds = %for.end38.4.12.loopexit, %for.inc53.3.12
  %partial_sum.0.lcssa.4.12 = phi float [ 0.000000e+00, %for.inc53.3.12 ], [ %partial_sum.3.4.12.lcssa, %for.end38.4.12.loopexit ]
  br i1 %tobool39, label %if.else.4.12, label %if.then40.4.12

if.then40.4.12:                                   ; preds = %for.end38.4.12
  %cmp41.4.12 = fcmp olt float %partial_sum.0.lcssa.4.12, 0.000000e+00
  %sub42.4.12 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.12
  %cond.4.12 = select i1 %cmp41.4.12, float %sub42.4.12, float %partial_sum.0.lcssa.4.12
  %conv.4.12 = fptoui float %cond.4.12 to i8
  %conv43.4.12 = uitofp i8 %conv.4.12 to float
  %951 = add nsw i64 %indvars.iv.next21.3.12, %910
  %arrayidx47.4.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %951
  store float %conv43.4.12, float* %arrayidx47.4.12, align 4
  br label %for.inc53.4.12

if.else.4.12:                                     ; preds = %for.end38.4.12
  %952 = add nsw i64 %indvars.iv.next21.3.12, %909
  %arrayidx51.4.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %952
  store float %partial_sum.0.lcssa.4.12, float* %arrayidx51.4.12, align 4
  br label %for.inc53.4.12

for.inc53.4.12:                                   ; preds = %if.else.4.12, %if.then40.4.12
  %inc54.4.12 = add nsw i32 %in_j.011.12, 5
  %indvars.iv.next21.4.12 = add nsw i64 %indvars.iv20.12, 5
  br i1 %cmp94, label %for.end38.5.12, label %for.body10.5.12.preheader

for.body10.5.12.preheader:                        ; preds = %for.inc53.4.12
  br label %for.body10.5.12

for.body10.5.12:                                  ; preds = %for.body10.5.12.preheader, %for.inc36.5.12
  %ki.06.5.12 = phi i32 [ %inc37.5.12, %for.inc36.5.12 ], [ 0, %for.body10.5.12.preheader ]
  %partial_sum.05.5.12 = phi float [ %partial_sum.3.5.12, %for.inc36.5.12 ], [ 0.000000e+00, %for.body10.5.12.preheader ]
  %add.5.12 = add nsw i32 %ki.06.5.12, %inc58.11
  %notlhs.5.12 = icmp slt i32 %add.5.12, 0
  %notrhs.5.12 = icmp uge i32 %add.5.12, %img_height
  %.not.5.12 = or i1 %notrhs.5.12, %notlhs.5.12
  %brmerge.5.12 = or i1 %.not.5.12, %cmp151.not.5.12
  br i1 %brmerge.5.12, label %for.inc36.5.12, label %for.body16.lr.ph.5.12

for.body16.lr.ph.5.12:                            ; preds = %for.body10.5.12
  %mul.5.12 = shl i32 %add.5.12, 7
  %mul30.5.12 = mul i32 %ki.06.5.12, %kern_width
  br label %for.body16.5.12

for.body16.5.12:                                  ; preds = %for.inc.5.12, %for.body16.lr.ph.5.12
  %indvars.iv.5.12 = phi i64 [ 0, %for.body16.lr.ph.5.12 ], [ %indvars.iv.next.5.12, %for.inc.5.12 ]
  %partial_sum.12.5.12 = phi float [ %partial_sum.05.5.12, %for.body16.lr.ph.5.12 ], [ %partial_sum.2.5.12, %for.inc.5.12 ]
  %953 = trunc i64 %indvars.iv.5.12 to i32
  %add17.5.12 = add nsw i32 %953, %inc54.4.12
  %cmp18.5.12 = icmp sgt i32 %add17.5.12, -1
  %cmp21.5.12 = icmp ult i32 %add17.5.12, %img_width
  %954 = and i1 %cmp18.5.12, %cmp21.5.12
  br i1 %954, label %if.end26.5.12, label %for.inc.5.12

if.end26.5.12:                                    ; preds = %for.body16.5.12
  %add29.5.12 = add nsw i32 %add17.5.12, %mul.5.12
  %idxprom.5.12 = sext i32 %add29.5.12 to i64
  %arrayidx.5.12 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.12
  %955 = load float, float* %arrayidx.5.12, align 4
  %956 = trunc i64 %indvars.iv.5.12 to i32
  %add31.5.12 = add i32 %956, %mul30.5.12
  %idxprom32.5.12 = zext i32 %add31.5.12 to i64
  %arrayidx33.5.12 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.12
  %957 = load float, float* %arrayidx33.5.12, align 4
  %mul34.5.12 = fmul float %955, %957
  %add35.5.12 = fadd float %partial_sum.12.5.12, %mul34.5.12
  br label %for.inc.5.12

for.inc.5.12:                                     ; preds = %if.end26.5.12, %for.body16.5.12
  %partial_sum.2.5.12 = phi float [ %add35.5.12, %if.end26.5.12 ], [ %partial_sum.12.5.12, %for.body16.5.12 ]
  %indvars.iv.next.5.12 = add nuw nsw i64 %indvars.iv.5.12, 1
  %lftr.wideiv.5.12 = trunc i64 %indvars.iv.next.5.12 to i32
  %exitcond.5.12 = icmp eq i32 %lftr.wideiv.5.12, %kern_width
  br i1 %exitcond.5.12, label %for.inc36.5.12.loopexit, label %for.body16.5.12, !llvm.loop !1

for.inc36.5.12.loopexit:                          ; preds = %for.inc.5.12
  %partial_sum.2.5.12.lcssa = phi float [ %partial_sum.2.5.12, %for.inc.5.12 ]
  br label %for.inc36.5.12

for.inc36.5.12:                                   ; preds = %for.inc36.5.12.loopexit, %for.body10.5.12
  %partial_sum.3.5.12 = phi float [ %partial_sum.05.5.12, %for.body10.5.12 ], [ %partial_sum.2.5.12.lcssa, %for.inc36.5.12.loopexit ]
  %inc37.5.12 = add nuw nsw i32 %ki.06.5.12, 1
  %exitcond19.5.12 = icmp eq i32 %inc37.5.12, %kern_height
  br i1 %exitcond19.5.12, label %for.end38.5.12.loopexit, label %for.body10.5.12, !llvm.loop !3

for.end38.5.12.loopexit:                          ; preds = %for.inc36.5.12
  %partial_sum.3.5.12.lcssa = phi float [ %partial_sum.3.5.12, %for.inc36.5.12 ]
  br label %for.end38.5.12

for.end38.5.12:                                   ; preds = %for.end38.5.12.loopexit, %for.inc53.4.12
  %partial_sum.0.lcssa.5.12 = phi float [ 0.000000e+00, %for.inc53.4.12 ], [ %partial_sum.3.5.12.lcssa, %for.end38.5.12.loopexit ]
  br i1 %tobool39, label %if.else.5.12, label %if.then40.5.12

if.then40.5.12:                                   ; preds = %for.end38.5.12
  %cmp41.5.12 = fcmp olt float %partial_sum.0.lcssa.5.12, 0.000000e+00
  %sub42.5.12 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.12
  %cond.5.12 = select i1 %cmp41.5.12, float %sub42.5.12, float %partial_sum.0.lcssa.5.12
  %conv.5.12 = fptoui float %cond.5.12 to i8
  %conv43.5.12 = uitofp i8 %conv.5.12 to float
  %958 = add nsw i64 %indvars.iv.next21.4.12, %910
  %arrayidx47.5.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %958
  store float %conv43.5.12, float* %arrayidx47.5.12, align 4
  br label %for.inc53.5.12

if.else.5.12:                                     ; preds = %for.end38.5.12
  %959 = add nsw i64 %indvars.iv.next21.4.12, %909
  %arrayidx51.5.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %959
  store float %partial_sum.0.lcssa.5.12, float* %arrayidx51.5.12, align 4
  br label %for.inc53.5.12

for.inc53.5.12:                                   ; preds = %if.else.5.12, %if.then40.5.12
  %inc54.5.12 = add nsw i32 %in_j.011.12, 6
  %indvars.iv.next21.5.12 = add nsw i64 %indvars.iv20.12, 6
  br i1 %cmp94, label %for.end38.6.12, label %for.body10.6.12.preheader

for.body10.6.12.preheader:                        ; preds = %for.inc53.5.12
  br label %for.body10.6.12

for.body10.6.12:                                  ; preds = %for.body10.6.12.preheader, %for.inc36.6.12
  %ki.06.6.12 = phi i32 [ %inc37.6.12, %for.inc36.6.12 ], [ 0, %for.body10.6.12.preheader ]
  %partial_sum.05.6.12 = phi float [ %partial_sum.3.6.12, %for.inc36.6.12 ], [ 0.000000e+00, %for.body10.6.12.preheader ]
  %add.6.12 = add nsw i32 %ki.06.6.12, %inc58.11
  %notlhs.6.12 = icmp slt i32 %add.6.12, 0
  %notrhs.6.12 = icmp uge i32 %add.6.12, %img_height
  %.not.6.12 = or i1 %notrhs.6.12, %notlhs.6.12
  %brmerge.6.12 = or i1 %.not.6.12, %cmp151.not.6.12
  br i1 %brmerge.6.12, label %for.inc36.6.12, label %for.body16.lr.ph.6.12

for.body16.lr.ph.6.12:                            ; preds = %for.body10.6.12
  %mul.6.12 = shl i32 %add.6.12, 7
  %mul30.6.12 = mul i32 %ki.06.6.12, %kern_width
  br label %for.body16.6.12

for.body16.6.12:                                  ; preds = %for.inc.6.12, %for.body16.lr.ph.6.12
  %indvars.iv.6.12 = phi i64 [ 0, %for.body16.lr.ph.6.12 ], [ %indvars.iv.next.6.12, %for.inc.6.12 ]
  %partial_sum.12.6.12 = phi float [ %partial_sum.05.6.12, %for.body16.lr.ph.6.12 ], [ %partial_sum.2.6.12, %for.inc.6.12 ]
  %960 = trunc i64 %indvars.iv.6.12 to i32
  %add17.6.12 = add nsw i32 %960, %inc54.5.12
  %cmp18.6.12 = icmp sgt i32 %add17.6.12, -1
  %cmp21.6.12 = icmp ult i32 %add17.6.12, %img_width
  %961 = and i1 %cmp18.6.12, %cmp21.6.12
  br i1 %961, label %if.end26.6.12, label %for.inc.6.12

if.end26.6.12:                                    ; preds = %for.body16.6.12
  %add29.6.12 = add nsw i32 %add17.6.12, %mul.6.12
  %idxprom.6.12 = sext i32 %add29.6.12 to i64
  %arrayidx.6.12 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.12
  %962 = load float, float* %arrayidx.6.12, align 4
  %963 = trunc i64 %indvars.iv.6.12 to i32
  %add31.6.12 = add i32 %963, %mul30.6.12
  %idxprom32.6.12 = zext i32 %add31.6.12 to i64
  %arrayidx33.6.12 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.12
  %964 = load float, float* %arrayidx33.6.12, align 4
  %mul34.6.12 = fmul float %962, %964
  %add35.6.12 = fadd float %partial_sum.12.6.12, %mul34.6.12
  br label %for.inc.6.12

for.inc.6.12:                                     ; preds = %if.end26.6.12, %for.body16.6.12
  %partial_sum.2.6.12 = phi float [ %add35.6.12, %if.end26.6.12 ], [ %partial_sum.12.6.12, %for.body16.6.12 ]
  %indvars.iv.next.6.12 = add nuw nsw i64 %indvars.iv.6.12, 1
  %lftr.wideiv.6.12 = trunc i64 %indvars.iv.next.6.12 to i32
  %exitcond.6.12 = icmp eq i32 %lftr.wideiv.6.12, %kern_width
  br i1 %exitcond.6.12, label %for.inc36.6.12.loopexit, label %for.body16.6.12, !llvm.loop !1

for.inc36.6.12.loopexit:                          ; preds = %for.inc.6.12
  %partial_sum.2.6.12.lcssa = phi float [ %partial_sum.2.6.12, %for.inc.6.12 ]
  br label %for.inc36.6.12

for.inc36.6.12:                                   ; preds = %for.inc36.6.12.loopexit, %for.body10.6.12
  %partial_sum.3.6.12 = phi float [ %partial_sum.05.6.12, %for.body10.6.12 ], [ %partial_sum.2.6.12.lcssa, %for.inc36.6.12.loopexit ]
  %inc37.6.12 = add nuw nsw i32 %ki.06.6.12, 1
  %exitcond19.6.12 = icmp eq i32 %inc37.6.12, %kern_height
  br i1 %exitcond19.6.12, label %for.end38.6.12.loopexit, label %for.body10.6.12, !llvm.loop !3

for.end38.6.12.loopexit:                          ; preds = %for.inc36.6.12
  %partial_sum.3.6.12.lcssa = phi float [ %partial_sum.3.6.12, %for.inc36.6.12 ]
  br label %for.end38.6.12

for.end38.6.12:                                   ; preds = %for.end38.6.12.loopexit, %for.inc53.5.12
  %partial_sum.0.lcssa.6.12 = phi float [ 0.000000e+00, %for.inc53.5.12 ], [ %partial_sum.3.6.12.lcssa, %for.end38.6.12.loopexit ]
  br i1 %tobool39, label %if.else.6.12, label %if.then40.6.12

if.then40.6.12:                                   ; preds = %for.end38.6.12
  %cmp41.6.12 = fcmp olt float %partial_sum.0.lcssa.6.12, 0.000000e+00
  %sub42.6.12 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.12
  %cond.6.12 = select i1 %cmp41.6.12, float %sub42.6.12, float %partial_sum.0.lcssa.6.12
  %conv.6.12 = fptoui float %cond.6.12 to i8
  %conv43.6.12 = uitofp i8 %conv.6.12 to float
  %965 = add nsw i64 %indvars.iv.next21.5.12, %910
  %arrayidx47.6.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %965
  store float %conv43.6.12, float* %arrayidx47.6.12, align 4
  br label %for.inc53.6.12

if.else.6.12:                                     ; preds = %for.end38.6.12
  %966 = add nsw i64 %indvars.iv.next21.5.12, %909
  %arrayidx51.6.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %966
  store float %partial_sum.0.lcssa.6.12, float* %arrayidx51.6.12, align 4
  br label %for.inc53.6.12

for.inc53.6.12:                                   ; preds = %if.else.6.12, %if.then40.6.12
  %inc54.6.12 = add nsw i32 %in_j.011.12, 7
  %indvars.iv.next21.6.12 = add nsw i64 %indvars.iv20.12, 7
  br i1 %cmp94, label %for.end38.7.12, label %for.body10.7.12.preheader

for.body10.7.12.preheader:                        ; preds = %for.inc53.6.12
  br label %for.body10.7.12

for.body10.7.12:                                  ; preds = %for.body10.7.12.preheader, %for.inc36.7.12
  %ki.06.7.12 = phi i32 [ %inc37.7.12, %for.inc36.7.12 ], [ 0, %for.body10.7.12.preheader ]
  %partial_sum.05.7.12 = phi float [ %partial_sum.3.7.12, %for.inc36.7.12 ], [ 0.000000e+00, %for.body10.7.12.preheader ]
  %add.7.12 = add nsw i32 %ki.06.7.12, %inc58.11
  %notlhs.7.12 = icmp slt i32 %add.7.12, 0
  %notrhs.7.12 = icmp uge i32 %add.7.12, %img_height
  %.not.7.12 = or i1 %notrhs.7.12, %notlhs.7.12
  %brmerge.7.12 = or i1 %.not.7.12, %cmp151.not.7.12
  br i1 %brmerge.7.12, label %for.inc36.7.12, label %for.body16.lr.ph.7.12

for.body16.lr.ph.7.12:                            ; preds = %for.body10.7.12
  %mul.7.12 = shl i32 %add.7.12, 7
  %mul30.7.12 = mul i32 %ki.06.7.12, %kern_width
  br label %for.body16.7.12

for.body16.7.12:                                  ; preds = %for.inc.7.12, %for.body16.lr.ph.7.12
  %indvars.iv.7.12 = phi i64 [ 0, %for.body16.lr.ph.7.12 ], [ %indvars.iv.next.7.12, %for.inc.7.12 ]
  %partial_sum.12.7.12 = phi float [ %partial_sum.05.7.12, %for.body16.lr.ph.7.12 ], [ %partial_sum.2.7.12, %for.inc.7.12 ]
  %967 = trunc i64 %indvars.iv.7.12 to i32
  %add17.7.12 = add nsw i32 %967, %inc54.6.12
  %cmp18.7.12 = icmp sgt i32 %add17.7.12, -1
  %cmp21.7.12 = icmp ult i32 %add17.7.12, %img_width
  %968 = and i1 %cmp18.7.12, %cmp21.7.12
  br i1 %968, label %if.end26.7.12, label %for.inc.7.12

if.end26.7.12:                                    ; preds = %for.body16.7.12
  %add29.7.12 = add nsw i32 %add17.7.12, %mul.7.12
  %idxprom.7.12 = sext i32 %add29.7.12 to i64
  %arrayidx.7.12 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.12
  %969 = load float, float* %arrayidx.7.12, align 4
  %970 = trunc i64 %indvars.iv.7.12 to i32
  %add31.7.12 = add i32 %970, %mul30.7.12
  %idxprom32.7.12 = zext i32 %add31.7.12 to i64
  %arrayidx33.7.12 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.12
  %971 = load float, float* %arrayidx33.7.12, align 4
  %mul34.7.12 = fmul float %969, %971
  %add35.7.12 = fadd float %partial_sum.12.7.12, %mul34.7.12
  br label %for.inc.7.12

for.inc.7.12:                                     ; preds = %if.end26.7.12, %for.body16.7.12
  %partial_sum.2.7.12 = phi float [ %add35.7.12, %if.end26.7.12 ], [ %partial_sum.12.7.12, %for.body16.7.12 ]
  %indvars.iv.next.7.12 = add nuw nsw i64 %indvars.iv.7.12, 1
  %lftr.wideiv.7.12 = trunc i64 %indvars.iv.next.7.12 to i32
  %exitcond.7.12 = icmp eq i32 %lftr.wideiv.7.12, %kern_width
  br i1 %exitcond.7.12, label %for.inc36.7.12.loopexit, label %for.body16.7.12, !llvm.loop !1

for.inc36.7.12.loopexit:                          ; preds = %for.inc.7.12
  %partial_sum.2.7.12.lcssa = phi float [ %partial_sum.2.7.12, %for.inc.7.12 ]
  br label %for.inc36.7.12

for.inc36.7.12:                                   ; preds = %for.inc36.7.12.loopexit, %for.body10.7.12
  %partial_sum.3.7.12 = phi float [ %partial_sum.05.7.12, %for.body10.7.12 ], [ %partial_sum.2.7.12.lcssa, %for.inc36.7.12.loopexit ]
  %inc37.7.12 = add nuw nsw i32 %ki.06.7.12, 1
  %exitcond19.7.12 = icmp eq i32 %inc37.7.12, %kern_height
  br i1 %exitcond19.7.12, label %for.end38.7.12.loopexit, label %for.body10.7.12, !llvm.loop !3

for.end38.7.12.loopexit:                          ; preds = %for.inc36.7.12
  %partial_sum.3.7.12.lcssa = phi float [ %partial_sum.3.7.12, %for.inc36.7.12 ]
  br label %for.end38.7.12

for.end38.7.12:                                   ; preds = %for.end38.7.12.loopexit, %for.inc53.6.12
  %partial_sum.0.lcssa.7.12 = phi float [ 0.000000e+00, %for.inc53.6.12 ], [ %partial_sum.3.7.12.lcssa, %for.end38.7.12.loopexit ]
  br i1 %tobool39, label %if.else.7.12, label %if.then40.7.12

if.then40.7.12:                                   ; preds = %for.end38.7.12
  %cmp41.7.12 = fcmp olt float %partial_sum.0.lcssa.7.12, 0.000000e+00
  %sub42.7.12 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.12
  %cond.7.12 = select i1 %cmp41.7.12, float %sub42.7.12, float %partial_sum.0.lcssa.7.12
  %conv.7.12 = fptoui float %cond.7.12 to i8
  %conv43.7.12 = uitofp i8 %conv.7.12 to float
  %972 = add nsw i64 %indvars.iv.next21.6.12, %910
  %arrayidx47.7.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %972
  store float %conv43.7.12, float* %arrayidx47.7.12, align 4
  br label %for.inc53.7.12

if.else.7.12:                                     ; preds = %for.end38.7.12
  %973 = add nsw i64 %indvars.iv.next21.6.12, %909
  %arrayidx51.7.12 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %973
  store float %partial_sum.0.lcssa.7.12, float* %arrayidx51.7.12, align 4
  br label %for.inc53.7.12

for.inc53.7.12:                                   ; preds = %if.else.7.12, %if.then40.7.12
  %inc54.7.12 = add nsw i32 %in_j.011.12, 8
  %indvars.iv.next21.7.12 = add nsw i64 %indvars.iv20.12, 8
  %lftr.wideiv24.7.12 = trunc i64 %indvars.iv.next21.7.12 to i32
  %exitcond25.7.12 = icmp eq i32 %lftr.wideiv24.7.12, %img_width
  br i1 %exitcond25.7.12, label %for.inc57.12.loopexit, label %for.cond8.preheader.12, !llvm.loop !5

for.inc57.12.loopexit:                            ; preds = %for.inc53.7.12
  br label %for.inc57.12

for.inc57.12:                                     ; preds = %for.inc57.12.loopexit, %for.cond8.preheader.lr.ph.split.12
  %inc58.12 = add nsw i32 %in_i.015, 13
  %indvars.iv.next27.12 = add nsw i64 %indvars.iv26, 13
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.13

for.cond8.preheader.lr.ph.13:                     ; preds = %for.inc57.12
  %974 = trunc i64 %indvars.iv.next27.12 to i32
  %mul48.13 = shl i32 %974, 7
  %975 = trunc i64 %indvars.iv.next27.12 to i32
  %mul44.13 = shl i32 %975, 7
  %976 = sext i32 %mul48.13 to i64
  %977 = sext i32 %mul44.13 to i64
  br i1 %lcmp.mod.13, label %for.cond8.preheader.lr.ph.split.13, label %for.cond8.preheader.prol.13.preheader

for.cond8.preheader.prol.13.preheader:            ; preds = %for.cond8.preheader.lr.ph.13
  br label %for.cond8.preheader.prol.13

for.cond8.preheader.prol.13:                      ; preds = %for.cond8.preheader.prol.13.preheader, %for.inc53.prol.13
  %indvars.iv20.prol.13 = phi i64 [ %indvars.iv.next21.prol.13, %for.inc53.prol.13 ], [ 0, %for.cond8.preheader.prol.13.preheader ]
  %in_j.011.prol.13 = phi i32 [ %inc54.prol.13, %for.inc53.prol.13 ], [ %sub4, %for.cond8.preheader.prol.13.preheader ]
  %prol.iter.13 = phi i32 [ %prol.iter.sub.13, %for.inc53.prol.13 ], [ %xtraiter.13, %for.cond8.preheader.prol.13.preheader ]
  br i1 %cmp94, label %for.end38.prol.13, label %for.body10.prol.13.preheader

for.body10.prol.13.preheader:                     ; preds = %for.cond8.preheader.prol.13
  br label %for.body10.prol.13

for.body10.prol.13:                               ; preds = %for.body10.prol.13.preheader, %for.inc36.prol.13
  %ki.06.prol.13 = phi i32 [ %inc37.prol.13, %for.inc36.prol.13 ], [ 0, %for.body10.prol.13.preheader ]
  %partial_sum.05.prol.13 = phi float [ %partial_sum.3.prol.13, %for.inc36.prol.13 ], [ 0.000000e+00, %for.body10.prol.13.preheader ]
  %add.prol.13 = add nsw i32 %ki.06.prol.13, %inc58.12
  %notlhs.prol.13 = icmp slt i32 %add.prol.13, 0
  %notrhs.prol.13 = icmp uge i32 %add.prol.13, %img_height
  %.not.prol.13 = or i1 %notrhs.prol.13, %notlhs.prol.13
  %brmerge.prol.13 = or i1 %.not.prol.13, %cmp151.not.prol.13
  br i1 %brmerge.prol.13, label %for.inc36.prol.13, label %for.body16.lr.ph.prol.13

for.body16.lr.ph.prol.13:                         ; preds = %for.body10.prol.13
  %mul.prol.13 = shl i32 %add.prol.13, 7
  %mul30.prol.13 = mul i32 %ki.06.prol.13, %kern_width
  br label %for.body16.prol.13

for.body16.prol.13:                               ; preds = %for.inc.prol.13, %for.body16.lr.ph.prol.13
  %indvars.iv.prol.13 = phi i64 [ 0, %for.body16.lr.ph.prol.13 ], [ %indvars.iv.next.prol.13, %for.inc.prol.13 ]
  %partial_sum.12.prol.13 = phi float [ %partial_sum.05.prol.13, %for.body16.lr.ph.prol.13 ], [ %partial_sum.2.prol.13, %for.inc.prol.13 ]
  %978 = trunc i64 %indvars.iv.prol.13 to i32
  %add17.prol.13 = add nsw i32 %978, %in_j.011.prol.13
  %cmp18.prol.13 = icmp sgt i32 %add17.prol.13, -1
  %cmp21.prol.13 = icmp ult i32 %add17.prol.13, %img_width
  %979 = and i1 %cmp18.prol.13, %cmp21.prol.13
  br i1 %979, label %if.end26.prol.13, label %for.inc.prol.13

if.end26.prol.13:                                 ; preds = %for.body16.prol.13
  %add29.prol.13 = add nsw i32 %add17.prol.13, %mul.prol.13
  %idxprom.prol.13 = sext i32 %add29.prol.13 to i64
  %arrayidx.prol.13 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.13
  %980 = load float, float* %arrayidx.prol.13, align 4
  %981 = trunc i64 %indvars.iv.prol.13 to i32
  %add31.prol.13 = add i32 %981, %mul30.prol.13
  %idxprom32.prol.13 = zext i32 %add31.prol.13 to i64
  %arrayidx33.prol.13 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.13
  %982 = load float, float* %arrayidx33.prol.13, align 4
  %mul34.prol.13 = fmul float %980, %982
  %add35.prol.13 = fadd float %partial_sum.12.prol.13, %mul34.prol.13
  br label %for.inc.prol.13

for.inc.prol.13:                                  ; preds = %if.end26.prol.13, %for.body16.prol.13
  %partial_sum.2.prol.13 = phi float [ %add35.prol.13, %if.end26.prol.13 ], [ %partial_sum.12.prol.13, %for.body16.prol.13 ]
  %indvars.iv.next.prol.13 = add nuw nsw i64 %indvars.iv.prol.13, 1
  %lftr.wideiv.prol.13 = trunc i64 %indvars.iv.next.prol.13 to i32
  %exitcond.prol.13 = icmp eq i32 %lftr.wideiv.prol.13, %kern_width
  br i1 %exitcond.prol.13, label %for.inc36.prol.13.loopexit, label %for.body16.prol.13, !llvm.loop !1

for.inc36.prol.13.loopexit:                       ; preds = %for.inc.prol.13
  %partial_sum.2.prol.13.lcssa = phi float [ %partial_sum.2.prol.13, %for.inc.prol.13 ]
  br label %for.inc36.prol.13

for.inc36.prol.13:                                ; preds = %for.inc36.prol.13.loopexit, %for.body10.prol.13
  %partial_sum.3.prol.13 = phi float [ %partial_sum.05.prol.13, %for.body10.prol.13 ], [ %partial_sum.2.prol.13.lcssa, %for.inc36.prol.13.loopexit ]
  %inc37.prol.13 = add nuw nsw i32 %ki.06.prol.13, 1
  %exitcond19.prol.13 = icmp eq i32 %inc37.prol.13, %kern_height
  br i1 %exitcond19.prol.13, label %for.end38.prol.13.loopexit, label %for.body10.prol.13, !llvm.loop !3

for.end38.prol.13.loopexit:                       ; preds = %for.inc36.prol.13
  %partial_sum.3.prol.13.lcssa = phi float [ %partial_sum.3.prol.13, %for.inc36.prol.13 ]
  br label %for.end38.prol.13

for.end38.prol.13:                                ; preds = %for.end38.prol.13.loopexit, %for.cond8.preheader.prol.13
  %partial_sum.0.lcssa.prol.13 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.13 ], [ %partial_sum.3.prol.13.lcssa, %for.end38.prol.13.loopexit ]
  br i1 %tobool39, label %if.else.prol.13, label %if.then40.prol.13

if.then40.prol.13:                                ; preds = %for.end38.prol.13
  %cmp41.prol.13 = fcmp olt float %partial_sum.0.lcssa.prol.13, 0.000000e+00
  %sub42.prol.13 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.13
  %cond.prol.13 = select i1 %cmp41.prol.13, float %sub42.prol.13, float %partial_sum.0.lcssa.prol.13
  %conv.prol.13 = fptoui float %cond.prol.13 to i8
  %conv43.prol.13 = uitofp i8 %conv.prol.13 to float
  %983 = add nsw i64 %indvars.iv20.prol.13, %977
  %arrayidx47.prol.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %983
  store float %conv43.prol.13, float* %arrayidx47.prol.13, align 4
  br label %for.inc53.prol.13

if.else.prol.13:                                  ; preds = %for.end38.prol.13
  %984 = add nsw i64 %indvars.iv20.prol.13, %976
  %arrayidx51.prol.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %984
  store float %partial_sum.0.lcssa.prol.13, float* %arrayidx51.prol.13, align 4
  br label %for.inc53.prol.13

for.inc53.prol.13:                                ; preds = %if.else.prol.13, %if.then40.prol.13
  %inc54.prol.13 = add nsw i32 %in_j.011.prol.13, 1
  %indvars.iv.next21.prol.13 = add nuw nsw i64 %indvars.iv20.prol.13, 1
  %prol.iter.sub.13 = add i32 %prol.iter.13, -1
  %prol.iter.cmp.13 = icmp eq i32 %prol.iter.sub.13, 0
  br i1 %prol.iter.cmp.13, label %for.cond8.preheader.lr.ph.split.13.loopexit, label %for.cond8.preheader.prol.13, !llvm.loop !4

for.cond8.preheader.lr.ph.split.13.loopexit:      ; preds = %for.inc53.prol.13
  %indvars.iv.next21.prol.13.lcssa = phi i64 [ %indvars.iv.next21.prol.13, %for.inc53.prol.13 ]
  %inc54.prol.13.lcssa = phi i32 [ %inc54.prol.13, %for.inc53.prol.13 ]
  br label %for.cond8.preheader.lr.ph.split.13

for.cond8.preheader.lr.ph.split.13:               ; preds = %for.cond8.preheader.lr.ph.split.13.loopexit, %for.cond8.preheader.lr.ph.13
  %indvars.iv20.unr.13 = phi i64 [ 0, %for.cond8.preheader.lr.ph.13 ], [ %indvars.iv.next21.prol.13.lcssa, %for.cond8.preheader.lr.ph.split.13.loopexit ]
  %in_j.011.unr.13 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.13 ], [ %inc54.prol.13.lcssa, %for.cond8.preheader.lr.ph.split.13.loopexit ]
  br i1 %84, label %for.inc57.13, label %for.cond8.preheader.13.preheader

for.cond8.preheader.13.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.13
  br label %for.cond8.preheader.13

for.cond8.preheader.13:                           ; preds = %for.cond8.preheader.13.preheader, %for.inc53.7.13
  %indvars.iv20.13 = phi i64 [ %indvars.iv.next21.7.13, %for.inc53.7.13 ], [ %indvars.iv20.unr.13, %for.cond8.preheader.13.preheader ]
  %in_j.011.13 = phi i32 [ %inc54.7.13, %for.inc53.7.13 ], [ %in_j.011.unr.13, %for.cond8.preheader.13.preheader ]
  br i1 %cmp94, label %for.end38.13, label %for.body10.13.preheader

for.body10.13.preheader:                          ; preds = %for.cond8.preheader.13
  br label %for.body10.13

for.body10.13:                                    ; preds = %for.body10.13.preheader, %for.inc36.13
  %ki.06.13 = phi i32 [ %inc37.13, %for.inc36.13 ], [ 0, %for.body10.13.preheader ]
  %partial_sum.05.13 = phi float [ %partial_sum.3.13, %for.inc36.13 ], [ 0.000000e+00, %for.body10.13.preheader ]
  %add.13 = add nsw i32 %ki.06.13, %inc58.12
  %notlhs.13 = icmp slt i32 %add.13, 0
  %notrhs.13 = icmp uge i32 %add.13, %img_height
  %.not.13 = or i1 %notrhs.13, %notlhs.13
  %brmerge.13 = or i1 %.not.13, %cmp151.not.13
  br i1 %brmerge.13, label %for.inc36.13, label %for.body16.lr.ph.13

for.body16.lr.ph.13:                              ; preds = %for.body10.13
  %mul.13 = shl i32 %add.13, 7
  %mul30.13 = mul i32 %ki.06.13, %kern_width
  br label %for.body16.13

for.body16.13:                                    ; preds = %for.inc.13, %for.body16.lr.ph.13
  %indvars.iv.13 = phi i64 [ 0, %for.body16.lr.ph.13 ], [ %indvars.iv.next.13, %for.inc.13 ]
  %partial_sum.12.13 = phi float [ %partial_sum.05.13, %for.body16.lr.ph.13 ], [ %partial_sum.2.13, %for.inc.13 ]
  %985 = trunc i64 %indvars.iv.13 to i32
  %add17.13 = add nsw i32 %985, %in_j.011.13
  %cmp18.13 = icmp sgt i32 %add17.13, -1
  %cmp21.13 = icmp ult i32 %add17.13, %img_width
  %986 = and i1 %cmp18.13, %cmp21.13
  br i1 %986, label %if.end26.13, label %for.inc.13

if.end26.13:                                      ; preds = %for.body16.13
  %add29.13 = add nsw i32 %add17.13, %mul.13
  %idxprom.13 = sext i32 %add29.13 to i64
  %arrayidx.13 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.13
  %987 = load float, float* %arrayidx.13, align 4
  %988 = trunc i64 %indvars.iv.13 to i32
  %add31.13 = add i32 %988, %mul30.13
  %idxprom32.13 = zext i32 %add31.13 to i64
  %arrayidx33.13 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.13
  %989 = load float, float* %arrayidx33.13, align 4
  %mul34.13 = fmul float %987, %989
  %add35.13 = fadd float %partial_sum.12.13, %mul34.13
  br label %for.inc.13

for.inc.13:                                       ; preds = %if.end26.13, %for.body16.13
  %partial_sum.2.13 = phi float [ %add35.13, %if.end26.13 ], [ %partial_sum.12.13, %for.body16.13 ]
  %indvars.iv.next.13 = add nuw nsw i64 %indvars.iv.13, 1
  %lftr.wideiv.13 = trunc i64 %indvars.iv.next.13 to i32
  %exitcond.13 = icmp eq i32 %lftr.wideiv.13, %kern_width
  br i1 %exitcond.13, label %for.inc36.13.loopexit, label %for.body16.13, !llvm.loop !1

for.inc36.13.loopexit:                            ; preds = %for.inc.13
  %partial_sum.2.13.lcssa = phi float [ %partial_sum.2.13, %for.inc.13 ]
  br label %for.inc36.13

for.inc36.13:                                     ; preds = %for.inc36.13.loopexit, %for.body10.13
  %partial_sum.3.13 = phi float [ %partial_sum.05.13, %for.body10.13 ], [ %partial_sum.2.13.lcssa, %for.inc36.13.loopexit ]
  %inc37.13 = add nuw nsw i32 %ki.06.13, 1
  %exitcond19.13 = icmp eq i32 %inc37.13, %kern_height
  br i1 %exitcond19.13, label %for.end38.13.loopexit, label %for.body10.13, !llvm.loop !3

for.end38.13.loopexit:                            ; preds = %for.inc36.13
  %partial_sum.3.13.lcssa = phi float [ %partial_sum.3.13, %for.inc36.13 ]
  br label %for.end38.13

for.end38.13:                                     ; preds = %for.end38.13.loopexit, %for.cond8.preheader.13
  %partial_sum.0.lcssa.13 = phi float [ 0.000000e+00, %for.cond8.preheader.13 ], [ %partial_sum.3.13.lcssa, %for.end38.13.loopexit ]
  br i1 %tobool39, label %if.else.13, label %if.then40.13

if.then40.13:                                     ; preds = %for.end38.13
  %cmp41.13 = fcmp olt float %partial_sum.0.lcssa.13, 0.000000e+00
  %sub42.13 = fsub float -0.000000e+00, %partial_sum.0.lcssa.13
  %cond.13 = select i1 %cmp41.13, float %sub42.13, float %partial_sum.0.lcssa.13
  %conv.13 = fptoui float %cond.13 to i8
  %conv43.13 = uitofp i8 %conv.13 to float
  %990 = add nsw i64 %indvars.iv20.13, %977
  %arrayidx47.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %990
  store float %conv43.13, float* %arrayidx47.13, align 4
  br label %for.inc53.13

if.else.13:                                       ; preds = %for.end38.13
  %991 = add nsw i64 %indvars.iv20.13, %976
  %arrayidx51.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %991
  store float %partial_sum.0.lcssa.13, float* %arrayidx51.13, align 4
  br label %for.inc53.13

for.inc53.13:                                     ; preds = %if.else.13, %if.then40.13
  %inc54.13 = add nsw i32 %in_j.011.13, 1
  %indvars.iv.next21.13 = add nuw nsw i64 %indvars.iv20.13, 1
  br i1 %cmp94, label %for.end38.1.13, label %for.body10.1.13.preheader

for.body10.1.13.preheader:                        ; preds = %for.inc53.13
  br label %for.body10.1.13

for.body10.1.13:                                  ; preds = %for.body10.1.13.preheader, %for.inc36.1.13
  %ki.06.1.13 = phi i32 [ %inc37.1.13, %for.inc36.1.13 ], [ 0, %for.body10.1.13.preheader ]
  %partial_sum.05.1.13 = phi float [ %partial_sum.3.1.13, %for.inc36.1.13 ], [ 0.000000e+00, %for.body10.1.13.preheader ]
  %add.1.13 = add nsw i32 %ki.06.1.13, %inc58.12
  %notlhs.1.13 = icmp slt i32 %add.1.13, 0
  %notrhs.1.13 = icmp uge i32 %add.1.13, %img_height
  %.not.1.13 = or i1 %notrhs.1.13, %notlhs.1.13
  %brmerge.1.13 = or i1 %.not.1.13, %cmp151.not.1.13
  br i1 %brmerge.1.13, label %for.inc36.1.13, label %for.body16.lr.ph.1.13

for.body16.lr.ph.1.13:                            ; preds = %for.body10.1.13
  %mul.1.13 = shl i32 %add.1.13, 7
  %mul30.1.13 = mul i32 %ki.06.1.13, %kern_width
  br label %for.body16.1.13

for.body16.1.13:                                  ; preds = %for.inc.1.13, %for.body16.lr.ph.1.13
  %indvars.iv.1.13 = phi i64 [ 0, %for.body16.lr.ph.1.13 ], [ %indvars.iv.next.1.13, %for.inc.1.13 ]
  %partial_sum.12.1.13 = phi float [ %partial_sum.05.1.13, %for.body16.lr.ph.1.13 ], [ %partial_sum.2.1.13, %for.inc.1.13 ]
  %992 = trunc i64 %indvars.iv.1.13 to i32
  %add17.1.13 = add nsw i32 %992, %inc54.13
  %cmp18.1.13 = icmp sgt i32 %add17.1.13, -1
  %cmp21.1.13 = icmp ult i32 %add17.1.13, %img_width
  %993 = and i1 %cmp18.1.13, %cmp21.1.13
  br i1 %993, label %if.end26.1.13, label %for.inc.1.13

if.end26.1.13:                                    ; preds = %for.body16.1.13
  %add29.1.13 = add nsw i32 %add17.1.13, %mul.1.13
  %idxprom.1.13 = sext i32 %add29.1.13 to i64
  %arrayidx.1.13 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.13
  %994 = load float, float* %arrayidx.1.13, align 4
  %995 = trunc i64 %indvars.iv.1.13 to i32
  %add31.1.13 = add i32 %995, %mul30.1.13
  %idxprom32.1.13 = zext i32 %add31.1.13 to i64
  %arrayidx33.1.13 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.13
  %996 = load float, float* %arrayidx33.1.13, align 4
  %mul34.1.13 = fmul float %994, %996
  %add35.1.13 = fadd float %partial_sum.12.1.13, %mul34.1.13
  br label %for.inc.1.13

for.inc.1.13:                                     ; preds = %if.end26.1.13, %for.body16.1.13
  %partial_sum.2.1.13 = phi float [ %add35.1.13, %if.end26.1.13 ], [ %partial_sum.12.1.13, %for.body16.1.13 ]
  %indvars.iv.next.1.13 = add nuw nsw i64 %indvars.iv.1.13, 1
  %lftr.wideiv.1.13 = trunc i64 %indvars.iv.next.1.13 to i32
  %exitcond.1.13 = icmp eq i32 %lftr.wideiv.1.13, %kern_width
  br i1 %exitcond.1.13, label %for.inc36.1.13.loopexit, label %for.body16.1.13, !llvm.loop !1

for.inc36.1.13.loopexit:                          ; preds = %for.inc.1.13
  %partial_sum.2.1.13.lcssa = phi float [ %partial_sum.2.1.13, %for.inc.1.13 ]
  br label %for.inc36.1.13

for.inc36.1.13:                                   ; preds = %for.inc36.1.13.loopexit, %for.body10.1.13
  %partial_sum.3.1.13 = phi float [ %partial_sum.05.1.13, %for.body10.1.13 ], [ %partial_sum.2.1.13.lcssa, %for.inc36.1.13.loopexit ]
  %inc37.1.13 = add nuw nsw i32 %ki.06.1.13, 1
  %exitcond19.1.13 = icmp eq i32 %inc37.1.13, %kern_height
  br i1 %exitcond19.1.13, label %for.end38.1.13.loopexit, label %for.body10.1.13, !llvm.loop !3

for.end38.1.13.loopexit:                          ; preds = %for.inc36.1.13
  %partial_sum.3.1.13.lcssa = phi float [ %partial_sum.3.1.13, %for.inc36.1.13 ]
  br label %for.end38.1.13

for.end38.1.13:                                   ; preds = %for.end38.1.13.loopexit, %for.inc53.13
  %partial_sum.0.lcssa.1.13 = phi float [ 0.000000e+00, %for.inc53.13 ], [ %partial_sum.3.1.13.lcssa, %for.end38.1.13.loopexit ]
  br i1 %tobool39, label %if.else.1.13, label %if.then40.1.13

if.then40.1.13:                                   ; preds = %for.end38.1.13
  %cmp41.1.13 = fcmp olt float %partial_sum.0.lcssa.1.13, 0.000000e+00
  %sub42.1.13 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.13
  %cond.1.13 = select i1 %cmp41.1.13, float %sub42.1.13, float %partial_sum.0.lcssa.1.13
  %conv.1.13 = fptoui float %cond.1.13 to i8
  %conv43.1.13 = uitofp i8 %conv.1.13 to float
  %997 = add nsw i64 %indvars.iv.next21.13, %977
  %arrayidx47.1.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %997
  store float %conv43.1.13, float* %arrayidx47.1.13, align 4
  br label %for.inc53.1.13

if.else.1.13:                                     ; preds = %for.end38.1.13
  %998 = add nsw i64 %indvars.iv.next21.13, %976
  %arrayidx51.1.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %998
  store float %partial_sum.0.lcssa.1.13, float* %arrayidx51.1.13, align 4
  br label %for.inc53.1.13

for.inc53.1.13:                                   ; preds = %if.else.1.13, %if.then40.1.13
  %inc54.1.13 = add nsw i32 %in_j.011.13, 2
  %indvars.iv.next21.1.13 = add nsw i64 %indvars.iv20.13, 2
  br i1 %cmp94, label %for.end38.2.13, label %for.body10.2.13.preheader

for.body10.2.13.preheader:                        ; preds = %for.inc53.1.13
  br label %for.body10.2.13

for.body10.2.13:                                  ; preds = %for.body10.2.13.preheader, %for.inc36.2.13
  %ki.06.2.13 = phi i32 [ %inc37.2.13, %for.inc36.2.13 ], [ 0, %for.body10.2.13.preheader ]
  %partial_sum.05.2.13 = phi float [ %partial_sum.3.2.13, %for.inc36.2.13 ], [ 0.000000e+00, %for.body10.2.13.preheader ]
  %add.2.13 = add nsw i32 %ki.06.2.13, %inc58.12
  %notlhs.2.13 = icmp slt i32 %add.2.13, 0
  %notrhs.2.13 = icmp uge i32 %add.2.13, %img_height
  %.not.2.13 = or i1 %notrhs.2.13, %notlhs.2.13
  %brmerge.2.13 = or i1 %.not.2.13, %cmp151.not.2.13
  br i1 %brmerge.2.13, label %for.inc36.2.13, label %for.body16.lr.ph.2.13

for.body16.lr.ph.2.13:                            ; preds = %for.body10.2.13
  %mul.2.13 = shl i32 %add.2.13, 7
  %mul30.2.13 = mul i32 %ki.06.2.13, %kern_width
  br label %for.body16.2.13

for.body16.2.13:                                  ; preds = %for.inc.2.13, %for.body16.lr.ph.2.13
  %indvars.iv.2.13 = phi i64 [ 0, %for.body16.lr.ph.2.13 ], [ %indvars.iv.next.2.13, %for.inc.2.13 ]
  %partial_sum.12.2.13 = phi float [ %partial_sum.05.2.13, %for.body16.lr.ph.2.13 ], [ %partial_sum.2.2.13, %for.inc.2.13 ]
  %999 = trunc i64 %indvars.iv.2.13 to i32
  %add17.2.13 = add nsw i32 %999, %inc54.1.13
  %cmp18.2.13 = icmp sgt i32 %add17.2.13, -1
  %cmp21.2.13 = icmp ult i32 %add17.2.13, %img_width
  %1000 = and i1 %cmp18.2.13, %cmp21.2.13
  br i1 %1000, label %if.end26.2.13, label %for.inc.2.13

if.end26.2.13:                                    ; preds = %for.body16.2.13
  %add29.2.13 = add nsw i32 %add17.2.13, %mul.2.13
  %idxprom.2.13 = sext i32 %add29.2.13 to i64
  %arrayidx.2.13 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.13
  %1001 = load float, float* %arrayidx.2.13, align 4
  %1002 = trunc i64 %indvars.iv.2.13 to i32
  %add31.2.13 = add i32 %1002, %mul30.2.13
  %idxprom32.2.13 = zext i32 %add31.2.13 to i64
  %arrayidx33.2.13 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.13
  %1003 = load float, float* %arrayidx33.2.13, align 4
  %mul34.2.13 = fmul float %1001, %1003
  %add35.2.13 = fadd float %partial_sum.12.2.13, %mul34.2.13
  br label %for.inc.2.13

for.inc.2.13:                                     ; preds = %if.end26.2.13, %for.body16.2.13
  %partial_sum.2.2.13 = phi float [ %add35.2.13, %if.end26.2.13 ], [ %partial_sum.12.2.13, %for.body16.2.13 ]
  %indvars.iv.next.2.13 = add nuw nsw i64 %indvars.iv.2.13, 1
  %lftr.wideiv.2.13 = trunc i64 %indvars.iv.next.2.13 to i32
  %exitcond.2.13 = icmp eq i32 %lftr.wideiv.2.13, %kern_width
  br i1 %exitcond.2.13, label %for.inc36.2.13.loopexit, label %for.body16.2.13, !llvm.loop !1

for.inc36.2.13.loopexit:                          ; preds = %for.inc.2.13
  %partial_sum.2.2.13.lcssa = phi float [ %partial_sum.2.2.13, %for.inc.2.13 ]
  br label %for.inc36.2.13

for.inc36.2.13:                                   ; preds = %for.inc36.2.13.loopexit, %for.body10.2.13
  %partial_sum.3.2.13 = phi float [ %partial_sum.05.2.13, %for.body10.2.13 ], [ %partial_sum.2.2.13.lcssa, %for.inc36.2.13.loopexit ]
  %inc37.2.13 = add nuw nsw i32 %ki.06.2.13, 1
  %exitcond19.2.13 = icmp eq i32 %inc37.2.13, %kern_height
  br i1 %exitcond19.2.13, label %for.end38.2.13.loopexit, label %for.body10.2.13, !llvm.loop !3

for.end38.2.13.loopexit:                          ; preds = %for.inc36.2.13
  %partial_sum.3.2.13.lcssa = phi float [ %partial_sum.3.2.13, %for.inc36.2.13 ]
  br label %for.end38.2.13

for.end38.2.13:                                   ; preds = %for.end38.2.13.loopexit, %for.inc53.1.13
  %partial_sum.0.lcssa.2.13 = phi float [ 0.000000e+00, %for.inc53.1.13 ], [ %partial_sum.3.2.13.lcssa, %for.end38.2.13.loopexit ]
  br i1 %tobool39, label %if.else.2.13, label %if.then40.2.13

if.then40.2.13:                                   ; preds = %for.end38.2.13
  %cmp41.2.13 = fcmp olt float %partial_sum.0.lcssa.2.13, 0.000000e+00
  %sub42.2.13 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.13
  %cond.2.13 = select i1 %cmp41.2.13, float %sub42.2.13, float %partial_sum.0.lcssa.2.13
  %conv.2.13 = fptoui float %cond.2.13 to i8
  %conv43.2.13 = uitofp i8 %conv.2.13 to float
  %1004 = add nsw i64 %indvars.iv.next21.1.13, %977
  %arrayidx47.2.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1004
  store float %conv43.2.13, float* %arrayidx47.2.13, align 4
  br label %for.inc53.2.13

if.else.2.13:                                     ; preds = %for.end38.2.13
  %1005 = add nsw i64 %indvars.iv.next21.1.13, %976
  %arrayidx51.2.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1005
  store float %partial_sum.0.lcssa.2.13, float* %arrayidx51.2.13, align 4
  br label %for.inc53.2.13

for.inc53.2.13:                                   ; preds = %if.else.2.13, %if.then40.2.13
  %inc54.2.13 = add nsw i32 %in_j.011.13, 3
  %indvars.iv.next21.2.13 = add nsw i64 %indvars.iv20.13, 3
  br i1 %cmp94, label %for.end38.3.13, label %for.body10.3.13.preheader

for.body10.3.13.preheader:                        ; preds = %for.inc53.2.13
  br label %for.body10.3.13

for.body10.3.13:                                  ; preds = %for.body10.3.13.preheader, %for.inc36.3.13
  %ki.06.3.13 = phi i32 [ %inc37.3.13, %for.inc36.3.13 ], [ 0, %for.body10.3.13.preheader ]
  %partial_sum.05.3.13 = phi float [ %partial_sum.3.3.13, %for.inc36.3.13 ], [ 0.000000e+00, %for.body10.3.13.preheader ]
  %add.3.13 = add nsw i32 %ki.06.3.13, %inc58.12
  %notlhs.3.13 = icmp slt i32 %add.3.13, 0
  %notrhs.3.13 = icmp uge i32 %add.3.13, %img_height
  %.not.3.13 = or i1 %notrhs.3.13, %notlhs.3.13
  %brmerge.3.13 = or i1 %.not.3.13, %cmp151.not.3.13
  br i1 %brmerge.3.13, label %for.inc36.3.13, label %for.body16.lr.ph.3.13

for.body16.lr.ph.3.13:                            ; preds = %for.body10.3.13
  %mul.3.13 = shl i32 %add.3.13, 7
  %mul30.3.13 = mul i32 %ki.06.3.13, %kern_width
  br label %for.body16.3.13

for.body16.3.13:                                  ; preds = %for.inc.3.13, %for.body16.lr.ph.3.13
  %indvars.iv.3.13 = phi i64 [ 0, %for.body16.lr.ph.3.13 ], [ %indvars.iv.next.3.13, %for.inc.3.13 ]
  %partial_sum.12.3.13 = phi float [ %partial_sum.05.3.13, %for.body16.lr.ph.3.13 ], [ %partial_sum.2.3.13, %for.inc.3.13 ]
  %1006 = trunc i64 %indvars.iv.3.13 to i32
  %add17.3.13 = add nsw i32 %1006, %inc54.2.13
  %cmp18.3.13 = icmp sgt i32 %add17.3.13, -1
  %cmp21.3.13 = icmp ult i32 %add17.3.13, %img_width
  %1007 = and i1 %cmp18.3.13, %cmp21.3.13
  br i1 %1007, label %if.end26.3.13, label %for.inc.3.13

if.end26.3.13:                                    ; preds = %for.body16.3.13
  %add29.3.13 = add nsw i32 %add17.3.13, %mul.3.13
  %idxprom.3.13 = sext i32 %add29.3.13 to i64
  %arrayidx.3.13 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.13
  %1008 = load float, float* %arrayidx.3.13, align 4
  %1009 = trunc i64 %indvars.iv.3.13 to i32
  %add31.3.13 = add i32 %1009, %mul30.3.13
  %idxprom32.3.13 = zext i32 %add31.3.13 to i64
  %arrayidx33.3.13 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.13
  %1010 = load float, float* %arrayidx33.3.13, align 4
  %mul34.3.13 = fmul float %1008, %1010
  %add35.3.13 = fadd float %partial_sum.12.3.13, %mul34.3.13
  br label %for.inc.3.13

for.inc.3.13:                                     ; preds = %if.end26.3.13, %for.body16.3.13
  %partial_sum.2.3.13 = phi float [ %add35.3.13, %if.end26.3.13 ], [ %partial_sum.12.3.13, %for.body16.3.13 ]
  %indvars.iv.next.3.13 = add nuw nsw i64 %indvars.iv.3.13, 1
  %lftr.wideiv.3.13 = trunc i64 %indvars.iv.next.3.13 to i32
  %exitcond.3.13 = icmp eq i32 %lftr.wideiv.3.13, %kern_width
  br i1 %exitcond.3.13, label %for.inc36.3.13.loopexit, label %for.body16.3.13, !llvm.loop !1

for.inc36.3.13.loopexit:                          ; preds = %for.inc.3.13
  %partial_sum.2.3.13.lcssa = phi float [ %partial_sum.2.3.13, %for.inc.3.13 ]
  br label %for.inc36.3.13

for.inc36.3.13:                                   ; preds = %for.inc36.3.13.loopexit, %for.body10.3.13
  %partial_sum.3.3.13 = phi float [ %partial_sum.05.3.13, %for.body10.3.13 ], [ %partial_sum.2.3.13.lcssa, %for.inc36.3.13.loopexit ]
  %inc37.3.13 = add nuw nsw i32 %ki.06.3.13, 1
  %exitcond19.3.13 = icmp eq i32 %inc37.3.13, %kern_height
  br i1 %exitcond19.3.13, label %for.end38.3.13.loopexit, label %for.body10.3.13, !llvm.loop !3

for.end38.3.13.loopexit:                          ; preds = %for.inc36.3.13
  %partial_sum.3.3.13.lcssa = phi float [ %partial_sum.3.3.13, %for.inc36.3.13 ]
  br label %for.end38.3.13

for.end38.3.13:                                   ; preds = %for.end38.3.13.loopexit, %for.inc53.2.13
  %partial_sum.0.lcssa.3.13 = phi float [ 0.000000e+00, %for.inc53.2.13 ], [ %partial_sum.3.3.13.lcssa, %for.end38.3.13.loopexit ]
  br i1 %tobool39, label %if.else.3.13, label %if.then40.3.13

if.then40.3.13:                                   ; preds = %for.end38.3.13
  %cmp41.3.13 = fcmp olt float %partial_sum.0.lcssa.3.13, 0.000000e+00
  %sub42.3.13 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.13
  %cond.3.13 = select i1 %cmp41.3.13, float %sub42.3.13, float %partial_sum.0.lcssa.3.13
  %conv.3.13 = fptoui float %cond.3.13 to i8
  %conv43.3.13 = uitofp i8 %conv.3.13 to float
  %1011 = add nsw i64 %indvars.iv.next21.2.13, %977
  %arrayidx47.3.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1011
  store float %conv43.3.13, float* %arrayidx47.3.13, align 4
  br label %for.inc53.3.13

if.else.3.13:                                     ; preds = %for.end38.3.13
  %1012 = add nsw i64 %indvars.iv.next21.2.13, %976
  %arrayidx51.3.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1012
  store float %partial_sum.0.lcssa.3.13, float* %arrayidx51.3.13, align 4
  br label %for.inc53.3.13

for.inc53.3.13:                                   ; preds = %if.else.3.13, %if.then40.3.13
  %inc54.3.13 = add nsw i32 %in_j.011.13, 4
  %indvars.iv.next21.3.13 = add nsw i64 %indvars.iv20.13, 4
  br i1 %cmp94, label %for.end38.4.13, label %for.body10.4.13.preheader

for.body10.4.13.preheader:                        ; preds = %for.inc53.3.13
  br label %for.body10.4.13

for.body10.4.13:                                  ; preds = %for.body10.4.13.preheader, %for.inc36.4.13
  %ki.06.4.13 = phi i32 [ %inc37.4.13, %for.inc36.4.13 ], [ 0, %for.body10.4.13.preheader ]
  %partial_sum.05.4.13 = phi float [ %partial_sum.3.4.13, %for.inc36.4.13 ], [ 0.000000e+00, %for.body10.4.13.preheader ]
  %add.4.13 = add nsw i32 %ki.06.4.13, %inc58.12
  %notlhs.4.13 = icmp slt i32 %add.4.13, 0
  %notrhs.4.13 = icmp uge i32 %add.4.13, %img_height
  %.not.4.13 = or i1 %notrhs.4.13, %notlhs.4.13
  %brmerge.4.13 = or i1 %.not.4.13, %cmp151.not.4.13
  br i1 %brmerge.4.13, label %for.inc36.4.13, label %for.body16.lr.ph.4.13

for.body16.lr.ph.4.13:                            ; preds = %for.body10.4.13
  %mul.4.13 = shl i32 %add.4.13, 7
  %mul30.4.13 = mul i32 %ki.06.4.13, %kern_width
  br label %for.body16.4.13

for.body16.4.13:                                  ; preds = %for.inc.4.13, %for.body16.lr.ph.4.13
  %indvars.iv.4.13 = phi i64 [ 0, %for.body16.lr.ph.4.13 ], [ %indvars.iv.next.4.13, %for.inc.4.13 ]
  %partial_sum.12.4.13 = phi float [ %partial_sum.05.4.13, %for.body16.lr.ph.4.13 ], [ %partial_sum.2.4.13, %for.inc.4.13 ]
  %1013 = trunc i64 %indvars.iv.4.13 to i32
  %add17.4.13 = add nsw i32 %1013, %inc54.3.13
  %cmp18.4.13 = icmp sgt i32 %add17.4.13, -1
  %cmp21.4.13 = icmp ult i32 %add17.4.13, %img_width
  %1014 = and i1 %cmp18.4.13, %cmp21.4.13
  br i1 %1014, label %if.end26.4.13, label %for.inc.4.13

if.end26.4.13:                                    ; preds = %for.body16.4.13
  %add29.4.13 = add nsw i32 %add17.4.13, %mul.4.13
  %idxprom.4.13 = sext i32 %add29.4.13 to i64
  %arrayidx.4.13 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.13
  %1015 = load float, float* %arrayidx.4.13, align 4
  %1016 = trunc i64 %indvars.iv.4.13 to i32
  %add31.4.13 = add i32 %1016, %mul30.4.13
  %idxprom32.4.13 = zext i32 %add31.4.13 to i64
  %arrayidx33.4.13 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.13
  %1017 = load float, float* %arrayidx33.4.13, align 4
  %mul34.4.13 = fmul float %1015, %1017
  %add35.4.13 = fadd float %partial_sum.12.4.13, %mul34.4.13
  br label %for.inc.4.13

for.inc.4.13:                                     ; preds = %if.end26.4.13, %for.body16.4.13
  %partial_sum.2.4.13 = phi float [ %add35.4.13, %if.end26.4.13 ], [ %partial_sum.12.4.13, %for.body16.4.13 ]
  %indvars.iv.next.4.13 = add nuw nsw i64 %indvars.iv.4.13, 1
  %lftr.wideiv.4.13 = trunc i64 %indvars.iv.next.4.13 to i32
  %exitcond.4.13 = icmp eq i32 %lftr.wideiv.4.13, %kern_width
  br i1 %exitcond.4.13, label %for.inc36.4.13.loopexit, label %for.body16.4.13, !llvm.loop !1

for.inc36.4.13.loopexit:                          ; preds = %for.inc.4.13
  %partial_sum.2.4.13.lcssa = phi float [ %partial_sum.2.4.13, %for.inc.4.13 ]
  br label %for.inc36.4.13

for.inc36.4.13:                                   ; preds = %for.inc36.4.13.loopexit, %for.body10.4.13
  %partial_sum.3.4.13 = phi float [ %partial_sum.05.4.13, %for.body10.4.13 ], [ %partial_sum.2.4.13.lcssa, %for.inc36.4.13.loopexit ]
  %inc37.4.13 = add nuw nsw i32 %ki.06.4.13, 1
  %exitcond19.4.13 = icmp eq i32 %inc37.4.13, %kern_height
  br i1 %exitcond19.4.13, label %for.end38.4.13.loopexit, label %for.body10.4.13, !llvm.loop !3

for.end38.4.13.loopexit:                          ; preds = %for.inc36.4.13
  %partial_sum.3.4.13.lcssa = phi float [ %partial_sum.3.4.13, %for.inc36.4.13 ]
  br label %for.end38.4.13

for.end38.4.13:                                   ; preds = %for.end38.4.13.loopexit, %for.inc53.3.13
  %partial_sum.0.lcssa.4.13 = phi float [ 0.000000e+00, %for.inc53.3.13 ], [ %partial_sum.3.4.13.lcssa, %for.end38.4.13.loopexit ]
  br i1 %tobool39, label %if.else.4.13, label %if.then40.4.13

if.then40.4.13:                                   ; preds = %for.end38.4.13
  %cmp41.4.13 = fcmp olt float %partial_sum.0.lcssa.4.13, 0.000000e+00
  %sub42.4.13 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.13
  %cond.4.13 = select i1 %cmp41.4.13, float %sub42.4.13, float %partial_sum.0.lcssa.4.13
  %conv.4.13 = fptoui float %cond.4.13 to i8
  %conv43.4.13 = uitofp i8 %conv.4.13 to float
  %1018 = add nsw i64 %indvars.iv.next21.3.13, %977
  %arrayidx47.4.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1018
  store float %conv43.4.13, float* %arrayidx47.4.13, align 4
  br label %for.inc53.4.13

if.else.4.13:                                     ; preds = %for.end38.4.13
  %1019 = add nsw i64 %indvars.iv.next21.3.13, %976
  %arrayidx51.4.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1019
  store float %partial_sum.0.lcssa.4.13, float* %arrayidx51.4.13, align 4
  br label %for.inc53.4.13

for.inc53.4.13:                                   ; preds = %if.else.4.13, %if.then40.4.13
  %inc54.4.13 = add nsw i32 %in_j.011.13, 5
  %indvars.iv.next21.4.13 = add nsw i64 %indvars.iv20.13, 5
  br i1 %cmp94, label %for.end38.5.13, label %for.body10.5.13.preheader

for.body10.5.13.preheader:                        ; preds = %for.inc53.4.13
  br label %for.body10.5.13

for.body10.5.13:                                  ; preds = %for.body10.5.13.preheader, %for.inc36.5.13
  %ki.06.5.13 = phi i32 [ %inc37.5.13, %for.inc36.5.13 ], [ 0, %for.body10.5.13.preheader ]
  %partial_sum.05.5.13 = phi float [ %partial_sum.3.5.13, %for.inc36.5.13 ], [ 0.000000e+00, %for.body10.5.13.preheader ]
  %add.5.13 = add nsw i32 %ki.06.5.13, %inc58.12
  %notlhs.5.13 = icmp slt i32 %add.5.13, 0
  %notrhs.5.13 = icmp uge i32 %add.5.13, %img_height
  %.not.5.13 = or i1 %notrhs.5.13, %notlhs.5.13
  %brmerge.5.13 = or i1 %.not.5.13, %cmp151.not.5.13
  br i1 %brmerge.5.13, label %for.inc36.5.13, label %for.body16.lr.ph.5.13

for.body16.lr.ph.5.13:                            ; preds = %for.body10.5.13
  %mul.5.13 = shl i32 %add.5.13, 7
  %mul30.5.13 = mul i32 %ki.06.5.13, %kern_width
  br label %for.body16.5.13

for.body16.5.13:                                  ; preds = %for.inc.5.13, %for.body16.lr.ph.5.13
  %indvars.iv.5.13 = phi i64 [ 0, %for.body16.lr.ph.5.13 ], [ %indvars.iv.next.5.13, %for.inc.5.13 ]
  %partial_sum.12.5.13 = phi float [ %partial_sum.05.5.13, %for.body16.lr.ph.5.13 ], [ %partial_sum.2.5.13, %for.inc.5.13 ]
  %1020 = trunc i64 %indvars.iv.5.13 to i32
  %add17.5.13 = add nsw i32 %1020, %inc54.4.13
  %cmp18.5.13 = icmp sgt i32 %add17.5.13, -1
  %cmp21.5.13 = icmp ult i32 %add17.5.13, %img_width
  %1021 = and i1 %cmp18.5.13, %cmp21.5.13
  br i1 %1021, label %if.end26.5.13, label %for.inc.5.13

if.end26.5.13:                                    ; preds = %for.body16.5.13
  %add29.5.13 = add nsw i32 %add17.5.13, %mul.5.13
  %idxprom.5.13 = sext i32 %add29.5.13 to i64
  %arrayidx.5.13 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.13
  %1022 = load float, float* %arrayidx.5.13, align 4
  %1023 = trunc i64 %indvars.iv.5.13 to i32
  %add31.5.13 = add i32 %1023, %mul30.5.13
  %idxprom32.5.13 = zext i32 %add31.5.13 to i64
  %arrayidx33.5.13 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.13
  %1024 = load float, float* %arrayidx33.5.13, align 4
  %mul34.5.13 = fmul float %1022, %1024
  %add35.5.13 = fadd float %partial_sum.12.5.13, %mul34.5.13
  br label %for.inc.5.13

for.inc.5.13:                                     ; preds = %if.end26.5.13, %for.body16.5.13
  %partial_sum.2.5.13 = phi float [ %add35.5.13, %if.end26.5.13 ], [ %partial_sum.12.5.13, %for.body16.5.13 ]
  %indvars.iv.next.5.13 = add nuw nsw i64 %indvars.iv.5.13, 1
  %lftr.wideiv.5.13 = trunc i64 %indvars.iv.next.5.13 to i32
  %exitcond.5.13 = icmp eq i32 %lftr.wideiv.5.13, %kern_width
  br i1 %exitcond.5.13, label %for.inc36.5.13.loopexit, label %for.body16.5.13, !llvm.loop !1

for.inc36.5.13.loopexit:                          ; preds = %for.inc.5.13
  %partial_sum.2.5.13.lcssa = phi float [ %partial_sum.2.5.13, %for.inc.5.13 ]
  br label %for.inc36.5.13

for.inc36.5.13:                                   ; preds = %for.inc36.5.13.loopexit, %for.body10.5.13
  %partial_sum.3.5.13 = phi float [ %partial_sum.05.5.13, %for.body10.5.13 ], [ %partial_sum.2.5.13.lcssa, %for.inc36.5.13.loopexit ]
  %inc37.5.13 = add nuw nsw i32 %ki.06.5.13, 1
  %exitcond19.5.13 = icmp eq i32 %inc37.5.13, %kern_height
  br i1 %exitcond19.5.13, label %for.end38.5.13.loopexit, label %for.body10.5.13, !llvm.loop !3

for.end38.5.13.loopexit:                          ; preds = %for.inc36.5.13
  %partial_sum.3.5.13.lcssa = phi float [ %partial_sum.3.5.13, %for.inc36.5.13 ]
  br label %for.end38.5.13

for.end38.5.13:                                   ; preds = %for.end38.5.13.loopexit, %for.inc53.4.13
  %partial_sum.0.lcssa.5.13 = phi float [ 0.000000e+00, %for.inc53.4.13 ], [ %partial_sum.3.5.13.lcssa, %for.end38.5.13.loopexit ]
  br i1 %tobool39, label %if.else.5.13, label %if.then40.5.13

if.then40.5.13:                                   ; preds = %for.end38.5.13
  %cmp41.5.13 = fcmp olt float %partial_sum.0.lcssa.5.13, 0.000000e+00
  %sub42.5.13 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.13
  %cond.5.13 = select i1 %cmp41.5.13, float %sub42.5.13, float %partial_sum.0.lcssa.5.13
  %conv.5.13 = fptoui float %cond.5.13 to i8
  %conv43.5.13 = uitofp i8 %conv.5.13 to float
  %1025 = add nsw i64 %indvars.iv.next21.4.13, %977
  %arrayidx47.5.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1025
  store float %conv43.5.13, float* %arrayidx47.5.13, align 4
  br label %for.inc53.5.13

if.else.5.13:                                     ; preds = %for.end38.5.13
  %1026 = add nsw i64 %indvars.iv.next21.4.13, %976
  %arrayidx51.5.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1026
  store float %partial_sum.0.lcssa.5.13, float* %arrayidx51.5.13, align 4
  br label %for.inc53.5.13

for.inc53.5.13:                                   ; preds = %if.else.5.13, %if.then40.5.13
  %inc54.5.13 = add nsw i32 %in_j.011.13, 6
  %indvars.iv.next21.5.13 = add nsw i64 %indvars.iv20.13, 6
  br i1 %cmp94, label %for.end38.6.13, label %for.body10.6.13.preheader

for.body10.6.13.preheader:                        ; preds = %for.inc53.5.13
  br label %for.body10.6.13

for.body10.6.13:                                  ; preds = %for.body10.6.13.preheader, %for.inc36.6.13
  %ki.06.6.13 = phi i32 [ %inc37.6.13, %for.inc36.6.13 ], [ 0, %for.body10.6.13.preheader ]
  %partial_sum.05.6.13 = phi float [ %partial_sum.3.6.13, %for.inc36.6.13 ], [ 0.000000e+00, %for.body10.6.13.preheader ]
  %add.6.13 = add nsw i32 %ki.06.6.13, %inc58.12
  %notlhs.6.13 = icmp slt i32 %add.6.13, 0
  %notrhs.6.13 = icmp uge i32 %add.6.13, %img_height
  %.not.6.13 = or i1 %notrhs.6.13, %notlhs.6.13
  %brmerge.6.13 = or i1 %.not.6.13, %cmp151.not.6.13
  br i1 %brmerge.6.13, label %for.inc36.6.13, label %for.body16.lr.ph.6.13

for.body16.lr.ph.6.13:                            ; preds = %for.body10.6.13
  %mul.6.13 = shl i32 %add.6.13, 7
  %mul30.6.13 = mul i32 %ki.06.6.13, %kern_width
  br label %for.body16.6.13

for.body16.6.13:                                  ; preds = %for.inc.6.13, %for.body16.lr.ph.6.13
  %indvars.iv.6.13 = phi i64 [ 0, %for.body16.lr.ph.6.13 ], [ %indvars.iv.next.6.13, %for.inc.6.13 ]
  %partial_sum.12.6.13 = phi float [ %partial_sum.05.6.13, %for.body16.lr.ph.6.13 ], [ %partial_sum.2.6.13, %for.inc.6.13 ]
  %1027 = trunc i64 %indvars.iv.6.13 to i32
  %add17.6.13 = add nsw i32 %1027, %inc54.5.13
  %cmp18.6.13 = icmp sgt i32 %add17.6.13, -1
  %cmp21.6.13 = icmp ult i32 %add17.6.13, %img_width
  %1028 = and i1 %cmp18.6.13, %cmp21.6.13
  br i1 %1028, label %if.end26.6.13, label %for.inc.6.13

if.end26.6.13:                                    ; preds = %for.body16.6.13
  %add29.6.13 = add nsw i32 %add17.6.13, %mul.6.13
  %idxprom.6.13 = sext i32 %add29.6.13 to i64
  %arrayidx.6.13 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.13
  %1029 = load float, float* %arrayidx.6.13, align 4
  %1030 = trunc i64 %indvars.iv.6.13 to i32
  %add31.6.13 = add i32 %1030, %mul30.6.13
  %idxprom32.6.13 = zext i32 %add31.6.13 to i64
  %arrayidx33.6.13 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.13
  %1031 = load float, float* %arrayidx33.6.13, align 4
  %mul34.6.13 = fmul float %1029, %1031
  %add35.6.13 = fadd float %partial_sum.12.6.13, %mul34.6.13
  br label %for.inc.6.13

for.inc.6.13:                                     ; preds = %if.end26.6.13, %for.body16.6.13
  %partial_sum.2.6.13 = phi float [ %add35.6.13, %if.end26.6.13 ], [ %partial_sum.12.6.13, %for.body16.6.13 ]
  %indvars.iv.next.6.13 = add nuw nsw i64 %indvars.iv.6.13, 1
  %lftr.wideiv.6.13 = trunc i64 %indvars.iv.next.6.13 to i32
  %exitcond.6.13 = icmp eq i32 %lftr.wideiv.6.13, %kern_width
  br i1 %exitcond.6.13, label %for.inc36.6.13.loopexit, label %for.body16.6.13, !llvm.loop !1

for.inc36.6.13.loopexit:                          ; preds = %for.inc.6.13
  %partial_sum.2.6.13.lcssa = phi float [ %partial_sum.2.6.13, %for.inc.6.13 ]
  br label %for.inc36.6.13

for.inc36.6.13:                                   ; preds = %for.inc36.6.13.loopexit, %for.body10.6.13
  %partial_sum.3.6.13 = phi float [ %partial_sum.05.6.13, %for.body10.6.13 ], [ %partial_sum.2.6.13.lcssa, %for.inc36.6.13.loopexit ]
  %inc37.6.13 = add nuw nsw i32 %ki.06.6.13, 1
  %exitcond19.6.13 = icmp eq i32 %inc37.6.13, %kern_height
  br i1 %exitcond19.6.13, label %for.end38.6.13.loopexit, label %for.body10.6.13, !llvm.loop !3

for.end38.6.13.loopexit:                          ; preds = %for.inc36.6.13
  %partial_sum.3.6.13.lcssa = phi float [ %partial_sum.3.6.13, %for.inc36.6.13 ]
  br label %for.end38.6.13

for.end38.6.13:                                   ; preds = %for.end38.6.13.loopexit, %for.inc53.5.13
  %partial_sum.0.lcssa.6.13 = phi float [ 0.000000e+00, %for.inc53.5.13 ], [ %partial_sum.3.6.13.lcssa, %for.end38.6.13.loopexit ]
  br i1 %tobool39, label %if.else.6.13, label %if.then40.6.13

if.then40.6.13:                                   ; preds = %for.end38.6.13
  %cmp41.6.13 = fcmp olt float %partial_sum.0.lcssa.6.13, 0.000000e+00
  %sub42.6.13 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.13
  %cond.6.13 = select i1 %cmp41.6.13, float %sub42.6.13, float %partial_sum.0.lcssa.6.13
  %conv.6.13 = fptoui float %cond.6.13 to i8
  %conv43.6.13 = uitofp i8 %conv.6.13 to float
  %1032 = add nsw i64 %indvars.iv.next21.5.13, %977
  %arrayidx47.6.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1032
  store float %conv43.6.13, float* %arrayidx47.6.13, align 4
  br label %for.inc53.6.13

if.else.6.13:                                     ; preds = %for.end38.6.13
  %1033 = add nsw i64 %indvars.iv.next21.5.13, %976
  %arrayidx51.6.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1033
  store float %partial_sum.0.lcssa.6.13, float* %arrayidx51.6.13, align 4
  br label %for.inc53.6.13

for.inc53.6.13:                                   ; preds = %if.else.6.13, %if.then40.6.13
  %inc54.6.13 = add nsw i32 %in_j.011.13, 7
  %indvars.iv.next21.6.13 = add nsw i64 %indvars.iv20.13, 7
  br i1 %cmp94, label %for.end38.7.13, label %for.body10.7.13.preheader

for.body10.7.13.preheader:                        ; preds = %for.inc53.6.13
  br label %for.body10.7.13

for.body10.7.13:                                  ; preds = %for.body10.7.13.preheader, %for.inc36.7.13
  %ki.06.7.13 = phi i32 [ %inc37.7.13, %for.inc36.7.13 ], [ 0, %for.body10.7.13.preheader ]
  %partial_sum.05.7.13 = phi float [ %partial_sum.3.7.13, %for.inc36.7.13 ], [ 0.000000e+00, %for.body10.7.13.preheader ]
  %add.7.13 = add nsw i32 %ki.06.7.13, %inc58.12
  %notlhs.7.13 = icmp slt i32 %add.7.13, 0
  %notrhs.7.13 = icmp uge i32 %add.7.13, %img_height
  %.not.7.13 = or i1 %notrhs.7.13, %notlhs.7.13
  %brmerge.7.13 = or i1 %.not.7.13, %cmp151.not.7.13
  br i1 %brmerge.7.13, label %for.inc36.7.13, label %for.body16.lr.ph.7.13

for.body16.lr.ph.7.13:                            ; preds = %for.body10.7.13
  %mul.7.13 = shl i32 %add.7.13, 7
  %mul30.7.13 = mul i32 %ki.06.7.13, %kern_width
  br label %for.body16.7.13

for.body16.7.13:                                  ; preds = %for.inc.7.13, %for.body16.lr.ph.7.13
  %indvars.iv.7.13 = phi i64 [ 0, %for.body16.lr.ph.7.13 ], [ %indvars.iv.next.7.13, %for.inc.7.13 ]
  %partial_sum.12.7.13 = phi float [ %partial_sum.05.7.13, %for.body16.lr.ph.7.13 ], [ %partial_sum.2.7.13, %for.inc.7.13 ]
  %1034 = trunc i64 %indvars.iv.7.13 to i32
  %add17.7.13 = add nsw i32 %1034, %inc54.6.13
  %cmp18.7.13 = icmp sgt i32 %add17.7.13, -1
  %cmp21.7.13 = icmp ult i32 %add17.7.13, %img_width
  %1035 = and i1 %cmp18.7.13, %cmp21.7.13
  br i1 %1035, label %if.end26.7.13, label %for.inc.7.13

if.end26.7.13:                                    ; preds = %for.body16.7.13
  %add29.7.13 = add nsw i32 %add17.7.13, %mul.7.13
  %idxprom.7.13 = sext i32 %add29.7.13 to i64
  %arrayidx.7.13 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.13
  %1036 = load float, float* %arrayidx.7.13, align 4
  %1037 = trunc i64 %indvars.iv.7.13 to i32
  %add31.7.13 = add i32 %1037, %mul30.7.13
  %idxprom32.7.13 = zext i32 %add31.7.13 to i64
  %arrayidx33.7.13 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.13
  %1038 = load float, float* %arrayidx33.7.13, align 4
  %mul34.7.13 = fmul float %1036, %1038
  %add35.7.13 = fadd float %partial_sum.12.7.13, %mul34.7.13
  br label %for.inc.7.13

for.inc.7.13:                                     ; preds = %if.end26.7.13, %for.body16.7.13
  %partial_sum.2.7.13 = phi float [ %add35.7.13, %if.end26.7.13 ], [ %partial_sum.12.7.13, %for.body16.7.13 ]
  %indvars.iv.next.7.13 = add nuw nsw i64 %indvars.iv.7.13, 1
  %lftr.wideiv.7.13 = trunc i64 %indvars.iv.next.7.13 to i32
  %exitcond.7.13 = icmp eq i32 %lftr.wideiv.7.13, %kern_width
  br i1 %exitcond.7.13, label %for.inc36.7.13.loopexit, label %for.body16.7.13, !llvm.loop !1

for.inc36.7.13.loopexit:                          ; preds = %for.inc.7.13
  %partial_sum.2.7.13.lcssa = phi float [ %partial_sum.2.7.13, %for.inc.7.13 ]
  br label %for.inc36.7.13

for.inc36.7.13:                                   ; preds = %for.inc36.7.13.loopexit, %for.body10.7.13
  %partial_sum.3.7.13 = phi float [ %partial_sum.05.7.13, %for.body10.7.13 ], [ %partial_sum.2.7.13.lcssa, %for.inc36.7.13.loopexit ]
  %inc37.7.13 = add nuw nsw i32 %ki.06.7.13, 1
  %exitcond19.7.13 = icmp eq i32 %inc37.7.13, %kern_height
  br i1 %exitcond19.7.13, label %for.end38.7.13.loopexit, label %for.body10.7.13, !llvm.loop !3

for.end38.7.13.loopexit:                          ; preds = %for.inc36.7.13
  %partial_sum.3.7.13.lcssa = phi float [ %partial_sum.3.7.13, %for.inc36.7.13 ]
  br label %for.end38.7.13

for.end38.7.13:                                   ; preds = %for.end38.7.13.loopexit, %for.inc53.6.13
  %partial_sum.0.lcssa.7.13 = phi float [ 0.000000e+00, %for.inc53.6.13 ], [ %partial_sum.3.7.13.lcssa, %for.end38.7.13.loopexit ]
  br i1 %tobool39, label %if.else.7.13, label %if.then40.7.13

if.then40.7.13:                                   ; preds = %for.end38.7.13
  %cmp41.7.13 = fcmp olt float %partial_sum.0.lcssa.7.13, 0.000000e+00
  %sub42.7.13 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.13
  %cond.7.13 = select i1 %cmp41.7.13, float %sub42.7.13, float %partial_sum.0.lcssa.7.13
  %conv.7.13 = fptoui float %cond.7.13 to i8
  %conv43.7.13 = uitofp i8 %conv.7.13 to float
  %1039 = add nsw i64 %indvars.iv.next21.6.13, %977
  %arrayidx47.7.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1039
  store float %conv43.7.13, float* %arrayidx47.7.13, align 4
  br label %for.inc53.7.13

if.else.7.13:                                     ; preds = %for.end38.7.13
  %1040 = add nsw i64 %indvars.iv.next21.6.13, %976
  %arrayidx51.7.13 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1040
  store float %partial_sum.0.lcssa.7.13, float* %arrayidx51.7.13, align 4
  br label %for.inc53.7.13

for.inc53.7.13:                                   ; preds = %if.else.7.13, %if.then40.7.13
  %inc54.7.13 = add nsw i32 %in_j.011.13, 8
  %indvars.iv.next21.7.13 = add nsw i64 %indvars.iv20.13, 8
  %lftr.wideiv24.7.13 = trunc i64 %indvars.iv.next21.7.13 to i32
  %exitcond25.7.13 = icmp eq i32 %lftr.wideiv24.7.13, %img_width
  br i1 %exitcond25.7.13, label %for.inc57.13.loopexit, label %for.cond8.preheader.13, !llvm.loop !5

for.inc57.13.loopexit:                            ; preds = %for.inc53.7.13
  br label %for.inc57.13

for.inc57.13:                                     ; preds = %for.inc57.13.loopexit, %for.cond8.preheader.lr.ph.split.13
  %inc58.13 = add nsw i32 %in_i.015, 14
  %indvars.iv.next27.13 = add nsw i64 %indvars.iv26, 14
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.14

for.cond8.preheader.lr.ph.14:                     ; preds = %for.inc57.13
  %1041 = trunc i64 %indvars.iv.next27.13 to i32
  %mul48.14 = shl i32 %1041, 7
  %1042 = trunc i64 %indvars.iv.next27.13 to i32
  %mul44.14 = shl i32 %1042, 7
  %1043 = sext i32 %mul48.14 to i64
  %1044 = sext i32 %mul44.14 to i64
  br i1 %lcmp.mod.14, label %for.cond8.preheader.lr.ph.split.14, label %for.cond8.preheader.prol.14.preheader

for.cond8.preheader.prol.14.preheader:            ; preds = %for.cond8.preheader.lr.ph.14
  br label %for.cond8.preheader.prol.14

for.cond8.preheader.prol.14:                      ; preds = %for.cond8.preheader.prol.14.preheader, %for.inc53.prol.14
  %indvars.iv20.prol.14 = phi i64 [ %indvars.iv.next21.prol.14, %for.inc53.prol.14 ], [ 0, %for.cond8.preheader.prol.14.preheader ]
  %in_j.011.prol.14 = phi i32 [ %inc54.prol.14, %for.inc53.prol.14 ], [ %sub4, %for.cond8.preheader.prol.14.preheader ]
  %prol.iter.14 = phi i32 [ %prol.iter.sub.14, %for.inc53.prol.14 ], [ %xtraiter.14, %for.cond8.preheader.prol.14.preheader ]
  br i1 %cmp94, label %for.end38.prol.14, label %for.body10.prol.14.preheader

for.body10.prol.14.preheader:                     ; preds = %for.cond8.preheader.prol.14
  br label %for.body10.prol.14

for.body10.prol.14:                               ; preds = %for.body10.prol.14.preheader, %for.inc36.prol.14
  %ki.06.prol.14 = phi i32 [ %inc37.prol.14, %for.inc36.prol.14 ], [ 0, %for.body10.prol.14.preheader ]
  %partial_sum.05.prol.14 = phi float [ %partial_sum.3.prol.14, %for.inc36.prol.14 ], [ 0.000000e+00, %for.body10.prol.14.preheader ]
  %add.prol.14 = add nsw i32 %ki.06.prol.14, %inc58.13
  %notlhs.prol.14 = icmp slt i32 %add.prol.14, 0
  %notrhs.prol.14 = icmp uge i32 %add.prol.14, %img_height
  %.not.prol.14 = or i1 %notrhs.prol.14, %notlhs.prol.14
  %brmerge.prol.14 = or i1 %.not.prol.14, %cmp151.not.prol.14
  br i1 %brmerge.prol.14, label %for.inc36.prol.14, label %for.body16.lr.ph.prol.14

for.body16.lr.ph.prol.14:                         ; preds = %for.body10.prol.14
  %mul.prol.14 = shl i32 %add.prol.14, 7
  %mul30.prol.14 = mul i32 %ki.06.prol.14, %kern_width
  br label %for.body16.prol.14

for.body16.prol.14:                               ; preds = %for.inc.prol.14, %for.body16.lr.ph.prol.14
  %indvars.iv.prol.14 = phi i64 [ 0, %for.body16.lr.ph.prol.14 ], [ %indvars.iv.next.prol.14, %for.inc.prol.14 ]
  %partial_sum.12.prol.14 = phi float [ %partial_sum.05.prol.14, %for.body16.lr.ph.prol.14 ], [ %partial_sum.2.prol.14, %for.inc.prol.14 ]
  %1045 = trunc i64 %indvars.iv.prol.14 to i32
  %add17.prol.14 = add nsw i32 %1045, %in_j.011.prol.14
  %cmp18.prol.14 = icmp sgt i32 %add17.prol.14, -1
  %cmp21.prol.14 = icmp ult i32 %add17.prol.14, %img_width
  %1046 = and i1 %cmp18.prol.14, %cmp21.prol.14
  br i1 %1046, label %if.end26.prol.14, label %for.inc.prol.14

if.end26.prol.14:                                 ; preds = %for.body16.prol.14
  %add29.prol.14 = add nsw i32 %add17.prol.14, %mul.prol.14
  %idxprom.prol.14 = sext i32 %add29.prol.14 to i64
  %arrayidx.prol.14 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.14
  %1047 = load float, float* %arrayidx.prol.14, align 4
  %1048 = trunc i64 %indvars.iv.prol.14 to i32
  %add31.prol.14 = add i32 %1048, %mul30.prol.14
  %idxprom32.prol.14 = zext i32 %add31.prol.14 to i64
  %arrayidx33.prol.14 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.14
  %1049 = load float, float* %arrayidx33.prol.14, align 4
  %mul34.prol.14 = fmul float %1047, %1049
  %add35.prol.14 = fadd float %partial_sum.12.prol.14, %mul34.prol.14
  br label %for.inc.prol.14

for.inc.prol.14:                                  ; preds = %if.end26.prol.14, %for.body16.prol.14
  %partial_sum.2.prol.14 = phi float [ %add35.prol.14, %if.end26.prol.14 ], [ %partial_sum.12.prol.14, %for.body16.prol.14 ]
  %indvars.iv.next.prol.14 = add nuw nsw i64 %indvars.iv.prol.14, 1
  %lftr.wideiv.prol.14 = trunc i64 %indvars.iv.next.prol.14 to i32
  %exitcond.prol.14 = icmp eq i32 %lftr.wideiv.prol.14, %kern_width
  br i1 %exitcond.prol.14, label %for.inc36.prol.14.loopexit, label %for.body16.prol.14, !llvm.loop !1

for.inc36.prol.14.loopexit:                       ; preds = %for.inc.prol.14
  %partial_sum.2.prol.14.lcssa = phi float [ %partial_sum.2.prol.14, %for.inc.prol.14 ]
  br label %for.inc36.prol.14

for.inc36.prol.14:                                ; preds = %for.inc36.prol.14.loopexit, %for.body10.prol.14
  %partial_sum.3.prol.14 = phi float [ %partial_sum.05.prol.14, %for.body10.prol.14 ], [ %partial_sum.2.prol.14.lcssa, %for.inc36.prol.14.loopexit ]
  %inc37.prol.14 = add nuw nsw i32 %ki.06.prol.14, 1
  %exitcond19.prol.14 = icmp eq i32 %inc37.prol.14, %kern_height
  br i1 %exitcond19.prol.14, label %for.end38.prol.14.loopexit, label %for.body10.prol.14, !llvm.loop !3

for.end38.prol.14.loopexit:                       ; preds = %for.inc36.prol.14
  %partial_sum.3.prol.14.lcssa = phi float [ %partial_sum.3.prol.14, %for.inc36.prol.14 ]
  br label %for.end38.prol.14

for.end38.prol.14:                                ; preds = %for.end38.prol.14.loopexit, %for.cond8.preheader.prol.14
  %partial_sum.0.lcssa.prol.14 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.14 ], [ %partial_sum.3.prol.14.lcssa, %for.end38.prol.14.loopexit ]
  br i1 %tobool39, label %if.else.prol.14, label %if.then40.prol.14

if.then40.prol.14:                                ; preds = %for.end38.prol.14
  %cmp41.prol.14 = fcmp olt float %partial_sum.0.lcssa.prol.14, 0.000000e+00
  %sub42.prol.14 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.14
  %cond.prol.14 = select i1 %cmp41.prol.14, float %sub42.prol.14, float %partial_sum.0.lcssa.prol.14
  %conv.prol.14 = fptoui float %cond.prol.14 to i8
  %conv43.prol.14 = uitofp i8 %conv.prol.14 to float
  %1050 = add nsw i64 %indvars.iv20.prol.14, %1044
  %arrayidx47.prol.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1050
  store float %conv43.prol.14, float* %arrayidx47.prol.14, align 4
  br label %for.inc53.prol.14

if.else.prol.14:                                  ; preds = %for.end38.prol.14
  %1051 = add nsw i64 %indvars.iv20.prol.14, %1043
  %arrayidx51.prol.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1051
  store float %partial_sum.0.lcssa.prol.14, float* %arrayidx51.prol.14, align 4
  br label %for.inc53.prol.14

for.inc53.prol.14:                                ; preds = %if.else.prol.14, %if.then40.prol.14
  %inc54.prol.14 = add nsw i32 %in_j.011.prol.14, 1
  %indvars.iv.next21.prol.14 = add nuw nsw i64 %indvars.iv20.prol.14, 1
  %prol.iter.sub.14 = add i32 %prol.iter.14, -1
  %prol.iter.cmp.14 = icmp eq i32 %prol.iter.sub.14, 0
  br i1 %prol.iter.cmp.14, label %for.cond8.preheader.lr.ph.split.14.loopexit, label %for.cond8.preheader.prol.14, !llvm.loop !4

for.cond8.preheader.lr.ph.split.14.loopexit:      ; preds = %for.inc53.prol.14
  %indvars.iv.next21.prol.14.lcssa = phi i64 [ %indvars.iv.next21.prol.14, %for.inc53.prol.14 ]
  %inc54.prol.14.lcssa = phi i32 [ %inc54.prol.14, %for.inc53.prol.14 ]
  br label %for.cond8.preheader.lr.ph.split.14

for.cond8.preheader.lr.ph.split.14:               ; preds = %for.cond8.preheader.lr.ph.split.14.loopexit, %for.cond8.preheader.lr.ph.14
  %indvars.iv20.unr.14 = phi i64 [ 0, %for.cond8.preheader.lr.ph.14 ], [ %indvars.iv.next21.prol.14.lcssa, %for.cond8.preheader.lr.ph.split.14.loopexit ]
  %in_j.011.unr.14 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.14 ], [ %inc54.prol.14.lcssa, %for.cond8.preheader.lr.ph.split.14.loopexit ]
  br i1 %85, label %for.inc57.14, label %for.cond8.preheader.14.preheader

for.cond8.preheader.14.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.14
  br label %for.cond8.preheader.14

for.cond8.preheader.14:                           ; preds = %for.cond8.preheader.14.preheader, %for.inc53.7.14
  %indvars.iv20.14 = phi i64 [ %indvars.iv.next21.7.14, %for.inc53.7.14 ], [ %indvars.iv20.unr.14, %for.cond8.preheader.14.preheader ]
  %in_j.011.14 = phi i32 [ %inc54.7.14, %for.inc53.7.14 ], [ %in_j.011.unr.14, %for.cond8.preheader.14.preheader ]
  br i1 %cmp94, label %for.end38.14, label %for.body10.14.preheader

for.body10.14.preheader:                          ; preds = %for.cond8.preheader.14
  br label %for.body10.14

for.body10.14:                                    ; preds = %for.body10.14.preheader, %for.inc36.14
  %ki.06.14 = phi i32 [ %inc37.14, %for.inc36.14 ], [ 0, %for.body10.14.preheader ]
  %partial_sum.05.14 = phi float [ %partial_sum.3.14, %for.inc36.14 ], [ 0.000000e+00, %for.body10.14.preheader ]
  %add.14 = add nsw i32 %ki.06.14, %inc58.13
  %notlhs.14 = icmp slt i32 %add.14, 0
  %notrhs.14 = icmp uge i32 %add.14, %img_height
  %.not.14 = or i1 %notrhs.14, %notlhs.14
  %brmerge.14 = or i1 %.not.14, %cmp151.not.14
  br i1 %brmerge.14, label %for.inc36.14, label %for.body16.lr.ph.14

for.body16.lr.ph.14:                              ; preds = %for.body10.14
  %mul.14 = shl i32 %add.14, 7
  %mul30.14 = mul i32 %ki.06.14, %kern_width
  br label %for.body16.14

for.body16.14:                                    ; preds = %for.inc.14, %for.body16.lr.ph.14
  %indvars.iv.14 = phi i64 [ 0, %for.body16.lr.ph.14 ], [ %indvars.iv.next.14, %for.inc.14 ]
  %partial_sum.12.14 = phi float [ %partial_sum.05.14, %for.body16.lr.ph.14 ], [ %partial_sum.2.14, %for.inc.14 ]
  %1052 = trunc i64 %indvars.iv.14 to i32
  %add17.14 = add nsw i32 %1052, %in_j.011.14
  %cmp18.14 = icmp sgt i32 %add17.14, -1
  %cmp21.14 = icmp ult i32 %add17.14, %img_width
  %1053 = and i1 %cmp18.14, %cmp21.14
  br i1 %1053, label %if.end26.14, label %for.inc.14

if.end26.14:                                      ; preds = %for.body16.14
  %add29.14 = add nsw i32 %add17.14, %mul.14
  %idxprom.14 = sext i32 %add29.14 to i64
  %arrayidx.14 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.14
  %1054 = load float, float* %arrayidx.14, align 4
  %1055 = trunc i64 %indvars.iv.14 to i32
  %add31.14 = add i32 %1055, %mul30.14
  %idxprom32.14 = zext i32 %add31.14 to i64
  %arrayidx33.14 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.14
  %1056 = load float, float* %arrayidx33.14, align 4
  %mul34.14 = fmul float %1054, %1056
  %add35.14 = fadd float %partial_sum.12.14, %mul34.14
  br label %for.inc.14

for.inc.14:                                       ; preds = %if.end26.14, %for.body16.14
  %partial_sum.2.14 = phi float [ %add35.14, %if.end26.14 ], [ %partial_sum.12.14, %for.body16.14 ]
  %indvars.iv.next.14 = add nuw nsw i64 %indvars.iv.14, 1
  %lftr.wideiv.14 = trunc i64 %indvars.iv.next.14 to i32
  %exitcond.14 = icmp eq i32 %lftr.wideiv.14, %kern_width
  br i1 %exitcond.14, label %for.inc36.14.loopexit, label %for.body16.14, !llvm.loop !1

for.inc36.14.loopexit:                            ; preds = %for.inc.14
  %partial_sum.2.14.lcssa = phi float [ %partial_sum.2.14, %for.inc.14 ]
  br label %for.inc36.14

for.inc36.14:                                     ; preds = %for.inc36.14.loopexit, %for.body10.14
  %partial_sum.3.14 = phi float [ %partial_sum.05.14, %for.body10.14 ], [ %partial_sum.2.14.lcssa, %for.inc36.14.loopexit ]
  %inc37.14 = add nuw nsw i32 %ki.06.14, 1
  %exitcond19.14 = icmp eq i32 %inc37.14, %kern_height
  br i1 %exitcond19.14, label %for.end38.14.loopexit, label %for.body10.14, !llvm.loop !3

for.end38.14.loopexit:                            ; preds = %for.inc36.14
  %partial_sum.3.14.lcssa = phi float [ %partial_sum.3.14, %for.inc36.14 ]
  br label %for.end38.14

for.end38.14:                                     ; preds = %for.end38.14.loopexit, %for.cond8.preheader.14
  %partial_sum.0.lcssa.14 = phi float [ 0.000000e+00, %for.cond8.preheader.14 ], [ %partial_sum.3.14.lcssa, %for.end38.14.loopexit ]
  br i1 %tobool39, label %if.else.14, label %if.then40.14

if.then40.14:                                     ; preds = %for.end38.14
  %cmp41.14 = fcmp olt float %partial_sum.0.lcssa.14, 0.000000e+00
  %sub42.14 = fsub float -0.000000e+00, %partial_sum.0.lcssa.14
  %cond.14 = select i1 %cmp41.14, float %sub42.14, float %partial_sum.0.lcssa.14
  %conv.14 = fptoui float %cond.14 to i8
  %conv43.14 = uitofp i8 %conv.14 to float
  %1057 = add nsw i64 %indvars.iv20.14, %1044
  %arrayidx47.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1057
  store float %conv43.14, float* %arrayidx47.14, align 4
  br label %for.inc53.14

if.else.14:                                       ; preds = %for.end38.14
  %1058 = add nsw i64 %indvars.iv20.14, %1043
  %arrayidx51.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1058
  store float %partial_sum.0.lcssa.14, float* %arrayidx51.14, align 4
  br label %for.inc53.14

for.inc53.14:                                     ; preds = %if.else.14, %if.then40.14
  %inc54.14 = add nsw i32 %in_j.011.14, 1
  %indvars.iv.next21.14 = add nuw nsw i64 %indvars.iv20.14, 1
  br i1 %cmp94, label %for.end38.1.14, label %for.body10.1.14.preheader

for.body10.1.14.preheader:                        ; preds = %for.inc53.14
  br label %for.body10.1.14

for.body10.1.14:                                  ; preds = %for.body10.1.14.preheader, %for.inc36.1.14
  %ki.06.1.14 = phi i32 [ %inc37.1.14, %for.inc36.1.14 ], [ 0, %for.body10.1.14.preheader ]
  %partial_sum.05.1.14 = phi float [ %partial_sum.3.1.14, %for.inc36.1.14 ], [ 0.000000e+00, %for.body10.1.14.preheader ]
  %add.1.14 = add nsw i32 %ki.06.1.14, %inc58.13
  %notlhs.1.14 = icmp slt i32 %add.1.14, 0
  %notrhs.1.14 = icmp uge i32 %add.1.14, %img_height
  %.not.1.14 = or i1 %notrhs.1.14, %notlhs.1.14
  %brmerge.1.14 = or i1 %.not.1.14, %cmp151.not.1.14
  br i1 %brmerge.1.14, label %for.inc36.1.14, label %for.body16.lr.ph.1.14

for.body16.lr.ph.1.14:                            ; preds = %for.body10.1.14
  %mul.1.14 = shl i32 %add.1.14, 7
  %mul30.1.14 = mul i32 %ki.06.1.14, %kern_width
  br label %for.body16.1.14

for.body16.1.14:                                  ; preds = %for.inc.1.14, %for.body16.lr.ph.1.14
  %indvars.iv.1.14 = phi i64 [ 0, %for.body16.lr.ph.1.14 ], [ %indvars.iv.next.1.14, %for.inc.1.14 ]
  %partial_sum.12.1.14 = phi float [ %partial_sum.05.1.14, %for.body16.lr.ph.1.14 ], [ %partial_sum.2.1.14, %for.inc.1.14 ]
  %1059 = trunc i64 %indvars.iv.1.14 to i32
  %add17.1.14 = add nsw i32 %1059, %inc54.14
  %cmp18.1.14 = icmp sgt i32 %add17.1.14, -1
  %cmp21.1.14 = icmp ult i32 %add17.1.14, %img_width
  %1060 = and i1 %cmp18.1.14, %cmp21.1.14
  br i1 %1060, label %if.end26.1.14, label %for.inc.1.14

if.end26.1.14:                                    ; preds = %for.body16.1.14
  %add29.1.14 = add nsw i32 %add17.1.14, %mul.1.14
  %idxprom.1.14 = sext i32 %add29.1.14 to i64
  %arrayidx.1.14 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.14
  %1061 = load float, float* %arrayidx.1.14, align 4
  %1062 = trunc i64 %indvars.iv.1.14 to i32
  %add31.1.14 = add i32 %1062, %mul30.1.14
  %idxprom32.1.14 = zext i32 %add31.1.14 to i64
  %arrayidx33.1.14 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.14
  %1063 = load float, float* %arrayidx33.1.14, align 4
  %mul34.1.14 = fmul float %1061, %1063
  %add35.1.14 = fadd float %partial_sum.12.1.14, %mul34.1.14
  br label %for.inc.1.14

for.inc.1.14:                                     ; preds = %if.end26.1.14, %for.body16.1.14
  %partial_sum.2.1.14 = phi float [ %add35.1.14, %if.end26.1.14 ], [ %partial_sum.12.1.14, %for.body16.1.14 ]
  %indvars.iv.next.1.14 = add nuw nsw i64 %indvars.iv.1.14, 1
  %lftr.wideiv.1.14 = trunc i64 %indvars.iv.next.1.14 to i32
  %exitcond.1.14 = icmp eq i32 %lftr.wideiv.1.14, %kern_width
  br i1 %exitcond.1.14, label %for.inc36.1.14.loopexit, label %for.body16.1.14, !llvm.loop !1

for.inc36.1.14.loopexit:                          ; preds = %for.inc.1.14
  %partial_sum.2.1.14.lcssa = phi float [ %partial_sum.2.1.14, %for.inc.1.14 ]
  br label %for.inc36.1.14

for.inc36.1.14:                                   ; preds = %for.inc36.1.14.loopexit, %for.body10.1.14
  %partial_sum.3.1.14 = phi float [ %partial_sum.05.1.14, %for.body10.1.14 ], [ %partial_sum.2.1.14.lcssa, %for.inc36.1.14.loopexit ]
  %inc37.1.14 = add nuw nsw i32 %ki.06.1.14, 1
  %exitcond19.1.14 = icmp eq i32 %inc37.1.14, %kern_height
  br i1 %exitcond19.1.14, label %for.end38.1.14.loopexit, label %for.body10.1.14, !llvm.loop !3

for.end38.1.14.loopexit:                          ; preds = %for.inc36.1.14
  %partial_sum.3.1.14.lcssa = phi float [ %partial_sum.3.1.14, %for.inc36.1.14 ]
  br label %for.end38.1.14

for.end38.1.14:                                   ; preds = %for.end38.1.14.loopexit, %for.inc53.14
  %partial_sum.0.lcssa.1.14 = phi float [ 0.000000e+00, %for.inc53.14 ], [ %partial_sum.3.1.14.lcssa, %for.end38.1.14.loopexit ]
  br i1 %tobool39, label %if.else.1.14, label %if.then40.1.14

if.then40.1.14:                                   ; preds = %for.end38.1.14
  %cmp41.1.14 = fcmp olt float %partial_sum.0.lcssa.1.14, 0.000000e+00
  %sub42.1.14 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.14
  %cond.1.14 = select i1 %cmp41.1.14, float %sub42.1.14, float %partial_sum.0.lcssa.1.14
  %conv.1.14 = fptoui float %cond.1.14 to i8
  %conv43.1.14 = uitofp i8 %conv.1.14 to float
  %1064 = add nsw i64 %indvars.iv.next21.14, %1044
  %arrayidx47.1.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1064
  store float %conv43.1.14, float* %arrayidx47.1.14, align 4
  br label %for.inc53.1.14

if.else.1.14:                                     ; preds = %for.end38.1.14
  %1065 = add nsw i64 %indvars.iv.next21.14, %1043
  %arrayidx51.1.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1065
  store float %partial_sum.0.lcssa.1.14, float* %arrayidx51.1.14, align 4
  br label %for.inc53.1.14

for.inc53.1.14:                                   ; preds = %if.else.1.14, %if.then40.1.14
  %inc54.1.14 = add nsw i32 %in_j.011.14, 2
  %indvars.iv.next21.1.14 = add nsw i64 %indvars.iv20.14, 2
  br i1 %cmp94, label %for.end38.2.14, label %for.body10.2.14.preheader

for.body10.2.14.preheader:                        ; preds = %for.inc53.1.14
  br label %for.body10.2.14

for.body10.2.14:                                  ; preds = %for.body10.2.14.preheader, %for.inc36.2.14
  %ki.06.2.14 = phi i32 [ %inc37.2.14, %for.inc36.2.14 ], [ 0, %for.body10.2.14.preheader ]
  %partial_sum.05.2.14 = phi float [ %partial_sum.3.2.14, %for.inc36.2.14 ], [ 0.000000e+00, %for.body10.2.14.preheader ]
  %add.2.14 = add nsw i32 %ki.06.2.14, %inc58.13
  %notlhs.2.14 = icmp slt i32 %add.2.14, 0
  %notrhs.2.14 = icmp uge i32 %add.2.14, %img_height
  %.not.2.14 = or i1 %notrhs.2.14, %notlhs.2.14
  %brmerge.2.14 = or i1 %.not.2.14, %cmp151.not.2.14
  br i1 %brmerge.2.14, label %for.inc36.2.14, label %for.body16.lr.ph.2.14

for.body16.lr.ph.2.14:                            ; preds = %for.body10.2.14
  %mul.2.14 = shl i32 %add.2.14, 7
  %mul30.2.14 = mul i32 %ki.06.2.14, %kern_width
  br label %for.body16.2.14

for.body16.2.14:                                  ; preds = %for.inc.2.14, %for.body16.lr.ph.2.14
  %indvars.iv.2.14 = phi i64 [ 0, %for.body16.lr.ph.2.14 ], [ %indvars.iv.next.2.14, %for.inc.2.14 ]
  %partial_sum.12.2.14 = phi float [ %partial_sum.05.2.14, %for.body16.lr.ph.2.14 ], [ %partial_sum.2.2.14, %for.inc.2.14 ]
  %1066 = trunc i64 %indvars.iv.2.14 to i32
  %add17.2.14 = add nsw i32 %1066, %inc54.1.14
  %cmp18.2.14 = icmp sgt i32 %add17.2.14, -1
  %cmp21.2.14 = icmp ult i32 %add17.2.14, %img_width
  %1067 = and i1 %cmp18.2.14, %cmp21.2.14
  br i1 %1067, label %if.end26.2.14, label %for.inc.2.14

if.end26.2.14:                                    ; preds = %for.body16.2.14
  %add29.2.14 = add nsw i32 %add17.2.14, %mul.2.14
  %idxprom.2.14 = sext i32 %add29.2.14 to i64
  %arrayidx.2.14 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.14
  %1068 = load float, float* %arrayidx.2.14, align 4
  %1069 = trunc i64 %indvars.iv.2.14 to i32
  %add31.2.14 = add i32 %1069, %mul30.2.14
  %idxprom32.2.14 = zext i32 %add31.2.14 to i64
  %arrayidx33.2.14 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.14
  %1070 = load float, float* %arrayidx33.2.14, align 4
  %mul34.2.14 = fmul float %1068, %1070
  %add35.2.14 = fadd float %partial_sum.12.2.14, %mul34.2.14
  br label %for.inc.2.14

for.inc.2.14:                                     ; preds = %if.end26.2.14, %for.body16.2.14
  %partial_sum.2.2.14 = phi float [ %add35.2.14, %if.end26.2.14 ], [ %partial_sum.12.2.14, %for.body16.2.14 ]
  %indvars.iv.next.2.14 = add nuw nsw i64 %indvars.iv.2.14, 1
  %lftr.wideiv.2.14 = trunc i64 %indvars.iv.next.2.14 to i32
  %exitcond.2.14 = icmp eq i32 %lftr.wideiv.2.14, %kern_width
  br i1 %exitcond.2.14, label %for.inc36.2.14.loopexit, label %for.body16.2.14, !llvm.loop !1

for.inc36.2.14.loopexit:                          ; preds = %for.inc.2.14
  %partial_sum.2.2.14.lcssa = phi float [ %partial_sum.2.2.14, %for.inc.2.14 ]
  br label %for.inc36.2.14

for.inc36.2.14:                                   ; preds = %for.inc36.2.14.loopexit, %for.body10.2.14
  %partial_sum.3.2.14 = phi float [ %partial_sum.05.2.14, %for.body10.2.14 ], [ %partial_sum.2.2.14.lcssa, %for.inc36.2.14.loopexit ]
  %inc37.2.14 = add nuw nsw i32 %ki.06.2.14, 1
  %exitcond19.2.14 = icmp eq i32 %inc37.2.14, %kern_height
  br i1 %exitcond19.2.14, label %for.end38.2.14.loopexit, label %for.body10.2.14, !llvm.loop !3

for.end38.2.14.loopexit:                          ; preds = %for.inc36.2.14
  %partial_sum.3.2.14.lcssa = phi float [ %partial_sum.3.2.14, %for.inc36.2.14 ]
  br label %for.end38.2.14

for.end38.2.14:                                   ; preds = %for.end38.2.14.loopexit, %for.inc53.1.14
  %partial_sum.0.lcssa.2.14 = phi float [ 0.000000e+00, %for.inc53.1.14 ], [ %partial_sum.3.2.14.lcssa, %for.end38.2.14.loopexit ]
  br i1 %tobool39, label %if.else.2.14, label %if.then40.2.14

if.then40.2.14:                                   ; preds = %for.end38.2.14
  %cmp41.2.14 = fcmp olt float %partial_sum.0.lcssa.2.14, 0.000000e+00
  %sub42.2.14 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.14
  %cond.2.14 = select i1 %cmp41.2.14, float %sub42.2.14, float %partial_sum.0.lcssa.2.14
  %conv.2.14 = fptoui float %cond.2.14 to i8
  %conv43.2.14 = uitofp i8 %conv.2.14 to float
  %1071 = add nsw i64 %indvars.iv.next21.1.14, %1044
  %arrayidx47.2.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1071
  store float %conv43.2.14, float* %arrayidx47.2.14, align 4
  br label %for.inc53.2.14

if.else.2.14:                                     ; preds = %for.end38.2.14
  %1072 = add nsw i64 %indvars.iv.next21.1.14, %1043
  %arrayidx51.2.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1072
  store float %partial_sum.0.lcssa.2.14, float* %arrayidx51.2.14, align 4
  br label %for.inc53.2.14

for.inc53.2.14:                                   ; preds = %if.else.2.14, %if.then40.2.14
  %inc54.2.14 = add nsw i32 %in_j.011.14, 3
  %indvars.iv.next21.2.14 = add nsw i64 %indvars.iv20.14, 3
  br i1 %cmp94, label %for.end38.3.14, label %for.body10.3.14.preheader

for.body10.3.14.preheader:                        ; preds = %for.inc53.2.14
  br label %for.body10.3.14

for.body10.3.14:                                  ; preds = %for.body10.3.14.preheader, %for.inc36.3.14
  %ki.06.3.14 = phi i32 [ %inc37.3.14, %for.inc36.3.14 ], [ 0, %for.body10.3.14.preheader ]
  %partial_sum.05.3.14 = phi float [ %partial_sum.3.3.14, %for.inc36.3.14 ], [ 0.000000e+00, %for.body10.3.14.preheader ]
  %add.3.14 = add nsw i32 %ki.06.3.14, %inc58.13
  %notlhs.3.14 = icmp slt i32 %add.3.14, 0
  %notrhs.3.14 = icmp uge i32 %add.3.14, %img_height
  %.not.3.14 = or i1 %notrhs.3.14, %notlhs.3.14
  %brmerge.3.14 = or i1 %.not.3.14, %cmp151.not.3.14
  br i1 %brmerge.3.14, label %for.inc36.3.14, label %for.body16.lr.ph.3.14

for.body16.lr.ph.3.14:                            ; preds = %for.body10.3.14
  %mul.3.14 = shl i32 %add.3.14, 7
  %mul30.3.14 = mul i32 %ki.06.3.14, %kern_width
  br label %for.body16.3.14

for.body16.3.14:                                  ; preds = %for.inc.3.14, %for.body16.lr.ph.3.14
  %indvars.iv.3.14 = phi i64 [ 0, %for.body16.lr.ph.3.14 ], [ %indvars.iv.next.3.14, %for.inc.3.14 ]
  %partial_sum.12.3.14 = phi float [ %partial_sum.05.3.14, %for.body16.lr.ph.3.14 ], [ %partial_sum.2.3.14, %for.inc.3.14 ]
  %1073 = trunc i64 %indvars.iv.3.14 to i32
  %add17.3.14 = add nsw i32 %1073, %inc54.2.14
  %cmp18.3.14 = icmp sgt i32 %add17.3.14, -1
  %cmp21.3.14 = icmp ult i32 %add17.3.14, %img_width
  %1074 = and i1 %cmp18.3.14, %cmp21.3.14
  br i1 %1074, label %if.end26.3.14, label %for.inc.3.14

if.end26.3.14:                                    ; preds = %for.body16.3.14
  %add29.3.14 = add nsw i32 %add17.3.14, %mul.3.14
  %idxprom.3.14 = sext i32 %add29.3.14 to i64
  %arrayidx.3.14 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.14
  %1075 = load float, float* %arrayidx.3.14, align 4
  %1076 = trunc i64 %indvars.iv.3.14 to i32
  %add31.3.14 = add i32 %1076, %mul30.3.14
  %idxprom32.3.14 = zext i32 %add31.3.14 to i64
  %arrayidx33.3.14 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.14
  %1077 = load float, float* %arrayidx33.3.14, align 4
  %mul34.3.14 = fmul float %1075, %1077
  %add35.3.14 = fadd float %partial_sum.12.3.14, %mul34.3.14
  br label %for.inc.3.14

for.inc.3.14:                                     ; preds = %if.end26.3.14, %for.body16.3.14
  %partial_sum.2.3.14 = phi float [ %add35.3.14, %if.end26.3.14 ], [ %partial_sum.12.3.14, %for.body16.3.14 ]
  %indvars.iv.next.3.14 = add nuw nsw i64 %indvars.iv.3.14, 1
  %lftr.wideiv.3.14 = trunc i64 %indvars.iv.next.3.14 to i32
  %exitcond.3.14 = icmp eq i32 %lftr.wideiv.3.14, %kern_width
  br i1 %exitcond.3.14, label %for.inc36.3.14.loopexit, label %for.body16.3.14, !llvm.loop !1

for.inc36.3.14.loopexit:                          ; preds = %for.inc.3.14
  %partial_sum.2.3.14.lcssa = phi float [ %partial_sum.2.3.14, %for.inc.3.14 ]
  br label %for.inc36.3.14

for.inc36.3.14:                                   ; preds = %for.inc36.3.14.loopexit, %for.body10.3.14
  %partial_sum.3.3.14 = phi float [ %partial_sum.05.3.14, %for.body10.3.14 ], [ %partial_sum.2.3.14.lcssa, %for.inc36.3.14.loopexit ]
  %inc37.3.14 = add nuw nsw i32 %ki.06.3.14, 1
  %exitcond19.3.14 = icmp eq i32 %inc37.3.14, %kern_height
  br i1 %exitcond19.3.14, label %for.end38.3.14.loopexit, label %for.body10.3.14, !llvm.loop !3

for.end38.3.14.loopexit:                          ; preds = %for.inc36.3.14
  %partial_sum.3.3.14.lcssa = phi float [ %partial_sum.3.3.14, %for.inc36.3.14 ]
  br label %for.end38.3.14

for.end38.3.14:                                   ; preds = %for.end38.3.14.loopexit, %for.inc53.2.14
  %partial_sum.0.lcssa.3.14 = phi float [ 0.000000e+00, %for.inc53.2.14 ], [ %partial_sum.3.3.14.lcssa, %for.end38.3.14.loopexit ]
  br i1 %tobool39, label %if.else.3.14, label %if.then40.3.14

if.then40.3.14:                                   ; preds = %for.end38.3.14
  %cmp41.3.14 = fcmp olt float %partial_sum.0.lcssa.3.14, 0.000000e+00
  %sub42.3.14 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.14
  %cond.3.14 = select i1 %cmp41.3.14, float %sub42.3.14, float %partial_sum.0.lcssa.3.14
  %conv.3.14 = fptoui float %cond.3.14 to i8
  %conv43.3.14 = uitofp i8 %conv.3.14 to float
  %1078 = add nsw i64 %indvars.iv.next21.2.14, %1044
  %arrayidx47.3.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1078
  store float %conv43.3.14, float* %arrayidx47.3.14, align 4
  br label %for.inc53.3.14

if.else.3.14:                                     ; preds = %for.end38.3.14
  %1079 = add nsw i64 %indvars.iv.next21.2.14, %1043
  %arrayidx51.3.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1079
  store float %partial_sum.0.lcssa.3.14, float* %arrayidx51.3.14, align 4
  br label %for.inc53.3.14

for.inc53.3.14:                                   ; preds = %if.else.3.14, %if.then40.3.14
  %inc54.3.14 = add nsw i32 %in_j.011.14, 4
  %indvars.iv.next21.3.14 = add nsw i64 %indvars.iv20.14, 4
  br i1 %cmp94, label %for.end38.4.14, label %for.body10.4.14.preheader

for.body10.4.14.preheader:                        ; preds = %for.inc53.3.14
  br label %for.body10.4.14

for.body10.4.14:                                  ; preds = %for.body10.4.14.preheader, %for.inc36.4.14
  %ki.06.4.14 = phi i32 [ %inc37.4.14, %for.inc36.4.14 ], [ 0, %for.body10.4.14.preheader ]
  %partial_sum.05.4.14 = phi float [ %partial_sum.3.4.14, %for.inc36.4.14 ], [ 0.000000e+00, %for.body10.4.14.preheader ]
  %add.4.14 = add nsw i32 %ki.06.4.14, %inc58.13
  %notlhs.4.14 = icmp slt i32 %add.4.14, 0
  %notrhs.4.14 = icmp uge i32 %add.4.14, %img_height
  %.not.4.14 = or i1 %notrhs.4.14, %notlhs.4.14
  %brmerge.4.14 = or i1 %.not.4.14, %cmp151.not.4.14
  br i1 %brmerge.4.14, label %for.inc36.4.14, label %for.body16.lr.ph.4.14

for.body16.lr.ph.4.14:                            ; preds = %for.body10.4.14
  %mul.4.14 = shl i32 %add.4.14, 7
  %mul30.4.14 = mul i32 %ki.06.4.14, %kern_width
  br label %for.body16.4.14

for.body16.4.14:                                  ; preds = %for.inc.4.14, %for.body16.lr.ph.4.14
  %indvars.iv.4.14 = phi i64 [ 0, %for.body16.lr.ph.4.14 ], [ %indvars.iv.next.4.14, %for.inc.4.14 ]
  %partial_sum.12.4.14 = phi float [ %partial_sum.05.4.14, %for.body16.lr.ph.4.14 ], [ %partial_sum.2.4.14, %for.inc.4.14 ]
  %1080 = trunc i64 %indvars.iv.4.14 to i32
  %add17.4.14 = add nsw i32 %1080, %inc54.3.14
  %cmp18.4.14 = icmp sgt i32 %add17.4.14, -1
  %cmp21.4.14 = icmp ult i32 %add17.4.14, %img_width
  %1081 = and i1 %cmp18.4.14, %cmp21.4.14
  br i1 %1081, label %if.end26.4.14, label %for.inc.4.14

if.end26.4.14:                                    ; preds = %for.body16.4.14
  %add29.4.14 = add nsw i32 %add17.4.14, %mul.4.14
  %idxprom.4.14 = sext i32 %add29.4.14 to i64
  %arrayidx.4.14 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.14
  %1082 = load float, float* %arrayidx.4.14, align 4
  %1083 = trunc i64 %indvars.iv.4.14 to i32
  %add31.4.14 = add i32 %1083, %mul30.4.14
  %idxprom32.4.14 = zext i32 %add31.4.14 to i64
  %arrayidx33.4.14 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.14
  %1084 = load float, float* %arrayidx33.4.14, align 4
  %mul34.4.14 = fmul float %1082, %1084
  %add35.4.14 = fadd float %partial_sum.12.4.14, %mul34.4.14
  br label %for.inc.4.14

for.inc.4.14:                                     ; preds = %if.end26.4.14, %for.body16.4.14
  %partial_sum.2.4.14 = phi float [ %add35.4.14, %if.end26.4.14 ], [ %partial_sum.12.4.14, %for.body16.4.14 ]
  %indvars.iv.next.4.14 = add nuw nsw i64 %indvars.iv.4.14, 1
  %lftr.wideiv.4.14 = trunc i64 %indvars.iv.next.4.14 to i32
  %exitcond.4.14 = icmp eq i32 %lftr.wideiv.4.14, %kern_width
  br i1 %exitcond.4.14, label %for.inc36.4.14.loopexit, label %for.body16.4.14, !llvm.loop !1

for.inc36.4.14.loopexit:                          ; preds = %for.inc.4.14
  %partial_sum.2.4.14.lcssa = phi float [ %partial_sum.2.4.14, %for.inc.4.14 ]
  br label %for.inc36.4.14

for.inc36.4.14:                                   ; preds = %for.inc36.4.14.loopexit, %for.body10.4.14
  %partial_sum.3.4.14 = phi float [ %partial_sum.05.4.14, %for.body10.4.14 ], [ %partial_sum.2.4.14.lcssa, %for.inc36.4.14.loopexit ]
  %inc37.4.14 = add nuw nsw i32 %ki.06.4.14, 1
  %exitcond19.4.14 = icmp eq i32 %inc37.4.14, %kern_height
  br i1 %exitcond19.4.14, label %for.end38.4.14.loopexit, label %for.body10.4.14, !llvm.loop !3

for.end38.4.14.loopexit:                          ; preds = %for.inc36.4.14
  %partial_sum.3.4.14.lcssa = phi float [ %partial_sum.3.4.14, %for.inc36.4.14 ]
  br label %for.end38.4.14

for.end38.4.14:                                   ; preds = %for.end38.4.14.loopexit, %for.inc53.3.14
  %partial_sum.0.lcssa.4.14 = phi float [ 0.000000e+00, %for.inc53.3.14 ], [ %partial_sum.3.4.14.lcssa, %for.end38.4.14.loopexit ]
  br i1 %tobool39, label %if.else.4.14, label %if.then40.4.14

if.then40.4.14:                                   ; preds = %for.end38.4.14
  %cmp41.4.14 = fcmp olt float %partial_sum.0.lcssa.4.14, 0.000000e+00
  %sub42.4.14 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.14
  %cond.4.14 = select i1 %cmp41.4.14, float %sub42.4.14, float %partial_sum.0.lcssa.4.14
  %conv.4.14 = fptoui float %cond.4.14 to i8
  %conv43.4.14 = uitofp i8 %conv.4.14 to float
  %1085 = add nsw i64 %indvars.iv.next21.3.14, %1044
  %arrayidx47.4.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1085
  store float %conv43.4.14, float* %arrayidx47.4.14, align 4
  br label %for.inc53.4.14

if.else.4.14:                                     ; preds = %for.end38.4.14
  %1086 = add nsw i64 %indvars.iv.next21.3.14, %1043
  %arrayidx51.4.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1086
  store float %partial_sum.0.lcssa.4.14, float* %arrayidx51.4.14, align 4
  br label %for.inc53.4.14

for.inc53.4.14:                                   ; preds = %if.else.4.14, %if.then40.4.14
  %inc54.4.14 = add nsw i32 %in_j.011.14, 5
  %indvars.iv.next21.4.14 = add nsw i64 %indvars.iv20.14, 5
  br i1 %cmp94, label %for.end38.5.14, label %for.body10.5.14.preheader

for.body10.5.14.preheader:                        ; preds = %for.inc53.4.14
  br label %for.body10.5.14

for.body10.5.14:                                  ; preds = %for.body10.5.14.preheader, %for.inc36.5.14
  %ki.06.5.14 = phi i32 [ %inc37.5.14, %for.inc36.5.14 ], [ 0, %for.body10.5.14.preheader ]
  %partial_sum.05.5.14 = phi float [ %partial_sum.3.5.14, %for.inc36.5.14 ], [ 0.000000e+00, %for.body10.5.14.preheader ]
  %add.5.14 = add nsw i32 %ki.06.5.14, %inc58.13
  %notlhs.5.14 = icmp slt i32 %add.5.14, 0
  %notrhs.5.14 = icmp uge i32 %add.5.14, %img_height
  %.not.5.14 = or i1 %notrhs.5.14, %notlhs.5.14
  %brmerge.5.14 = or i1 %.not.5.14, %cmp151.not.5.14
  br i1 %brmerge.5.14, label %for.inc36.5.14, label %for.body16.lr.ph.5.14

for.body16.lr.ph.5.14:                            ; preds = %for.body10.5.14
  %mul.5.14 = shl i32 %add.5.14, 7
  %mul30.5.14 = mul i32 %ki.06.5.14, %kern_width
  br label %for.body16.5.14

for.body16.5.14:                                  ; preds = %for.inc.5.14, %for.body16.lr.ph.5.14
  %indvars.iv.5.14 = phi i64 [ 0, %for.body16.lr.ph.5.14 ], [ %indvars.iv.next.5.14, %for.inc.5.14 ]
  %partial_sum.12.5.14 = phi float [ %partial_sum.05.5.14, %for.body16.lr.ph.5.14 ], [ %partial_sum.2.5.14, %for.inc.5.14 ]
  %1087 = trunc i64 %indvars.iv.5.14 to i32
  %add17.5.14 = add nsw i32 %1087, %inc54.4.14
  %cmp18.5.14 = icmp sgt i32 %add17.5.14, -1
  %cmp21.5.14 = icmp ult i32 %add17.5.14, %img_width
  %1088 = and i1 %cmp18.5.14, %cmp21.5.14
  br i1 %1088, label %if.end26.5.14, label %for.inc.5.14

if.end26.5.14:                                    ; preds = %for.body16.5.14
  %add29.5.14 = add nsw i32 %add17.5.14, %mul.5.14
  %idxprom.5.14 = sext i32 %add29.5.14 to i64
  %arrayidx.5.14 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.14
  %1089 = load float, float* %arrayidx.5.14, align 4
  %1090 = trunc i64 %indvars.iv.5.14 to i32
  %add31.5.14 = add i32 %1090, %mul30.5.14
  %idxprom32.5.14 = zext i32 %add31.5.14 to i64
  %arrayidx33.5.14 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.14
  %1091 = load float, float* %arrayidx33.5.14, align 4
  %mul34.5.14 = fmul float %1089, %1091
  %add35.5.14 = fadd float %partial_sum.12.5.14, %mul34.5.14
  br label %for.inc.5.14

for.inc.5.14:                                     ; preds = %if.end26.5.14, %for.body16.5.14
  %partial_sum.2.5.14 = phi float [ %add35.5.14, %if.end26.5.14 ], [ %partial_sum.12.5.14, %for.body16.5.14 ]
  %indvars.iv.next.5.14 = add nuw nsw i64 %indvars.iv.5.14, 1
  %lftr.wideiv.5.14 = trunc i64 %indvars.iv.next.5.14 to i32
  %exitcond.5.14 = icmp eq i32 %lftr.wideiv.5.14, %kern_width
  br i1 %exitcond.5.14, label %for.inc36.5.14.loopexit, label %for.body16.5.14, !llvm.loop !1

for.inc36.5.14.loopexit:                          ; preds = %for.inc.5.14
  %partial_sum.2.5.14.lcssa = phi float [ %partial_sum.2.5.14, %for.inc.5.14 ]
  br label %for.inc36.5.14

for.inc36.5.14:                                   ; preds = %for.inc36.5.14.loopexit, %for.body10.5.14
  %partial_sum.3.5.14 = phi float [ %partial_sum.05.5.14, %for.body10.5.14 ], [ %partial_sum.2.5.14.lcssa, %for.inc36.5.14.loopexit ]
  %inc37.5.14 = add nuw nsw i32 %ki.06.5.14, 1
  %exitcond19.5.14 = icmp eq i32 %inc37.5.14, %kern_height
  br i1 %exitcond19.5.14, label %for.end38.5.14.loopexit, label %for.body10.5.14, !llvm.loop !3

for.end38.5.14.loopexit:                          ; preds = %for.inc36.5.14
  %partial_sum.3.5.14.lcssa = phi float [ %partial_sum.3.5.14, %for.inc36.5.14 ]
  br label %for.end38.5.14

for.end38.5.14:                                   ; preds = %for.end38.5.14.loopexit, %for.inc53.4.14
  %partial_sum.0.lcssa.5.14 = phi float [ 0.000000e+00, %for.inc53.4.14 ], [ %partial_sum.3.5.14.lcssa, %for.end38.5.14.loopexit ]
  br i1 %tobool39, label %if.else.5.14, label %if.then40.5.14

if.then40.5.14:                                   ; preds = %for.end38.5.14
  %cmp41.5.14 = fcmp olt float %partial_sum.0.lcssa.5.14, 0.000000e+00
  %sub42.5.14 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.14
  %cond.5.14 = select i1 %cmp41.5.14, float %sub42.5.14, float %partial_sum.0.lcssa.5.14
  %conv.5.14 = fptoui float %cond.5.14 to i8
  %conv43.5.14 = uitofp i8 %conv.5.14 to float
  %1092 = add nsw i64 %indvars.iv.next21.4.14, %1044
  %arrayidx47.5.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1092
  store float %conv43.5.14, float* %arrayidx47.5.14, align 4
  br label %for.inc53.5.14

if.else.5.14:                                     ; preds = %for.end38.5.14
  %1093 = add nsw i64 %indvars.iv.next21.4.14, %1043
  %arrayidx51.5.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1093
  store float %partial_sum.0.lcssa.5.14, float* %arrayidx51.5.14, align 4
  br label %for.inc53.5.14

for.inc53.5.14:                                   ; preds = %if.else.5.14, %if.then40.5.14
  %inc54.5.14 = add nsw i32 %in_j.011.14, 6
  %indvars.iv.next21.5.14 = add nsw i64 %indvars.iv20.14, 6
  br i1 %cmp94, label %for.end38.6.14, label %for.body10.6.14.preheader

for.body10.6.14.preheader:                        ; preds = %for.inc53.5.14
  br label %for.body10.6.14

for.body10.6.14:                                  ; preds = %for.body10.6.14.preheader, %for.inc36.6.14
  %ki.06.6.14 = phi i32 [ %inc37.6.14, %for.inc36.6.14 ], [ 0, %for.body10.6.14.preheader ]
  %partial_sum.05.6.14 = phi float [ %partial_sum.3.6.14, %for.inc36.6.14 ], [ 0.000000e+00, %for.body10.6.14.preheader ]
  %add.6.14 = add nsw i32 %ki.06.6.14, %inc58.13
  %notlhs.6.14 = icmp slt i32 %add.6.14, 0
  %notrhs.6.14 = icmp uge i32 %add.6.14, %img_height
  %.not.6.14 = or i1 %notrhs.6.14, %notlhs.6.14
  %brmerge.6.14 = or i1 %.not.6.14, %cmp151.not.6.14
  br i1 %brmerge.6.14, label %for.inc36.6.14, label %for.body16.lr.ph.6.14

for.body16.lr.ph.6.14:                            ; preds = %for.body10.6.14
  %mul.6.14 = shl i32 %add.6.14, 7
  %mul30.6.14 = mul i32 %ki.06.6.14, %kern_width
  br label %for.body16.6.14

for.body16.6.14:                                  ; preds = %for.inc.6.14, %for.body16.lr.ph.6.14
  %indvars.iv.6.14 = phi i64 [ 0, %for.body16.lr.ph.6.14 ], [ %indvars.iv.next.6.14, %for.inc.6.14 ]
  %partial_sum.12.6.14 = phi float [ %partial_sum.05.6.14, %for.body16.lr.ph.6.14 ], [ %partial_sum.2.6.14, %for.inc.6.14 ]
  %1094 = trunc i64 %indvars.iv.6.14 to i32
  %add17.6.14 = add nsw i32 %1094, %inc54.5.14
  %cmp18.6.14 = icmp sgt i32 %add17.6.14, -1
  %cmp21.6.14 = icmp ult i32 %add17.6.14, %img_width
  %1095 = and i1 %cmp18.6.14, %cmp21.6.14
  br i1 %1095, label %if.end26.6.14, label %for.inc.6.14

if.end26.6.14:                                    ; preds = %for.body16.6.14
  %add29.6.14 = add nsw i32 %add17.6.14, %mul.6.14
  %idxprom.6.14 = sext i32 %add29.6.14 to i64
  %arrayidx.6.14 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.14
  %1096 = load float, float* %arrayidx.6.14, align 4
  %1097 = trunc i64 %indvars.iv.6.14 to i32
  %add31.6.14 = add i32 %1097, %mul30.6.14
  %idxprom32.6.14 = zext i32 %add31.6.14 to i64
  %arrayidx33.6.14 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.14
  %1098 = load float, float* %arrayidx33.6.14, align 4
  %mul34.6.14 = fmul float %1096, %1098
  %add35.6.14 = fadd float %partial_sum.12.6.14, %mul34.6.14
  br label %for.inc.6.14

for.inc.6.14:                                     ; preds = %if.end26.6.14, %for.body16.6.14
  %partial_sum.2.6.14 = phi float [ %add35.6.14, %if.end26.6.14 ], [ %partial_sum.12.6.14, %for.body16.6.14 ]
  %indvars.iv.next.6.14 = add nuw nsw i64 %indvars.iv.6.14, 1
  %lftr.wideiv.6.14 = trunc i64 %indvars.iv.next.6.14 to i32
  %exitcond.6.14 = icmp eq i32 %lftr.wideiv.6.14, %kern_width
  br i1 %exitcond.6.14, label %for.inc36.6.14.loopexit, label %for.body16.6.14, !llvm.loop !1

for.inc36.6.14.loopexit:                          ; preds = %for.inc.6.14
  %partial_sum.2.6.14.lcssa = phi float [ %partial_sum.2.6.14, %for.inc.6.14 ]
  br label %for.inc36.6.14

for.inc36.6.14:                                   ; preds = %for.inc36.6.14.loopexit, %for.body10.6.14
  %partial_sum.3.6.14 = phi float [ %partial_sum.05.6.14, %for.body10.6.14 ], [ %partial_sum.2.6.14.lcssa, %for.inc36.6.14.loopexit ]
  %inc37.6.14 = add nuw nsw i32 %ki.06.6.14, 1
  %exitcond19.6.14 = icmp eq i32 %inc37.6.14, %kern_height
  br i1 %exitcond19.6.14, label %for.end38.6.14.loopexit, label %for.body10.6.14, !llvm.loop !3

for.end38.6.14.loopexit:                          ; preds = %for.inc36.6.14
  %partial_sum.3.6.14.lcssa = phi float [ %partial_sum.3.6.14, %for.inc36.6.14 ]
  br label %for.end38.6.14

for.end38.6.14:                                   ; preds = %for.end38.6.14.loopexit, %for.inc53.5.14
  %partial_sum.0.lcssa.6.14 = phi float [ 0.000000e+00, %for.inc53.5.14 ], [ %partial_sum.3.6.14.lcssa, %for.end38.6.14.loopexit ]
  br i1 %tobool39, label %if.else.6.14, label %if.then40.6.14

if.then40.6.14:                                   ; preds = %for.end38.6.14
  %cmp41.6.14 = fcmp olt float %partial_sum.0.lcssa.6.14, 0.000000e+00
  %sub42.6.14 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.14
  %cond.6.14 = select i1 %cmp41.6.14, float %sub42.6.14, float %partial_sum.0.lcssa.6.14
  %conv.6.14 = fptoui float %cond.6.14 to i8
  %conv43.6.14 = uitofp i8 %conv.6.14 to float
  %1099 = add nsw i64 %indvars.iv.next21.5.14, %1044
  %arrayidx47.6.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1099
  store float %conv43.6.14, float* %arrayidx47.6.14, align 4
  br label %for.inc53.6.14

if.else.6.14:                                     ; preds = %for.end38.6.14
  %1100 = add nsw i64 %indvars.iv.next21.5.14, %1043
  %arrayidx51.6.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1100
  store float %partial_sum.0.lcssa.6.14, float* %arrayidx51.6.14, align 4
  br label %for.inc53.6.14

for.inc53.6.14:                                   ; preds = %if.else.6.14, %if.then40.6.14
  %inc54.6.14 = add nsw i32 %in_j.011.14, 7
  %indvars.iv.next21.6.14 = add nsw i64 %indvars.iv20.14, 7
  br i1 %cmp94, label %for.end38.7.14, label %for.body10.7.14.preheader

for.body10.7.14.preheader:                        ; preds = %for.inc53.6.14
  br label %for.body10.7.14

for.body10.7.14:                                  ; preds = %for.body10.7.14.preheader, %for.inc36.7.14
  %ki.06.7.14 = phi i32 [ %inc37.7.14, %for.inc36.7.14 ], [ 0, %for.body10.7.14.preheader ]
  %partial_sum.05.7.14 = phi float [ %partial_sum.3.7.14, %for.inc36.7.14 ], [ 0.000000e+00, %for.body10.7.14.preheader ]
  %add.7.14 = add nsw i32 %ki.06.7.14, %inc58.13
  %notlhs.7.14 = icmp slt i32 %add.7.14, 0
  %notrhs.7.14 = icmp uge i32 %add.7.14, %img_height
  %.not.7.14 = or i1 %notrhs.7.14, %notlhs.7.14
  %brmerge.7.14 = or i1 %.not.7.14, %cmp151.not.7.14
  br i1 %brmerge.7.14, label %for.inc36.7.14, label %for.body16.lr.ph.7.14

for.body16.lr.ph.7.14:                            ; preds = %for.body10.7.14
  %mul.7.14 = shl i32 %add.7.14, 7
  %mul30.7.14 = mul i32 %ki.06.7.14, %kern_width
  br label %for.body16.7.14

for.body16.7.14:                                  ; preds = %for.inc.7.14, %for.body16.lr.ph.7.14
  %indvars.iv.7.14 = phi i64 [ 0, %for.body16.lr.ph.7.14 ], [ %indvars.iv.next.7.14, %for.inc.7.14 ]
  %partial_sum.12.7.14 = phi float [ %partial_sum.05.7.14, %for.body16.lr.ph.7.14 ], [ %partial_sum.2.7.14, %for.inc.7.14 ]
  %1101 = trunc i64 %indvars.iv.7.14 to i32
  %add17.7.14 = add nsw i32 %1101, %inc54.6.14
  %cmp18.7.14 = icmp sgt i32 %add17.7.14, -1
  %cmp21.7.14 = icmp ult i32 %add17.7.14, %img_width
  %1102 = and i1 %cmp18.7.14, %cmp21.7.14
  br i1 %1102, label %if.end26.7.14, label %for.inc.7.14

if.end26.7.14:                                    ; preds = %for.body16.7.14
  %add29.7.14 = add nsw i32 %add17.7.14, %mul.7.14
  %idxprom.7.14 = sext i32 %add29.7.14 to i64
  %arrayidx.7.14 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.14
  %1103 = load float, float* %arrayidx.7.14, align 4
  %1104 = trunc i64 %indvars.iv.7.14 to i32
  %add31.7.14 = add i32 %1104, %mul30.7.14
  %idxprom32.7.14 = zext i32 %add31.7.14 to i64
  %arrayidx33.7.14 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.14
  %1105 = load float, float* %arrayidx33.7.14, align 4
  %mul34.7.14 = fmul float %1103, %1105
  %add35.7.14 = fadd float %partial_sum.12.7.14, %mul34.7.14
  br label %for.inc.7.14

for.inc.7.14:                                     ; preds = %if.end26.7.14, %for.body16.7.14
  %partial_sum.2.7.14 = phi float [ %add35.7.14, %if.end26.7.14 ], [ %partial_sum.12.7.14, %for.body16.7.14 ]
  %indvars.iv.next.7.14 = add nuw nsw i64 %indvars.iv.7.14, 1
  %lftr.wideiv.7.14 = trunc i64 %indvars.iv.next.7.14 to i32
  %exitcond.7.14 = icmp eq i32 %lftr.wideiv.7.14, %kern_width
  br i1 %exitcond.7.14, label %for.inc36.7.14.loopexit, label %for.body16.7.14, !llvm.loop !1

for.inc36.7.14.loopexit:                          ; preds = %for.inc.7.14
  %partial_sum.2.7.14.lcssa = phi float [ %partial_sum.2.7.14, %for.inc.7.14 ]
  br label %for.inc36.7.14

for.inc36.7.14:                                   ; preds = %for.inc36.7.14.loopexit, %for.body10.7.14
  %partial_sum.3.7.14 = phi float [ %partial_sum.05.7.14, %for.body10.7.14 ], [ %partial_sum.2.7.14.lcssa, %for.inc36.7.14.loopexit ]
  %inc37.7.14 = add nuw nsw i32 %ki.06.7.14, 1
  %exitcond19.7.14 = icmp eq i32 %inc37.7.14, %kern_height
  br i1 %exitcond19.7.14, label %for.end38.7.14.loopexit, label %for.body10.7.14, !llvm.loop !3

for.end38.7.14.loopexit:                          ; preds = %for.inc36.7.14
  %partial_sum.3.7.14.lcssa = phi float [ %partial_sum.3.7.14, %for.inc36.7.14 ]
  br label %for.end38.7.14

for.end38.7.14:                                   ; preds = %for.end38.7.14.loopexit, %for.inc53.6.14
  %partial_sum.0.lcssa.7.14 = phi float [ 0.000000e+00, %for.inc53.6.14 ], [ %partial_sum.3.7.14.lcssa, %for.end38.7.14.loopexit ]
  br i1 %tobool39, label %if.else.7.14, label %if.then40.7.14

if.then40.7.14:                                   ; preds = %for.end38.7.14
  %cmp41.7.14 = fcmp olt float %partial_sum.0.lcssa.7.14, 0.000000e+00
  %sub42.7.14 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.14
  %cond.7.14 = select i1 %cmp41.7.14, float %sub42.7.14, float %partial_sum.0.lcssa.7.14
  %conv.7.14 = fptoui float %cond.7.14 to i8
  %conv43.7.14 = uitofp i8 %conv.7.14 to float
  %1106 = add nsw i64 %indvars.iv.next21.6.14, %1044
  %arrayidx47.7.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1106
  store float %conv43.7.14, float* %arrayidx47.7.14, align 4
  br label %for.inc53.7.14

if.else.7.14:                                     ; preds = %for.end38.7.14
  %1107 = add nsw i64 %indvars.iv.next21.6.14, %1043
  %arrayidx51.7.14 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1107
  store float %partial_sum.0.lcssa.7.14, float* %arrayidx51.7.14, align 4
  br label %for.inc53.7.14

for.inc53.7.14:                                   ; preds = %if.else.7.14, %if.then40.7.14
  %inc54.7.14 = add nsw i32 %in_j.011.14, 8
  %indvars.iv.next21.7.14 = add nsw i64 %indvars.iv20.14, 8
  %lftr.wideiv24.7.14 = trunc i64 %indvars.iv.next21.7.14 to i32
  %exitcond25.7.14 = icmp eq i32 %lftr.wideiv24.7.14, %img_width
  br i1 %exitcond25.7.14, label %for.inc57.14.loopexit, label %for.cond8.preheader.14, !llvm.loop !5

for.inc57.14.loopexit:                            ; preds = %for.inc53.7.14
  br label %for.inc57.14

for.inc57.14:                                     ; preds = %for.inc57.14.loopexit, %for.cond8.preheader.lr.ph.split.14
  %inc58.14 = add nsw i32 %in_i.015, 15
  %indvars.iv.next27.14 = add nsw i64 %indvars.iv26, 15
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.15

for.cond8.preheader.lr.ph.15:                     ; preds = %for.inc57.14
  %1108 = trunc i64 %indvars.iv.next27.14 to i32
  %mul48.15 = shl i32 %1108, 7
  %1109 = trunc i64 %indvars.iv.next27.14 to i32
  %mul44.15 = shl i32 %1109, 7
  %1110 = sext i32 %mul48.15 to i64
  %1111 = sext i32 %mul44.15 to i64
  br i1 %lcmp.mod.15, label %for.cond8.preheader.lr.ph.split.15, label %for.cond8.preheader.prol.15.preheader

for.cond8.preheader.prol.15.preheader:            ; preds = %for.cond8.preheader.lr.ph.15
  br label %for.cond8.preheader.prol.15

for.cond8.preheader.prol.15:                      ; preds = %for.cond8.preheader.prol.15.preheader, %for.inc53.prol.15
  %indvars.iv20.prol.15 = phi i64 [ %indvars.iv.next21.prol.15, %for.inc53.prol.15 ], [ 0, %for.cond8.preheader.prol.15.preheader ]
  %in_j.011.prol.15 = phi i32 [ %inc54.prol.15, %for.inc53.prol.15 ], [ %sub4, %for.cond8.preheader.prol.15.preheader ]
  %prol.iter.15 = phi i32 [ %prol.iter.sub.15, %for.inc53.prol.15 ], [ %xtraiter.15, %for.cond8.preheader.prol.15.preheader ]
  br i1 %cmp94, label %for.end38.prol.15, label %for.body10.prol.15.preheader

for.body10.prol.15.preheader:                     ; preds = %for.cond8.preheader.prol.15
  br label %for.body10.prol.15

for.body10.prol.15:                               ; preds = %for.body10.prol.15.preheader, %for.inc36.prol.15
  %ki.06.prol.15 = phi i32 [ %inc37.prol.15, %for.inc36.prol.15 ], [ 0, %for.body10.prol.15.preheader ]
  %partial_sum.05.prol.15 = phi float [ %partial_sum.3.prol.15, %for.inc36.prol.15 ], [ 0.000000e+00, %for.body10.prol.15.preheader ]
  %add.prol.15 = add nsw i32 %ki.06.prol.15, %inc58.14
  %notlhs.prol.15 = icmp slt i32 %add.prol.15, 0
  %notrhs.prol.15 = icmp uge i32 %add.prol.15, %img_height
  %.not.prol.15 = or i1 %notrhs.prol.15, %notlhs.prol.15
  %brmerge.prol.15 = or i1 %.not.prol.15, %cmp151.not.prol.15
  br i1 %brmerge.prol.15, label %for.inc36.prol.15, label %for.body16.lr.ph.prol.15

for.body16.lr.ph.prol.15:                         ; preds = %for.body10.prol.15
  %mul.prol.15 = shl i32 %add.prol.15, 7
  %mul30.prol.15 = mul i32 %ki.06.prol.15, %kern_width
  br label %for.body16.prol.15

for.body16.prol.15:                               ; preds = %for.inc.prol.15, %for.body16.lr.ph.prol.15
  %indvars.iv.prol.15 = phi i64 [ 0, %for.body16.lr.ph.prol.15 ], [ %indvars.iv.next.prol.15, %for.inc.prol.15 ]
  %partial_sum.12.prol.15 = phi float [ %partial_sum.05.prol.15, %for.body16.lr.ph.prol.15 ], [ %partial_sum.2.prol.15, %for.inc.prol.15 ]
  %1112 = trunc i64 %indvars.iv.prol.15 to i32
  %add17.prol.15 = add nsw i32 %1112, %in_j.011.prol.15
  %cmp18.prol.15 = icmp sgt i32 %add17.prol.15, -1
  %cmp21.prol.15 = icmp ult i32 %add17.prol.15, %img_width
  %1113 = and i1 %cmp18.prol.15, %cmp21.prol.15
  br i1 %1113, label %if.end26.prol.15, label %for.inc.prol.15

if.end26.prol.15:                                 ; preds = %for.body16.prol.15
  %add29.prol.15 = add nsw i32 %add17.prol.15, %mul.prol.15
  %idxprom.prol.15 = sext i32 %add29.prol.15 to i64
  %arrayidx.prol.15 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.15
  %1114 = load float, float* %arrayidx.prol.15, align 4
  %1115 = trunc i64 %indvars.iv.prol.15 to i32
  %add31.prol.15 = add i32 %1115, %mul30.prol.15
  %idxprom32.prol.15 = zext i32 %add31.prol.15 to i64
  %arrayidx33.prol.15 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.15
  %1116 = load float, float* %arrayidx33.prol.15, align 4
  %mul34.prol.15 = fmul float %1114, %1116
  %add35.prol.15 = fadd float %partial_sum.12.prol.15, %mul34.prol.15
  br label %for.inc.prol.15

for.inc.prol.15:                                  ; preds = %if.end26.prol.15, %for.body16.prol.15
  %partial_sum.2.prol.15 = phi float [ %add35.prol.15, %if.end26.prol.15 ], [ %partial_sum.12.prol.15, %for.body16.prol.15 ]
  %indvars.iv.next.prol.15 = add nuw nsw i64 %indvars.iv.prol.15, 1
  %lftr.wideiv.prol.15 = trunc i64 %indvars.iv.next.prol.15 to i32
  %exitcond.prol.15 = icmp eq i32 %lftr.wideiv.prol.15, %kern_width
  br i1 %exitcond.prol.15, label %for.inc36.prol.15.loopexit, label %for.body16.prol.15, !llvm.loop !1

for.inc36.prol.15.loopexit:                       ; preds = %for.inc.prol.15
  %partial_sum.2.prol.15.lcssa = phi float [ %partial_sum.2.prol.15, %for.inc.prol.15 ]
  br label %for.inc36.prol.15

for.inc36.prol.15:                                ; preds = %for.inc36.prol.15.loopexit, %for.body10.prol.15
  %partial_sum.3.prol.15 = phi float [ %partial_sum.05.prol.15, %for.body10.prol.15 ], [ %partial_sum.2.prol.15.lcssa, %for.inc36.prol.15.loopexit ]
  %inc37.prol.15 = add nuw nsw i32 %ki.06.prol.15, 1
  %exitcond19.prol.15 = icmp eq i32 %inc37.prol.15, %kern_height
  br i1 %exitcond19.prol.15, label %for.end38.prol.15.loopexit, label %for.body10.prol.15, !llvm.loop !3

for.end38.prol.15.loopexit:                       ; preds = %for.inc36.prol.15
  %partial_sum.3.prol.15.lcssa = phi float [ %partial_sum.3.prol.15, %for.inc36.prol.15 ]
  br label %for.end38.prol.15

for.end38.prol.15:                                ; preds = %for.end38.prol.15.loopexit, %for.cond8.preheader.prol.15
  %partial_sum.0.lcssa.prol.15 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.15 ], [ %partial_sum.3.prol.15.lcssa, %for.end38.prol.15.loopexit ]
  br i1 %tobool39, label %if.else.prol.15, label %if.then40.prol.15

if.then40.prol.15:                                ; preds = %for.end38.prol.15
  %cmp41.prol.15 = fcmp olt float %partial_sum.0.lcssa.prol.15, 0.000000e+00
  %sub42.prol.15 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.15
  %cond.prol.15 = select i1 %cmp41.prol.15, float %sub42.prol.15, float %partial_sum.0.lcssa.prol.15
  %conv.prol.15 = fptoui float %cond.prol.15 to i8
  %conv43.prol.15 = uitofp i8 %conv.prol.15 to float
  %1117 = add nsw i64 %indvars.iv20.prol.15, %1111
  %arrayidx47.prol.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1117
  store float %conv43.prol.15, float* %arrayidx47.prol.15, align 4
  br label %for.inc53.prol.15

if.else.prol.15:                                  ; preds = %for.end38.prol.15
  %1118 = add nsw i64 %indvars.iv20.prol.15, %1110
  %arrayidx51.prol.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1118
  store float %partial_sum.0.lcssa.prol.15, float* %arrayidx51.prol.15, align 4
  br label %for.inc53.prol.15

for.inc53.prol.15:                                ; preds = %if.else.prol.15, %if.then40.prol.15
  %inc54.prol.15 = add nsw i32 %in_j.011.prol.15, 1
  %indvars.iv.next21.prol.15 = add nuw nsw i64 %indvars.iv20.prol.15, 1
  %prol.iter.sub.15 = add i32 %prol.iter.15, -1
  %prol.iter.cmp.15 = icmp eq i32 %prol.iter.sub.15, 0
  br i1 %prol.iter.cmp.15, label %for.cond8.preheader.lr.ph.split.15.loopexit, label %for.cond8.preheader.prol.15, !llvm.loop !4

for.cond8.preheader.lr.ph.split.15.loopexit:      ; preds = %for.inc53.prol.15
  %indvars.iv.next21.prol.15.lcssa = phi i64 [ %indvars.iv.next21.prol.15, %for.inc53.prol.15 ]
  %inc54.prol.15.lcssa = phi i32 [ %inc54.prol.15, %for.inc53.prol.15 ]
  br label %for.cond8.preheader.lr.ph.split.15

for.cond8.preheader.lr.ph.split.15:               ; preds = %for.cond8.preheader.lr.ph.split.15.loopexit, %for.cond8.preheader.lr.ph.15
  %indvars.iv20.unr.15 = phi i64 [ 0, %for.cond8.preheader.lr.ph.15 ], [ %indvars.iv.next21.prol.15.lcssa, %for.cond8.preheader.lr.ph.split.15.loopexit ]
  %in_j.011.unr.15 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.15 ], [ %inc54.prol.15.lcssa, %for.cond8.preheader.lr.ph.split.15.loopexit ]
  br i1 %86, label %for.inc57.15, label %for.cond8.preheader.15.preheader

for.cond8.preheader.15.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.15
  br label %for.cond8.preheader.15

for.cond8.preheader.15:                           ; preds = %for.cond8.preheader.15.preheader, %for.inc53.7.15
  %indvars.iv20.15 = phi i64 [ %indvars.iv.next21.7.15, %for.inc53.7.15 ], [ %indvars.iv20.unr.15, %for.cond8.preheader.15.preheader ]
  %in_j.011.15 = phi i32 [ %inc54.7.15, %for.inc53.7.15 ], [ %in_j.011.unr.15, %for.cond8.preheader.15.preheader ]
  br i1 %cmp94, label %for.end38.15, label %for.body10.15.preheader

for.body10.15.preheader:                          ; preds = %for.cond8.preheader.15
  br label %for.body10.15

for.body10.15:                                    ; preds = %for.body10.15.preheader, %for.inc36.15
  %ki.06.15 = phi i32 [ %inc37.15, %for.inc36.15 ], [ 0, %for.body10.15.preheader ]
  %partial_sum.05.15 = phi float [ %partial_sum.3.15, %for.inc36.15 ], [ 0.000000e+00, %for.body10.15.preheader ]
  %add.15 = add nsw i32 %ki.06.15, %inc58.14
  %notlhs.15 = icmp slt i32 %add.15, 0
  %notrhs.15 = icmp uge i32 %add.15, %img_height
  %.not.15 = or i1 %notrhs.15, %notlhs.15
  %brmerge.15 = or i1 %.not.15, %cmp151.not.15
  br i1 %brmerge.15, label %for.inc36.15, label %for.body16.lr.ph.15

for.body16.lr.ph.15:                              ; preds = %for.body10.15
  %mul.15 = shl i32 %add.15, 7
  %mul30.15 = mul i32 %ki.06.15, %kern_width
  br label %for.body16.15

for.body16.15:                                    ; preds = %for.inc.15, %for.body16.lr.ph.15
  %indvars.iv.15 = phi i64 [ 0, %for.body16.lr.ph.15 ], [ %indvars.iv.next.15, %for.inc.15 ]
  %partial_sum.12.15 = phi float [ %partial_sum.05.15, %for.body16.lr.ph.15 ], [ %partial_sum.2.15, %for.inc.15 ]
  %1119 = trunc i64 %indvars.iv.15 to i32
  %add17.15 = add nsw i32 %1119, %in_j.011.15
  %cmp18.15 = icmp sgt i32 %add17.15, -1
  %cmp21.15 = icmp ult i32 %add17.15, %img_width
  %1120 = and i1 %cmp18.15, %cmp21.15
  br i1 %1120, label %if.end26.15, label %for.inc.15

if.end26.15:                                      ; preds = %for.body16.15
  %add29.15 = add nsw i32 %add17.15, %mul.15
  %idxprom.15 = sext i32 %add29.15 to i64
  %arrayidx.15 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.15
  %1121 = load float, float* %arrayidx.15, align 4
  %1122 = trunc i64 %indvars.iv.15 to i32
  %add31.15 = add i32 %1122, %mul30.15
  %idxprom32.15 = zext i32 %add31.15 to i64
  %arrayidx33.15 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.15
  %1123 = load float, float* %arrayidx33.15, align 4
  %mul34.15 = fmul float %1121, %1123
  %add35.15 = fadd float %partial_sum.12.15, %mul34.15
  br label %for.inc.15

for.inc.15:                                       ; preds = %if.end26.15, %for.body16.15
  %partial_sum.2.15 = phi float [ %add35.15, %if.end26.15 ], [ %partial_sum.12.15, %for.body16.15 ]
  %indvars.iv.next.15 = add nuw nsw i64 %indvars.iv.15, 1
  %lftr.wideiv.15 = trunc i64 %indvars.iv.next.15 to i32
  %exitcond.15 = icmp eq i32 %lftr.wideiv.15, %kern_width
  br i1 %exitcond.15, label %for.inc36.15.loopexit, label %for.body16.15, !llvm.loop !1

for.inc36.15.loopexit:                            ; preds = %for.inc.15
  %partial_sum.2.15.lcssa = phi float [ %partial_sum.2.15, %for.inc.15 ]
  br label %for.inc36.15

for.inc36.15:                                     ; preds = %for.inc36.15.loopexit, %for.body10.15
  %partial_sum.3.15 = phi float [ %partial_sum.05.15, %for.body10.15 ], [ %partial_sum.2.15.lcssa, %for.inc36.15.loopexit ]
  %inc37.15 = add nuw nsw i32 %ki.06.15, 1
  %exitcond19.15 = icmp eq i32 %inc37.15, %kern_height
  br i1 %exitcond19.15, label %for.end38.15.loopexit, label %for.body10.15, !llvm.loop !3

for.end38.15.loopexit:                            ; preds = %for.inc36.15
  %partial_sum.3.15.lcssa = phi float [ %partial_sum.3.15, %for.inc36.15 ]
  br label %for.end38.15

for.end38.15:                                     ; preds = %for.end38.15.loopexit, %for.cond8.preheader.15
  %partial_sum.0.lcssa.15 = phi float [ 0.000000e+00, %for.cond8.preheader.15 ], [ %partial_sum.3.15.lcssa, %for.end38.15.loopexit ]
  br i1 %tobool39, label %if.else.15, label %if.then40.15

if.then40.15:                                     ; preds = %for.end38.15
  %cmp41.15 = fcmp olt float %partial_sum.0.lcssa.15, 0.000000e+00
  %sub42.15 = fsub float -0.000000e+00, %partial_sum.0.lcssa.15
  %cond.15 = select i1 %cmp41.15, float %sub42.15, float %partial_sum.0.lcssa.15
  %conv.15 = fptoui float %cond.15 to i8
  %conv43.15 = uitofp i8 %conv.15 to float
  %1124 = add nsw i64 %indvars.iv20.15, %1111
  %arrayidx47.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1124
  store float %conv43.15, float* %arrayidx47.15, align 4
  br label %for.inc53.15

if.else.15:                                       ; preds = %for.end38.15
  %1125 = add nsw i64 %indvars.iv20.15, %1110
  %arrayidx51.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1125
  store float %partial_sum.0.lcssa.15, float* %arrayidx51.15, align 4
  br label %for.inc53.15

for.inc53.15:                                     ; preds = %if.else.15, %if.then40.15
  %inc54.15 = add nsw i32 %in_j.011.15, 1
  %indvars.iv.next21.15 = add nuw nsw i64 %indvars.iv20.15, 1
  br i1 %cmp94, label %for.end38.1.15, label %for.body10.1.15.preheader

for.body10.1.15.preheader:                        ; preds = %for.inc53.15
  br label %for.body10.1.15

for.body10.1.15:                                  ; preds = %for.body10.1.15.preheader, %for.inc36.1.15
  %ki.06.1.15 = phi i32 [ %inc37.1.15, %for.inc36.1.15 ], [ 0, %for.body10.1.15.preheader ]
  %partial_sum.05.1.15 = phi float [ %partial_sum.3.1.15, %for.inc36.1.15 ], [ 0.000000e+00, %for.body10.1.15.preheader ]
  %add.1.15 = add nsw i32 %ki.06.1.15, %inc58.14
  %notlhs.1.15 = icmp slt i32 %add.1.15, 0
  %notrhs.1.15 = icmp uge i32 %add.1.15, %img_height
  %.not.1.15 = or i1 %notrhs.1.15, %notlhs.1.15
  %brmerge.1.15 = or i1 %.not.1.15, %cmp151.not.1.15
  br i1 %brmerge.1.15, label %for.inc36.1.15, label %for.body16.lr.ph.1.15

for.body16.lr.ph.1.15:                            ; preds = %for.body10.1.15
  %mul.1.15 = shl i32 %add.1.15, 7
  %mul30.1.15 = mul i32 %ki.06.1.15, %kern_width
  br label %for.body16.1.15

for.body16.1.15:                                  ; preds = %for.inc.1.15, %for.body16.lr.ph.1.15
  %indvars.iv.1.15 = phi i64 [ 0, %for.body16.lr.ph.1.15 ], [ %indvars.iv.next.1.15, %for.inc.1.15 ]
  %partial_sum.12.1.15 = phi float [ %partial_sum.05.1.15, %for.body16.lr.ph.1.15 ], [ %partial_sum.2.1.15, %for.inc.1.15 ]
  %1126 = trunc i64 %indvars.iv.1.15 to i32
  %add17.1.15 = add nsw i32 %1126, %inc54.15
  %cmp18.1.15 = icmp sgt i32 %add17.1.15, -1
  %cmp21.1.15 = icmp ult i32 %add17.1.15, %img_width
  %1127 = and i1 %cmp18.1.15, %cmp21.1.15
  br i1 %1127, label %if.end26.1.15, label %for.inc.1.15

if.end26.1.15:                                    ; preds = %for.body16.1.15
  %add29.1.15 = add nsw i32 %add17.1.15, %mul.1.15
  %idxprom.1.15 = sext i32 %add29.1.15 to i64
  %arrayidx.1.15 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.15
  %1128 = load float, float* %arrayidx.1.15, align 4
  %1129 = trunc i64 %indvars.iv.1.15 to i32
  %add31.1.15 = add i32 %1129, %mul30.1.15
  %idxprom32.1.15 = zext i32 %add31.1.15 to i64
  %arrayidx33.1.15 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.15
  %1130 = load float, float* %arrayidx33.1.15, align 4
  %mul34.1.15 = fmul float %1128, %1130
  %add35.1.15 = fadd float %partial_sum.12.1.15, %mul34.1.15
  br label %for.inc.1.15

for.inc.1.15:                                     ; preds = %if.end26.1.15, %for.body16.1.15
  %partial_sum.2.1.15 = phi float [ %add35.1.15, %if.end26.1.15 ], [ %partial_sum.12.1.15, %for.body16.1.15 ]
  %indvars.iv.next.1.15 = add nuw nsw i64 %indvars.iv.1.15, 1
  %lftr.wideiv.1.15 = trunc i64 %indvars.iv.next.1.15 to i32
  %exitcond.1.15 = icmp eq i32 %lftr.wideiv.1.15, %kern_width
  br i1 %exitcond.1.15, label %for.inc36.1.15.loopexit, label %for.body16.1.15, !llvm.loop !1

for.inc36.1.15.loopexit:                          ; preds = %for.inc.1.15
  %partial_sum.2.1.15.lcssa = phi float [ %partial_sum.2.1.15, %for.inc.1.15 ]
  br label %for.inc36.1.15

for.inc36.1.15:                                   ; preds = %for.inc36.1.15.loopexit, %for.body10.1.15
  %partial_sum.3.1.15 = phi float [ %partial_sum.05.1.15, %for.body10.1.15 ], [ %partial_sum.2.1.15.lcssa, %for.inc36.1.15.loopexit ]
  %inc37.1.15 = add nuw nsw i32 %ki.06.1.15, 1
  %exitcond19.1.15 = icmp eq i32 %inc37.1.15, %kern_height
  br i1 %exitcond19.1.15, label %for.end38.1.15.loopexit, label %for.body10.1.15, !llvm.loop !3

for.end38.1.15.loopexit:                          ; preds = %for.inc36.1.15
  %partial_sum.3.1.15.lcssa = phi float [ %partial_sum.3.1.15, %for.inc36.1.15 ]
  br label %for.end38.1.15

for.end38.1.15:                                   ; preds = %for.end38.1.15.loopexit, %for.inc53.15
  %partial_sum.0.lcssa.1.15 = phi float [ 0.000000e+00, %for.inc53.15 ], [ %partial_sum.3.1.15.lcssa, %for.end38.1.15.loopexit ]
  br i1 %tobool39, label %if.else.1.15, label %if.then40.1.15

if.then40.1.15:                                   ; preds = %for.end38.1.15
  %cmp41.1.15 = fcmp olt float %partial_sum.0.lcssa.1.15, 0.000000e+00
  %sub42.1.15 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.15
  %cond.1.15 = select i1 %cmp41.1.15, float %sub42.1.15, float %partial_sum.0.lcssa.1.15
  %conv.1.15 = fptoui float %cond.1.15 to i8
  %conv43.1.15 = uitofp i8 %conv.1.15 to float
  %1131 = add nsw i64 %indvars.iv.next21.15, %1111
  %arrayidx47.1.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1131
  store float %conv43.1.15, float* %arrayidx47.1.15, align 4
  br label %for.inc53.1.15

if.else.1.15:                                     ; preds = %for.end38.1.15
  %1132 = add nsw i64 %indvars.iv.next21.15, %1110
  %arrayidx51.1.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1132
  store float %partial_sum.0.lcssa.1.15, float* %arrayidx51.1.15, align 4
  br label %for.inc53.1.15

for.inc53.1.15:                                   ; preds = %if.else.1.15, %if.then40.1.15
  %inc54.1.15 = add nsw i32 %in_j.011.15, 2
  %indvars.iv.next21.1.15 = add nsw i64 %indvars.iv20.15, 2
  br i1 %cmp94, label %for.end38.2.15, label %for.body10.2.15.preheader

for.body10.2.15.preheader:                        ; preds = %for.inc53.1.15
  br label %for.body10.2.15

for.body10.2.15:                                  ; preds = %for.body10.2.15.preheader, %for.inc36.2.15
  %ki.06.2.15 = phi i32 [ %inc37.2.15, %for.inc36.2.15 ], [ 0, %for.body10.2.15.preheader ]
  %partial_sum.05.2.15 = phi float [ %partial_sum.3.2.15, %for.inc36.2.15 ], [ 0.000000e+00, %for.body10.2.15.preheader ]
  %add.2.15 = add nsw i32 %ki.06.2.15, %inc58.14
  %notlhs.2.15 = icmp slt i32 %add.2.15, 0
  %notrhs.2.15 = icmp uge i32 %add.2.15, %img_height
  %.not.2.15 = or i1 %notrhs.2.15, %notlhs.2.15
  %brmerge.2.15 = or i1 %.not.2.15, %cmp151.not.2.15
  br i1 %brmerge.2.15, label %for.inc36.2.15, label %for.body16.lr.ph.2.15

for.body16.lr.ph.2.15:                            ; preds = %for.body10.2.15
  %mul.2.15 = shl i32 %add.2.15, 7
  %mul30.2.15 = mul i32 %ki.06.2.15, %kern_width
  br label %for.body16.2.15

for.body16.2.15:                                  ; preds = %for.inc.2.15, %for.body16.lr.ph.2.15
  %indvars.iv.2.15 = phi i64 [ 0, %for.body16.lr.ph.2.15 ], [ %indvars.iv.next.2.15, %for.inc.2.15 ]
  %partial_sum.12.2.15 = phi float [ %partial_sum.05.2.15, %for.body16.lr.ph.2.15 ], [ %partial_sum.2.2.15, %for.inc.2.15 ]
  %1133 = trunc i64 %indvars.iv.2.15 to i32
  %add17.2.15 = add nsw i32 %1133, %inc54.1.15
  %cmp18.2.15 = icmp sgt i32 %add17.2.15, -1
  %cmp21.2.15 = icmp ult i32 %add17.2.15, %img_width
  %1134 = and i1 %cmp18.2.15, %cmp21.2.15
  br i1 %1134, label %if.end26.2.15, label %for.inc.2.15

if.end26.2.15:                                    ; preds = %for.body16.2.15
  %add29.2.15 = add nsw i32 %add17.2.15, %mul.2.15
  %idxprom.2.15 = sext i32 %add29.2.15 to i64
  %arrayidx.2.15 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.15
  %1135 = load float, float* %arrayidx.2.15, align 4
  %1136 = trunc i64 %indvars.iv.2.15 to i32
  %add31.2.15 = add i32 %1136, %mul30.2.15
  %idxprom32.2.15 = zext i32 %add31.2.15 to i64
  %arrayidx33.2.15 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.15
  %1137 = load float, float* %arrayidx33.2.15, align 4
  %mul34.2.15 = fmul float %1135, %1137
  %add35.2.15 = fadd float %partial_sum.12.2.15, %mul34.2.15
  br label %for.inc.2.15

for.inc.2.15:                                     ; preds = %if.end26.2.15, %for.body16.2.15
  %partial_sum.2.2.15 = phi float [ %add35.2.15, %if.end26.2.15 ], [ %partial_sum.12.2.15, %for.body16.2.15 ]
  %indvars.iv.next.2.15 = add nuw nsw i64 %indvars.iv.2.15, 1
  %lftr.wideiv.2.15 = trunc i64 %indvars.iv.next.2.15 to i32
  %exitcond.2.15 = icmp eq i32 %lftr.wideiv.2.15, %kern_width
  br i1 %exitcond.2.15, label %for.inc36.2.15.loopexit, label %for.body16.2.15, !llvm.loop !1

for.inc36.2.15.loopexit:                          ; preds = %for.inc.2.15
  %partial_sum.2.2.15.lcssa = phi float [ %partial_sum.2.2.15, %for.inc.2.15 ]
  br label %for.inc36.2.15

for.inc36.2.15:                                   ; preds = %for.inc36.2.15.loopexit, %for.body10.2.15
  %partial_sum.3.2.15 = phi float [ %partial_sum.05.2.15, %for.body10.2.15 ], [ %partial_sum.2.2.15.lcssa, %for.inc36.2.15.loopexit ]
  %inc37.2.15 = add nuw nsw i32 %ki.06.2.15, 1
  %exitcond19.2.15 = icmp eq i32 %inc37.2.15, %kern_height
  br i1 %exitcond19.2.15, label %for.end38.2.15.loopexit, label %for.body10.2.15, !llvm.loop !3

for.end38.2.15.loopexit:                          ; preds = %for.inc36.2.15
  %partial_sum.3.2.15.lcssa = phi float [ %partial_sum.3.2.15, %for.inc36.2.15 ]
  br label %for.end38.2.15

for.end38.2.15:                                   ; preds = %for.end38.2.15.loopexit, %for.inc53.1.15
  %partial_sum.0.lcssa.2.15 = phi float [ 0.000000e+00, %for.inc53.1.15 ], [ %partial_sum.3.2.15.lcssa, %for.end38.2.15.loopexit ]
  br i1 %tobool39, label %if.else.2.15, label %if.then40.2.15

if.then40.2.15:                                   ; preds = %for.end38.2.15
  %cmp41.2.15 = fcmp olt float %partial_sum.0.lcssa.2.15, 0.000000e+00
  %sub42.2.15 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.15
  %cond.2.15 = select i1 %cmp41.2.15, float %sub42.2.15, float %partial_sum.0.lcssa.2.15
  %conv.2.15 = fptoui float %cond.2.15 to i8
  %conv43.2.15 = uitofp i8 %conv.2.15 to float
  %1138 = add nsw i64 %indvars.iv.next21.1.15, %1111
  %arrayidx47.2.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1138
  store float %conv43.2.15, float* %arrayidx47.2.15, align 4
  br label %for.inc53.2.15

if.else.2.15:                                     ; preds = %for.end38.2.15
  %1139 = add nsw i64 %indvars.iv.next21.1.15, %1110
  %arrayidx51.2.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1139
  store float %partial_sum.0.lcssa.2.15, float* %arrayidx51.2.15, align 4
  br label %for.inc53.2.15

for.inc53.2.15:                                   ; preds = %if.else.2.15, %if.then40.2.15
  %inc54.2.15 = add nsw i32 %in_j.011.15, 3
  %indvars.iv.next21.2.15 = add nsw i64 %indvars.iv20.15, 3
  br i1 %cmp94, label %for.end38.3.15, label %for.body10.3.15.preheader

for.body10.3.15.preheader:                        ; preds = %for.inc53.2.15
  br label %for.body10.3.15

for.body10.3.15:                                  ; preds = %for.body10.3.15.preheader, %for.inc36.3.15
  %ki.06.3.15 = phi i32 [ %inc37.3.15, %for.inc36.3.15 ], [ 0, %for.body10.3.15.preheader ]
  %partial_sum.05.3.15 = phi float [ %partial_sum.3.3.15, %for.inc36.3.15 ], [ 0.000000e+00, %for.body10.3.15.preheader ]
  %add.3.15 = add nsw i32 %ki.06.3.15, %inc58.14
  %notlhs.3.15 = icmp slt i32 %add.3.15, 0
  %notrhs.3.15 = icmp uge i32 %add.3.15, %img_height
  %.not.3.15 = or i1 %notrhs.3.15, %notlhs.3.15
  %brmerge.3.15 = or i1 %.not.3.15, %cmp151.not.3.15
  br i1 %brmerge.3.15, label %for.inc36.3.15, label %for.body16.lr.ph.3.15

for.body16.lr.ph.3.15:                            ; preds = %for.body10.3.15
  %mul.3.15 = shl i32 %add.3.15, 7
  %mul30.3.15 = mul i32 %ki.06.3.15, %kern_width
  br label %for.body16.3.15

for.body16.3.15:                                  ; preds = %for.inc.3.15, %for.body16.lr.ph.3.15
  %indvars.iv.3.15 = phi i64 [ 0, %for.body16.lr.ph.3.15 ], [ %indvars.iv.next.3.15, %for.inc.3.15 ]
  %partial_sum.12.3.15 = phi float [ %partial_sum.05.3.15, %for.body16.lr.ph.3.15 ], [ %partial_sum.2.3.15, %for.inc.3.15 ]
  %1140 = trunc i64 %indvars.iv.3.15 to i32
  %add17.3.15 = add nsw i32 %1140, %inc54.2.15
  %cmp18.3.15 = icmp sgt i32 %add17.3.15, -1
  %cmp21.3.15 = icmp ult i32 %add17.3.15, %img_width
  %1141 = and i1 %cmp18.3.15, %cmp21.3.15
  br i1 %1141, label %if.end26.3.15, label %for.inc.3.15

if.end26.3.15:                                    ; preds = %for.body16.3.15
  %add29.3.15 = add nsw i32 %add17.3.15, %mul.3.15
  %idxprom.3.15 = sext i32 %add29.3.15 to i64
  %arrayidx.3.15 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.15
  %1142 = load float, float* %arrayidx.3.15, align 4
  %1143 = trunc i64 %indvars.iv.3.15 to i32
  %add31.3.15 = add i32 %1143, %mul30.3.15
  %idxprom32.3.15 = zext i32 %add31.3.15 to i64
  %arrayidx33.3.15 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.15
  %1144 = load float, float* %arrayidx33.3.15, align 4
  %mul34.3.15 = fmul float %1142, %1144
  %add35.3.15 = fadd float %partial_sum.12.3.15, %mul34.3.15
  br label %for.inc.3.15

for.inc.3.15:                                     ; preds = %if.end26.3.15, %for.body16.3.15
  %partial_sum.2.3.15 = phi float [ %add35.3.15, %if.end26.3.15 ], [ %partial_sum.12.3.15, %for.body16.3.15 ]
  %indvars.iv.next.3.15 = add nuw nsw i64 %indvars.iv.3.15, 1
  %lftr.wideiv.3.15 = trunc i64 %indvars.iv.next.3.15 to i32
  %exitcond.3.15 = icmp eq i32 %lftr.wideiv.3.15, %kern_width
  br i1 %exitcond.3.15, label %for.inc36.3.15.loopexit, label %for.body16.3.15, !llvm.loop !1

for.inc36.3.15.loopexit:                          ; preds = %for.inc.3.15
  %partial_sum.2.3.15.lcssa = phi float [ %partial_sum.2.3.15, %for.inc.3.15 ]
  br label %for.inc36.3.15

for.inc36.3.15:                                   ; preds = %for.inc36.3.15.loopexit, %for.body10.3.15
  %partial_sum.3.3.15 = phi float [ %partial_sum.05.3.15, %for.body10.3.15 ], [ %partial_sum.2.3.15.lcssa, %for.inc36.3.15.loopexit ]
  %inc37.3.15 = add nuw nsw i32 %ki.06.3.15, 1
  %exitcond19.3.15 = icmp eq i32 %inc37.3.15, %kern_height
  br i1 %exitcond19.3.15, label %for.end38.3.15.loopexit, label %for.body10.3.15, !llvm.loop !3

for.end38.3.15.loopexit:                          ; preds = %for.inc36.3.15
  %partial_sum.3.3.15.lcssa = phi float [ %partial_sum.3.3.15, %for.inc36.3.15 ]
  br label %for.end38.3.15

for.end38.3.15:                                   ; preds = %for.end38.3.15.loopexit, %for.inc53.2.15
  %partial_sum.0.lcssa.3.15 = phi float [ 0.000000e+00, %for.inc53.2.15 ], [ %partial_sum.3.3.15.lcssa, %for.end38.3.15.loopexit ]
  br i1 %tobool39, label %if.else.3.15, label %if.then40.3.15

if.then40.3.15:                                   ; preds = %for.end38.3.15
  %cmp41.3.15 = fcmp olt float %partial_sum.0.lcssa.3.15, 0.000000e+00
  %sub42.3.15 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.15
  %cond.3.15 = select i1 %cmp41.3.15, float %sub42.3.15, float %partial_sum.0.lcssa.3.15
  %conv.3.15 = fptoui float %cond.3.15 to i8
  %conv43.3.15 = uitofp i8 %conv.3.15 to float
  %1145 = add nsw i64 %indvars.iv.next21.2.15, %1111
  %arrayidx47.3.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1145
  store float %conv43.3.15, float* %arrayidx47.3.15, align 4
  br label %for.inc53.3.15

if.else.3.15:                                     ; preds = %for.end38.3.15
  %1146 = add nsw i64 %indvars.iv.next21.2.15, %1110
  %arrayidx51.3.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1146
  store float %partial_sum.0.lcssa.3.15, float* %arrayidx51.3.15, align 4
  br label %for.inc53.3.15

for.inc53.3.15:                                   ; preds = %if.else.3.15, %if.then40.3.15
  %inc54.3.15 = add nsw i32 %in_j.011.15, 4
  %indvars.iv.next21.3.15 = add nsw i64 %indvars.iv20.15, 4
  br i1 %cmp94, label %for.end38.4.15, label %for.body10.4.15.preheader

for.body10.4.15.preheader:                        ; preds = %for.inc53.3.15
  br label %for.body10.4.15

for.body10.4.15:                                  ; preds = %for.body10.4.15.preheader, %for.inc36.4.15
  %ki.06.4.15 = phi i32 [ %inc37.4.15, %for.inc36.4.15 ], [ 0, %for.body10.4.15.preheader ]
  %partial_sum.05.4.15 = phi float [ %partial_sum.3.4.15, %for.inc36.4.15 ], [ 0.000000e+00, %for.body10.4.15.preheader ]
  %add.4.15 = add nsw i32 %ki.06.4.15, %inc58.14
  %notlhs.4.15 = icmp slt i32 %add.4.15, 0
  %notrhs.4.15 = icmp uge i32 %add.4.15, %img_height
  %.not.4.15 = or i1 %notrhs.4.15, %notlhs.4.15
  %brmerge.4.15 = or i1 %.not.4.15, %cmp151.not.4.15
  br i1 %brmerge.4.15, label %for.inc36.4.15, label %for.body16.lr.ph.4.15

for.body16.lr.ph.4.15:                            ; preds = %for.body10.4.15
  %mul.4.15 = shl i32 %add.4.15, 7
  %mul30.4.15 = mul i32 %ki.06.4.15, %kern_width
  br label %for.body16.4.15

for.body16.4.15:                                  ; preds = %for.inc.4.15, %for.body16.lr.ph.4.15
  %indvars.iv.4.15 = phi i64 [ 0, %for.body16.lr.ph.4.15 ], [ %indvars.iv.next.4.15, %for.inc.4.15 ]
  %partial_sum.12.4.15 = phi float [ %partial_sum.05.4.15, %for.body16.lr.ph.4.15 ], [ %partial_sum.2.4.15, %for.inc.4.15 ]
  %1147 = trunc i64 %indvars.iv.4.15 to i32
  %add17.4.15 = add nsw i32 %1147, %inc54.3.15
  %cmp18.4.15 = icmp sgt i32 %add17.4.15, -1
  %cmp21.4.15 = icmp ult i32 %add17.4.15, %img_width
  %1148 = and i1 %cmp18.4.15, %cmp21.4.15
  br i1 %1148, label %if.end26.4.15, label %for.inc.4.15

if.end26.4.15:                                    ; preds = %for.body16.4.15
  %add29.4.15 = add nsw i32 %add17.4.15, %mul.4.15
  %idxprom.4.15 = sext i32 %add29.4.15 to i64
  %arrayidx.4.15 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.15
  %1149 = load float, float* %arrayidx.4.15, align 4
  %1150 = trunc i64 %indvars.iv.4.15 to i32
  %add31.4.15 = add i32 %1150, %mul30.4.15
  %idxprom32.4.15 = zext i32 %add31.4.15 to i64
  %arrayidx33.4.15 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.15
  %1151 = load float, float* %arrayidx33.4.15, align 4
  %mul34.4.15 = fmul float %1149, %1151
  %add35.4.15 = fadd float %partial_sum.12.4.15, %mul34.4.15
  br label %for.inc.4.15

for.inc.4.15:                                     ; preds = %if.end26.4.15, %for.body16.4.15
  %partial_sum.2.4.15 = phi float [ %add35.4.15, %if.end26.4.15 ], [ %partial_sum.12.4.15, %for.body16.4.15 ]
  %indvars.iv.next.4.15 = add nuw nsw i64 %indvars.iv.4.15, 1
  %lftr.wideiv.4.15 = trunc i64 %indvars.iv.next.4.15 to i32
  %exitcond.4.15 = icmp eq i32 %lftr.wideiv.4.15, %kern_width
  br i1 %exitcond.4.15, label %for.inc36.4.15.loopexit, label %for.body16.4.15, !llvm.loop !1

for.inc36.4.15.loopexit:                          ; preds = %for.inc.4.15
  %partial_sum.2.4.15.lcssa = phi float [ %partial_sum.2.4.15, %for.inc.4.15 ]
  br label %for.inc36.4.15

for.inc36.4.15:                                   ; preds = %for.inc36.4.15.loopexit, %for.body10.4.15
  %partial_sum.3.4.15 = phi float [ %partial_sum.05.4.15, %for.body10.4.15 ], [ %partial_sum.2.4.15.lcssa, %for.inc36.4.15.loopexit ]
  %inc37.4.15 = add nuw nsw i32 %ki.06.4.15, 1
  %exitcond19.4.15 = icmp eq i32 %inc37.4.15, %kern_height
  br i1 %exitcond19.4.15, label %for.end38.4.15.loopexit, label %for.body10.4.15, !llvm.loop !3

for.end38.4.15.loopexit:                          ; preds = %for.inc36.4.15
  %partial_sum.3.4.15.lcssa = phi float [ %partial_sum.3.4.15, %for.inc36.4.15 ]
  br label %for.end38.4.15

for.end38.4.15:                                   ; preds = %for.end38.4.15.loopexit, %for.inc53.3.15
  %partial_sum.0.lcssa.4.15 = phi float [ 0.000000e+00, %for.inc53.3.15 ], [ %partial_sum.3.4.15.lcssa, %for.end38.4.15.loopexit ]
  br i1 %tobool39, label %if.else.4.15, label %if.then40.4.15

if.then40.4.15:                                   ; preds = %for.end38.4.15
  %cmp41.4.15 = fcmp olt float %partial_sum.0.lcssa.4.15, 0.000000e+00
  %sub42.4.15 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.15
  %cond.4.15 = select i1 %cmp41.4.15, float %sub42.4.15, float %partial_sum.0.lcssa.4.15
  %conv.4.15 = fptoui float %cond.4.15 to i8
  %conv43.4.15 = uitofp i8 %conv.4.15 to float
  %1152 = add nsw i64 %indvars.iv.next21.3.15, %1111
  %arrayidx47.4.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1152
  store float %conv43.4.15, float* %arrayidx47.4.15, align 4
  br label %for.inc53.4.15

if.else.4.15:                                     ; preds = %for.end38.4.15
  %1153 = add nsw i64 %indvars.iv.next21.3.15, %1110
  %arrayidx51.4.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1153
  store float %partial_sum.0.lcssa.4.15, float* %arrayidx51.4.15, align 4
  br label %for.inc53.4.15

for.inc53.4.15:                                   ; preds = %if.else.4.15, %if.then40.4.15
  %inc54.4.15 = add nsw i32 %in_j.011.15, 5
  %indvars.iv.next21.4.15 = add nsw i64 %indvars.iv20.15, 5
  br i1 %cmp94, label %for.end38.5.15, label %for.body10.5.15.preheader

for.body10.5.15.preheader:                        ; preds = %for.inc53.4.15
  br label %for.body10.5.15

for.body10.5.15:                                  ; preds = %for.body10.5.15.preheader, %for.inc36.5.15
  %ki.06.5.15 = phi i32 [ %inc37.5.15, %for.inc36.5.15 ], [ 0, %for.body10.5.15.preheader ]
  %partial_sum.05.5.15 = phi float [ %partial_sum.3.5.15, %for.inc36.5.15 ], [ 0.000000e+00, %for.body10.5.15.preheader ]
  %add.5.15 = add nsw i32 %ki.06.5.15, %inc58.14
  %notlhs.5.15 = icmp slt i32 %add.5.15, 0
  %notrhs.5.15 = icmp uge i32 %add.5.15, %img_height
  %.not.5.15 = or i1 %notrhs.5.15, %notlhs.5.15
  %brmerge.5.15 = or i1 %.not.5.15, %cmp151.not.5.15
  br i1 %brmerge.5.15, label %for.inc36.5.15, label %for.body16.lr.ph.5.15

for.body16.lr.ph.5.15:                            ; preds = %for.body10.5.15
  %mul.5.15 = shl i32 %add.5.15, 7
  %mul30.5.15 = mul i32 %ki.06.5.15, %kern_width
  br label %for.body16.5.15

for.body16.5.15:                                  ; preds = %for.inc.5.15, %for.body16.lr.ph.5.15
  %indvars.iv.5.15 = phi i64 [ 0, %for.body16.lr.ph.5.15 ], [ %indvars.iv.next.5.15, %for.inc.5.15 ]
  %partial_sum.12.5.15 = phi float [ %partial_sum.05.5.15, %for.body16.lr.ph.5.15 ], [ %partial_sum.2.5.15, %for.inc.5.15 ]
  %1154 = trunc i64 %indvars.iv.5.15 to i32
  %add17.5.15 = add nsw i32 %1154, %inc54.4.15
  %cmp18.5.15 = icmp sgt i32 %add17.5.15, -1
  %cmp21.5.15 = icmp ult i32 %add17.5.15, %img_width
  %1155 = and i1 %cmp18.5.15, %cmp21.5.15
  br i1 %1155, label %if.end26.5.15, label %for.inc.5.15

if.end26.5.15:                                    ; preds = %for.body16.5.15
  %add29.5.15 = add nsw i32 %add17.5.15, %mul.5.15
  %idxprom.5.15 = sext i32 %add29.5.15 to i64
  %arrayidx.5.15 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.15
  %1156 = load float, float* %arrayidx.5.15, align 4
  %1157 = trunc i64 %indvars.iv.5.15 to i32
  %add31.5.15 = add i32 %1157, %mul30.5.15
  %idxprom32.5.15 = zext i32 %add31.5.15 to i64
  %arrayidx33.5.15 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.15
  %1158 = load float, float* %arrayidx33.5.15, align 4
  %mul34.5.15 = fmul float %1156, %1158
  %add35.5.15 = fadd float %partial_sum.12.5.15, %mul34.5.15
  br label %for.inc.5.15

for.inc.5.15:                                     ; preds = %if.end26.5.15, %for.body16.5.15
  %partial_sum.2.5.15 = phi float [ %add35.5.15, %if.end26.5.15 ], [ %partial_sum.12.5.15, %for.body16.5.15 ]
  %indvars.iv.next.5.15 = add nuw nsw i64 %indvars.iv.5.15, 1
  %lftr.wideiv.5.15 = trunc i64 %indvars.iv.next.5.15 to i32
  %exitcond.5.15 = icmp eq i32 %lftr.wideiv.5.15, %kern_width
  br i1 %exitcond.5.15, label %for.inc36.5.15.loopexit, label %for.body16.5.15, !llvm.loop !1

for.inc36.5.15.loopexit:                          ; preds = %for.inc.5.15
  %partial_sum.2.5.15.lcssa = phi float [ %partial_sum.2.5.15, %for.inc.5.15 ]
  br label %for.inc36.5.15

for.inc36.5.15:                                   ; preds = %for.inc36.5.15.loopexit, %for.body10.5.15
  %partial_sum.3.5.15 = phi float [ %partial_sum.05.5.15, %for.body10.5.15 ], [ %partial_sum.2.5.15.lcssa, %for.inc36.5.15.loopexit ]
  %inc37.5.15 = add nuw nsw i32 %ki.06.5.15, 1
  %exitcond19.5.15 = icmp eq i32 %inc37.5.15, %kern_height
  br i1 %exitcond19.5.15, label %for.end38.5.15.loopexit, label %for.body10.5.15, !llvm.loop !3

for.end38.5.15.loopexit:                          ; preds = %for.inc36.5.15
  %partial_sum.3.5.15.lcssa = phi float [ %partial_sum.3.5.15, %for.inc36.5.15 ]
  br label %for.end38.5.15

for.end38.5.15:                                   ; preds = %for.end38.5.15.loopexit, %for.inc53.4.15
  %partial_sum.0.lcssa.5.15 = phi float [ 0.000000e+00, %for.inc53.4.15 ], [ %partial_sum.3.5.15.lcssa, %for.end38.5.15.loopexit ]
  br i1 %tobool39, label %if.else.5.15, label %if.then40.5.15

if.then40.5.15:                                   ; preds = %for.end38.5.15
  %cmp41.5.15 = fcmp olt float %partial_sum.0.lcssa.5.15, 0.000000e+00
  %sub42.5.15 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.15
  %cond.5.15 = select i1 %cmp41.5.15, float %sub42.5.15, float %partial_sum.0.lcssa.5.15
  %conv.5.15 = fptoui float %cond.5.15 to i8
  %conv43.5.15 = uitofp i8 %conv.5.15 to float
  %1159 = add nsw i64 %indvars.iv.next21.4.15, %1111
  %arrayidx47.5.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1159
  store float %conv43.5.15, float* %arrayidx47.5.15, align 4
  br label %for.inc53.5.15

if.else.5.15:                                     ; preds = %for.end38.5.15
  %1160 = add nsw i64 %indvars.iv.next21.4.15, %1110
  %arrayidx51.5.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1160
  store float %partial_sum.0.lcssa.5.15, float* %arrayidx51.5.15, align 4
  br label %for.inc53.5.15

for.inc53.5.15:                                   ; preds = %if.else.5.15, %if.then40.5.15
  %inc54.5.15 = add nsw i32 %in_j.011.15, 6
  %indvars.iv.next21.5.15 = add nsw i64 %indvars.iv20.15, 6
  br i1 %cmp94, label %for.end38.6.15, label %for.body10.6.15.preheader

for.body10.6.15.preheader:                        ; preds = %for.inc53.5.15
  br label %for.body10.6.15

for.body10.6.15:                                  ; preds = %for.body10.6.15.preheader, %for.inc36.6.15
  %ki.06.6.15 = phi i32 [ %inc37.6.15, %for.inc36.6.15 ], [ 0, %for.body10.6.15.preheader ]
  %partial_sum.05.6.15 = phi float [ %partial_sum.3.6.15, %for.inc36.6.15 ], [ 0.000000e+00, %for.body10.6.15.preheader ]
  %add.6.15 = add nsw i32 %ki.06.6.15, %inc58.14
  %notlhs.6.15 = icmp slt i32 %add.6.15, 0
  %notrhs.6.15 = icmp uge i32 %add.6.15, %img_height
  %.not.6.15 = or i1 %notrhs.6.15, %notlhs.6.15
  %brmerge.6.15 = or i1 %.not.6.15, %cmp151.not.6.15
  br i1 %brmerge.6.15, label %for.inc36.6.15, label %for.body16.lr.ph.6.15

for.body16.lr.ph.6.15:                            ; preds = %for.body10.6.15
  %mul.6.15 = shl i32 %add.6.15, 7
  %mul30.6.15 = mul i32 %ki.06.6.15, %kern_width
  br label %for.body16.6.15

for.body16.6.15:                                  ; preds = %for.inc.6.15, %for.body16.lr.ph.6.15
  %indvars.iv.6.15 = phi i64 [ 0, %for.body16.lr.ph.6.15 ], [ %indvars.iv.next.6.15, %for.inc.6.15 ]
  %partial_sum.12.6.15 = phi float [ %partial_sum.05.6.15, %for.body16.lr.ph.6.15 ], [ %partial_sum.2.6.15, %for.inc.6.15 ]
  %1161 = trunc i64 %indvars.iv.6.15 to i32
  %add17.6.15 = add nsw i32 %1161, %inc54.5.15
  %cmp18.6.15 = icmp sgt i32 %add17.6.15, -1
  %cmp21.6.15 = icmp ult i32 %add17.6.15, %img_width
  %1162 = and i1 %cmp18.6.15, %cmp21.6.15
  br i1 %1162, label %if.end26.6.15, label %for.inc.6.15

if.end26.6.15:                                    ; preds = %for.body16.6.15
  %add29.6.15 = add nsw i32 %add17.6.15, %mul.6.15
  %idxprom.6.15 = sext i32 %add29.6.15 to i64
  %arrayidx.6.15 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.15
  %1163 = load float, float* %arrayidx.6.15, align 4
  %1164 = trunc i64 %indvars.iv.6.15 to i32
  %add31.6.15 = add i32 %1164, %mul30.6.15
  %idxprom32.6.15 = zext i32 %add31.6.15 to i64
  %arrayidx33.6.15 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.15
  %1165 = load float, float* %arrayidx33.6.15, align 4
  %mul34.6.15 = fmul float %1163, %1165
  %add35.6.15 = fadd float %partial_sum.12.6.15, %mul34.6.15
  br label %for.inc.6.15

for.inc.6.15:                                     ; preds = %if.end26.6.15, %for.body16.6.15
  %partial_sum.2.6.15 = phi float [ %add35.6.15, %if.end26.6.15 ], [ %partial_sum.12.6.15, %for.body16.6.15 ]
  %indvars.iv.next.6.15 = add nuw nsw i64 %indvars.iv.6.15, 1
  %lftr.wideiv.6.15 = trunc i64 %indvars.iv.next.6.15 to i32
  %exitcond.6.15 = icmp eq i32 %lftr.wideiv.6.15, %kern_width
  br i1 %exitcond.6.15, label %for.inc36.6.15.loopexit, label %for.body16.6.15, !llvm.loop !1

for.inc36.6.15.loopexit:                          ; preds = %for.inc.6.15
  %partial_sum.2.6.15.lcssa = phi float [ %partial_sum.2.6.15, %for.inc.6.15 ]
  br label %for.inc36.6.15

for.inc36.6.15:                                   ; preds = %for.inc36.6.15.loopexit, %for.body10.6.15
  %partial_sum.3.6.15 = phi float [ %partial_sum.05.6.15, %for.body10.6.15 ], [ %partial_sum.2.6.15.lcssa, %for.inc36.6.15.loopexit ]
  %inc37.6.15 = add nuw nsw i32 %ki.06.6.15, 1
  %exitcond19.6.15 = icmp eq i32 %inc37.6.15, %kern_height
  br i1 %exitcond19.6.15, label %for.end38.6.15.loopexit, label %for.body10.6.15, !llvm.loop !3

for.end38.6.15.loopexit:                          ; preds = %for.inc36.6.15
  %partial_sum.3.6.15.lcssa = phi float [ %partial_sum.3.6.15, %for.inc36.6.15 ]
  br label %for.end38.6.15

for.end38.6.15:                                   ; preds = %for.end38.6.15.loopexit, %for.inc53.5.15
  %partial_sum.0.lcssa.6.15 = phi float [ 0.000000e+00, %for.inc53.5.15 ], [ %partial_sum.3.6.15.lcssa, %for.end38.6.15.loopexit ]
  br i1 %tobool39, label %if.else.6.15, label %if.then40.6.15

if.then40.6.15:                                   ; preds = %for.end38.6.15
  %cmp41.6.15 = fcmp olt float %partial_sum.0.lcssa.6.15, 0.000000e+00
  %sub42.6.15 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.15
  %cond.6.15 = select i1 %cmp41.6.15, float %sub42.6.15, float %partial_sum.0.lcssa.6.15
  %conv.6.15 = fptoui float %cond.6.15 to i8
  %conv43.6.15 = uitofp i8 %conv.6.15 to float
  %1166 = add nsw i64 %indvars.iv.next21.5.15, %1111
  %arrayidx47.6.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1166
  store float %conv43.6.15, float* %arrayidx47.6.15, align 4
  br label %for.inc53.6.15

if.else.6.15:                                     ; preds = %for.end38.6.15
  %1167 = add nsw i64 %indvars.iv.next21.5.15, %1110
  %arrayidx51.6.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1167
  store float %partial_sum.0.lcssa.6.15, float* %arrayidx51.6.15, align 4
  br label %for.inc53.6.15

for.inc53.6.15:                                   ; preds = %if.else.6.15, %if.then40.6.15
  %inc54.6.15 = add nsw i32 %in_j.011.15, 7
  %indvars.iv.next21.6.15 = add nsw i64 %indvars.iv20.15, 7
  br i1 %cmp94, label %for.end38.7.15, label %for.body10.7.15.preheader

for.body10.7.15.preheader:                        ; preds = %for.inc53.6.15
  br label %for.body10.7.15

for.body10.7.15:                                  ; preds = %for.body10.7.15.preheader, %for.inc36.7.15
  %ki.06.7.15 = phi i32 [ %inc37.7.15, %for.inc36.7.15 ], [ 0, %for.body10.7.15.preheader ]
  %partial_sum.05.7.15 = phi float [ %partial_sum.3.7.15, %for.inc36.7.15 ], [ 0.000000e+00, %for.body10.7.15.preheader ]
  %add.7.15 = add nsw i32 %ki.06.7.15, %inc58.14
  %notlhs.7.15 = icmp slt i32 %add.7.15, 0
  %notrhs.7.15 = icmp uge i32 %add.7.15, %img_height
  %.not.7.15 = or i1 %notrhs.7.15, %notlhs.7.15
  %brmerge.7.15 = or i1 %.not.7.15, %cmp151.not.7.15
  br i1 %brmerge.7.15, label %for.inc36.7.15, label %for.body16.lr.ph.7.15

for.body16.lr.ph.7.15:                            ; preds = %for.body10.7.15
  %mul.7.15 = shl i32 %add.7.15, 7
  %mul30.7.15 = mul i32 %ki.06.7.15, %kern_width
  br label %for.body16.7.15

for.body16.7.15:                                  ; preds = %for.inc.7.15, %for.body16.lr.ph.7.15
  %indvars.iv.7.15 = phi i64 [ 0, %for.body16.lr.ph.7.15 ], [ %indvars.iv.next.7.15, %for.inc.7.15 ]
  %partial_sum.12.7.15 = phi float [ %partial_sum.05.7.15, %for.body16.lr.ph.7.15 ], [ %partial_sum.2.7.15, %for.inc.7.15 ]
  %1168 = trunc i64 %indvars.iv.7.15 to i32
  %add17.7.15 = add nsw i32 %1168, %inc54.6.15
  %cmp18.7.15 = icmp sgt i32 %add17.7.15, -1
  %cmp21.7.15 = icmp ult i32 %add17.7.15, %img_width
  %1169 = and i1 %cmp18.7.15, %cmp21.7.15
  br i1 %1169, label %if.end26.7.15, label %for.inc.7.15

if.end26.7.15:                                    ; preds = %for.body16.7.15
  %add29.7.15 = add nsw i32 %add17.7.15, %mul.7.15
  %idxprom.7.15 = sext i32 %add29.7.15 to i64
  %arrayidx.7.15 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.15
  %1170 = load float, float* %arrayidx.7.15, align 4
  %1171 = trunc i64 %indvars.iv.7.15 to i32
  %add31.7.15 = add i32 %1171, %mul30.7.15
  %idxprom32.7.15 = zext i32 %add31.7.15 to i64
  %arrayidx33.7.15 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.15
  %1172 = load float, float* %arrayidx33.7.15, align 4
  %mul34.7.15 = fmul float %1170, %1172
  %add35.7.15 = fadd float %partial_sum.12.7.15, %mul34.7.15
  br label %for.inc.7.15

for.inc.7.15:                                     ; preds = %if.end26.7.15, %for.body16.7.15
  %partial_sum.2.7.15 = phi float [ %add35.7.15, %if.end26.7.15 ], [ %partial_sum.12.7.15, %for.body16.7.15 ]
  %indvars.iv.next.7.15 = add nuw nsw i64 %indvars.iv.7.15, 1
  %lftr.wideiv.7.15 = trunc i64 %indvars.iv.next.7.15 to i32
  %exitcond.7.15 = icmp eq i32 %lftr.wideiv.7.15, %kern_width
  br i1 %exitcond.7.15, label %for.inc36.7.15.loopexit, label %for.body16.7.15, !llvm.loop !1

for.inc36.7.15.loopexit:                          ; preds = %for.inc.7.15
  %partial_sum.2.7.15.lcssa = phi float [ %partial_sum.2.7.15, %for.inc.7.15 ]
  br label %for.inc36.7.15

for.inc36.7.15:                                   ; preds = %for.inc36.7.15.loopexit, %for.body10.7.15
  %partial_sum.3.7.15 = phi float [ %partial_sum.05.7.15, %for.body10.7.15 ], [ %partial_sum.2.7.15.lcssa, %for.inc36.7.15.loopexit ]
  %inc37.7.15 = add nuw nsw i32 %ki.06.7.15, 1
  %exitcond19.7.15 = icmp eq i32 %inc37.7.15, %kern_height
  br i1 %exitcond19.7.15, label %for.end38.7.15.loopexit, label %for.body10.7.15, !llvm.loop !3

for.end38.7.15.loopexit:                          ; preds = %for.inc36.7.15
  %partial_sum.3.7.15.lcssa = phi float [ %partial_sum.3.7.15, %for.inc36.7.15 ]
  br label %for.end38.7.15

for.end38.7.15:                                   ; preds = %for.end38.7.15.loopexit, %for.inc53.6.15
  %partial_sum.0.lcssa.7.15 = phi float [ 0.000000e+00, %for.inc53.6.15 ], [ %partial_sum.3.7.15.lcssa, %for.end38.7.15.loopexit ]
  br i1 %tobool39, label %if.else.7.15, label %if.then40.7.15

if.then40.7.15:                                   ; preds = %for.end38.7.15
  %cmp41.7.15 = fcmp olt float %partial_sum.0.lcssa.7.15, 0.000000e+00
  %sub42.7.15 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.15
  %cond.7.15 = select i1 %cmp41.7.15, float %sub42.7.15, float %partial_sum.0.lcssa.7.15
  %conv.7.15 = fptoui float %cond.7.15 to i8
  %conv43.7.15 = uitofp i8 %conv.7.15 to float
  %1173 = add nsw i64 %indvars.iv.next21.6.15, %1111
  %arrayidx47.7.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1173
  store float %conv43.7.15, float* %arrayidx47.7.15, align 4
  br label %for.inc53.7.15

if.else.7.15:                                     ; preds = %for.end38.7.15
  %1174 = add nsw i64 %indvars.iv.next21.6.15, %1110
  %arrayidx51.7.15 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1174
  store float %partial_sum.0.lcssa.7.15, float* %arrayidx51.7.15, align 4
  br label %for.inc53.7.15

for.inc53.7.15:                                   ; preds = %if.else.7.15, %if.then40.7.15
  %inc54.7.15 = add nsw i32 %in_j.011.15, 8
  %indvars.iv.next21.7.15 = add nsw i64 %indvars.iv20.15, 8
  %lftr.wideiv24.7.15 = trunc i64 %indvars.iv.next21.7.15 to i32
  %exitcond25.7.15 = icmp eq i32 %lftr.wideiv24.7.15, %img_width
  br i1 %exitcond25.7.15, label %for.inc57.15.loopexit, label %for.cond8.preheader.15, !llvm.loop !5

for.inc57.15.loopexit:                            ; preds = %for.inc53.7.15
  br label %for.inc57.15

for.inc57.15:                                     ; preds = %for.inc57.15.loopexit, %for.cond8.preheader.lr.ph.split.15
  %inc58.15 = add nsw i32 %in_i.015, 16
  %indvars.iv.next27.15 = add nsw i64 %indvars.iv26, 16
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.16

for.cond8.preheader.lr.ph.16:                     ; preds = %for.inc57.15
  %1175 = trunc i64 %indvars.iv.next27.15 to i32
  %mul48.16 = shl i32 %1175, 7
  %1176 = trunc i64 %indvars.iv.next27.15 to i32
  %mul44.16 = shl i32 %1176, 7
  %1177 = sext i32 %mul48.16 to i64
  %1178 = sext i32 %mul44.16 to i64
  br i1 %lcmp.mod.16, label %for.cond8.preheader.lr.ph.split.16, label %for.cond8.preheader.prol.16.preheader

for.cond8.preheader.prol.16.preheader:            ; preds = %for.cond8.preheader.lr.ph.16
  br label %for.cond8.preheader.prol.16

for.cond8.preheader.prol.16:                      ; preds = %for.cond8.preheader.prol.16.preheader, %for.inc53.prol.16
  %indvars.iv20.prol.16 = phi i64 [ %indvars.iv.next21.prol.16, %for.inc53.prol.16 ], [ 0, %for.cond8.preheader.prol.16.preheader ]
  %in_j.011.prol.16 = phi i32 [ %inc54.prol.16, %for.inc53.prol.16 ], [ %sub4, %for.cond8.preheader.prol.16.preheader ]
  %prol.iter.16 = phi i32 [ %prol.iter.sub.16, %for.inc53.prol.16 ], [ %xtraiter.16, %for.cond8.preheader.prol.16.preheader ]
  br i1 %cmp94, label %for.end38.prol.16, label %for.body10.prol.16.preheader

for.body10.prol.16.preheader:                     ; preds = %for.cond8.preheader.prol.16
  br label %for.body10.prol.16

for.body10.prol.16:                               ; preds = %for.body10.prol.16.preheader, %for.inc36.prol.16
  %ki.06.prol.16 = phi i32 [ %inc37.prol.16, %for.inc36.prol.16 ], [ 0, %for.body10.prol.16.preheader ]
  %partial_sum.05.prol.16 = phi float [ %partial_sum.3.prol.16, %for.inc36.prol.16 ], [ 0.000000e+00, %for.body10.prol.16.preheader ]
  %add.prol.16 = add nsw i32 %ki.06.prol.16, %inc58.15
  %notlhs.prol.16 = icmp slt i32 %add.prol.16, 0
  %notrhs.prol.16 = icmp uge i32 %add.prol.16, %img_height
  %.not.prol.16 = or i1 %notrhs.prol.16, %notlhs.prol.16
  %brmerge.prol.16 = or i1 %.not.prol.16, %cmp151.not.prol.16
  br i1 %brmerge.prol.16, label %for.inc36.prol.16, label %for.body16.lr.ph.prol.16

for.body16.lr.ph.prol.16:                         ; preds = %for.body10.prol.16
  %mul.prol.16 = shl i32 %add.prol.16, 7
  %mul30.prol.16 = mul i32 %ki.06.prol.16, %kern_width
  br label %for.body16.prol.16

for.body16.prol.16:                               ; preds = %for.inc.prol.16, %for.body16.lr.ph.prol.16
  %indvars.iv.prol.16 = phi i64 [ 0, %for.body16.lr.ph.prol.16 ], [ %indvars.iv.next.prol.16, %for.inc.prol.16 ]
  %partial_sum.12.prol.16 = phi float [ %partial_sum.05.prol.16, %for.body16.lr.ph.prol.16 ], [ %partial_sum.2.prol.16, %for.inc.prol.16 ]
  %1179 = trunc i64 %indvars.iv.prol.16 to i32
  %add17.prol.16 = add nsw i32 %1179, %in_j.011.prol.16
  %cmp18.prol.16 = icmp sgt i32 %add17.prol.16, -1
  %cmp21.prol.16 = icmp ult i32 %add17.prol.16, %img_width
  %1180 = and i1 %cmp18.prol.16, %cmp21.prol.16
  br i1 %1180, label %if.end26.prol.16, label %for.inc.prol.16

if.end26.prol.16:                                 ; preds = %for.body16.prol.16
  %add29.prol.16 = add nsw i32 %add17.prol.16, %mul.prol.16
  %idxprom.prol.16 = sext i32 %add29.prol.16 to i64
  %arrayidx.prol.16 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.16
  %1181 = load float, float* %arrayidx.prol.16, align 4
  %1182 = trunc i64 %indvars.iv.prol.16 to i32
  %add31.prol.16 = add i32 %1182, %mul30.prol.16
  %idxprom32.prol.16 = zext i32 %add31.prol.16 to i64
  %arrayidx33.prol.16 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.16
  %1183 = load float, float* %arrayidx33.prol.16, align 4
  %mul34.prol.16 = fmul float %1181, %1183
  %add35.prol.16 = fadd float %partial_sum.12.prol.16, %mul34.prol.16
  br label %for.inc.prol.16

for.inc.prol.16:                                  ; preds = %if.end26.prol.16, %for.body16.prol.16
  %partial_sum.2.prol.16 = phi float [ %add35.prol.16, %if.end26.prol.16 ], [ %partial_sum.12.prol.16, %for.body16.prol.16 ]
  %indvars.iv.next.prol.16 = add nuw nsw i64 %indvars.iv.prol.16, 1
  %lftr.wideiv.prol.16 = trunc i64 %indvars.iv.next.prol.16 to i32
  %exitcond.prol.16 = icmp eq i32 %lftr.wideiv.prol.16, %kern_width
  br i1 %exitcond.prol.16, label %for.inc36.prol.16.loopexit, label %for.body16.prol.16, !llvm.loop !1

for.inc36.prol.16.loopexit:                       ; preds = %for.inc.prol.16
  %partial_sum.2.prol.16.lcssa = phi float [ %partial_sum.2.prol.16, %for.inc.prol.16 ]
  br label %for.inc36.prol.16

for.inc36.prol.16:                                ; preds = %for.inc36.prol.16.loopexit, %for.body10.prol.16
  %partial_sum.3.prol.16 = phi float [ %partial_sum.05.prol.16, %for.body10.prol.16 ], [ %partial_sum.2.prol.16.lcssa, %for.inc36.prol.16.loopexit ]
  %inc37.prol.16 = add nuw nsw i32 %ki.06.prol.16, 1
  %exitcond19.prol.16 = icmp eq i32 %inc37.prol.16, %kern_height
  br i1 %exitcond19.prol.16, label %for.end38.prol.16.loopexit, label %for.body10.prol.16, !llvm.loop !3

for.end38.prol.16.loopexit:                       ; preds = %for.inc36.prol.16
  %partial_sum.3.prol.16.lcssa = phi float [ %partial_sum.3.prol.16, %for.inc36.prol.16 ]
  br label %for.end38.prol.16

for.end38.prol.16:                                ; preds = %for.end38.prol.16.loopexit, %for.cond8.preheader.prol.16
  %partial_sum.0.lcssa.prol.16 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.16 ], [ %partial_sum.3.prol.16.lcssa, %for.end38.prol.16.loopexit ]
  br i1 %tobool39, label %if.else.prol.16, label %if.then40.prol.16

if.then40.prol.16:                                ; preds = %for.end38.prol.16
  %cmp41.prol.16 = fcmp olt float %partial_sum.0.lcssa.prol.16, 0.000000e+00
  %sub42.prol.16 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.16
  %cond.prol.16 = select i1 %cmp41.prol.16, float %sub42.prol.16, float %partial_sum.0.lcssa.prol.16
  %conv.prol.16 = fptoui float %cond.prol.16 to i8
  %conv43.prol.16 = uitofp i8 %conv.prol.16 to float
  %1184 = add nsw i64 %indvars.iv20.prol.16, %1178
  %arrayidx47.prol.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1184
  store float %conv43.prol.16, float* %arrayidx47.prol.16, align 4
  br label %for.inc53.prol.16

if.else.prol.16:                                  ; preds = %for.end38.prol.16
  %1185 = add nsw i64 %indvars.iv20.prol.16, %1177
  %arrayidx51.prol.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1185
  store float %partial_sum.0.lcssa.prol.16, float* %arrayidx51.prol.16, align 4
  br label %for.inc53.prol.16

for.inc53.prol.16:                                ; preds = %if.else.prol.16, %if.then40.prol.16
  %inc54.prol.16 = add nsw i32 %in_j.011.prol.16, 1
  %indvars.iv.next21.prol.16 = add nuw nsw i64 %indvars.iv20.prol.16, 1
  %prol.iter.sub.16 = add i32 %prol.iter.16, -1
  %prol.iter.cmp.16 = icmp eq i32 %prol.iter.sub.16, 0
  br i1 %prol.iter.cmp.16, label %for.cond8.preheader.lr.ph.split.16.loopexit, label %for.cond8.preheader.prol.16, !llvm.loop !4

for.cond8.preheader.lr.ph.split.16.loopexit:      ; preds = %for.inc53.prol.16
  %indvars.iv.next21.prol.16.lcssa = phi i64 [ %indvars.iv.next21.prol.16, %for.inc53.prol.16 ]
  %inc54.prol.16.lcssa = phi i32 [ %inc54.prol.16, %for.inc53.prol.16 ]
  br label %for.cond8.preheader.lr.ph.split.16

for.cond8.preheader.lr.ph.split.16:               ; preds = %for.cond8.preheader.lr.ph.split.16.loopexit, %for.cond8.preheader.lr.ph.16
  %indvars.iv20.unr.16 = phi i64 [ 0, %for.cond8.preheader.lr.ph.16 ], [ %indvars.iv.next21.prol.16.lcssa, %for.cond8.preheader.lr.ph.split.16.loopexit ]
  %in_j.011.unr.16 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.16 ], [ %inc54.prol.16.lcssa, %for.cond8.preheader.lr.ph.split.16.loopexit ]
  br i1 %87, label %for.inc57.16, label %for.cond8.preheader.16.preheader

for.cond8.preheader.16.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.16
  br label %for.cond8.preheader.16

for.cond8.preheader.16:                           ; preds = %for.cond8.preheader.16.preheader, %for.inc53.7.16
  %indvars.iv20.16 = phi i64 [ %indvars.iv.next21.7.16, %for.inc53.7.16 ], [ %indvars.iv20.unr.16, %for.cond8.preheader.16.preheader ]
  %in_j.011.16 = phi i32 [ %inc54.7.16, %for.inc53.7.16 ], [ %in_j.011.unr.16, %for.cond8.preheader.16.preheader ]
  br i1 %cmp94, label %for.end38.16, label %for.body10.16.preheader

for.body10.16.preheader:                          ; preds = %for.cond8.preheader.16
  br label %for.body10.16

for.body10.16:                                    ; preds = %for.body10.16.preheader, %for.inc36.16
  %ki.06.16 = phi i32 [ %inc37.16, %for.inc36.16 ], [ 0, %for.body10.16.preheader ]
  %partial_sum.05.16 = phi float [ %partial_sum.3.16, %for.inc36.16 ], [ 0.000000e+00, %for.body10.16.preheader ]
  %add.16 = add nsw i32 %ki.06.16, %inc58.15
  %notlhs.16 = icmp slt i32 %add.16, 0
  %notrhs.16 = icmp uge i32 %add.16, %img_height
  %.not.16 = or i1 %notrhs.16, %notlhs.16
  %brmerge.16 = or i1 %.not.16, %cmp151.not.16
  br i1 %brmerge.16, label %for.inc36.16, label %for.body16.lr.ph.16

for.body16.lr.ph.16:                              ; preds = %for.body10.16
  %mul.16 = shl i32 %add.16, 7
  %mul30.16 = mul i32 %ki.06.16, %kern_width
  br label %for.body16.16

for.body16.16:                                    ; preds = %for.inc.16, %for.body16.lr.ph.16
  %indvars.iv.16 = phi i64 [ 0, %for.body16.lr.ph.16 ], [ %indvars.iv.next.16, %for.inc.16 ]
  %partial_sum.12.16 = phi float [ %partial_sum.05.16, %for.body16.lr.ph.16 ], [ %partial_sum.2.16, %for.inc.16 ]
  %1186 = trunc i64 %indvars.iv.16 to i32
  %add17.16 = add nsw i32 %1186, %in_j.011.16
  %cmp18.16 = icmp sgt i32 %add17.16, -1
  %cmp21.16 = icmp ult i32 %add17.16, %img_width
  %1187 = and i1 %cmp18.16, %cmp21.16
  br i1 %1187, label %if.end26.16, label %for.inc.16

if.end26.16:                                      ; preds = %for.body16.16
  %add29.16 = add nsw i32 %add17.16, %mul.16
  %idxprom.16 = sext i32 %add29.16 to i64
  %arrayidx.16 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.16
  %1188 = load float, float* %arrayidx.16, align 4
  %1189 = trunc i64 %indvars.iv.16 to i32
  %add31.16 = add i32 %1189, %mul30.16
  %idxprom32.16 = zext i32 %add31.16 to i64
  %arrayidx33.16 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.16
  %1190 = load float, float* %arrayidx33.16, align 4
  %mul34.16 = fmul float %1188, %1190
  %add35.16 = fadd float %partial_sum.12.16, %mul34.16
  br label %for.inc.16

for.inc.16:                                       ; preds = %if.end26.16, %for.body16.16
  %partial_sum.2.16 = phi float [ %add35.16, %if.end26.16 ], [ %partial_sum.12.16, %for.body16.16 ]
  %indvars.iv.next.16 = add nuw nsw i64 %indvars.iv.16, 1
  %lftr.wideiv.16 = trunc i64 %indvars.iv.next.16 to i32
  %exitcond.16 = icmp eq i32 %lftr.wideiv.16, %kern_width
  br i1 %exitcond.16, label %for.inc36.16.loopexit, label %for.body16.16, !llvm.loop !1

for.inc36.16.loopexit:                            ; preds = %for.inc.16
  %partial_sum.2.16.lcssa = phi float [ %partial_sum.2.16, %for.inc.16 ]
  br label %for.inc36.16

for.inc36.16:                                     ; preds = %for.inc36.16.loopexit, %for.body10.16
  %partial_sum.3.16 = phi float [ %partial_sum.05.16, %for.body10.16 ], [ %partial_sum.2.16.lcssa, %for.inc36.16.loopexit ]
  %inc37.16 = add nuw nsw i32 %ki.06.16, 1
  %exitcond19.16 = icmp eq i32 %inc37.16, %kern_height
  br i1 %exitcond19.16, label %for.end38.16.loopexit, label %for.body10.16, !llvm.loop !3

for.end38.16.loopexit:                            ; preds = %for.inc36.16
  %partial_sum.3.16.lcssa = phi float [ %partial_sum.3.16, %for.inc36.16 ]
  br label %for.end38.16

for.end38.16:                                     ; preds = %for.end38.16.loopexit, %for.cond8.preheader.16
  %partial_sum.0.lcssa.16 = phi float [ 0.000000e+00, %for.cond8.preheader.16 ], [ %partial_sum.3.16.lcssa, %for.end38.16.loopexit ]
  br i1 %tobool39, label %if.else.16, label %if.then40.16

if.then40.16:                                     ; preds = %for.end38.16
  %cmp41.16 = fcmp olt float %partial_sum.0.lcssa.16, 0.000000e+00
  %sub42.16 = fsub float -0.000000e+00, %partial_sum.0.lcssa.16
  %cond.16 = select i1 %cmp41.16, float %sub42.16, float %partial_sum.0.lcssa.16
  %conv.16 = fptoui float %cond.16 to i8
  %conv43.16 = uitofp i8 %conv.16 to float
  %1191 = add nsw i64 %indvars.iv20.16, %1178
  %arrayidx47.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1191
  store float %conv43.16, float* %arrayidx47.16, align 4
  br label %for.inc53.16

if.else.16:                                       ; preds = %for.end38.16
  %1192 = add nsw i64 %indvars.iv20.16, %1177
  %arrayidx51.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1192
  store float %partial_sum.0.lcssa.16, float* %arrayidx51.16, align 4
  br label %for.inc53.16

for.inc53.16:                                     ; preds = %if.else.16, %if.then40.16
  %inc54.16 = add nsw i32 %in_j.011.16, 1
  %indvars.iv.next21.16 = add nuw nsw i64 %indvars.iv20.16, 1
  br i1 %cmp94, label %for.end38.1.16, label %for.body10.1.16.preheader

for.body10.1.16.preheader:                        ; preds = %for.inc53.16
  br label %for.body10.1.16

for.body10.1.16:                                  ; preds = %for.body10.1.16.preheader, %for.inc36.1.16
  %ki.06.1.16 = phi i32 [ %inc37.1.16, %for.inc36.1.16 ], [ 0, %for.body10.1.16.preheader ]
  %partial_sum.05.1.16 = phi float [ %partial_sum.3.1.16, %for.inc36.1.16 ], [ 0.000000e+00, %for.body10.1.16.preheader ]
  %add.1.16 = add nsw i32 %ki.06.1.16, %inc58.15
  %notlhs.1.16 = icmp slt i32 %add.1.16, 0
  %notrhs.1.16 = icmp uge i32 %add.1.16, %img_height
  %.not.1.16 = or i1 %notrhs.1.16, %notlhs.1.16
  %brmerge.1.16 = or i1 %.not.1.16, %cmp151.not.1.16
  br i1 %brmerge.1.16, label %for.inc36.1.16, label %for.body16.lr.ph.1.16

for.body16.lr.ph.1.16:                            ; preds = %for.body10.1.16
  %mul.1.16 = shl i32 %add.1.16, 7
  %mul30.1.16 = mul i32 %ki.06.1.16, %kern_width
  br label %for.body16.1.16

for.body16.1.16:                                  ; preds = %for.inc.1.16, %for.body16.lr.ph.1.16
  %indvars.iv.1.16 = phi i64 [ 0, %for.body16.lr.ph.1.16 ], [ %indvars.iv.next.1.16, %for.inc.1.16 ]
  %partial_sum.12.1.16 = phi float [ %partial_sum.05.1.16, %for.body16.lr.ph.1.16 ], [ %partial_sum.2.1.16, %for.inc.1.16 ]
  %1193 = trunc i64 %indvars.iv.1.16 to i32
  %add17.1.16 = add nsw i32 %1193, %inc54.16
  %cmp18.1.16 = icmp sgt i32 %add17.1.16, -1
  %cmp21.1.16 = icmp ult i32 %add17.1.16, %img_width
  %1194 = and i1 %cmp18.1.16, %cmp21.1.16
  br i1 %1194, label %if.end26.1.16, label %for.inc.1.16

if.end26.1.16:                                    ; preds = %for.body16.1.16
  %add29.1.16 = add nsw i32 %add17.1.16, %mul.1.16
  %idxprom.1.16 = sext i32 %add29.1.16 to i64
  %arrayidx.1.16 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.16
  %1195 = load float, float* %arrayidx.1.16, align 4
  %1196 = trunc i64 %indvars.iv.1.16 to i32
  %add31.1.16 = add i32 %1196, %mul30.1.16
  %idxprom32.1.16 = zext i32 %add31.1.16 to i64
  %arrayidx33.1.16 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.16
  %1197 = load float, float* %arrayidx33.1.16, align 4
  %mul34.1.16 = fmul float %1195, %1197
  %add35.1.16 = fadd float %partial_sum.12.1.16, %mul34.1.16
  br label %for.inc.1.16

for.inc.1.16:                                     ; preds = %if.end26.1.16, %for.body16.1.16
  %partial_sum.2.1.16 = phi float [ %add35.1.16, %if.end26.1.16 ], [ %partial_sum.12.1.16, %for.body16.1.16 ]
  %indvars.iv.next.1.16 = add nuw nsw i64 %indvars.iv.1.16, 1
  %lftr.wideiv.1.16 = trunc i64 %indvars.iv.next.1.16 to i32
  %exitcond.1.16 = icmp eq i32 %lftr.wideiv.1.16, %kern_width
  br i1 %exitcond.1.16, label %for.inc36.1.16.loopexit, label %for.body16.1.16, !llvm.loop !1

for.inc36.1.16.loopexit:                          ; preds = %for.inc.1.16
  %partial_sum.2.1.16.lcssa = phi float [ %partial_sum.2.1.16, %for.inc.1.16 ]
  br label %for.inc36.1.16

for.inc36.1.16:                                   ; preds = %for.inc36.1.16.loopexit, %for.body10.1.16
  %partial_sum.3.1.16 = phi float [ %partial_sum.05.1.16, %for.body10.1.16 ], [ %partial_sum.2.1.16.lcssa, %for.inc36.1.16.loopexit ]
  %inc37.1.16 = add nuw nsw i32 %ki.06.1.16, 1
  %exitcond19.1.16 = icmp eq i32 %inc37.1.16, %kern_height
  br i1 %exitcond19.1.16, label %for.end38.1.16.loopexit, label %for.body10.1.16, !llvm.loop !3

for.end38.1.16.loopexit:                          ; preds = %for.inc36.1.16
  %partial_sum.3.1.16.lcssa = phi float [ %partial_sum.3.1.16, %for.inc36.1.16 ]
  br label %for.end38.1.16

for.end38.1.16:                                   ; preds = %for.end38.1.16.loopexit, %for.inc53.16
  %partial_sum.0.lcssa.1.16 = phi float [ 0.000000e+00, %for.inc53.16 ], [ %partial_sum.3.1.16.lcssa, %for.end38.1.16.loopexit ]
  br i1 %tobool39, label %if.else.1.16, label %if.then40.1.16

if.then40.1.16:                                   ; preds = %for.end38.1.16
  %cmp41.1.16 = fcmp olt float %partial_sum.0.lcssa.1.16, 0.000000e+00
  %sub42.1.16 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.16
  %cond.1.16 = select i1 %cmp41.1.16, float %sub42.1.16, float %partial_sum.0.lcssa.1.16
  %conv.1.16 = fptoui float %cond.1.16 to i8
  %conv43.1.16 = uitofp i8 %conv.1.16 to float
  %1198 = add nsw i64 %indvars.iv.next21.16, %1178
  %arrayidx47.1.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1198
  store float %conv43.1.16, float* %arrayidx47.1.16, align 4
  br label %for.inc53.1.16

if.else.1.16:                                     ; preds = %for.end38.1.16
  %1199 = add nsw i64 %indvars.iv.next21.16, %1177
  %arrayidx51.1.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1199
  store float %partial_sum.0.lcssa.1.16, float* %arrayidx51.1.16, align 4
  br label %for.inc53.1.16

for.inc53.1.16:                                   ; preds = %if.else.1.16, %if.then40.1.16
  %inc54.1.16 = add nsw i32 %in_j.011.16, 2
  %indvars.iv.next21.1.16 = add nsw i64 %indvars.iv20.16, 2
  br i1 %cmp94, label %for.end38.2.16, label %for.body10.2.16.preheader

for.body10.2.16.preheader:                        ; preds = %for.inc53.1.16
  br label %for.body10.2.16

for.body10.2.16:                                  ; preds = %for.body10.2.16.preheader, %for.inc36.2.16
  %ki.06.2.16 = phi i32 [ %inc37.2.16, %for.inc36.2.16 ], [ 0, %for.body10.2.16.preheader ]
  %partial_sum.05.2.16 = phi float [ %partial_sum.3.2.16, %for.inc36.2.16 ], [ 0.000000e+00, %for.body10.2.16.preheader ]
  %add.2.16 = add nsw i32 %ki.06.2.16, %inc58.15
  %notlhs.2.16 = icmp slt i32 %add.2.16, 0
  %notrhs.2.16 = icmp uge i32 %add.2.16, %img_height
  %.not.2.16 = or i1 %notrhs.2.16, %notlhs.2.16
  %brmerge.2.16 = or i1 %.not.2.16, %cmp151.not.2.16
  br i1 %brmerge.2.16, label %for.inc36.2.16, label %for.body16.lr.ph.2.16

for.body16.lr.ph.2.16:                            ; preds = %for.body10.2.16
  %mul.2.16 = shl i32 %add.2.16, 7
  %mul30.2.16 = mul i32 %ki.06.2.16, %kern_width
  br label %for.body16.2.16

for.body16.2.16:                                  ; preds = %for.inc.2.16, %for.body16.lr.ph.2.16
  %indvars.iv.2.16 = phi i64 [ 0, %for.body16.lr.ph.2.16 ], [ %indvars.iv.next.2.16, %for.inc.2.16 ]
  %partial_sum.12.2.16 = phi float [ %partial_sum.05.2.16, %for.body16.lr.ph.2.16 ], [ %partial_sum.2.2.16, %for.inc.2.16 ]
  %1200 = trunc i64 %indvars.iv.2.16 to i32
  %add17.2.16 = add nsw i32 %1200, %inc54.1.16
  %cmp18.2.16 = icmp sgt i32 %add17.2.16, -1
  %cmp21.2.16 = icmp ult i32 %add17.2.16, %img_width
  %1201 = and i1 %cmp18.2.16, %cmp21.2.16
  br i1 %1201, label %if.end26.2.16, label %for.inc.2.16

if.end26.2.16:                                    ; preds = %for.body16.2.16
  %add29.2.16 = add nsw i32 %add17.2.16, %mul.2.16
  %idxprom.2.16 = sext i32 %add29.2.16 to i64
  %arrayidx.2.16 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.16
  %1202 = load float, float* %arrayidx.2.16, align 4
  %1203 = trunc i64 %indvars.iv.2.16 to i32
  %add31.2.16 = add i32 %1203, %mul30.2.16
  %idxprom32.2.16 = zext i32 %add31.2.16 to i64
  %arrayidx33.2.16 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.16
  %1204 = load float, float* %arrayidx33.2.16, align 4
  %mul34.2.16 = fmul float %1202, %1204
  %add35.2.16 = fadd float %partial_sum.12.2.16, %mul34.2.16
  br label %for.inc.2.16

for.inc.2.16:                                     ; preds = %if.end26.2.16, %for.body16.2.16
  %partial_sum.2.2.16 = phi float [ %add35.2.16, %if.end26.2.16 ], [ %partial_sum.12.2.16, %for.body16.2.16 ]
  %indvars.iv.next.2.16 = add nuw nsw i64 %indvars.iv.2.16, 1
  %lftr.wideiv.2.16 = trunc i64 %indvars.iv.next.2.16 to i32
  %exitcond.2.16 = icmp eq i32 %lftr.wideiv.2.16, %kern_width
  br i1 %exitcond.2.16, label %for.inc36.2.16.loopexit, label %for.body16.2.16, !llvm.loop !1

for.inc36.2.16.loopexit:                          ; preds = %for.inc.2.16
  %partial_sum.2.2.16.lcssa = phi float [ %partial_sum.2.2.16, %for.inc.2.16 ]
  br label %for.inc36.2.16

for.inc36.2.16:                                   ; preds = %for.inc36.2.16.loopexit, %for.body10.2.16
  %partial_sum.3.2.16 = phi float [ %partial_sum.05.2.16, %for.body10.2.16 ], [ %partial_sum.2.2.16.lcssa, %for.inc36.2.16.loopexit ]
  %inc37.2.16 = add nuw nsw i32 %ki.06.2.16, 1
  %exitcond19.2.16 = icmp eq i32 %inc37.2.16, %kern_height
  br i1 %exitcond19.2.16, label %for.end38.2.16.loopexit, label %for.body10.2.16, !llvm.loop !3

for.end38.2.16.loopexit:                          ; preds = %for.inc36.2.16
  %partial_sum.3.2.16.lcssa = phi float [ %partial_sum.3.2.16, %for.inc36.2.16 ]
  br label %for.end38.2.16

for.end38.2.16:                                   ; preds = %for.end38.2.16.loopexit, %for.inc53.1.16
  %partial_sum.0.lcssa.2.16 = phi float [ 0.000000e+00, %for.inc53.1.16 ], [ %partial_sum.3.2.16.lcssa, %for.end38.2.16.loopexit ]
  br i1 %tobool39, label %if.else.2.16, label %if.then40.2.16

if.then40.2.16:                                   ; preds = %for.end38.2.16
  %cmp41.2.16 = fcmp olt float %partial_sum.0.lcssa.2.16, 0.000000e+00
  %sub42.2.16 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.16
  %cond.2.16 = select i1 %cmp41.2.16, float %sub42.2.16, float %partial_sum.0.lcssa.2.16
  %conv.2.16 = fptoui float %cond.2.16 to i8
  %conv43.2.16 = uitofp i8 %conv.2.16 to float
  %1205 = add nsw i64 %indvars.iv.next21.1.16, %1178
  %arrayidx47.2.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1205
  store float %conv43.2.16, float* %arrayidx47.2.16, align 4
  br label %for.inc53.2.16

if.else.2.16:                                     ; preds = %for.end38.2.16
  %1206 = add nsw i64 %indvars.iv.next21.1.16, %1177
  %arrayidx51.2.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1206
  store float %partial_sum.0.lcssa.2.16, float* %arrayidx51.2.16, align 4
  br label %for.inc53.2.16

for.inc53.2.16:                                   ; preds = %if.else.2.16, %if.then40.2.16
  %inc54.2.16 = add nsw i32 %in_j.011.16, 3
  %indvars.iv.next21.2.16 = add nsw i64 %indvars.iv20.16, 3
  br i1 %cmp94, label %for.end38.3.16, label %for.body10.3.16.preheader

for.body10.3.16.preheader:                        ; preds = %for.inc53.2.16
  br label %for.body10.3.16

for.body10.3.16:                                  ; preds = %for.body10.3.16.preheader, %for.inc36.3.16
  %ki.06.3.16 = phi i32 [ %inc37.3.16, %for.inc36.3.16 ], [ 0, %for.body10.3.16.preheader ]
  %partial_sum.05.3.16 = phi float [ %partial_sum.3.3.16, %for.inc36.3.16 ], [ 0.000000e+00, %for.body10.3.16.preheader ]
  %add.3.16 = add nsw i32 %ki.06.3.16, %inc58.15
  %notlhs.3.16 = icmp slt i32 %add.3.16, 0
  %notrhs.3.16 = icmp uge i32 %add.3.16, %img_height
  %.not.3.16 = or i1 %notrhs.3.16, %notlhs.3.16
  %brmerge.3.16 = or i1 %.not.3.16, %cmp151.not.3.16
  br i1 %brmerge.3.16, label %for.inc36.3.16, label %for.body16.lr.ph.3.16

for.body16.lr.ph.3.16:                            ; preds = %for.body10.3.16
  %mul.3.16 = shl i32 %add.3.16, 7
  %mul30.3.16 = mul i32 %ki.06.3.16, %kern_width
  br label %for.body16.3.16

for.body16.3.16:                                  ; preds = %for.inc.3.16, %for.body16.lr.ph.3.16
  %indvars.iv.3.16 = phi i64 [ 0, %for.body16.lr.ph.3.16 ], [ %indvars.iv.next.3.16, %for.inc.3.16 ]
  %partial_sum.12.3.16 = phi float [ %partial_sum.05.3.16, %for.body16.lr.ph.3.16 ], [ %partial_sum.2.3.16, %for.inc.3.16 ]
  %1207 = trunc i64 %indvars.iv.3.16 to i32
  %add17.3.16 = add nsw i32 %1207, %inc54.2.16
  %cmp18.3.16 = icmp sgt i32 %add17.3.16, -1
  %cmp21.3.16 = icmp ult i32 %add17.3.16, %img_width
  %1208 = and i1 %cmp18.3.16, %cmp21.3.16
  br i1 %1208, label %if.end26.3.16, label %for.inc.3.16

if.end26.3.16:                                    ; preds = %for.body16.3.16
  %add29.3.16 = add nsw i32 %add17.3.16, %mul.3.16
  %idxprom.3.16 = sext i32 %add29.3.16 to i64
  %arrayidx.3.16 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.16
  %1209 = load float, float* %arrayidx.3.16, align 4
  %1210 = trunc i64 %indvars.iv.3.16 to i32
  %add31.3.16 = add i32 %1210, %mul30.3.16
  %idxprom32.3.16 = zext i32 %add31.3.16 to i64
  %arrayidx33.3.16 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.16
  %1211 = load float, float* %arrayidx33.3.16, align 4
  %mul34.3.16 = fmul float %1209, %1211
  %add35.3.16 = fadd float %partial_sum.12.3.16, %mul34.3.16
  br label %for.inc.3.16

for.inc.3.16:                                     ; preds = %if.end26.3.16, %for.body16.3.16
  %partial_sum.2.3.16 = phi float [ %add35.3.16, %if.end26.3.16 ], [ %partial_sum.12.3.16, %for.body16.3.16 ]
  %indvars.iv.next.3.16 = add nuw nsw i64 %indvars.iv.3.16, 1
  %lftr.wideiv.3.16 = trunc i64 %indvars.iv.next.3.16 to i32
  %exitcond.3.16 = icmp eq i32 %lftr.wideiv.3.16, %kern_width
  br i1 %exitcond.3.16, label %for.inc36.3.16.loopexit, label %for.body16.3.16, !llvm.loop !1

for.inc36.3.16.loopexit:                          ; preds = %for.inc.3.16
  %partial_sum.2.3.16.lcssa = phi float [ %partial_sum.2.3.16, %for.inc.3.16 ]
  br label %for.inc36.3.16

for.inc36.3.16:                                   ; preds = %for.inc36.3.16.loopexit, %for.body10.3.16
  %partial_sum.3.3.16 = phi float [ %partial_sum.05.3.16, %for.body10.3.16 ], [ %partial_sum.2.3.16.lcssa, %for.inc36.3.16.loopexit ]
  %inc37.3.16 = add nuw nsw i32 %ki.06.3.16, 1
  %exitcond19.3.16 = icmp eq i32 %inc37.3.16, %kern_height
  br i1 %exitcond19.3.16, label %for.end38.3.16.loopexit, label %for.body10.3.16, !llvm.loop !3

for.end38.3.16.loopexit:                          ; preds = %for.inc36.3.16
  %partial_sum.3.3.16.lcssa = phi float [ %partial_sum.3.3.16, %for.inc36.3.16 ]
  br label %for.end38.3.16

for.end38.3.16:                                   ; preds = %for.end38.3.16.loopexit, %for.inc53.2.16
  %partial_sum.0.lcssa.3.16 = phi float [ 0.000000e+00, %for.inc53.2.16 ], [ %partial_sum.3.3.16.lcssa, %for.end38.3.16.loopexit ]
  br i1 %tobool39, label %if.else.3.16, label %if.then40.3.16

if.then40.3.16:                                   ; preds = %for.end38.3.16
  %cmp41.3.16 = fcmp olt float %partial_sum.0.lcssa.3.16, 0.000000e+00
  %sub42.3.16 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.16
  %cond.3.16 = select i1 %cmp41.3.16, float %sub42.3.16, float %partial_sum.0.lcssa.3.16
  %conv.3.16 = fptoui float %cond.3.16 to i8
  %conv43.3.16 = uitofp i8 %conv.3.16 to float
  %1212 = add nsw i64 %indvars.iv.next21.2.16, %1178
  %arrayidx47.3.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1212
  store float %conv43.3.16, float* %arrayidx47.3.16, align 4
  br label %for.inc53.3.16

if.else.3.16:                                     ; preds = %for.end38.3.16
  %1213 = add nsw i64 %indvars.iv.next21.2.16, %1177
  %arrayidx51.3.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1213
  store float %partial_sum.0.lcssa.3.16, float* %arrayidx51.3.16, align 4
  br label %for.inc53.3.16

for.inc53.3.16:                                   ; preds = %if.else.3.16, %if.then40.3.16
  %inc54.3.16 = add nsw i32 %in_j.011.16, 4
  %indvars.iv.next21.3.16 = add nsw i64 %indvars.iv20.16, 4
  br i1 %cmp94, label %for.end38.4.16, label %for.body10.4.16.preheader

for.body10.4.16.preheader:                        ; preds = %for.inc53.3.16
  br label %for.body10.4.16

for.body10.4.16:                                  ; preds = %for.body10.4.16.preheader, %for.inc36.4.16
  %ki.06.4.16 = phi i32 [ %inc37.4.16, %for.inc36.4.16 ], [ 0, %for.body10.4.16.preheader ]
  %partial_sum.05.4.16 = phi float [ %partial_sum.3.4.16, %for.inc36.4.16 ], [ 0.000000e+00, %for.body10.4.16.preheader ]
  %add.4.16 = add nsw i32 %ki.06.4.16, %inc58.15
  %notlhs.4.16 = icmp slt i32 %add.4.16, 0
  %notrhs.4.16 = icmp uge i32 %add.4.16, %img_height
  %.not.4.16 = or i1 %notrhs.4.16, %notlhs.4.16
  %brmerge.4.16 = or i1 %.not.4.16, %cmp151.not.4.16
  br i1 %brmerge.4.16, label %for.inc36.4.16, label %for.body16.lr.ph.4.16

for.body16.lr.ph.4.16:                            ; preds = %for.body10.4.16
  %mul.4.16 = shl i32 %add.4.16, 7
  %mul30.4.16 = mul i32 %ki.06.4.16, %kern_width
  br label %for.body16.4.16

for.body16.4.16:                                  ; preds = %for.inc.4.16, %for.body16.lr.ph.4.16
  %indvars.iv.4.16 = phi i64 [ 0, %for.body16.lr.ph.4.16 ], [ %indvars.iv.next.4.16, %for.inc.4.16 ]
  %partial_sum.12.4.16 = phi float [ %partial_sum.05.4.16, %for.body16.lr.ph.4.16 ], [ %partial_sum.2.4.16, %for.inc.4.16 ]
  %1214 = trunc i64 %indvars.iv.4.16 to i32
  %add17.4.16 = add nsw i32 %1214, %inc54.3.16
  %cmp18.4.16 = icmp sgt i32 %add17.4.16, -1
  %cmp21.4.16 = icmp ult i32 %add17.4.16, %img_width
  %1215 = and i1 %cmp18.4.16, %cmp21.4.16
  br i1 %1215, label %if.end26.4.16, label %for.inc.4.16

if.end26.4.16:                                    ; preds = %for.body16.4.16
  %add29.4.16 = add nsw i32 %add17.4.16, %mul.4.16
  %idxprom.4.16 = sext i32 %add29.4.16 to i64
  %arrayidx.4.16 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.16
  %1216 = load float, float* %arrayidx.4.16, align 4
  %1217 = trunc i64 %indvars.iv.4.16 to i32
  %add31.4.16 = add i32 %1217, %mul30.4.16
  %idxprom32.4.16 = zext i32 %add31.4.16 to i64
  %arrayidx33.4.16 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.16
  %1218 = load float, float* %arrayidx33.4.16, align 4
  %mul34.4.16 = fmul float %1216, %1218
  %add35.4.16 = fadd float %partial_sum.12.4.16, %mul34.4.16
  br label %for.inc.4.16

for.inc.4.16:                                     ; preds = %if.end26.4.16, %for.body16.4.16
  %partial_sum.2.4.16 = phi float [ %add35.4.16, %if.end26.4.16 ], [ %partial_sum.12.4.16, %for.body16.4.16 ]
  %indvars.iv.next.4.16 = add nuw nsw i64 %indvars.iv.4.16, 1
  %lftr.wideiv.4.16 = trunc i64 %indvars.iv.next.4.16 to i32
  %exitcond.4.16 = icmp eq i32 %lftr.wideiv.4.16, %kern_width
  br i1 %exitcond.4.16, label %for.inc36.4.16.loopexit, label %for.body16.4.16, !llvm.loop !1

for.inc36.4.16.loopexit:                          ; preds = %for.inc.4.16
  %partial_sum.2.4.16.lcssa = phi float [ %partial_sum.2.4.16, %for.inc.4.16 ]
  br label %for.inc36.4.16

for.inc36.4.16:                                   ; preds = %for.inc36.4.16.loopexit, %for.body10.4.16
  %partial_sum.3.4.16 = phi float [ %partial_sum.05.4.16, %for.body10.4.16 ], [ %partial_sum.2.4.16.lcssa, %for.inc36.4.16.loopexit ]
  %inc37.4.16 = add nuw nsw i32 %ki.06.4.16, 1
  %exitcond19.4.16 = icmp eq i32 %inc37.4.16, %kern_height
  br i1 %exitcond19.4.16, label %for.end38.4.16.loopexit, label %for.body10.4.16, !llvm.loop !3

for.end38.4.16.loopexit:                          ; preds = %for.inc36.4.16
  %partial_sum.3.4.16.lcssa = phi float [ %partial_sum.3.4.16, %for.inc36.4.16 ]
  br label %for.end38.4.16

for.end38.4.16:                                   ; preds = %for.end38.4.16.loopexit, %for.inc53.3.16
  %partial_sum.0.lcssa.4.16 = phi float [ 0.000000e+00, %for.inc53.3.16 ], [ %partial_sum.3.4.16.lcssa, %for.end38.4.16.loopexit ]
  br i1 %tobool39, label %if.else.4.16, label %if.then40.4.16

if.then40.4.16:                                   ; preds = %for.end38.4.16
  %cmp41.4.16 = fcmp olt float %partial_sum.0.lcssa.4.16, 0.000000e+00
  %sub42.4.16 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.16
  %cond.4.16 = select i1 %cmp41.4.16, float %sub42.4.16, float %partial_sum.0.lcssa.4.16
  %conv.4.16 = fptoui float %cond.4.16 to i8
  %conv43.4.16 = uitofp i8 %conv.4.16 to float
  %1219 = add nsw i64 %indvars.iv.next21.3.16, %1178
  %arrayidx47.4.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1219
  store float %conv43.4.16, float* %arrayidx47.4.16, align 4
  br label %for.inc53.4.16

if.else.4.16:                                     ; preds = %for.end38.4.16
  %1220 = add nsw i64 %indvars.iv.next21.3.16, %1177
  %arrayidx51.4.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1220
  store float %partial_sum.0.lcssa.4.16, float* %arrayidx51.4.16, align 4
  br label %for.inc53.4.16

for.inc53.4.16:                                   ; preds = %if.else.4.16, %if.then40.4.16
  %inc54.4.16 = add nsw i32 %in_j.011.16, 5
  %indvars.iv.next21.4.16 = add nsw i64 %indvars.iv20.16, 5
  br i1 %cmp94, label %for.end38.5.16, label %for.body10.5.16.preheader

for.body10.5.16.preheader:                        ; preds = %for.inc53.4.16
  br label %for.body10.5.16

for.body10.5.16:                                  ; preds = %for.body10.5.16.preheader, %for.inc36.5.16
  %ki.06.5.16 = phi i32 [ %inc37.5.16, %for.inc36.5.16 ], [ 0, %for.body10.5.16.preheader ]
  %partial_sum.05.5.16 = phi float [ %partial_sum.3.5.16, %for.inc36.5.16 ], [ 0.000000e+00, %for.body10.5.16.preheader ]
  %add.5.16 = add nsw i32 %ki.06.5.16, %inc58.15
  %notlhs.5.16 = icmp slt i32 %add.5.16, 0
  %notrhs.5.16 = icmp uge i32 %add.5.16, %img_height
  %.not.5.16 = or i1 %notrhs.5.16, %notlhs.5.16
  %brmerge.5.16 = or i1 %.not.5.16, %cmp151.not.5.16
  br i1 %brmerge.5.16, label %for.inc36.5.16, label %for.body16.lr.ph.5.16

for.body16.lr.ph.5.16:                            ; preds = %for.body10.5.16
  %mul.5.16 = shl i32 %add.5.16, 7
  %mul30.5.16 = mul i32 %ki.06.5.16, %kern_width
  br label %for.body16.5.16

for.body16.5.16:                                  ; preds = %for.inc.5.16, %for.body16.lr.ph.5.16
  %indvars.iv.5.16 = phi i64 [ 0, %for.body16.lr.ph.5.16 ], [ %indvars.iv.next.5.16, %for.inc.5.16 ]
  %partial_sum.12.5.16 = phi float [ %partial_sum.05.5.16, %for.body16.lr.ph.5.16 ], [ %partial_sum.2.5.16, %for.inc.5.16 ]
  %1221 = trunc i64 %indvars.iv.5.16 to i32
  %add17.5.16 = add nsw i32 %1221, %inc54.4.16
  %cmp18.5.16 = icmp sgt i32 %add17.5.16, -1
  %cmp21.5.16 = icmp ult i32 %add17.5.16, %img_width
  %1222 = and i1 %cmp18.5.16, %cmp21.5.16
  br i1 %1222, label %if.end26.5.16, label %for.inc.5.16

if.end26.5.16:                                    ; preds = %for.body16.5.16
  %add29.5.16 = add nsw i32 %add17.5.16, %mul.5.16
  %idxprom.5.16 = sext i32 %add29.5.16 to i64
  %arrayidx.5.16 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.16
  %1223 = load float, float* %arrayidx.5.16, align 4
  %1224 = trunc i64 %indvars.iv.5.16 to i32
  %add31.5.16 = add i32 %1224, %mul30.5.16
  %idxprom32.5.16 = zext i32 %add31.5.16 to i64
  %arrayidx33.5.16 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.16
  %1225 = load float, float* %arrayidx33.5.16, align 4
  %mul34.5.16 = fmul float %1223, %1225
  %add35.5.16 = fadd float %partial_sum.12.5.16, %mul34.5.16
  br label %for.inc.5.16

for.inc.5.16:                                     ; preds = %if.end26.5.16, %for.body16.5.16
  %partial_sum.2.5.16 = phi float [ %add35.5.16, %if.end26.5.16 ], [ %partial_sum.12.5.16, %for.body16.5.16 ]
  %indvars.iv.next.5.16 = add nuw nsw i64 %indvars.iv.5.16, 1
  %lftr.wideiv.5.16 = trunc i64 %indvars.iv.next.5.16 to i32
  %exitcond.5.16 = icmp eq i32 %lftr.wideiv.5.16, %kern_width
  br i1 %exitcond.5.16, label %for.inc36.5.16.loopexit, label %for.body16.5.16, !llvm.loop !1

for.inc36.5.16.loopexit:                          ; preds = %for.inc.5.16
  %partial_sum.2.5.16.lcssa = phi float [ %partial_sum.2.5.16, %for.inc.5.16 ]
  br label %for.inc36.5.16

for.inc36.5.16:                                   ; preds = %for.inc36.5.16.loopexit, %for.body10.5.16
  %partial_sum.3.5.16 = phi float [ %partial_sum.05.5.16, %for.body10.5.16 ], [ %partial_sum.2.5.16.lcssa, %for.inc36.5.16.loopexit ]
  %inc37.5.16 = add nuw nsw i32 %ki.06.5.16, 1
  %exitcond19.5.16 = icmp eq i32 %inc37.5.16, %kern_height
  br i1 %exitcond19.5.16, label %for.end38.5.16.loopexit, label %for.body10.5.16, !llvm.loop !3

for.end38.5.16.loopexit:                          ; preds = %for.inc36.5.16
  %partial_sum.3.5.16.lcssa = phi float [ %partial_sum.3.5.16, %for.inc36.5.16 ]
  br label %for.end38.5.16

for.end38.5.16:                                   ; preds = %for.end38.5.16.loopexit, %for.inc53.4.16
  %partial_sum.0.lcssa.5.16 = phi float [ 0.000000e+00, %for.inc53.4.16 ], [ %partial_sum.3.5.16.lcssa, %for.end38.5.16.loopexit ]
  br i1 %tobool39, label %if.else.5.16, label %if.then40.5.16

if.then40.5.16:                                   ; preds = %for.end38.5.16
  %cmp41.5.16 = fcmp olt float %partial_sum.0.lcssa.5.16, 0.000000e+00
  %sub42.5.16 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.16
  %cond.5.16 = select i1 %cmp41.5.16, float %sub42.5.16, float %partial_sum.0.lcssa.5.16
  %conv.5.16 = fptoui float %cond.5.16 to i8
  %conv43.5.16 = uitofp i8 %conv.5.16 to float
  %1226 = add nsw i64 %indvars.iv.next21.4.16, %1178
  %arrayidx47.5.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1226
  store float %conv43.5.16, float* %arrayidx47.5.16, align 4
  br label %for.inc53.5.16

if.else.5.16:                                     ; preds = %for.end38.5.16
  %1227 = add nsw i64 %indvars.iv.next21.4.16, %1177
  %arrayidx51.5.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1227
  store float %partial_sum.0.lcssa.5.16, float* %arrayidx51.5.16, align 4
  br label %for.inc53.5.16

for.inc53.5.16:                                   ; preds = %if.else.5.16, %if.then40.5.16
  %inc54.5.16 = add nsw i32 %in_j.011.16, 6
  %indvars.iv.next21.5.16 = add nsw i64 %indvars.iv20.16, 6
  br i1 %cmp94, label %for.end38.6.16, label %for.body10.6.16.preheader

for.body10.6.16.preheader:                        ; preds = %for.inc53.5.16
  br label %for.body10.6.16

for.body10.6.16:                                  ; preds = %for.body10.6.16.preheader, %for.inc36.6.16
  %ki.06.6.16 = phi i32 [ %inc37.6.16, %for.inc36.6.16 ], [ 0, %for.body10.6.16.preheader ]
  %partial_sum.05.6.16 = phi float [ %partial_sum.3.6.16, %for.inc36.6.16 ], [ 0.000000e+00, %for.body10.6.16.preheader ]
  %add.6.16 = add nsw i32 %ki.06.6.16, %inc58.15
  %notlhs.6.16 = icmp slt i32 %add.6.16, 0
  %notrhs.6.16 = icmp uge i32 %add.6.16, %img_height
  %.not.6.16 = or i1 %notrhs.6.16, %notlhs.6.16
  %brmerge.6.16 = or i1 %.not.6.16, %cmp151.not.6.16
  br i1 %brmerge.6.16, label %for.inc36.6.16, label %for.body16.lr.ph.6.16

for.body16.lr.ph.6.16:                            ; preds = %for.body10.6.16
  %mul.6.16 = shl i32 %add.6.16, 7
  %mul30.6.16 = mul i32 %ki.06.6.16, %kern_width
  br label %for.body16.6.16

for.body16.6.16:                                  ; preds = %for.inc.6.16, %for.body16.lr.ph.6.16
  %indvars.iv.6.16 = phi i64 [ 0, %for.body16.lr.ph.6.16 ], [ %indvars.iv.next.6.16, %for.inc.6.16 ]
  %partial_sum.12.6.16 = phi float [ %partial_sum.05.6.16, %for.body16.lr.ph.6.16 ], [ %partial_sum.2.6.16, %for.inc.6.16 ]
  %1228 = trunc i64 %indvars.iv.6.16 to i32
  %add17.6.16 = add nsw i32 %1228, %inc54.5.16
  %cmp18.6.16 = icmp sgt i32 %add17.6.16, -1
  %cmp21.6.16 = icmp ult i32 %add17.6.16, %img_width
  %1229 = and i1 %cmp18.6.16, %cmp21.6.16
  br i1 %1229, label %if.end26.6.16, label %for.inc.6.16

if.end26.6.16:                                    ; preds = %for.body16.6.16
  %add29.6.16 = add nsw i32 %add17.6.16, %mul.6.16
  %idxprom.6.16 = sext i32 %add29.6.16 to i64
  %arrayidx.6.16 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.16
  %1230 = load float, float* %arrayidx.6.16, align 4
  %1231 = trunc i64 %indvars.iv.6.16 to i32
  %add31.6.16 = add i32 %1231, %mul30.6.16
  %idxprom32.6.16 = zext i32 %add31.6.16 to i64
  %arrayidx33.6.16 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.16
  %1232 = load float, float* %arrayidx33.6.16, align 4
  %mul34.6.16 = fmul float %1230, %1232
  %add35.6.16 = fadd float %partial_sum.12.6.16, %mul34.6.16
  br label %for.inc.6.16

for.inc.6.16:                                     ; preds = %if.end26.6.16, %for.body16.6.16
  %partial_sum.2.6.16 = phi float [ %add35.6.16, %if.end26.6.16 ], [ %partial_sum.12.6.16, %for.body16.6.16 ]
  %indvars.iv.next.6.16 = add nuw nsw i64 %indvars.iv.6.16, 1
  %lftr.wideiv.6.16 = trunc i64 %indvars.iv.next.6.16 to i32
  %exitcond.6.16 = icmp eq i32 %lftr.wideiv.6.16, %kern_width
  br i1 %exitcond.6.16, label %for.inc36.6.16.loopexit, label %for.body16.6.16, !llvm.loop !1

for.inc36.6.16.loopexit:                          ; preds = %for.inc.6.16
  %partial_sum.2.6.16.lcssa = phi float [ %partial_sum.2.6.16, %for.inc.6.16 ]
  br label %for.inc36.6.16

for.inc36.6.16:                                   ; preds = %for.inc36.6.16.loopexit, %for.body10.6.16
  %partial_sum.3.6.16 = phi float [ %partial_sum.05.6.16, %for.body10.6.16 ], [ %partial_sum.2.6.16.lcssa, %for.inc36.6.16.loopexit ]
  %inc37.6.16 = add nuw nsw i32 %ki.06.6.16, 1
  %exitcond19.6.16 = icmp eq i32 %inc37.6.16, %kern_height
  br i1 %exitcond19.6.16, label %for.end38.6.16.loopexit, label %for.body10.6.16, !llvm.loop !3

for.end38.6.16.loopexit:                          ; preds = %for.inc36.6.16
  %partial_sum.3.6.16.lcssa = phi float [ %partial_sum.3.6.16, %for.inc36.6.16 ]
  br label %for.end38.6.16

for.end38.6.16:                                   ; preds = %for.end38.6.16.loopexit, %for.inc53.5.16
  %partial_sum.0.lcssa.6.16 = phi float [ 0.000000e+00, %for.inc53.5.16 ], [ %partial_sum.3.6.16.lcssa, %for.end38.6.16.loopexit ]
  br i1 %tobool39, label %if.else.6.16, label %if.then40.6.16

if.then40.6.16:                                   ; preds = %for.end38.6.16
  %cmp41.6.16 = fcmp olt float %partial_sum.0.lcssa.6.16, 0.000000e+00
  %sub42.6.16 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.16
  %cond.6.16 = select i1 %cmp41.6.16, float %sub42.6.16, float %partial_sum.0.lcssa.6.16
  %conv.6.16 = fptoui float %cond.6.16 to i8
  %conv43.6.16 = uitofp i8 %conv.6.16 to float
  %1233 = add nsw i64 %indvars.iv.next21.5.16, %1178
  %arrayidx47.6.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1233
  store float %conv43.6.16, float* %arrayidx47.6.16, align 4
  br label %for.inc53.6.16

if.else.6.16:                                     ; preds = %for.end38.6.16
  %1234 = add nsw i64 %indvars.iv.next21.5.16, %1177
  %arrayidx51.6.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1234
  store float %partial_sum.0.lcssa.6.16, float* %arrayidx51.6.16, align 4
  br label %for.inc53.6.16

for.inc53.6.16:                                   ; preds = %if.else.6.16, %if.then40.6.16
  %inc54.6.16 = add nsw i32 %in_j.011.16, 7
  %indvars.iv.next21.6.16 = add nsw i64 %indvars.iv20.16, 7
  br i1 %cmp94, label %for.end38.7.16, label %for.body10.7.16.preheader

for.body10.7.16.preheader:                        ; preds = %for.inc53.6.16
  br label %for.body10.7.16

for.body10.7.16:                                  ; preds = %for.body10.7.16.preheader, %for.inc36.7.16
  %ki.06.7.16 = phi i32 [ %inc37.7.16, %for.inc36.7.16 ], [ 0, %for.body10.7.16.preheader ]
  %partial_sum.05.7.16 = phi float [ %partial_sum.3.7.16, %for.inc36.7.16 ], [ 0.000000e+00, %for.body10.7.16.preheader ]
  %add.7.16 = add nsw i32 %ki.06.7.16, %inc58.15
  %notlhs.7.16 = icmp slt i32 %add.7.16, 0
  %notrhs.7.16 = icmp uge i32 %add.7.16, %img_height
  %.not.7.16 = or i1 %notrhs.7.16, %notlhs.7.16
  %brmerge.7.16 = or i1 %.not.7.16, %cmp151.not.7.16
  br i1 %brmerge.7.16, label %for.inc36.7.16, label %for.body16.lr.ph.7.16

for.body16.lr.ph.7.16:                            ; preds = %for.body10.7.16
  %mul.7.16 = shl i32 %add.7.16, 7
  %mul30.7.16 = mul i32 %ki.06.7.16, %kern_width
  br label %for.body16.7.16

for.body16.7.16:                                  ; preds = %for.inc.7.16, %for.body16.lr.ph.7.16
  %indvars.iv.7.16 = phi i64 [ 0, %for.body16.lr.ph.7.16 ], [ %indvars.iv.next.7.16, %for.inc.7.16 ]
  %partial_sum.12.7.16 = phi float [ %partial_sum.05.7.16, %for.body16.lr.ph.7.16 ], [ %partial_sum.2.7.16, %for.inc.7.16 ]
  %1235 = trunc i64 %indvars.iv.7.16 to i32
  %add17.7.16 = add nsw i32 %1235, %inc54.6.16
  %cmp18.7.16 = icmp sgt i32 %add17.7.16, -1
  %cmp21.7.16 = icmp ult i32 %add17.7.16, %img_width
  %1236 = and i1 %cmp18.7.16, %cmp21.7.16
  br i1 %1236, label %if.end26.7.16, label %for.inc.7.16

if.end26.7.16:                                    ; preds = %for.body16.7.16
  %add29.7.16 = add nsw i32 %add17.7.16, %mul.7.16
  %idxprom.7.16 = sext i32 %add29.7.16 to i64
  %arrayidx.7.16 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.16
  %1237 = load float, float* %arrayidx.7.16, align 4
  %1238 = trunc i64 %indvars.iv.7.16 to i32
  %add31.7.16 = add i32 %1238, %mul30.7.16
  %idxprom32.7.16 = zext i32 %add31.7.16 to i64
  %arrayidx33.7.16 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.16
  %1239 = load float, float* %arrayidx33.7.16, align 4
  %mul34.7.16 = fmul float %1237, %1239
  %add35.7.16 = fadd float %partial_sum.12.7.16, %mul34.7.16
  br label %for.inc.7.16

for.inc.7.16:                                     ; preds = %if.end26.7.16, %for.body16.7.16
  %partial_sum.2.7.16 = phi float [ %add35.7.16, %if.end26.7.16 ], [ %partial_sum.12.7.16, %for.body16.7.16 ]
  %indvars.iv.next.7.16 = add nuw nsw i64 %indvars.iv.7.16, 1
  %lftr.wideiv.7.16 = trunc i64 %indvars.iv.next.7.16 to i32
  %exitcond.7.16 = icmp eq i32 %lftr.wideiv.7.16, %kern_width
  br i1 %exitcond.7.16, label %for.inc36.7.16.loopexit, label %for.body16.7.16, !llvm.loop !1

for.inc36.7.16.loopexit:                          ; preds = %for.inc.7.16
  %partial_sum.2.7.16.lcssa = phi float [ %partial_sum.2.7.16, %for.inc.7.16 ]
  br label %for.inc36.7.16

for.inc36.7.16:                                   ; preds = %for.inc36.7.16.loopexit, %for.body10.7.16
  %partial_sum.3.7.16 = phi float [ %partial_sum.05.7.16, %for.body10.7.16 ], [ %partial_sum.2.7.16.lcssa, %for.inc36.7.16.loopexit ]
  %inc37.7.16 = add nuw nsw i32 %ki.06.7.16, 1
  %exitcond19.7.16 = icmp eq i32 %inc37.7.16, %kern_height
  br i1 %exitcond19.7.16, label %for.end38.7.16.loopexit, label %for.body10.7.16, !llvm.loop !3

for.end38.7.16.loopexit:                          ; preds = %for.inc36.7.16
  %partial_sum.3.7.16.lcssa = phi float [ %partial_sum.3.7.16, %for.inc36.7.16 ]
  br label %for.end38.7.16

for.end38.7.16:                                   ; preds = %for.end38.7.16.loopexit, %for.inc53.6.16
  %partial_sum.0.lcssa.7.16 = phi float [ 0.000000e+00, %for.inc53.6.16 ], [ %partial_sum.3.7.16.lcssa, %for.end38.7.16.loopexit ]
  br i1 %tobool39, label %if.else.7.16, label %if.then40.7.16

if.then40.7.16:                                   ; preds = %for.end38.7.16
  %cmp41.7.16 = fcmp olt float %partial_sum.0.lcssa.7.16, 0.000000e+00
  %sub42.7.16 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.16
  %cond.7.16 = select i1 %cmp41.7.16, float %sub42.7.16, float %partial_sum.0.lcssa.7.16
  %conv.7.16 = fptoui float %cond.7.16 to i8
  %conv43.7.16 = uitofp i8 %conv.7.16 to float
  %1240 = add nsw i64 %indvars.iv.next21.6.16, %1178
  %arrayidx47.7.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1240
  store float %conv43.7.16, float* %arrayidx47.7.16, align 4
  br label %for.inc53.7.16

if.else.7.16:                                     ; preds = %for.end38.7.16
  %1241 = add nsw i64 %indvars.iv.next21.6.16, %1177
  %arrayidx51.7.16 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1241
  store float %partial_sum.0.lcssa.7.16, float* %arrayidx51.7.16, align 4
  br label %for.inc53.7.16

for.inc53.7.16:                                   ; preds = %if.else.7.16, %if.then40.7.16
  %inc54.7.16 = add nsw i32 %in_j.011.16, 8
  %indvars.iv.next21.7.16 = add nsw i64 %indvars.iv20.16, 8
  %lftr.wideiv24.7.16 = trunc i64 %indvars.iv.next21.7.16 to i32
  %exitcond25.7.16 = icmp eq i32 %lftr.wideiv24.7.16, %img_width
  br i1 %exitcond25.7.16, label %for.inc57.16.loopexit, label %for.cond8.preheader.16, !llvm.loop !5

for.inc57.16.loopexit:                            ; preds = %for.inc53.7.16
  br label %for.inc57.16

for.inc57.16:                                     ; preds = %for.inc57.16.loopexit, %for.cond8.preheader.lr.ph.split.16
  %inc58.16 = add nsw i32 %in_i.015, 17
  %indvars.iv.next27.16 = add nsw i64 %indvars.iv26, 17
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.17

for.cond8.preheader.lr.ph.17:                     ; preds = %for.inc57.16
  %1242 = trunc i64 %indvars.iv.next27.16 to i32
  %mul48.17 = shl i32 %1242, 7
  %1243 = trunc i64 %indvars.iv.next27.16 to i32
  %mul44.17 = shl i32 %1243, 7
  %1244 = sext i32 %mul48.17 to i64
  %1245 = sext i32 %mul44.17 to i64
  br i1 %lcmp.mod.17, label %for.cond8.preheader.lr.ph.split.17, label %for.cond8.preheader.prol.17.preheader

for.cond8.preheader.prol.17.preheader:            ; preds = %for.cond8.preheader.lr.ph.17
  br label %for.cond8.preheader.prol.17

for.cond8.preheader.prol.17:                      ; preds = %for.cond8.preheader.prol.17.preheader, %for.inc53.prol.17
  %indvars.iv20.prol.17 = phi i64 [ %indvars.iv.next21.prol.17, %for.inc53.prol.17 ], [ 0, %for.cond8.preheader.prol.17.preheader ]
  %in_j.011.prol.17 = phi i32 [ %inc54.prol.17, %for.inc53.prol.17 ], [ %sub4, %for.cond8.preheader.prol.17.preheader ]
  %prol.iter.17 = phi i32 [ %prol.iter.sub.17, %for.inc53.prol.17 ], [ %xtraiter.17, %for.cond8.preheader.prol.17.preheader ]
  br i1 %cmp94, label %for.end38.prol.17, label %for.body10.prol.17.preheader

for.body10.prol.17.preheader:                     ; preds = %for.cond8.preheader.prol.17
  br label %for.body10.prol.17

for.body10.prol.17:                               ; preds = %for.body10.prol.17.preheader, %for.inc36.prol.17
  %ki.06.prol.17 = phi i32 [ %inc37.prol.17, %for.inc36.prol.17 ], [ 0, %for.body10.prol.17.preheader ]
  %partial_sum.05.prol.17 = phi float [ %partial_sum.3.prol.17, %for.inc36.prol.17 ], [ 0.000000e+00, %for.body10.prol.17.preheader ]
  %add.prol.17 = add nsw i32 %ki.06.prol.17, %inc58.16
  %notlhs.prol.17 = icmp slt i32 %add.prol.17, 0
  %notrhs.prol.17 = icmp uge i32 %add.prol.17, %img_height
  %.not.prol.17 = or i1 %notrhs.prol.17, %notlhs.prol.17
  %brmerge.prol.17 = or i1 %.not.prol.17, %cmp151.not.prol.17
  br i1 %brmerge.prol.17, label %for.inc36.prol.17, label %for.body16.lr.ph.prol.17

for.body16.lr.ph.prol.17:                         ; preds = %for.body10.prol.17
  %mul.prol.17 = shl i32 %add.prol.17, 7
  %mul30.prol.17 = mul i32 %ki.06.prol.17, %kern_width
  br label %for.body16.prol.17

for.body16.prol.17:                               ; preds = %for.inc.prol.17, %for.body16.lr.ph.prol.17
  %indvars.iv.prol.17 = phi i64 [ 0, %for.body16.lr.ph.prol.17 ], [ %indvars.iv.next.prol.17, %for.inc.prol.17 ]
  %partial_sum.12.prol.17 = phi float [ %partial_sum.05.prol.17, %for.body16.lr.ph.prol.17 ], [ %partial_sum.2.prol.17, %for.inc.prol.17 ]
  %1246 = trunc i64 %indvars.iv.prol.17 to i32
  %add17.prol.17 = add nsw i32 %1246, %in_j.011.prol.17
  %cmp18.prol.17 = icmp sgt i32 %add17.prol.17, -1
  %cmp21.prol.17 = icmp ult i32 %add17.prol.17, %img_width
  %1247 = and i1 %cmp18.prol.17, %cmp21.prol.17
  br i1 %1247, label %if.end26.prol.17, label %for.inc.prol.17

if.end26.prol.17:                                 ; preds = %for.body16.prol.17
  %add29.prol.17 = add nsw i32 %add17.prol.17, %mul.prol.17
  %idxprom.prol.17 = sext i32 %add29.prol.17 to i64
  %arrayidx.prol.17 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.17
  %1248 = load float, float* %arrayidx.prol.17, align 4
  %1249 = trunc i64 %indvars.iv.prol.17 to i32
  %add31.prol.17 = add i32 %1249, %mul30.prol.17
  %idxprom32.prol.17 = zext i32 %add31.prol.17 to i64
  %arrayidx33.prol.17 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.17
  %1250 = load float, float* %arrayidx33.prol.17, align 4
  %mul34.prol.17 = fmul float %1248, %1250
  %add35.prol.17 = fadd float %partial_sum.12.prol.17, %mul34.prol.17
  br label %for.inc.prol.17

for.inc.prol.17:                                  ; preds = %if.end26.prol.17, %for.body16.prol.17
  %partial_sum.2.prol.17 = phi float [ %add35.prol.17, %if.end26.prol.17 ], [ %partial_sum.12.prol.17, %for.body16.prol.17 ]
  %indvars.iv.next.prol.17 = add nuw nsw i64 %indvars.iv.prol.17, 1
  %lftr.wideiv.prol.17 = trunc i64 %indvars.iv.next.prol.17 to i32
  %exitcond.prol.17 = icmp eq i32 %lftr.wideiv.prol.17, %kern_width
  br i1 %exitcond.prol.17, label %for.inc36.prol.17.loopexit, label %for.body16.prol.17, !llvm.loop !1

for.inc36.prol.17.loopexit:                       ; preds = %for.inc.prol.17
  %partial_sum.2.prol.17.lcssa = phi float [ %partial_sum.2.prol.17, %for.inc.prol.17 ]
  br label %for.inc36.prol.17

for.inc36.prol.17:                                ; preds = %for.inc36.prol.17.loopexit, %for.body10.prol.17
  %partial_sum.3.prol.17 = phi float [ %partial_sum.05.prol.17, %for.body10.prol.17 ], [ %partial_sum.2.prol.17.lcssa, %for.inc36.prol.17.loopexit ]
  %inc37.prol.17 = add nuw nsw i32 %ki.06.prol.17, 1
  %exitcond19.prol.17 = icmp eq i32 %inc37.prol.17, %kern_height
  br i1 %exitcond19.prol.17, label %for.end38.prol.17.loopexit, label %for.body10.prol.17, !llvm.loop !3

for.end38.prol.17.loopexit:                       ; preds = %for.inc36.prol.17
  %partial_sum.3.prol.17.lcssa = phi float [ %partial_sum.3.prol.17, %for.inc36.prol.17 ]
  br label %for.end38.prol.17

for.end38.prol.17:                                ; preds = %for.end38.prol.17.loopexit, %for.cond8.preheader.prol.17
  %partial_sum.0.lcssa.prol.17 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.17 ], [ %partial_sum.3.prol.17.lcssa, %for.end38.prol.17.loopexit ]
  br i1 %tobool39, label %if.else.prol.17, label %if.then40.prol.17

if.then40.prol.17:                                ; preds = %for.end38.prol.17
  %cmp41.prol.17 = fcmp olt float %partial_sum.0.lcssa.prol.17, 0.000000e+00
  %sub42.prol.17 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.17
  %cond.prol.17 = select i1 %cmp41.prol.17, float %sub42.prol.17, float %partial_sum.0.lcssa.prol.17
  %conv.prol.17 = fptoui float %cond.prol.17 to i8
  %conv43.prol.17 = uitofp i8 %conv.prol.17 to float
  %1251 = add nsw i64 %indvars.iv20.prol.17, %1245
  %arrayidx47.prol.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1251
  store float %conv43.prol.17, float* %arrayidx47.prol.17, align 4
  br label %for.inc53.prol.17

if.else.prol.17:                                  ; preds = %for.end38.prol.17
  %1252 = add nsw i64 %indvars.iv20.prol.17, %1244
  %arrayidx51.prol.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1252
  store float %partial_sum.0.lcssa.prol.17, float* %arrayidx51.prol.17, align 4
  br label %for.inc53.prol.17

for.inc53.prol.17:                                ; preds = %if.else.prol.17, %if.then40.prol.17
  %inc54.prol.17 = add nsw i32 %in_j.011.prol.17, 1
  %indvars.iv.next21.prol.17 = add nuw nsw i64 %indvars.iv20.prol.17, 1
  %prol.iter.sub.17 = add i32 %prol.iter.17, -1
  %prol.iter.cmp.17 = icmp eq i32 %prol.iter.sub.17, 0
  br i1 %prol.iter.cmp.17, label %for.cond8.preheader.lr.ph.split.17.loopexit, label %for.cond8.preheader.prol.17, !llvm.loop !4

for.cond8.preheader.lr.ph.split.17.loopexit:      ; preds = %for.inc53.prol.17
  %indvars.iv.next21.prol.17.lcssa = phi i64 [ %indvars.iv.next21.prol.17, %for.inc53.prol.17 ]
  %inc54.prol.17.lcssa = phi i32 [ %inc54.prol.17, %for.inc53.prol.17 ]
  br label %for.cond8.preheader.lr.ph.split.17

for.cond8.preheader.lr.ph.split.17:               ; preds = %for.cond8.preheader.lr.ph.split.17.loopexit, %for.cond8.preheader.lr.ph.17
  %indvars.iv20.unr.17 = phi i64 [ 0, %for.cond8.preheader.lr.ph.17 ], [ %indvars.iv.next21.prol.17.lcssa, %for.cond8.preheader.lr.ph.split.17.loopexit ]
  %in_j.011.unr.17 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.17 ], [ %inc54.prol.17.lcssa, %for.cond8.preheader.lr.ph.split.17.loopexit ]
  br i1 %88, label %for.inc57.17, label %for.cond8.preheader.17.preheader

for.cond8.preheader.17.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.17
  br label %for.cond8.preheader.17

for.cond8.preheader.17:                           ; preds = %for.cond8.preheader.17.preheader, %for.inc53.7.17
  %indvars.iv20.17 = phi i64 [ %indvars.iv.next21.7.17, %for.inc53.7.17 ], [ %indvars.iv20.unr.17, %for.cond8.preheader.17.preheader ]
  %in_j.011.17 = phi i32 [ %inc54.7.17, %for.inc53.7.17 ], [ %in_j.011.unr.17, %for.cond8.preheader.17.preheader ]
  br i1 %cmp94, label %for.end38.17, label %for.body10.17.preheader

for.body10.17.preheader:                          ; preds = %for.cond8.preheader.17
  br label %for.body10.17

for.body10.17:                                    ; preds = %for.body10.17.preheader, %for.inc36.17
  %ki.06.17 = phi i32 [ %inc37.17, %for.inc36.17 ], [ 0, %for.body10.17.preheader ]
  %partial_sum.05.17 = phi float [ %partial_sum.3.17, %for.inc36.17 ], [ 0.000000e+00, %for.body10.17.preheader ]
  %add.17 = add nsw i32 %ki.06.17, %inc58.16
  %notlhs.17 = icmp slt i32 %add.17, 0
  %notrhs.17 = icmp uge i32 %add.17, %img_height
  %.not.17 = or i1 %notrhs.17, %notlhs.17
  %brmerge.17 = or i1 %.not.17, %cmp151.not.17
  br i1 %brmerge.17, label %for.inc36.17, label %for.body16.lr.ph.17

for.body16.lr.ph.17:                              ; preds = %for.body10.17
  %mul.17 = shl i32 %add.17, 7
  %mul30.17 = mul i32 %ki.06.17, %kern_width
  br label %for.body16.17

for.body16.17:                                    ; preds = %for.inc.17, %for.body16.lr.ph.17
  %indvars.iv.17 = phi i64 [ 0, %for.body16.lr.ph.17 ], [ %indvars.iv.next.17, %for.inc.17 ]
  %partial_sum.12.17 = phi float [ %partial_sum.05.17, %for.body16.lr.ph.17 ], [ %partial_sum.2.17, %for.inc.17 ]
  %1253 = trunc i64 %indvars.iv.17 to i32
  %add17.17 = add nsw i32 %1253, %in_j.011.17
  %cmp18.17 = icmp sgt i32 %add17.17, -1
  %cmp21.17 = icmp ult i32 %add17.17, %img_width
  %1254 = and i1 %cmp18.17, %cmp21.17
  br i1 %1254, label %if.end26.17, label %for.inc.17

if.end26.17:                                      ; preds = %for.body16.17
  %add29.17 = add nsw i32 %add17.17, %mul.17
  %idxprom.17 = sext i32 %add29.17 to i64
  %arrayidx.17 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.17
  %1255 = load float, float* %arrayidx.17, align 4
  %1256 = trunc i64 %indvars.iv.17 to i32
  %add31.17 = add i32 %1256, %mul30.17
  %idxprom32.17 = zext i32 %add31.17 to i64
  %arrayidx33.17 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.17
  %1257 = load float, float* %arrayidx33.17, align 4
  %mul34.17 = fmul float %1255, %1257
  %add35.17 = fadd float %partial_sum.12.17, %mul34.17
  br label %for.inc.17

for.inc.17:                                       ; preds = %if.end26.17, %for.body16.17
  %partial_sum.2.17 = phi float [ %add35.17, %if.end26.17 ], [ %partial_sum.12.17, %for.body16.17 ]
  %indvars.iv.next.17 = add nuw nsw i64 %indvars.iv.17, 1
  %lftr.wideiv.17 = trunc i64 %indvars.iv.next.17 to i32
  %exitcond.17 = icmp eq i32 %lftr.wideiv.17, %kern_width
  br i1 %exitcond.17, label %for.inc36.17.loopexit, label %for.body16.17, !llvm.loop !1

for.inc36.17.loopexit:                            ; preds = %for.inc.17
  %partial_sum.2.17.lcssa = phi float [ %partial_sum.2.17, %for.inc.17 ]
  br label %for.inc36.17

for.inc36.17:                                     ; preds = %for.inc36.17.loopexit, %for.body10.17
  %partial_sum.3.17 = phi float [ %partial_sum.05.17, %for.body10.17 ], [ %partial_sum.2.17.lcssa, %for.inc36.17.loopexit ]
  %inc37.17 = add nuw nsw i32 %ki.06.17, 1
  %exitcond19.17 = icmp eq i32 %inc37.17, %kern_height
  br i1 %exitcond19.17, label %for.end38.17.loopexit, label %for.body10.17, !llvm.loop !3

for.end38.17.loopexit:                            ; preds = %for.inc36.17
  %partial_sum.3.17.lcssa = phi float [ %partial_sum.3.17, %for.inc36.17 ]
  br label %for.end38.17

for.end38.17:                                     ; preds = %for.end38.17.loopexit, %for.cond8.preheader.17
  %partial_sum.0.lcssa.17 = phi float [ 0.000000e+00, %for.cond8.preheader.17 ], [ %partial_sum.3.17.lcssa, %for.end38.17.loopexit ]
  br i1 %tobool39, label %if.else.17, label %if.then40.17

if.then40.17:                                     ; preds = %for.end38.17
  %cmp41.17 = fcmp olt float %partial_sum.0.lcssa.17, 0.000000e+00
  %sub42.17 = fsub float -0.000000e+00, %partial_sum.0.lcssa.17
  %cond.17 = select i1 %cmp41.17, float %sub42.17, float %partial_sum.0.lcssa.17
  %conv.17 = fptoui float %cond.17 to i8
  %conv43.17 = uitofp i8 %conv.17 to float
  %1258 = add nsw i64 %indvars.iv20.17, %1245
  %arrayidx47.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1258
  store float %conv43.17, float* %arrayidx47.17, align 4
  br label %for.inc53.17

if.else.17:                                       ; preds = %for.end38.17
  %1259 = add nsw i64 %indvars.iv20.17, %1244
  %arrayidx51.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1259
  store float %partial_sum.0.lcssa.17, float* %arrayidx51.17, align 4
  br label %for.inc53.17

for.inc53.17:                                     ; preds = %if.else.17, %if.then40.17
  %inc54.17 = add nsw i32 %in_j.011.17, 1
  %indvars.iv.next21.17 = add nuw nsw i64 %indvars.iv20.17, 1
  br i1 %cmp94, label %for.end38.1.17, label %for.body10.1.17.preheader

for.body10.1.17.preheader:                        ; preds = %for.inc53.17
  br label %for.body10.1.17

for.body10.1.17:                                  ; preds = %for.body10.1.17.preheader, %for.inc36.1.17
  %ki.06.1.17 = phi i32 [ %inc37.1.17, %for.inc36.1.17 ], [ 0, %for.body10.1.17.preheader ]
  %partial_sum.05.1.17 = phi float [ %partial_sum.3.1.17, %for.inc36.1.17 ], [ 0.000000e+00, %for.body10.1.17.preheader ]
  %add.1.17 = add nsw i32 %ki.06.1.17, %inc58.16
  %notlhs.1.17 = icmp slt i32 %add.1.17, 0
  %notrhs.1.17 = icmp uge i32 %add.1.17, %img_height
  %.not.1.17 = or i1 %notrhs.1.17, %notlhs.1.17
  %brmerge.1.17 = or i1 %.not.1.17, %cmp151.not.1.17
  br i1 %brmerge.1.17, label %for.inc36.1.17, label %for.body16.lr.ph.1.17

for.body16.lr.ph.1.17:                            ; preds = %for.body10.1.17
  %mul.1.17 = shl i32 %add.1.17, 7
  %mul30.1.17 = mul i32 %ki.06.1.17, %kern_width
  br label %for.body16.1.17

for.body16.1.17:                                  ; preds = %for.inc.1.17, %for.body16.lr.ph.1.17
  %indvars.iv.1.17 = phi i64 [ 0, %for.body16.lr.ph.1.17 ], [ %indvars.iv.next.1.17, %for.inc.1.17 ]
  %partial_sum.12.1.17 = phi float [ %partial_sum.05.1.17, %for.body16.lr.ph.1.17 ], [ %partial_sum.2.1.17, %for.inc.1.17 ]
  %1260 = trunc i64 %indvars.iv.1.17 to i32
  %add17.1.17 = add nsw i32 %1260, %inc54.17
  %cmp18.1.17 = icmp sgt i32 %add17.1.17, -1
  %cmp21.1.17 = icmp ult i32 %add17.1.17, %img_width
  %1261 = and i1 %cmp18.1.17, %cmp21.1.17
  br i1 %1261, label %if.end26.1.17, label %for.inc.1.17

if.end26.1.17:                                    ; preds = %for.body16.1.17
  %add29.1.17 = add nsw i32 %add17.1.17, %mul.1.17
  %idxprom.1.17 = sext i32 %add29.1.17 to i64
  %arrayidx.1.17 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.17
  %1262 = load float, float* %arrayidx.1.17, align 4
  %1263 = trunc i64 %indvars.iv.1.17 to i32
  %add31.1.17 = add i32 %1263, %mul30.1.17
  %idxprom32.1.17 = zext i32 %add31.1.17 to i64
  %arrayidx33.1.17 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.17
  %1264 = load float, float* %arrayidx33.1.17, align 4
  %mul34.1.17 = fmul float %1262, %1264
  %add35.1.17 = fadd float %partial_sum.12.1.17, %mul34.1.17
  br label %for.inc.1.17

for.inc.1.17:                                     ; preds = %if.end26.1.17, %for.body16.1.17
  %partial_sum.2.1.17 = phi float [ %add35.1.17, %if.end26.1.17 ], [ %partial_sum.12.1.17, %for.body16.1.17 ]
  %indvars.iv.next.1.17 = add nuw nsw i64 %indvars.iv.1.17, 1
  %lftr.wideiv.1.17 = trunc i64 %indvars.iv.next.1.17 to i32
  %exitcond.1.17 = icmp eq i32 %lftr.wideiv.1.17, %kern_width
  br i1 %exitcond.1.17, label %for.inc36.1.17.loopexit, label %for.body16.1.17, !llvm.loop !1

for.inc36.1.17.loopexit:                          ; preds = %for.inc.1.17
  %partial_sum.2.1.17.lcssa = phi float [ %partial_sum.2.1.17, %for.inc.1.17 ]
  br label %for.inc36.1.17

for.inc36.1.17:                                   ; preds = %for.inc36.1.17.loopexit, %for.body10.1.17
  %partial_sum.3.1.17 = phi float [ %partial_sum.05.1.17, %for.body10.1.17 ], [ %partial_sum.2.1.17.lcssa, %for.inc36.1.17.loopexit ]
  %inc37.1.17 = add nuw nsw i32 %ki.06.1.17, 1
  %exitcond19.1.17 = icmp eq i32 %inc37.1.17, %kern_height
  br i1 %exitcond19.1.17, label %for.end38.1.17.loopexit, label %for.body10.1.17, !llvm.loop !3

for.end38.1.17.loopexit:                          ; preds = %for.inc36.1.17
  %partial_sum.3.1.17.lcssa = phi float [ %partial_sum.3.1.17, %for.inc36.1.17 ]
  br label %for.end38.1.17

for.end38.1.17:                                   ; preds = %for.end38.1.17.loopexit, %for.inc53.17
  %partial_sum.0.lcssa.1.17 = phi float [ 0.000000e+00, %for.inc53.17 ], [ %partial_sum.3.1.17.lcssa, %for.end38.1.17.loopexit ]
  br i1 %tobool39, label %if.else.1.17, label %if.then40.1.17

if.then40.1.17:                                   ; preds = %for.end38.1.17
  %cmp41.1.17 = fcmp olt float %partial_sum.0.lcssa.1.17, 0.000000e+00
  %sub42.1.17 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.17
  %cond.1.17 = select i1 %cmp41.1.17, float %sub42.1.17, float %partial_sum.0.lcssa.1.17
  %conv.1.17 = fptoui float %cond.1.17 to i8
  %conv43.1.17 = uitofp i8 %conv.1.17 to float
  %1265 = add nsw i64 %indvars.iv.next21.17, %1245
  %arrayidx47.1.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1265
  store float %conv43.1.17, float* %arrayidx47.1.17, align 4
  br label %for.inc53.1.17

if.else.1.17:                                     ; preds = %for.end38.1.17
  %1266 = add nsw i64 %indvars.iv.next21.17, %1244
  %arrayidx51.1.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1266
  store float %partial_sum.0.lcssa.1.17, float* %arrayidx51.1.17, align 4
  br label %for.inc53.1.17

for.inc53.1.17:                                   ; preds = %if.else.1.17, %if.then40.1.17
  %inc54.1.17 = add nsw i32 %in_j.011.17, 2
  %indvars.iv.next21.1.17 = add nsw i64 %indvars.iv20.17, 2
  br i1 %cmp94, label %for.end38.2.17, label %for.body10.2.17.preheader

for.body10.2.17.preheader:                        ; preds = %for.inc53.1.17
  br label %for.body10.2.17

for.body10.2.17:                                  ; preds = %for.body10.2.17.preheader, %for.inc36.2.17
  %ki.06.2.17 = phi i32 [ %inc37.2.17, %for.inc36.2.17 ], [ 0, %for.body10.2.17.preheader ]
  %partial_sum.05.2.17 = phi float [ %partial_sum.3.2.17, %for.inc36.2.17 ], [ 0.000000e+00, %for.body10.2.17.preheader ]
  %add.2.17 = add nsw i32 %ki.06.2.17, %inc58.16
  %notlhs.2.17 = icmp slt i32 %add.2.17, 0
  %notrhs.2.17 = icmp uge i32 %add.2.17, %img_height
  %.not.2.17 = or i1 %notrhs.2.17, %notlhs.2.17
  %brmerge.2.17 = or i1 %.not.2.17, %cmp151.not.2.17
  br i1 %brmerge.2.17, label %for.inc36.2.17, label %for.body16.lr.ph.2.17

for.body16.lr.ph.2.17:                            ; preds = %for.body10.2.17
  %mul.2.17 = shl i32 %add.2.17, 7
  %mul30.2.17 = mul i32 %ki.06.2.17, %kern_width
  br label %for.body16.2.17

for.body16.2.17:                                  ; preds = %for.inc.2.17, %for.body16.lr.ph.2.17
  %indvars.iv.2.17 = phi i64 [ 0, %for.body16.lr.ph.2.17 ], [ %indvars.iv.next.2.17, %for.inc.2.17 ]
  %partial_sum.12.2.17 = phi float [ %partial_sum.05.2.17, %for.body16.lr.ph.2.17 ], [ %partial_sum.2.2.17, %for.inc.2.17 ]
  %1267 = trunc i64 %indvars.iv.2.17 to i32
  %add17.2.17 = add nsw i32 %1267, %inc54.1.17
  %cmp18.2.17 = icmp sgt i32 %add17.2.17, -1
  %cmp21.2.17 = icmp ult i32 %add17.2.17, %img_width
  %1268 = and i1 %cmp18.2.17, %cmp21.2.17
  br i1 %1268, label %if.end26.2.17, label %for.inc.2.17

if.end26.2.17:                                    ; preds = %for.body16.2.17
  %add29.2.17 = add nsw i32 %add17.2.17, %mul.2.17
  %idxprom.2.17 = sext i32 %add29.2.17 to i64
  %arrayidx.2.17 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.17
  %1269 = load float, float* %arrayidx.2.17, align 4
  %1270 = trunc i64 %indvars.iv.2.17 to i32
  %add31.2.17 = add i32 %1270, %mul30.2.17
  %idxprom32.2.17 = zext i32 %add31.2.17 to i64
  %arrayidx33.2.17 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.17
  %1271 = load float, float* %arrayidx33.2.17, align 4
  %mul34.2.17 = fmul float %1269, %1271
  %add35.2.17 = fadd float %partial_sum.12.2.17, %mul34.2.17
  br label %for.inc.2.17

for.inc.2.17:                                     ; preds = %if.end26.2.17, %for.body16.2.17
  %partial_sum.2.2.17 = phi float [ %add35.2.17, %if.end26.2.17 ], [ %partial_sum.12.2.17, %for.body16.2.17 ]
  %indvars.iv.next.2.17 = add nuw nsw i64 %indvars.iv.2.17, 1
  %lftr.wideiv.2.17 = trunc i64 %indvars.iv.next.2.17 to i32
  %exitcond.2.17 = icmp eq i32 %lftr.wideiv.2.17, %kern_width
  br i1 %exitcond.2.17, label %for.inc36.2.17.loopexit, label %for.body16.2.17, !llvm.loop !1

for.inc36.2.17.loopexit:                          ; preds = %for.inc.2.17
  %partial_sum.2.2.17.lcssa = phi float [ %partial_sum.2.2.17, %for.inc.2.17 ]
  br label %for.inc36.2.17

for.inc36.2.17:                                   ; preds = %for.inc36.2.17.loopexit, %for.body10.2.17
  %partial_sum.3.2.17 = phi float [ %partial_sum.05.2.17, %for.body10.2.17 ], [ %partial_sum.2.2.17.lcssa, %for.inc36.2.17.loopexit ]
  %inc37.2.17 = add nuw nsw i32 %ki.06.2.17, 1
  %exitcond19.2.17 = icmp eq i32 %inc37.2.17, %kern_height
  br i1 %exitcond19.2.17, label %for.end38.2.17.loopexit, label %for.body10.2.17, !llvm.loop !3

for.end38.2.17.loopexit:                          ; preds = %for.inc36.2.17
  %partial_sum.3.2.17.lcssa = phi float [ %partial_sum.3.2.17, %for.inc36.2.17 ]
  br label %for.end38.2.17

for.end38.2.17:                                   ; preds = %for.end38.2.17.loopexit, %for.inc53.1.17
  %partial_sum.0.lcssa.2.17 = phi float [ 0.000000e+00, %for.inc53.1.17 ], [ %partial_sum.3.2.17.lcssa, %for.end38.2.17.loopexit ]
  br i1 %tobool39, label %if.else.2.17, label %if.then40.2.17

if.then40.2.17:                                   ; preds = %for.end38.2.17
  %cmp41.2.17 = fcmp olt float %partial_sum.0.lcssa.2.17, 0.000000e+00
  %sub42.2.17 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.17
  %cond.2.17 = select i1 %cmp41.2.17, float %sub42.2.17, float %partial_sum.0.lcssa.2.17
  %conv.2.17 = fptoui float %cond.2.17 to i8
  %conv43.2.17 = uitofp i8 %conv.2.17 to float
  %1272 = add nsw i64 %indvars.iv.next21.1.17, %1245
  %arrayidx47.2.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1272
  store float %conv43.2.17, float* %arrayidx47.2.17, align 4
  br label %for.inc53.2.17

if.else.2.17:                                     ; preds = %for.end38.2.17
  %1273 = add nsw i64 %indvars.iv.next21.1.17, %1244
  %arrayidx51.2.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1273
  store float %partial_sum.0.lcssa.2.17, float* %arrayidx51.2.17, align 4
  br label %for.inc53.2.17

for.inc53.2.17:                                   ; preds = %if.else.2.17, %if.then40.2.17
  %inc54.2.17 = add nsw i32 %in_j.011.17, 3
  %indvars.iv.next21.2.17 = add nsw i64 %indvars.iv20.17, 3
  br i1 %cmp94, label %for.end38.3.17, label %for.body10.3.17.preheader

for.body10.3.17.preheader:                        ; preds = %for.inc53.2.17
  br label %for.body10.3.17

for.body10.3.17:                                  ; preds = %for.body10.3.17.preheader, %for.inc36.3.17
  %ki.06.3.17 = phi i32 [ %inc37.3.17, %for.inc36.3.17 ], [ 0, %for.body10.3.17.preheader ]
  %partial_sum.05.3.17 = phi float [ %partial_sum.3.3.17, %for.inc36.3.17 ], [ 0.000000e+00, %for.body10.3.17.preheader ]
  %add.3.17 = add nsw i32 %ki.06.3.17, %inc58.16
  %notlhs.3.17 = icmp slt i32 %add.3.17, 0
  %notrhs.3.17 = icmp uge i32 %add.3.17, %img_height
  %.not.3.17 = or i1 %notrhs.3.17, %notlhs.3.17
  %brmerge.3.17 = or i1 %.not.3.17, %cmp151.not.3.17
  br i1 %brmerge.3.17, label %for.inc36.3.17, label %for.body16.lr.ph.3.17

for.body16.lr.ph.3.17:                            ; preds = %for.body10.3.17
  %mul.3.17 = shl i32 %add.3.17, 7
  %mul30.3.17 = mul i32 %ki.06.3.17, %kern_width
  br label %for.body16.3.17

for.body16.3.17:                                  ; preds = %for.inc.3.17, %for.body16.lr.ph.3.17
  %indvars.iv.3.17 = phi i64 [ 0, %for.body16.lr.ph.3.17 ], [ %indvars.iv.next.3.17, %for.inc.3.17 ]
  %partial_sum.12.3.17 = phi float [ %partial_sum.05.3.17, %for.body16.lr.ph.3.17 ], [ %partial_sum.2.3.17, %for.inc.3.17 ]
  %1274 = trunc i64 %indvars.iv.3.17 to i32
  %add17.3.17 = add nsw i32 %1274, %inc54.2.17
  %cmp18.3.17 = icmp sgt i32 %add17.3.17, -1
  %cmp21.3.17 = icmp ult i32 %add17.3.17, %img_width
  %1275 = and i1 %cmp18.3.17, %cmp21.3.17
  br i1 %1275, label %if.end26.3.17, label %for.inc.3.17

if.end26.3.17:                                    ; preds = %for.body16.3.17
  %add29.3.17 = add nsw i32 %add17.3.17, %mul.3.17
  %idxprom.3.17 = sext i32 %add29.3.17 to i64
  %arrayidx.3.17 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.17
  %1276 = load float, float* %arrayidx.3.17, align 4
  %1277 = trunc i64 %indvars.iv.3.17 to i32
  %add31.3.17 = add i32 %1277, %mul30.3.17
  %idxprom32.3.17 = zext i32 %add31.3.17 to i64
  %arrayidx33.3.17 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.17
  %1278 = load float, float* %arrayidx33.3.17, align 4
  %mul34.3.17 = fmul float %1276, %1278
  %add35.3.17 = fadd float %partial_sum.12.3.17, %mul34.3.17
  br label %for.inc.3.17

for.inc.3.17:                                     ; preds = %if.end26.3.17, %for.body16.3.17
  %partial_sum.2.3.17 = phi float [ %add35.3.17, %if.end26.3.17 ], [ %partial_sum.12.3.17, %for.body16.3.17 ]
  %indvars.iv.next.3.17 = add nuw nsw i64 %indvars.iv.3.17, 1
  %lftr.wideiv.3.17 = trunc i64 %indvars.iv.next.3.17 to i32
  %exitcond.3.17 = icmp eq i32 %lftr.wideiv.3.17, %kern_width
  br i1 %exitcond.3.17, label %for.inc36.3.17.loopexit, label %for.body16.3.17, !llvm.loop !1

for.inc36.3.17.loopexit:                          ; preds = %for.inc.3.17
  %partial_sum.2.3.17.lcssa = phi float [ %partial_sum.2.3.17, %for.inc.3.17 ]
  br label %for.inc36.3.17

for.inc36.3.17:                                   ; preds = %for.inc36.3.17.loopexit, %for.body10.3.17
  %partial_sum.3.3.17 = phi float [ %partial_sum.05.3.17, %for.body10.3.17 ], [ %partial_sum.2.3.17.lcssa, %for.inc36.3.17.loopexit ]
  %inc37.3.17 = add nuw nsw i32 %ki.06.3.17, 1
  %exitcond19.3.17 = icmp eq i32 %inc37.3.17, %kern_height
  br i1 %exitcond19.3.17, label %for.end38.3.17.loopexit, label %for.body10.3.17, !llvm.loop !3

for.end38.3.17.loopexit:                          ; preds = %for.inc36.3.17
  %partial_sum.3.3.17.lcssa = phi float [ %partial_sum.3.3.17, %for.inc36.3.17 ]
  br label %for.end38.3.17

for.end38.3.17:                                   ; preds = %for.end38.3.17.loopexit, %for.inc53.2.17
  %partial_sum.0.lcssa.3.17 = phi float [ 0.000000e+00, %for.inc53.2.17 ], [ %partial_sum.3.3.17.lcssa, %for.end38.3.17.loopexit ]
  br i1 %tobool39, label %if.else.3.17, label %if.then40.3.17

if.then40.3.17:                                   ; preds = %for.end38.3.17
  %cmp41.3.17 = fcmp olt float %partial_sum.0.lcssa.3.17, 0.000000e+00
  %sub42.3.17 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.17
  %cond.3.17 = select i1 %cmp41.3.17, float %sub42.3.17, float %partial_sum.0.lcssa.3.17
  %conv.3.17 = fptoui float %cond.3.17 to i8
  %conv43.3.17 = uitofp i8 %conv.3.17 to float
  %1279 = add nsw i64 %indvars.iv.next21.2.17, %1245
  %arrayidx47.3.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1279
  store float %conv43.3.17, float* %arrayidx47.3.17, align 4
  br label %for.inc53.3.17

if.else.3.17:                                     ; preds = %for.end38.3.17
  %1280 = add nsw i64 %indvars.iv.next21.2.17, %1244
  %arrayidx51.3.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1280
  store float %partial_sum.0.lcssa.3.17, float* %arrayidx51.3.17, align 4
  br label %for.inc53.3.17

for.inc53.3.17:                                   ; preds = %if.else.3.17, %if.then40.3.17
  %inc54.3.17 = add nsw i32 %in_j.011.17, 4
  %indvars.iv.next21.3.17 = add nsw i64 %indvars.iv20.17, 4
  br i1 %cmp94, label %for.end38.4.17, label %for.body10.4.17.preheader

for.body10.4.17.preheader:                        ; preds = %for.inc53.3.17
  br label %for.body10.4.17

for.body10.4.17:                                  ; preds = %for.body10.4.17.preheader, %for.inc36.4.17
  %ki.06.4.17 = phi i32 [ %inc37.4.17, %for.inc36.4.17 ], [ 0, %for.body10.4.17.preheader ]
  %partial_sum.05.4.17 = phi float [ %partial_sum.3.4.17, %for.inc36.4.17 ], [ 0.000000e+00, %for.body10.4.17.preheader ]
  %add.4.17 = add nsw i32 %ki.06.4.17, %inc58.16
  %notlhs.4.17 = icmp slt i32 %add.4.17, 0
  %notrhs.4.17 = icmp uge i32 %add.4.17, %img_height
  %.not.4.17 = or i1 %notrhs.4.17, %notlhs.4.17
  %brmerge.4.17 = or i1 %.not.4.17, %cmp151.not.4.17
  br i1 %brmerge.4.17, label %for.inc36.4.17, label %for.body16.lr.ph.4.17

for.body16.lr.ph.4.17:                            ; preds = %for.body10.4.17
  %mul.4.17 = shl i32 %add.4.17, 7
  %mul30.4.17 = mul i32 %ki.06.4.17, %kern_width
  br label %for.body16.4.17

for.body16.4.17:                                  ; preds = %for.inc.4.17, %for.body16.lr.ph.4.17
  %indvars.iv.4.17 = phi i64 [ 0, %for.body16.lr.ph.4.17 ], [ %indvars.iv.next.4.17, %for.inc.4.17 ]
  %partial_sum.12.4.17 = phi float [ %partial_sum.05.4.17, %for.body16.lr.ph.4.17 ], [ %partial_sum.2.4.17, %for.inc.4.17 ]
  %1281 = trunc i64 %indvars.iv.4.17 to i32
  %add17.4.17 = add nsw i32 %1281, %inc54.3.17
  %cmp18.4.17 = icmp sgt i32 %add17.4.17, -1
  %cmp21.4.17 = icmp ult i32 %add17.4.17, %img_width
  %1282 = and i1 %cmp18.4.17, %cmp21.4.17
  br i1 %1282, label %if.end26.4.17, label %for.inc.4.17

if.end26.4.17:                                    ; preds = %for.body16.4.17
  %add29.4.17 = add nsw i32 %add17.4.17, %mul.4.17
  %idxprom.4.17 = sext i32 %add29.4.17 to i64
  %arrayidx.4.17 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.17
  %1283 = load float, float* %arrayidx.4.17, align 4
  %1284 = trunc i64 %indvars.iv.4.17 to i32
  %add31.4.17 = add i32 %1284, %mul30.4.17
  %idxprom32.4.17 = zext i32 %add31.4.17 to i64
  %arrayidx33.4.17 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.17
  %1285 = load float, float* %arrayidx33.4.17, align 4
  %mul34.4.17 = fmul float %1283, %1285
  %add35.4.17 = fadd float %partial_sum.12.4.17, %mul34.4.17
  br label %for.inc.4.17

for.inc.4.17:                                     ; preds = %if.end26.4.17, %for.body16.4.17
  %partial_sum.2.4.17 = phi float [ %add35.4.17, %if.end26.4.17 ], [ %partial_sum.12.4.17, %for.body16.4.17 ]
  %indvars.iv.next.4.17 = add nuw nsw i64 %indvars.iv.4.17, 1
  %lftr.wideiv.4.17 = trunc i64 %indvars.iv.next.4.17 to i32
  %exitcond.4.17 = icmp eq i32 %lftr.wideiv.4.17, %kern_width
  br i1 %exitcond.4.17, label %for.inc36.4.17.loopexit, label %for.body16.4.17, !llvm.loop !1

for.inc36.4.17.loopexit:                          ; preds = %for.inc.4.17
  %partial_sum.2.4.17.lcssa = phi float [ %partial_sum.2.4.17, %for.inc.4.17 ]
  br label %for.inc36.4.17

for.inc36.4.17:                                   ; preds = %for.inc36.4.17.loopexit, %for.body10.4.17
  %partial_sum.3.4.17 = phi float [ %partial_sum.05.4.17, %for.body10.4.17 ], [ %partial_sum.2.4.17.lcssa, %for.inc36.4.17.loopexit ]
  %inc37.4.17 = add nuw nsw i32 %ki.06.4.17, 1
  %exitcond19.4.17 = icmp eq i32 %inc37.4.17, %kern_height
  br i1 %exitcond19.4.17, label %for.end38.4.17.loopexit, label %for.body10.4.17, !llvm.loop !3

for.end38.4.17.loopexit:                          ; preds = %for.inc36.4.17
  %partial_sum.3.4.17.lcssa = phi float [ %partial_sum.3.4.17, %for.inc36.4.17 ]
  br label %for.end38.4.17

for.end38.4.17:                                   ; preds = %for.end38.4.17.loopexit, %for.inc53.3.17
  %partial_sum.0.lcssa.4.17 = phi float [ 0.000000e+00, %for.inc53.3.17 ], [ %partial_sum.3.4.17.lcssa, %for.end38.4.17.loopexit ]
  br i1 %tobool39, label %if.else.4.17, label %if.then40.4.17

if.then40.4.17:                                   ; preds = %for.end38.4.17
  %cmp41.4.17 = fcmp olt float %partial_sum.0.lcssa.4.17, 0.000000e+00
  %sub42.4.17 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.17
  %cond.4.17 = select i1 %cmp41.4.17, float %sub42.4.17, float %partial_sum.0.lcssa.4.17
  %conv.4.17 = fptoui float %cond.4.17 to i8
  %conv43.4.17 = uitofp i8 %conv.4.17 to float
  %1286 = add nsw i64 %indvars.iv.next21.3.17, %1245
  %arrayidx47.4.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1286
  store float %conv43.4.17, float* %arrayidx47.4.17, align 4
  br label %for.inc53.4.17

if.else.4.17:                                     ; preds = %for.end38.4.17
  %1287 = add nsw i64 %indvars.iv.next21.3.17, %1244
  %arrayidx51.4.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1287
  store float %partial_sum.0.lcssa.4.17, float* %arrayidx51.4.17, align 4
  br label %for.inc53.4.17

for.inc53.4.17:                                   ; preds = %if.else.4.17, %if.then40.4.17
  %inc54.4.17 = add nsw i32 %in_j.011.17, 5
  %indvars.iv.next21.4.17 = add nsw i64 %indvars.iv20.17, 5
  br i1 %cmp94, label %for.end38.5.17, label %for.body10.5.17.preheader

for.body10.5.17.preheader:                        ; preds = %for.inc53.4.17
  br label %for.body10.5.17

for.body10.5.17:                                  ; preds = %for.body10.5.17.preheader, %for.inc36.5.17
  %ki.06.5.17 = phi i32 [ %inc37.5.17, %for.inc36.5.17 ], [ 0, %for.body10.5.17.preheader ]
  %partial_sum.05.5.17 = phi float [ %partial_sum.3.5.17, %for.inc36.5.17 ], [ 0.000000e+00, %for.body10.5.17.preheader ]
  %add.5.17 = add nsw i32 %ki.06.5.17, %inc58.16
  %notlhs.5.17 = icmp slt i32 %add.5.17, 0
  %notrhs.5.17 = icmp uge i32 %add.5.17, %img_height
  %.not.5.17 = or i1 %notrhs.5.17, %notlhs.5.17
  %brmerge.5.17 = or i1 %.not.5.17, %cmp151.not.5.17
  br i1 %brmerge.5.17, label %for.inc36.5.17, label %for.body16.lr.ph.5.17

for.body16.lr.ph.5.17:                            ; preds = %for.body10.5.17
  %mul.5.17 = shl i32 %add.5.17, 7
  %mul30.5.17 = mul i32 %ki.06.5.17, %kern_width
  br label %for.body16.5.17

for.body16.5.17:                                  ; preds = %for.inc.5.17, %for.body16.lr.ph.5.17
  %indvars.iv.5.17 = phi i64 [ 0, %for.body16.lr.ph.5.17 ], [ %indvars.iv.next.5.17, %for.inc.5.17 ]
  %partial_sum.12.5.17 = phi float [ %partial_sum.05.5.17, %for.body16.lr.ph.5.17 ], [ %partial_sum.2.5.17, %for.inc.5.17 ]
  %1288 = trunc i64 %indvars.iv.5.17 to i32
  %add17.5.17 = add nsw i32 %1288, %inc54.4.17
  %cmp18.5.17 = icmp sgt i32 %add17.5.17, -1
  %cmp21.5.17 = icmp ult i32 %add17.5.17, %img_width
  %1289 = and i1 %cmp18.5.17, %cmp21.5.17
  br i1 %1289, label %if.end26.5.17, label %for.inc.5.17

if.end26.5.17:                                    ; preds = %for.body16.5.17
  %add29.5.17 = add nsw i32 %add17.5.17, %mul.5.17
  %idxprom.5.17 = sext i32 %add29.5.17 to i64
  %arrayidx.5.17 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.17
  %1290 = load float, float* %arrayidx.5.17, align 4
  %1291 = trunc i64 %indvars.iv.5.17 to i32
  %add31.5.17 = add i32 %1291, %mul30.5.17
  %idxprom32.5.17 = zext i32 %add31.5.17 to i64
  %arrayidx33.5.17 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.17
  %1292 = load float, float* %arrayidx33.5.17, align 4
  %mul34.5.17 = fmul float %1290, %1292
  %add35.5.17 = fadd float %partial_sum.12.5.17, %mul34.5.17
  br label %for.inc.5.17

for.inc.5.17:                                     ; preds = %if.end26.5.17, %for.body16.5.17
  %partial_sum.2.5.17 = phi float [ %add35.5.17, %if.end26.5.17 ], [ %partial_sum.12.5.17, %for.body16.5.17 ]
  %indvars.iv.next.5.17 = add nuw nsw i64 %indvars.iv.5.17, 1
  %lftr.wideiv.5.17 = trunc i64 %indvars.iv.next.5.17 to i32
  %exitcond.5.17 = icmp eq i32 %lftr.wideiv.5.17, %kern_width
  br i1 %exitcond.5.17, label %for.inc36.5.17.loopexit, label %for.body16.5.17, !llvm.loop !1

for.inc36.5.17.loopexit:                          ; preds = %for.inc.5.17
  %partial_sum.2.5.17.lcssa = phi float [ %partial_sum.2.5.17, %for.inc.5.17 ]
  br label %for.inc36.5.17

for.inc36.5.17:                                   ; preds = %for.inc36.5.17.loopexit, %for.body10.5.17
  %partial_sum.3.5.17 = phi float [ %partial_sum.05.5.17, %for.body10.5.17 ], [ %partial_sum.2.5.17.lcssa, %for.inc36.5.17.loopexit ]
  %inc37.5.17 = add nuw nsw i32 %ki.06.5.17, 1
  %exitcond19.5.17 = icmp eq i32 %inc37.5.17, %kern_height
  br i1 %exitcond19.5.17, label %for.end38.5.17.loopexit, label %for.body10.5.17, !llvm.loop !3

for.end38.5.17.loopexit:                          ; preds = %for.inc36.5.17
  %partial_sum.3.5.17.lcssa = phi float [ %partial_sum.3.5.17, %for.inc36.5.17 ]
  br label %for.end38.5.17

for.end38.5.17:                                   ; preds = %for.end38.5.17.loopexit, %for.inc53.4.17
  %partial_sum.0.lcssa.5.17 = phi float [ 0.000000e+00, %for.inc53.4.17 ], [ %partial_sum.3.5.17.lcssa, %for.end38.5.17.loopexit ]
  br i1 %tobool39, label %if.else.5.17, label %if.then40.5.17

if.then40.5.17:                                   ; preds = %for.end38.5.17
  %cmp41.5.17 = fcmp olt float %partial_sum.0.lcssa.5.17, 0.000000e+00
  %sub42.5.17 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.17
  %cond.5.17 = select i1 %cmp41.5.17, float %sub42.5.17, float %partial_sum.0.lcssa.5.17
  %conv.5.17 = fptoui float %cond.5.17 to i8
  %conv43.5.17 = uitofp i8 %conv.5.17 to float
  %1293 = add nsw i64 %indvars.iv.next21.4.17, %1245
  %arrayidx47.5.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1293
  store float %conv43.5.17, float* %arrayidx47.5.17, align 4
  br label %for.inc53.5.17

if.else.5.17:                                     ; preds = %for.end38.5.17
  %1294 = add nsw i64 %indvars.iv.next21.4.17, %1244
  %arrayidx51.5.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1294
  store float %partial_sum.0.lcssa.5.17, float* %arrayidx51.5.17, align 4
  br label %for.inc53.5.17

for.inc53.5.17:                                   ; preds = %if.else.5.17, %if.then40.5.17
  %inc54.5.17 = add nsw i32 %in_j.011.17, 6
  %indvars.iv.next21.5.17 = add nsw i64 %indvars.iv20.17, 6
  br i1 %cmp94, label %for.end38.6.17, label %for.body10.6.17.preheader

for.body10.6.17.preheader:                        ; preds = %for.inc53.5.17
  br label %for.body10.6.17

for.body10.6.17:                                  ; preds = %for.body10.6.17.preheader, %for.inc36.6.17
  %ki.06.6.17 = phi i32 [ %inc37.6.17, %for.inc36.6.17 ], [ 0, %for.body10.6.17.preheader ]
  %partial_sum.05.6.17 = phi float [ %partial_sum.3.6.17, %for.inc36.6.17 ], [ 0.000000e+00, %for.body10.6.17.preheader ]
  %add.6.17 = add nsw i32 %ki.06.6.17, %inc58.16
  %notlhs.6.17 = icmp slt i32 %add.6.17, 0
  %notrhs.6.17 = icmp uge i32 %add.6.17, %img_height
  %.not.6.17 = or i1 %notrhs.6.17, %notlhs.6.17
  %brmerge.6.17 = or i1 %.not.6.17, %cmp151.not.6.17
  br i1 %brmerge.6.17, label %for.inc36.6.17, label %for.body16.lr.ph.6.17

for.body16.lr.ph.6.17:                            ; preds = %for.body10.6.17
  %mul.6.17 = shl i32 %add.6.17, 7
  %mul30.6.17 = mul i32 %ki.06.6.17, %kern_width
  br label %for.body16.6.17

for.body16.6.17:                                  ; preds = %for.inc.6.17, %for.body16.lr.ph.6.17
  %indvars.iv.6.17 = phi i64 [ 0, %for.body16.lr.ph.6.17 ], [ %indvars.iv.next.6.17, %for.inc.6.17 ]
  %partial_sum.12.6.17 = phi float [ %partial_sum.05.6.17, %for.body16.lr.ph.6.17 ], [ %partial_sum.2.6.17, %for.inc.6.17 ]
  %1295 = trunc i64 %indvars.iv.6.17 to i32
  %add17.6.17 = add nsw i32 %1295, %inc54.5.17
  %cmp18.6.17 = icmp sgt i32 %add17.6.17, -1
  %cmp21.6.17 = icmp ult i32 %add17.6.17, %img_width
  %1296 = and i1 %cmp18.6.17, %cmp21.6.17
  br i1 %1296, label %if.end26.6.17, label %for.inc.6.17

if.end26.6.17:                                    ; preds = %for.body16.6.17
  %add29.6.17 = add nsw i32 %add17.6.17, %mul.6.17
  %idxprom.6.17 = sext i32 %add29.6.17 to i64
  %arrayidx.6.17 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.17
  %1297 = load float, float* %arrayidx.6.17, align 4
  %1298 = trunc i64 %indvars.iv.6.17 to i32
  %add31.6.17 = add i32 %1298, %mul30.6.17
  %idxprom32.6.17 = zext i32 %add31.6.17 to i64
  %arrayidx33.6.17 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.17
  %1299 = load float, float* %arrayidx33.6.17, align 4
  %mul34.6.17 = fmul float %1297, %1299
  %add35.6.17 = fadd float %partial_sum.12.6.17, %mul34.6.17
  br label %for.inc.6.17

for.inc.6.17:                                     ; preds = %if.end26.6.17, %for.body16.6.17
  %partial_sum.2.6.17 = phi float [ %add35.6.17, %if.end26.6.17 ], [ %partial_sum.12.6.17, %for.body16.6.17 ]
  %indvars.iv.next.6.17 = add nuw nsw i64 %indvars.iv.6.17, 1
  %lftr.wideiv.6.17 = trunc i64 %indvars.iv.next.6.17 to i32
  %exitcond.6.17 = icmp eq i32 %lftr.wideiv.6.17, %kern_width
  br i1 %exitcond.6.17, label %for.inc36.6.17.loopexit, label %for.body16.6.17, !llvm.loop !1

for.inc36.6.17.loopexit:                          ; preds = %for.inc.6.17
  %partial_sum.2.6.17.lcssa = phi float [ %partial_sum.2.6.17, %for.inc.6.17 ]
  br label %for.inc36.6.17

for.inc36.6.17:                                   ; preds = %for.inc36.6.17.loopexit, %for.body10.6.17
  %partial_sum.3.6.17 = phi float [ %partial_sum.05.6.17, %for.body10.6.17 ], [ %partial_sum.2.6.17.lcssa, %for.inc36.6.17.loopexit ]
  %inc37.6.17 = add nuw nsw i32 %ki.06.6.17, 1
  %exitcond19.6.17 = icmp eq i32 %inc37.6.17, %kern_height
  br i1 %exitcond19.6.17, label %for.end38.6.17.loopexit, label %for.body10.6.17, !llvm.loop !3

for.end38.6.17.loopexit:                          ; preds = %for.inc36.6.17
  %partial_sum.3.6.17.lcssa = phi float [ %partial_sum.3.6.17, %for.inc36.6.17 ]
  br label %for.end38.6.17

for.end38.6.17:                                   ; preds = %for.end38.6.17.loopexit, %for.inc53.5.17
  %partial_sum.0.lcssa.6.17 = phi float [ 0.000000e+00, %for.inc53.5.17 ], [ %partial_sum.3.6.17.lcssa, %for.end38.6.17.loopexit ]
  br i1 %tobool39, label %if.else.6.17, label %if.then40.6.17

if.then40.6.17:                                   ; preds = %for.end38.6.17
  %cmp41.6.17 = fcmp olt float %partial_sum.0.lcssa.6.17, 0.000000e+00
  %sub42.6.17 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.17
  %cond.6.17 = select i1 %cmp41.6.17, float %sub42.6.17, float %partial_sum.0.lcssa.6.17
  %conv.6.17 = fptoui float %cond.6.17 to i8
  %conv43.6.17 = uitofp i8 %conv.6.17 to float
  %1300 = add nsw i64 %indvars.iv.next21.5.17, %1245
  %arrayidx47.6.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1300
  store float %conv43.6.17, float* %arrayidx47.6.17, align 4
  br label %for.inc53.6.17

if.else.6.17:                                     ; preds = %for.end38.6.17
  %1301 = add nsw i64 %indvars.iv.next21.5.17, %1244
  %arrayidx51.6.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1301
  store float %partial_sum.0.lcssa.6.17, float* %arrayidx51.6.17, align 4
  br label %for.inc53.6.17

for.inc53.6.17:                                   ; preds = %if.else.6.17, %if.then40.6.17
  %inc54.6.17 = add nsw i32 %in_j.011.17, 7
  %indvars.iv.next21.6.17 = add nsw i64 %indvars.iv20.17, 7
  br i1 %cmp94, label %for.end38.7.17, label %for.body10.7.17.preheader

for.body10.7.17.preheader:                        ; preds = %for.inc53.6.17
  br label %for.body10.7.17

for.body10.7.17:                                  ; preds = %for.body10.7.17.preheader, %for.inc36.7.17
  %ki.06.7.17 = phi i32 [ %inc37.7.17, %for.inc36.7.17 ], [ 0, %for.body10.7.17.preheader ]
  %partial_sum.05.7.17 = phi float [ %partial_sum.3.7.17, %for.inc36.7.17 ], [ 0.000000e+00, %for.body10.7.17.preheader ]
  %add.7.17 = add nsw i32 %ki.06.7.17, %inc58.16
  %notlhs.7.17 = icmp slt i32 %add.7.17, 0
  %notrhs.7.17 = icmp uge i32 %add.7.17, %img_height
  %.not.7.17 = or i1 %notrhs.7.17, %notlhs.7.17
  %brmerge.7.17 = or i1 %.not.7.17, %cmp151.not.7.17
  br i1 %brmerge.7.17, label %for.inc36.7.17, label %for.body16.lr.ph.7.17

for.body16.lr.ph.7.17:                            ; preds = %for.body10.7.17
  %mul.7.17 = shl i32 %add.7.17, 7
  %mul30.7.17 = mul i32 %ki.06.7.17, %kern_width
  br label %for.body16.7.17

for.body16.7.17:                                  ; preds = %for.inc.7.17, %for.body16.lr.ph.7.17
  %indvars.iv.7.17 = phi i64 [ 0, %for.body16.lr.ph.7.17 ], [ %indvars.iv.next.7.17, %for.inc.7.17 ]
  %partial_sum.12.7.17 = phi float [ %partial_sum.05.7.17, %for.body16.lr.ph.7.17 ], [ %partial_sum.2.7.17, %for.inc.7.17 ]
  %1302 = trunc i64 %indvars.iv.7.17 to i32
  %add17.7.17 = add nsw i32 %1302, %inc54.6.17
  %cmp18.7.17 = icmp sgt i32 %add17.7.17, -1
  %cmp21.7.17 = icmp ult i32 %add17.7.17, %img_width
  %1303 = and i1 %cmp18.7.17, %cmp21.7.17
  br i1 %1303, label %if.end26.7.17, label %for.inc.7.17

if.end26.7.17:                                    ; preds = %for.body16.7.17
  %add29.7.17 = add nsw i32 %add17.7.17, %mul.7.17
  %idxprom.7.17 = sext i32 %add29.7.17 to i64
  %arrayidx.7.17 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.17
  %1304 = load float, float* %arrayidx.7.17, align 4
  %1305 = trunc i64 %indvars.iv.7.17 to i32
  %add31.7.17 = add i32 %1305, %mul30.7.17
  %idxprom32.7.17 = zext i32 %add31.7.17 to i64
  %arrayidx33.7.17 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.17
  %1306 = load float, float* %arrayidx33.7.17, align 4
  %mul34.7.17 = fmul float %1304, %1306
  %add35.7.17 = fadd float %partial_sum.12.7.17, %mul34.7.17
  br label %for.inc.7.17

for.inc.7.17:                                     ; preds = %if.end26.7.17, %for.body16.7.17
  %partial_sum.2.7.17 = phi float [ %add35.7.17, %if.end26.7.17 ], [ %partial_sum.12.7.17, %for.body16.7.17 ]
  %indvars.iv.next.7.17 = add nuw nsw i64 %indvars.iv.7.17, 1
  %lftr.wideiv.7.17 = trunc i64 %indvars.iv.next.7.17 to i32
  %exitcond.7.17 = icmp eq i32 %lftr.wideiv.7.17, %kern_width
  br i1 %exitcond.7.17, label %for.inc36.7.17.loopexit, label %for.body16.7.17, !llvm.loop !1

for.inc36.7.17.loopexit:                          ; preds = %for.inc.7.17
  %partial_sum.2.7.17.lcssa = phi float [ %partial_sum.2.7.17, %for.inc.7.17 ]
  br label %for.inc36.7.17

for.inc36.7.17:                                   ; preds = %for.inc36.7.17.loopexit, %for.body10.7.17
  %partial_sum.3.7.17 = phi float [ %partial_sum.05.7.17, %for.body10.7.17 ], [ %partial_sum.2.7.17.lcssa, %for.inc36.7.17.loopexit ]
  %inc37.7.17 = add nuw nsw i32 %ki.06.7.17, 1
  %exitcond19.7.17 = icmp eq i32 %inc37.7.17, %kern_height
  br i1 %exitcond19.7.17, label %for.end38.7.17.loopexit, label %for.body10.7.17, !llvm.loop !3

for.end38.7.17.loopexit:                          ; preds = %for.inc36.7.17
  %partial_sum.3.7.17.lcssa = phi float [ %partial_sum.3.7.17, %for.inc36.7.17 ]
  br label %for.end38.7.17

for.end38.7.17:                                   ; preds = %for.end38.7.17.loopexit, %for.inc53.6.17
  %partial_sum.0.lcssa.7.17 = phi float [ 0.000000e+00, %for.inc53.6.17 ], [ %partial_sum.3.7.17.lcssa, %for.end38.7.17.loopexit ]
  br i1 %tobool39, label %if.else.7.17, label %if.then40.7.17

if.then40.7.17:                                   ; preds = %for.end38.7.17
  %cmp41.7.17 = fcmp olt float %partial_sum.0.lcssa.7.17, 0.000000e+00
  %sub42.7.17 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.17
  %cond.7.17 = select i1 %cmp41.7.17, float %sub42.7.17, float %partial_sum.0.lcssa.7.17
  %conv.7.17 = fptoui float %cond.7.17 to i8
  %conv43.7.17 = uitofp i8 %conv.7.17 to float
  %1307 = add nsw i64 %indvars.iv.next21.6.17, %1245
  %arrayidx47.7.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1307
  store float %conv43.7.17, float* %arrayidx47.7.17, align 4
  br label %for.inc53.7.17

if.else.7.17:                                     ; preds = %for.end38.7.17
  %1308 = add nsw i64 %indvars.iv.next21.6.17, %1244
  %arrayidx51.7.17 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1308
  store float %partial_sum.0.lcssa.7.17, float* %arrayidx51.7.17, align 4
  br label %for.inc53.7.17

for.inc53.7.17:                                   ; preds = %if.else.7.17, %if.then40.7.17
  %inc54.7.17 = add nsw i32 %in_j.011.17, 8
  %indvars.iv.next21.7.17 = add nsw i64 %indvars.iv20.17, 8
  %lftr.wideiv24.7.17 = trunc i64 %indvars.iv.next21.7.17 to i32
  %exitcond25.7.17 = icmp eq i32 %lftr.wideiv24.7.17, %img_width
  br i1 %exitcond25.7.17, label %for.inc57.17.loopexit, label %for.cond8.preheader.17, !llvm.loop !5

for.inc57.17.loopexit:                            ; preds = %for.inc53.7.17
  br label %for.inc57.17

for.inc57.17:                                     ; preds = %for.inc57.17.loopexit, %for.cond8.preheader.lr.ph.split.17
  %inc58.17 = add nsw i32 %in_i.015, 18
  %indvars.iv.next27.17 = add nsw i64 %indvars.iv26, 18
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.18

for.cond8.preheader.lr.ph.18:                     ; preds = %for.inc57.17
  %1309 = trunc i64 %indvars.iv.next27.17 to i32
  %mul48.18 = shl i32 %1309, 7
  %1310 = trunc i64 %indvars.iv.next27.17 to i32
  %mul44.18 = shl i32 %1310, 7
  %1311 = sext i32 %mul48.18 to i64
  %1312 = sext i32 %mul44.18 to i64
  br i1 %lcmp.mod.18, label %for.cond8.preheader.lr.ph.split.18, label %for.cond8.preheader.prol.18.preheader

for.cond8.preheader.prol.18.preheader:            ; preds = %for.cond8.preheader.lr.ph.18
  br label %for.cond8.preheader.prol.18

for.cond8.preheader.prol.18:                      ; preds = %for.cond8.preheader.prol.18.preheader, %for.inc53.prol.18
  %indvars.iv20.prol.18 = phi i64 [ %indvars.iv.next21.prol.18, %for.inc53.prol.18 ], [ 0, %for.cond8.preheader.prol.18.preheader ]
  %in_j.011.prol.18 = phi i32 [ %inc54.prol.18, %for.inc53.prol.18 ], [ %sub4, %for.cond8.preheader.prol.18.preheader ]
  %prol.iter.18 = phi i32 [ %prol.iter.sub.18, %for.inc53.prol.18 ], [ %xtraiter.18, %for.cond8.preheader.prol.18.preheader ]
  br i1 %cmp94, label %for.end38.prol.18, label %for.body10.prol.18.preheader

for.body10.prol.18.preheader:                     ; preds = %for.cond8.preheader.prol.18
  br label %for.body10.prol.18

for.body10.prol.18:                               ; preds = %for.body10.prol.18.preheader, %for.inc36.prol.18
  %ki.06.prol.18 = phi i32 [ %inc37.prol.18, %for.inc36.prol.18 ], [ 0, %for.body10.prol.18.preheader ]
  %partial_sum.05.prol.18 = phi float [ %partial_sum.3.prol.18, %for.inc36.prol.18 ], [ 0.000000e+00, %for.body10.prol.18.preheader ]
  %add.prol.18 = add nsw i32 %ki.06.prol.18, %inc58.17
  %notlhs.prol.18 = icmp slt i32 %add.prol.18, 0
  %notrhs.prol.18 = icmp uge i32 %add.prol.18, %img_height
  %.not.prol.18 = or i1 %notrhs.prol.18, %notlhs.prol.18
  %brmerge.prol.18 = or i1 %.not.prol.18, %cmp151.not.prol.18
  br i1 %brmerge.prol.18, label %for.inc36.prol.18, label %for.body16.lr.ph.prol.18

for.body16.lr.ph.prol.18:                         ; preds = %for.body10.prol.18
  %mul.prol.18 = shl i32 %add.prol.18, 7
  %mul30.prol.18 = mul i32 %ki.06.prol.18, %kern_width
  br label %for.body16.prol.18

for.body16.prol.18:                               ; preds = %for.inc.prol.18, %for.body16.lr.ph.prol.18
  %indvars.iv.prol.18 = phi i64 [ 0, %for.body16.lr.ph.prol.18 ], [ %indvars.iv.next.prol.18, %for.inc.prol.18 ]
  %partial_sum.12.prol.18 = phi float [ %partial_sum.05.prol.18, %for.body16.lr.ph.prol.18 ], [ %partial_sum.2.prol.18, %for.inc.prol.18 ]
  %1313 = trunc i64 %indvars.iv.prol.18 to i32
  %add17.prol.18 = add nsw i32 %1313, %in_j.011.prol.18
  %cmp18.prol.18 = icmp sgt i32 %add17.prol.18, -1
  %cmp21.prol.18 = icmp ult i32 %add17.prol.18, %img_width
  %1314 = and i1 %cmp18.prol.18, %cmp21.prol.18
  br i1 %1314, label %if.end26.prol.18, label %for.inc.prol.18

if.end26.prol.18:                                 ; preds = %for.body16.prol.18
  %add29.prol.18 = add nsw i32 %add17.prol.18, %mul.prol.18
  %idxprom.prol.18 = sext i32 %add29.prol.18 to i64
  %arrayidx.prol.18 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.18
  %1315 = load float, float* %arrayidx.prol.18, align 4
  %1316 = trunc i64 %indvars.iv.prol.18 to i32
  %add31.prol.18 = add i32 %1316, %mul30.prol.18
  %idxprom32.prol.18 = zext i32 %add31.prol.18 to i64
  %arrayidx33.prol.18 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.18
  %1317 = load float, float* %arrayidx33.prol.18, align 4
  %mul34.prol.18 = fmul float %1315, %1317
  %add35.prol.18 = fadd float %partial_sum.12.prol.18, %mul34.prol.18
  br label %for.inc.prol.18

for.inc.prol.18:                                  ; preds = %if.end26.prol.18, %for.body16.prol.18
  %partial_sum.2.prol.18 = phi float [ %add35.prol.18, %if.end26.prol.18 ], [ %partial_sum.12.prol.18, %for.body16.prol.18 ]
  %indvars.iv.next.prol.18 = add nuw nsw i64 %indvars.iv.prol.18, 1
  %lftr.wideiv.prol.18 = trunc i64 %indvars.iv.next.prol.18 to i32
  %exitcond.prol.18 = icmp eq i32 %lftr.wideiv.prol.18, %kern_width
  br i1 %exitcond.prol.18, label %for.inc36.prol.18.loopexit, label %for.body16.prol.18, !llvm.loop !1

for.inc36.prol.18.loopexit:                       ; preds = %for.inc.prol.18
  %partial_sum.2.prol.18.lcssa = phi float [ %partial_sum.2.prol.18, %for.inc.prol.18 ]
  br label %for.inc36.prol.18

for.inc36.prol.18:                                ; preds = %for.inc36.prol.18.loopexit, %for.body10.prol.18
  %partial_sum.3.prol.18 = phi float [ %partial_sum.05.prol.18, %for.body10.prol.18 ], [ %partial_sum.2.prol.18.lcssa, %for.inc36.prol.18.loopexit ]
  %inc37.prol.18 = add nuw nsw i32 %ki.06.prol.18, 1
  %exitcond19.prol.18 = icmp eq i32 %inc37.prol.18, %kern_height
  br i1 %exitcond19.prol.18, label %for.end38.prol.18.loopexit, label %for.body10.prol.18, !llvm.loop !3

for.end38.prol.18.loopexit:                       ; preds = %for.inc36.prol.18
  %partial_sum.3.prol.18.lcssa = phi float [ %partial_sum.3.prol.18, %for.inc36.prol.18 ]
  br label %for.end38.prol.18

for.end38.prol.18:                                ; preds = %for.end38.prol.18.loopexit, %for.cond8.preheader.prol.18
  %partial_sum.0.lcssa.prol.18 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.18 ], [ %partial_sum.3.prol.18.lcssa, %for.end38.prol.18.loopexit ]
  br i1 %tobool39, label %if.else.prol.18, label %if.then40.prol.18

if.then40.prol.18:                                ; preds = %for.end38.prol.18
  %cmp41.prol.18 = fcmp olt float %partial_sum.0.lcssa.prol.18, 0.000000e+00
  %sub42.prol.18 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.18
  %cond.prol.18 = select i1 %cmp41.prol.18, float %sub42.prol.18, float %partial_sum.0.lcssa.prol.18
  %conv.prol.18 = fptoui float %cond.prol.18 to i8
  %conv43.prol.18 = uitofp i8 %conv.prol.18 to float
  %1318 = add nsw i64 %indvars.iv20.prol.18, %1312
  %arrayidx47.prol.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1318
  store float %conv43.prol.18, float* %arrayidx47.prol.18, align 4
  br label %for.inc53.prol.18

if.else.prol.18:                                  ; preds = %for.end38.prol.18
  %1319 = add nsw i64 %indvars.iv20.prol.18, %1311
  %arrayidx51.prol.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1319
  store float %partial_sum.0.lcssa.prol.18, float* %arrayidx51.prol.18, align 4
  br label %for.inc53.prol.18

for.inc53.prol.18:                                ; preds = %if.else.prol.18, %if.then40.prol.18
  %inc54.prol.18 = add nsw i32 %in_j.011.prol.18, 1
  %indvars.iv.next21.prol.18 = add nuw nsw i64 %indvars.iv20.prol.18, 1
  %prol.iter.sub.18 = add i32 %prol.iter.18, -1
  %prol.iter.cmp.18 = icmp eq i32 %prol.iter.sub.18, 0
  br i1 %prol.iter.cmp.18, label %for.cond8.preheader.lr.ph.split.18.loopexit, label %for.cond8.preheader.prol.18, !llvm.loop !4

for.cond8.preheader.lr.ph.split.18.loopexit:      ; preds = %for.inc53.prol.18
  %indvars.iv.next21.prol.18.lcssa = phi i64 [ %indvars.iv.next21.prol.18, %for.inc53.prol.18 ]
  %inc54.prol.18.lcssa = phi i32 [ %inc54.prol.18, %for.inc53.prol.18 ]
  br label %for.cond8.preheader.lr.ph.split.18

for.cond8.preheader.lr.ph.split.18:               ; preds = %for.cond8.preheader.lr.ph.split.18.loopexit, %for.cond8.preheader.lr.ph.18
  %indvars.iv20.unr.18 = phi i64 [ 0, %for.cond8.preheader.lr.ph.18 ], [ %indvars.iv.next21.prol.18.lcssa, %for.cond8.preheader.lr.ph.split.18.loopexit ]
  %in_j.011.unr.18 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.18 ], [ %inc54.prol.18.lcssa, %for.cond8.preheader.lr.ph.split.18.loopexit ]
  br i1 %89, label %for.inc57.18, label %for.cond8.preheader.18.preheader

for.cond8.preheader.18.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.18
  br label %for.cond8.preheader.18

for.cond8.preheader.18:                           ; preds = %for.cond8.preheader.18.preheader, %for.inc53.7.18
  %indvars.iv20.18 = phi i64 [ %indvars.iv.next21.7.18, %for.inc53.7.18 ], [ %indvars.iv20.unr.18, %for.cond8.preheader.18.preheader ]
  %in_j.011.18 = phi i32 [ %inc54.7.18, %for.inc53.7.18 ], [ %in_j.011.unr.18, %for.cond8.preheader.18.preheader ]
  br i1 %cmp94, label %for.end38.18, label %for.body10.18.preheader

for.body10.18.preheader:                          ; preds = %for.cond8.preheader.18
  br label %for.body10.18

for.body10.18:                                    ; preds = %for.body10.18.preheader, %for.inc36.18
  %ki.06.18 = phi i32 [ %inc37.18, %for.inc36.18 ], [ 0, %for.body10.18.preheader ]
  %partial_sum.05.18 = phi float [ %partial_sum.3.18, %for.inc36.18 ], [ 0.000000e+00, %for.body10.18.preheader ]
  %add.18 = add nsw i32 %ki.06.18, %inc58.17
  %notlhs.18 = icmp slt i32 %add.18, 0
  %notrhs.18 = icmp uge i32 %add.18, %img_height
  %.not.18 = or i1 %notrhs.18, %notlhs.18
  %brmerge.18 = or i1 %.not.18, %cmp151.not.18
  br i1 %brmerge.18, label %for.inc36.18, label %for.body16.lr.ph.18

for.body16.lr.ph.18:                              ; preds = %for.body10.18
  %mul.18 = shl i32 %add.18, 7
  %mul30.18 = mul i32 %ki.06.18, %kern_width
  br label %for.body16.18

for.body16.18:                                    ; preds = %for.inc.18, %for.body16.lr.ph.18
  %indvars.iv.18 = phi i64 [ 0, %for.body16.lr.ph.18 ], [ %indvars.iv.next.18, %for.inc.18 ]
  %partial_sum.12.18 = phi float [ %partial_sum.05.18, %for.body16.lr.ph.18 ], [ %partial_sum.2.18, %for.inc.18 ]
  %1320 = trunc i64 %indvars.iv.18 to i32
  %add17.18 = add nsw i32 %1320, %in_j.011.18
  %cmp18.18 = icmp sgt i32 %add17.18, -1
  %cmp21.18 = icmp ult i32 %add17.18, %img_width
  %1321 = and i1 %cmp18.18, %cmp21.18
  br i1 %1321, label %if.end26.18, label %for.inc.18

if.end26.18:                                      ; preds = %for.body16.18
  %add29.18 = add nsw i32 %add17.18, %mul.18
  %idxprom.18 = sext i32 %add29.18 to i64
  %arrayidx.18 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.18
  %1322 = load float, float* %arrayidx.18, align 4
  %1323 = trunc i64 %indvars.iv.18 to i32
  %add31.18 = add i32 %1323, %mul30.18
  %idxprom32.18 = zext i32 %add31.18 to i64
  %arrayidx33.18 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.18
  %1324 = load float, float* %arrayidx33.18, align 4
  %mul34.18 = fmul float %1322, %1324
  %add35.18 = fadd float %partial_sum.12.18, %mul34.18
  br label %for.inc.18

for.inc.18:                                       ; preds = %if.end26.18, %for.body16.18
  %partial_sum.2.18 = phi float [ %add35.18, %if.end26.18 ], [ %partial_sum.12.18, %for.body16.18 ]
  %indvars.iv.next.18 = add nuw nsw i64 %indvars.iv.18, 1
  %lftr.wideiv.18 = trunc i64 %indvars.iv.next.18 to i32
  %exitcond.18 = icmp eq i32 %lftr.wideiv.18, %kern_width
  br i1 %exitcond.18, label %for.inc36.18.loopexit, label %for.body16.18, !llvm.loop !1

for.inc36.18.loopexit:                            ; preds = %for.inc.18
  %partial_sum.2.18.lcssa = phi float [ %partial_sum.2.18, %for.inc.18 ]
  br label %for.inc36.18

for.inc36.18:                                     ; preds = %for.inc36.18.loopexit, %for.body10.18
  %partial_sum.3.18 = phi float [ %partial_sum.05.18, %for.body10.18 ], [ %partial_sum.2.18.lcssa, %for.inc36.18.loopexit ]
  %inc37.18 = add nuw nsw i32 %ki.06.18, 1
  %exitcond19.18 = icmp eq i32 %inc37.18, %kern_height
  br i1 %exitcond19.18, label %for.end38.18.loopexit, label %for.body10.18, !llvm.loop !3

for.end38.18.loopexit:                            ; preds = %for.inc36.18
  %partial_sum.3.18.lcssa = phi float [ %partial_sum.3.18, %for.inc36.18 ]
  br label %for.end38.18

for.end38.18:                                     ; preds = %for.end38.18.loopexit, %for.cond8.preheader.18
  %partial_sum.0.lcssa.18 = phi float [ 0.000000e+00, %for.cond8.preheader.18 ], [ %partial_sum.3.18.lcssa, %for.end38.18.loopexit ]
  br i1 %tobool39, label %if.else.18, label %if.then40.18

if.then40.18:                                     ; preds = %for.end38.18
  %cmp41.18 = fcmp olt float %partial_sum.0.lcssa.18, 0.000000e+00
  %sub42.18 = fsub float -0.000000e+00, %partial_sum.0.lcssa.18
  %cond.18 = select i1 %cmp41.18, float %sub42.18, float %partial_sum.0.lcssa.18
  %conv.18 = fptoui float %cond.18 to i8
  %conv43.18 = uitofp i8 %conv.18 to float
  %1325 = add nsw i64 %indvars.iv20.18, %1312
  %arrayidx47.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1325
  store float %conv43.18, float* %arrayidx47.18, align 4
  br label %for.inc53.18

if.else.18:                                       ; preds = %for.end38.18
  %1326 = add nsw i64 %indvars.iv20.18, %1311
  %arrayidx51.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1326
  store float %partial_sum.0.lcssa.18, float* %arrayidx51.18, align 4
  br label %for.inc53.18

for.inc53.18:                                     ; preds = %if.else.18, %if.then40.18
  %inc54.18 = add nsw i32 %in_j.011.18, 1
  %indvars.iv.next21.18 = add nuw nsw i64 %indvars.iv20.18, 1
  br i1 %cmp94, label %for.end38.1.18, label %for.body10.1.18.preheader

for.body10.1.18.preheader:                        ; preds = %for.inc53.18
  br label %for.body10.1.18

for.body10.1.18:                                  ; preds = %for.body10.1.18.preheader, %for.inc36.1.18
  %ki.06.1.18 = phi i32 [ %inc37.1.18, %for.inc36.1.18 ], [ 0, %for.body10.1.18.preheader ]
  %partial_sum.05.1.18 = phi float [ %partial_sum.3.1.18, %for.inc36.1.18 ], [ 0.000000e+00, %for.body10.1.18.preheader ]
  %add.1.18 = add nsw i32 %ki.06.1.18, %inc58.17
  %notlhs.1.18 = icmp slt i32 %add.1.18, 0
  %notrhs.1.18 = icmp uge i32 %add.1.18, %img_height
  %.not.1.18 = or i1 %notrhs.1.18, %notlhs.1.18
  %brmerge.1.18 = or i1 %.not.1.18, %cmp151.not.1.18
  br i1 %brmerge.1.18, label %for.inc36.1.18, label %for.body16.lr.ph.1.18

for.body16.lr.ph.1.18:                            ; preds = %for.body10.1.18
  %mul.1.18 = shl i32 %add.1.18, 7
  %mul30.1.18 = mul i32 %ki.06.1.18, %kern_width
  br label %for.body16.1.18

for.body16.1.18:                                  ; preds = %for.inc.1.18, %for.body16.lr.ph.1.18
  %indvars.iv.1.18 = phi i64 [ 0, %for.body16.lr.ph.1.18 ], [ %indvars.iv.next.1.18, %for.inc.1.18 ]
  %partial_sum.12.1.18 = phi float [ %partial_sum.05.1.18, %for.body16.lr.ph.1.18 ], [ %partial_sum.2.1.18, %for.inc.1.18 ]
  %1327 = trunc i64 %indvars.iv.1.18 to i32
  %add17.1.18 = add nsw i32 %1327, %inc54.18
  %cmp18.1.18 = icmp sgt i32 %add17.1.18, -1
  %cmp21.1.18 = icmp ult i32 %add17.1.18, %img_width
  %1328 = and i1 %cmp18.1.18, %cmp21.1.18
  br i1 %1328, label %if.end26.1.18, label %for.inc.1.18

if.end26.1.18:                                    ; preds = %for.body16.1.18
  %add29.1.18 = add nsw i32 %add17.1.18, %mul.1.18
  %idxprom.1.18 = sext i32 %add29.1.18 to i64
  %arrayidx.1.18 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.18
  %1329 = load float, float* %arrayidx.1.18, align 4
  %1330 = trunc i64 %indvars.iv.1.18 to i32
  %add31.1.18 = add i32 %1330, %mul30.1.18
  %idxprom32.1.18 = zext i32 %add31.1.18 to i64
  %arrayidx33.1.18 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.18
  %1331 = load float, float* %arrayidx33.1.18, align 4
  %mul34.1.18 = fmul float %1329, %1331
  %add35.1.18 = fadd float %partial_sum.12.1.18, %mul34.1.18
  br label %for.inc.1.18

for.inc.1.18:                                     ; preds = %if.end26.1.18, %for.body16.1.18
  %partial_sum.2.1.18 = phi float [ %add35.1.18, %if.end26.1.18 ], [ %partial_sum.12.1.18, %for.body16.1.18 ]
  %indvars.iv.next.1.18 = add nuw nsw i64 %indvars.iv.1.18, 1
  %lftr.wideiv.1.18 = trunc i64 %indvars.iv.next.1.18 to i32
  %exitcond.1.18 = icmp eq i32 %lftr.wideiv.1.18, %kern_width
  br i1 %exitcond.1.18, label %for.inc36.1.18.loopexit, label %for.body16.1.18, !llvm.loop !1

for.inc36.1.18.loopexit:                          ; preds = %for.inc.1.18
  %partial_sum.2.1.18.lcssa = phi float [ %partial_sum.2.1.18, %for.inc.1.18 ]
  br label %for.inc36.1.18

for.inc36.1.18:                                   ; preds = %for.inc36.1.18.loopexit, %for.body10.1.18
  %partial_sum.3.1.18 = phi float [ %partial_sum.05.1.18, %for.body10.1.18 ], [ %partial_sum.2.1.18.lcssa, %for.inc36.1.18.loopexit ]
  %inc37.1.18 = add nuw nsw i32 %ki.06.1.18, 1
  %exitcond19.1.18 = icmp eq i32 %inc37.1.18, %kern_height
  br i1 %exitcond19.1.18, label %for.end38.1.18.loopexit, label %for.body10.1.18, !llvm.loop !3

for.end38.1.18.loopexit:                          ; preds = %for.inc36.1.18
  %partial_sum.3.1.18.lcssa = phi float [ %partial_sum.3.1.18, %for.inc36.1.18 ]
  br label %for.end38.1.18

for.end38.1.18:                                   ; preds = %for.end38.1.18.loopexit, %for.inc53.18
  %partial_sum.0.lcssa.1.18 = phi float [ 0.000000e+00, %for.inc53.18 ], [ %partial_sum.3.1.18.lcssa, %for.end38.1.18.loopexit ]
  br i1 %tobool39, label %if.else.1.18, label %if.then40.1.18

if.then40.1.18:                                   ; preds = %for.end38.1.18
  %cmp41.1.18 = fcmp olt float %partial_sum.0.lcssa.1.18, 0.000000e+00
  %sub42.1.18 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.18
  %cond.1.18 = select i1 %cmp41.1.18, float %sub42.1.18, float %partial_sum.0.lcssa.1.18
  %conv.1.18 = fptoui float %cond.1.18 to i8
  %conv43.1.18 = uitofp i8 %conv.1.18 to float
  %1332 = add nsw i64 %indvars.iv.next21.18, %1312
  %arrayidx47.1.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1332
  store float %conv43.1.18, float* %arrayidx47.1.18, align 4
  br label %for.inc53.1.18

if.else.1.18:                                     ; preds = %for.end38.1.18
  %1333 = add nsw i64 %indvars.iv.next21.18, %1311
  %arrayidx51.1.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1333
  store float %partial_sum.0.lcssa.1.18, float* %arrayidx51.1.18, align 4
  br label %for.inc53.1.18

for.inc53.1.18:                                   ; preds = %if.else.1.18, %if.then40.1.18
  %inc54.1.18 = add nsw i32 %in_j.011.18, 2
  %indvars.iv.next21.1.18 = add nsw i64 %indvars.iv20.18, 2
  br i1 %cmp94, label %for.end38.2.18, label %for.body10.2.18.preheader

for.body10.2.18.preheader:                        ; preds = %for.inc53.1.18
  br label %for.body10.2.18

for.body10.2.18:                                  ; preds = %for.body10.2.18.preheader, %for.inc36.2.18
  %ki.06.2.18 = phi i32 [ %inc37.2.18, %for.inc36.2.18 ], [ 0, %for.body10.2.18.preheader ]
  %partial_sum.05.2.18 = phi float [ %partial_sum.3.2.18, %for.inc36.2.18 ], [ 0.000000e+00, %for.body10.2.18.preheader ]
  %add.2.18 = add nsw i32 %ki.06.2.18, %inc58.17
  %notlhs.2.18 = icmp slt i32 %add.2.18, 0
  %notrhs.2.18 = icmp uge i32 %add.2.18, %img_height
  %.not.2.18 = or i1 %notrhs.2.18, %notlhs.2.18
  %brmerge.2.18 = or i1 %.not.2.18, %cmp151.not.2.18
  br i1 %brmerge.2.18, label %for.inc36.2.18, label %for.body16.lr.ph.2.18

for.body16.lr.ph.2.18:                            ; preds = %for.body10.2.18
  %mul.2.18 = shl i32 %add.2.18, 7
  %mul30.2.18 = mul i32 %ki.06.2.18, %kern_width
  br label %for.body16.2.18

for.body16.2.18:                                  ; preds = %for.inc.2.18, %for.body16.lr.ph.2.18
  %indvars.iv.2.18 = phi i64 [ 0, %for.body16.lr.ph.2.18 ], [ %indvars.iv.next.2.18, %for.inc.2.18 ]
  %partial_sum.12.2.18 = phi float [ %partial_sum.05.2.18, %for.body16.lr.ph.2.18 ], [ %partial_sum.2.2.18, %for.inc.2.18 ]
  %1334 = trunc i64 %indvars.iv.2.18 to i32
  %add17.2.18 = add nsw i32 %1334, %inc54.1.18
  %cmp18.2.18 = icmp sgt i32 %add17.2.18, -1
  %cmp21.2.18 = icmp ult i32 %add17.2.18, %img_width
  %1335 = and i1 %cmp18.2.18, %cmp21.2.18
  br i1 %1335, label %if.end26.2.18, label %for.inc.2.18

if.end26.2.18:                                    ; preds = %for.body16.2.18
  %add29.2.18 = add nsw i32 %add17.2.18, %mul.2.18
  %idxprom.2.18 = sext i32 %add29.2.18 to i64
  %arrayidx.2.18 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.18
  %1336 = load float, float* %arrayidx.2.18, align 4
  %1337 = trunc i64 %indvars.iv.2.18 to i32
  %add31.2.18 = add i32 %1337, %mul30.2.18
  %idxprom32.2.18 = zext i32 %add31.2.18 to i64
  %arrayidx33.2.18 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.18
  %1338 = load float, float* %arrayidx33.2.18, align 4
  %mul34.2.18 = fmul float %1336, %1338
  %add35.2.18 = fadd float %partial_sum.12.2.18, %mul34.2.18
  br label %for.inc.2.18

for.inc.2.18:                                     ; preds = %if.end26.2.18, %for.body16.2.18
  %partial_sum.2.2.18 = phi float [ %add35.2.18, %if.end26.2.18 ], [ %partial_sum.12.2.18, %for.body16.2.18 ]
  %indvars.iv.next.2.18 = add nuw nsw i64 %indvars.iv.2.18, 1
  %lftr.wideiv.2.18 = trunc i64 %indvars.iv.next.2.18 to i32
  %exitcond.2.18 = icmp eq i32 %lftr.wideiv.2.18, %kern_width
  br i1 %exitcond.2.18, label %for.inc36.2.18.loopexit, label %for.body16.2.18, !llvm.loop !1

for.inc36.2.18.loopexit:                          ; preds = %for.inc.2.18
  %partial_sum.2.2.18.lcssa = phi float [ %partial_sum.2.2.18, %for.inc.2.18 ]
  br label %for.inc36.2.18

for.inc36.2.18:                                   ; preds = %for.inc36.2.18.loopexit, %for.body10.2.18
  %partial_sum.3.2.18 = phi float [ %partial_sum.05.2.18, %for.body10.2.18 ], [ %partial_sum.2.2.18.lcssa, %for.inc36.2.18.loopexit ]
  %inc37.2.18 = add nuw nsw i32 %ki.06.2.18, 1
  %exitcond19.2.18 = icmp eq i32 %inc37.2.18, %kern_height
  br i1 %exitcond19.2.18, label %for.end38.2.18.loopexit, label %for.body10.2.18, !llvm.loop !3

for.end38.2.18.loopexit:                          ; preds = %for.inc36.2.18
  %partial_sum.3.2.18.lcssa = phi float [ %partial_sum.3.2.18, %for.inc36.2.18 ]
  br label %for.end38.2.18

for.end38.2.18:                                   ; preds = %for.end38.2.18.loopexit, %for.inc53.1.18
  %partial_sum.0.lcssa.2.18 = phi float [ 0.000000e+00, %for.inc53.1.18 ], [ %partial_sum.3.2.18.lcssa, %for.end38.2.18.loopexit ]
  br i1 %tobool39, label %if.else.2.18, label %if.then40.2.18

if.then40.2.18:                                   ; preds = %for.end38.2.18
  %cmp41.2.18 = fcmp olt float %partial_sum.0.lcssa.2.18, 0.000000e+00
  %sub42.2.18 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.18
  %cond.2.18 = select i1 %cmp41.2.18, float %sub42.2.18, float %partial_sum.0.lcssa.2.18
  %conv.2.18 = fptoui float %cond.2.18 to i8
  %conv43.2.18 = uitofp i8 %conv.2.18 to float
  %1339 = add nsw i64 %indvars.iv.next21.1.18, %1312
  %arrayidx47.2.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1339
  store float %conv43.2.18, float* %arrayidx47.2.18, align 4
  br label %for.inc53.2.18

if.else.2.18:                                     ; preds = %for.end38.2.18
  %1340 = add nsw i64 %indvars.iv.next21.1.18, %1311
  %arrayidx51.2.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1340
  store float %partial_sum.0.lcssa.2.18, float* %arrayidx51.2.18, align 4
  br label %for.inc53.2.18

for.inc53.2.18:                                   ; preds = %if.else.2.18, %if.then40.2.18
  %inc54.2.18 = add nsw i32 %in_j.011.18, 3
  %indvars.iv.next21.2.18 = add nsw i64 %indvars.iv20.18, 3
  br i1 %cmp94, label %for.end38.3.18, label %for.body10.3.18.preheader

for.body10.3.18.preheader:                        ; preds = %for.inc53.2.18
  br label %for.body10.3.18

for.body10.3.18:                                  ; preds = %for.body10.3.18.preheader, %for.inc36.3.18
  %ki.06.3.18 = phi i32 [ %inc37.3.18, %for.inc36.3.18 ], [ 0, %for.body10.3.18.preheader ]
  %partial_sum.05.3.18 = phi float [ %partial_sum.3.3.18, %for.inc36.3.18 ], [ 0.000000e+00, %for.body10.3.18.preheader ]
  %add.3.18 = add nsw i32 %ki.06.3.18, %inc58.17
  %notlhs.3.18 = icmp slt i32 %add.3.18, 0
  %notrhs.3.18 = icmp uge i32 %add.3.18, %img_height
  %.not.3.18 = or i1 %notrhs.3.18, %notlhs.3.18
  %brmerge.3.18 = or i1 %.not.3.18, %cmp151.not.3.18
  br i1 %brmerge.3.18, label %for.inc36.3.18, label %for.body16.lr.ph.3.18

for.body16.lr.ph.3.18:                            ; preds = %for.body10.3.18
  %mul.3.18 = shl i32 %add.3.18, 7
  %mul30.3.18 = mul i32 %ki.06.3.18, %kern_width
  br label %for.body16.3.18

for.body16.3.18:                                  ; preds = %for.inc.3.18, %for.body16.lr.ph.3.18
  %indvars.iv.3.18 = phi i64 [ 0, %for.body16.lr.ph.3.18 ], [ %indvars.iv.next.3.18, %for.inc.3.18 ]
  %partial_sum.12.3.18 = phi float [ %partial_sum.05.3.18, %for.body16.lr.ph.3.18 ], [ %partial_sum.2.3.18, %for.inc.3.18 ]
  %1341 = trunc i64 %indvars.iv.3.18 to i32
  %add17.3.18 = add nsw i32 %1341, %inc54.2.18
  %cmp18.3.18 = icmp sgt i32 %add17.3.18, -1
  %cmp21.3.18 = icmp ult i32 %add17.3.18, %img_width
  %1342 = and i1 %cmp18.3.18, %cmp21.3.18
  br i1 %1342, label %if.end26.3.18, label %for.inc.3.18

if.end26.3.18:                                    ; preds = %for.body16.3.18
  %add29.3.18 = add nsw i32 %add17.3.18, %mul.3.18
  %idxprom.3.18 = sext i32 %add29.3.18 to i64
  %arrayidx.3.18 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.18
  %1343 = load float, float* %arrayidx.3.18, align 4
  %1344 = trunc i64 %indvars.iv.3.18 to i32
  %add31.3.18 = add i32 %1344, %mul30.3.18
  %idxprom32.3.18 = zext i32 %add31.3.18 to i64
  %arrayidx33.3.18 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.18
  %1345 = load float, float* %arrayidx33.3.18, align 4
  %mul34.3.18 = fmul float %1343, %1345
  %add35.3.18 = fadd float %partial_sum.12.3.18, %mul34.3.18
  br label %for.inc.3.18

for.inc.3.18:                                     ; preds = %if.end26.3.18, %for.body16.3.18
  %partial_sum.2.3.18 = phi float [ %add35.3.18, %if.end26.3.18 ], [ %partial_sum.12.3.18, %for.body16.3.18 ]
  %indvars.iv.next.3.18 = add nuw nsw i64 %indvars.iv.3.18, 1
  %lftr.wideiv.3.18 = trunc i64 %indvars.iv.next.3.18 to i32
  %exitcond.3.18 = icmp eq i32 %lftr.wideiv.3.18, %kern_width
  br i1 %exitcond.3.18, label %for.inc36.3.18.loopexit, label %for.body16.3.18, !llvm.loop !1

for.inc36.3.18.loopexit:                          ; preds = %for.inc.3.18
  %partial_sum.2.3.18.lcssa = phi float [ %partial_sum.2.3.18, %for.inc.3.18 ]
  br label %for.inc36.3.18

for.inc36.3.18:                                   ; preds = %for.inc36.3.18.loopexit, %for.body10.3.18
  %partial_sum.3.3.18 = phi float [ %partial_sum.05.3.18, %for.body10.3.18 ], [ %partial_sum.2.3.18.lcssa, %for.inc36.3.18.loopexit ]
  %inc37.3.18 = add nuw nsw i32 %ki.06.3.18, 1
  %exitcond19.3.18 = icmp eq i32 %inc37.3.18, %kern_height
  br i1 %exitcond19.3.18, label %for.end38.3.18.loopexit, label %for.body10.3.18, !llvm.loop !3

for.end38.3.18.loopexit:                          ; preds = %for.inc36.3.18
  %partial_sum.3.3.18.lcssa = phi float [ %partial_sum.3.3.18, %for.inc36.3.18 ]
  br label %for.end38.3.18

for.end38.3.18:                                   ; preds = %for.end38.3.18.loopexit, %for.inc53.2.18
  %partial_sum.0.lcssa.3.18 = phi float [ 0.000000e+00, %for.inc53.2.18 ], [ %partial_sum.3.3.18.lcssa, %for.end38.3.18.loopexit ]
  br i1 %tobool39, label %if.else.3.18, label %if.then40.3.18

if.then40.3.18:                                   ; preds = %for.end38.3.18
  %cmp41.3.18 = fcmp olt float %partial_sum.0.lcssa.3.18, 0.000000e+00
  %sub42.3.18 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.18
  %cond.3.18 = select i1 %cmp41.3.18, float %sub42.3.18, float %partial_sum.0.lcssa.3.18
  %conv.3.18 = fptoui float %cond.3.18 to i8
  %conv43.3.18 = uitofp i8 %conv.3.18 to float
  %1346 = add nsw i64 %indvars.iv.next21.2.18, %1312
  %arrayidx47.3.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1346
  store float %conv43.3.18, float* %arrayidx47.3.18, align 4
  br label %for.inc53.3.18

if.else.3.18:                                     ; preds = %for.end38.3.18
  %1347 = add nsw i64 %indvars.iv.next21.2.18, %1311
  %arrayidx51.3.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1347
  store float %partial_sum.0.lcssa.3.18, float* %arrayidx51.3.18, align 4
  br label %for.inc53.3.18

for.inc53.3.18:                                   ; preds = %if.else.3.18, %if.then40.3.18
  %inc54.3.18 = add nsw i32 %in_j.011.18, 4
  %indvars.iv.next21.3.18 = add nsw i64 %indvars.iv20.18, 4
  br i1 %cmp94, label %for.end38.4.18, label %for.body10.4.18.preheader

for.body10.4.18.preheader:                        ; preds = %for.inc53.3.18
  br label %for.body10.4.18

for.body10.4.18:                                  ; preds = %for.body10.4.18.preheader, %for.inc36.4.18
  %ki.06.4.18 = phi i32 [ %inc37.4.18, %for.inc36.4.18 ], [ 0, %for.body10.4.18.preheader ]
  %partial_sum.05.4.18 = phi float [ %partial_sum.3.4.18, %for.inc36.4.18 ], [ 0.000000e+00, %for.body10.4.18.preheader ]
  %add.4.18 = add nsw i32 %ki.06.4.18, %inc58.17
  %notlhs.4.18 = icmp slt i32 %add.4.18, 0
  %notrhs.4.18 = icmp uge i32 %add.4.18, %img_height
  %.not.4.18 = or i1 %notrhs.4.18, %notlhs.4.18
  %brmerge.4.18 = or i1 %.not.4.18, %cmp151.not.4.18
  br i1 %brmerge.4.18, label %for.inc36.4.18, label %for.body16.lr.ph.4.18

for.body16.lr.ph.4.18:                            ; preds = %for.body10.4.18
  %mul.4.18 = shl i32 %add.4.18, 7
  %mul30.4.18 = mul i32 %ki.06.4.18, %kern_width
  br label %for.body16.4.18

for.body16.4.18:                                  ; preds = %for.inc.4.18, %for.body16.lr.ph.4.18
  %indvars.iv.4.18 = phi i64 [ 0, %for.body16.lr.ph.4.18 ], [ %indvars.iv.next.4.18, %for.inc.4.18 ]
  %partial_sum.12.4.18 = phi float [ %partial_sum.05.4.18, %for.body16.lr.ph.4.18 ], [ %partial_sum.2.4.18, %for.inc.4.18 ]
  %1348 = trunc i64 %indvars.iv.4.18 to i32
  %add17.4.18 = add nsw i32 %1348, %inc54.3.18
  %cmp18.4.18 = icmp sgt i32 %add17.4.18, -1
  %cmp21.4.18 = icmp ult i32 %add17.4.18, %img_width
  %1349 = and i1 %cmp18.4.18, %cmp21.4.18
  br i1 %1349, label %if.end26.4.18, label %for.inc.4.18

if.end26.4.18:                                    ; preds = %for.body16.4.18
  %add29.4.18 = add nsw i32 %add17.4.18, %mul.4.18
  %idxprom.4.18 = sext i32 %add29.4.18 to i64
  %arrayidx.4.18 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.18
  %1350 = load float, float* %arrayidx.4.18, align 4
  %1351 = trunc i64 %indvars.iv.4.18 to i32
  %add31.4.18 = add i32 %1351, %mul30.4.18
  %idxprom32.4.18 = zext i32 %add31.4.18 to i64
  %arrayidx33.4.18 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.18
  %1352 = load float, float* %arrayidx33.4.18, align 4
  %mul34.4.18 = fmul float %1350, %1352
  %add35.4.18 = fadd float %partial_sum.12.4.18, %mul34.4.18
  br label %for.inc.4.18

for.inc.4.18:                                     ; preds = %if.end26.4.18, %for.body16.4.18
  %partial_sum.2.4.18 = phi float [ %add35.4.18, %if.end26.4.18 ], [ %partial_sum.12.4.18, %for.body16.4.18 ]
  %indvars.iv.next.4.18 = add nuw nsw i64 %indvars.iv.4.18, 1
  %lftr.wideiv.4.18 = trunc i64 %indvars.iv.next.4.18 to i32
  %exitcond.4.18 = icmp eq i32 %lftr.wideiv.4.18, %kern_width
  br i1 %exitcond.4.18, label %for.inc36.4.18.loopexit, label %for.body16.4.18, !llvm.loop !1

for.inc36.4.18.loopexit:                          ; preds = %for.inc.4.18
  %partial_sum.2.4.18.lcssa = phi float [ %partial_sum.2.4.18, %for.inc.4.18 ]
  br label %for.inc36.4.18

for.inc36.4.18:                                   ; preds = %for.inc36.4.18.loopexit, %for.body10.4.18
  %partial_sum.3.4.18 = phi float [ %partial_sum.05.4.18, %for.body10.4.18 ], [ %partial_sum.2.4.18.lcssa, %for.inc36.4.18.loopexit ]
  %inc37.4.18 = add nuw nsw i32 %ki.06.4.18, 1
  %exitcond19.4.18 = icmp eq i32 %inc37.4.18, %kern_height
  br i1 %exitcond19.4.18, label %for.end38.4.18.loopexit, label %for.body10.4.18, !llvm.loop !3

for.end38.4.18.loopexit:                          ; preds = %for.inc36.4.18
  %partial_sum.3.4.18.lcssa = phi float [ %partial_sum.3.4.18, %for.inc36.4.18 ]
  br label %for.end38.4.18

for.end38.4.18:                                   ; preds = %for.end38.4.18.loopexit, %for.inc53.3.18
  %partial_sum.0.lcssa.4.18 = phi float [ 0.000000e+00, %for.inc53.3.18 ], [ %partial_sum.3.4.18.lcssa, %for.end38.4.18.loopexit ]
  br i1 %tobool39, label %if.else.4.18, label %if.then40.4.18

if.then40.4.18:                                   ; preds = %for.end38.4.18
  %cmp41.4.18 = fcmp olt float %partial_sum.0.lcssa.4.18, 0.000000e+00
  %sub42.4.18 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.18
  %cond.4.18 = select i1 %cmp41.4.18, float %sub42.4.18, float %partial_sum.0.lcssa.4.18
  %conv.4.18 = fptoui float %cond.4.18 to i8
  %conv43.4.18 = uitofp i8 %conv.4.18 to float
  %1353 = add nsw i64 %indvars.iv.next21.3.18, %1312
  %arrayidx47.4.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1353
  store float %conv43.4.18, float* %arrayidx47.4.18, align 4
  br label %for.inc53.4.18

if.else.4.18:                                     ; preds = %for.end38.4.18
  %1354 = add nsw i64 %indvars.iv.next21.3.18, %1311
  %arrayidx51.4.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1354
  store float %partial_sum.0.lcssa.4.18, float* %arrayidx51.4.18, align 4
  br label %for.inc53.4.18

for.inc53.4.18:                                   ; preds = %if.else.4.18, %if.then40.4.18
  %inc54.4.18 = add nsw i32 %in_j.011.18, 5
  %indvars.iv.next21.4.18 = add nsw i64 %indvars.iv20.18, 5
  br i1 %cmp94, label %for.end38.5.18, label %for.body10.5.18.preheader

for.body10.5.18.preheader:                        ; preds = %for.inc53.4.18
  br label %for.body10.5.18

for.body10.5.18:                                  ; preds = %for.body10.5.18.preheader, %for.inc36.5.18
  %ki.06.5.18 = phi i32 [ %inc37.5.18, %for.inc36.5.18 ], [ 0, %for.body10.5.18.preheader ]
  %partial_sum.05.5.18 = phi float [ %partial_sum.3.5.18, %for.inc36.5.18 ], [ 0.000000e+00, %for.body10.5.18.preheader ]
  %add.5.18 = add nsw i32 %ki.06.5.18, %inc58.17
  %notlhs.5.18 = icmp slt i32 %add.5.18, 0
  %notrhs.5.18 = icmp uge i32 %add.5.18, %img_height
  %.not.5.18 = or i1 %notrhs.5.18, %notlhs.5.18
  %brmerge.5.18 = or i1 %.not.5.18, %cmp151.not.5.18
  br i1 %brmerge.5.18, label %for.inc36.5.18, label %for.body16.lr.ph.5.18

for.body16.lr.ph.5.18:                            ; preds = %for.body10.5.18
  %mul.5.18 = shl i32 %add.5.18, 7
  %mul30.5.18 = mul i32 %ki.06.5.18, %kern_width
  br label %for.body16.5.18

for.body16.5.18:                                  ; preds = %for.inc.5.18, %for.body16.lr.ph.5.18
  %indvars.iv.5.18 = phi i64 [ 0, %for.body16.lr.ph.5.18 ], [ %indvars.iv.next.5.18, %for.inc.5.18 ]
  %partial_sum.12.5.18 = phi float [ %partial_sum.05.5.18, %for.body16.lr.ph.5.18 ], [ %partial_sum.2.5.18, %for.inc.5.18 ]
  %1355 = trunc i64 %indvars.iv.5.18 to i32
  %add17.5.18 = add nsw i32 %1355, %inc54.4.18
  %cmp18.5.18 = icmp sgt i32 %add17.5.18, -1
  %cmp21.5.18 = icmp ult i32 %add17.5.18, %img_width
  %1356 = and i1 %cmp18.5.18, %cmp21.5.18
  br i1 %1356, label %if.end26.5.18, label %for.inc.5.18

if.end26.5.18:                                    ; preds = %for.body16.5.18
  %add29.5.18 = add nsw i32 %add17.5.18, %mul.5.18
  %idxprom.5.18 = sext i32 %add29.5.18 to i64
  %arrayidx.5.18 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.18
  %1357 = load float, float* %arrayidx.5.18, align 4
  %1358 = trunc i64 %indvars.iv.5.18 to i32
  %add31.5.18 = add i32 %1358, %mul30.5.18
  %idxprom32.5.18 = zext i32 %add31.5.18 to i64
  %arrayidx33.5.18 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.18
  %1359 = load float, float* %arrayidx33.5.18, align 4
  %mul34.5.18 = fmul float %1357, %1359
  %add35.5.18 = fadd float %partial_sum.12.5.18, %mul34.5.18
  br label %for.inc.5.18

for.inc.5.18:                                     ; preds = %if.end26.5.18, %for.body16.5.18
  %partial_sum.2.5.18 = phi float [ %add35.5.18, %if.end26.5.18 ], [ %partial_sum.12.5.18, %for.body16.5.18 ]
  %indvars.iv.next.5.18 = add nuw nsw i64 %indvars.iv.5.18, 1
  %lftr.wideiv.5.18 = trunc i64 %indvars.iv.next.5.18 to i32
  %exitcond.5.18 = icmp eq i32 %lftr.wideiv.5.18, %kern_width
  br i1 %exitcond.5.18, label %for.inc36.5.18.loopexit, label %for.body16.5.18, !llvm.loop !1

for.inc36.5.18.loopexit:                          ; preds = %for.inc.5.18
  %partial_sum.2.5.18.lcssa = phi float [ %partial_sum.2.5.18, %for.inc.5.18 ]
  br label %for.inc36.5.18

for.inc36.5.18:                                   ; preds = %for.inc36.5.18.loopexit, %for.body10.5.18
  %partial_sum.3.5.18 = phi float [ %partial_sum.05.5.18, %for.body10.5.18 ], [ %partial_sum.2.5.18.lcssa, %for.inc36.5.18.loopexit ]
  %inc37.5.18 = add nuw nsw i32 %ki.06.5.18, 1
  %exitcond19.5.18 = icmp eq i32 %inc37.5.18, %kern_height
  br i1 %exitcond19.5.18, label %for.end38.5.18.loopexit, label %for.body10.5.18, !llvm.loop !3

for.end38.5.18.loopexit:                          ; preds = %for.inc36.5.18
  %partial_sum.3.5.18.lcssa = phi float [ %partial_sum.3.5.18, %for.inc36.5.18 ]
  br label %for.end38.5.18

for.end38.5.18:                                   ; preds = %for.end38.5.18.loopexit, %for.inc53.4.18
  %partial_sum.0.lcssa.5.18 = phi float [ 0.000000e+00, %for.inc53.4.18 ], [ %partial_sum.3.5.18.lcssa, %for.end38.5.18.loopexit ]
  br i1 %tobool39, label %if.else.5.18, label %if.then40.5.18

if.then40.5.18:                                   ; preds = %for.end38.5.18
  %cmp41.5.18 = fcmp olt float %partial_sum.0.lcssa.5.18, 0.000000e+00
  %sub42.5.18 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.18
  %cond.5.18 = select i1 %cmp41.5.18, float %sub42.5.18, float %partial_sum.0.lcssa.5.18
  %conv.5.18 = fptoui float %cond.5.18 to i8
  %conv43.5.18 = uitofp i8 %conv.5.18 to float
  %1360 = add nsw i64 %indvars.iv.next21.4.18, %1312
  %arrayidx47.5.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1360
  store float %conv43.5.18, float* %arrayidx47.5.18, align 4
  br label %for.inc53.5.18

if.else.5.18:                                     ; preds = %for.end38.5.18
  %1361 = add nsw i64 %indvars.iv.next21.4.18, %1311
  %arrayidx51.5.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1361
  store float %partial_sum.0.lcssa.5.18, float* %arrayidx51.5.18, align 4
  br label %for.inc53.5.18

for.inc53.5.18:                                   ; preds = %if.else.5.18, %if.then40.5.18
  %inc54.5.18 = add nsw i32 %in_j.011.18, 6
  %indvars.iv.next21.5.18 = add nsw i64 %indvars.iv20.18, 6
  br i1 %cmp94, label %for.end38.6.18, label %for.body10.6.18.preheader

for.body10.6.18.preheader:                        ; preds = %for.inc53.5.18
  br label %for.body10.6.18

for.body10.6.18:                                  ; preds = %for.body10.6.18.preheader, %for.inc36.6.18
  %ki.06.6.18 = phi i32 [ %inc37.6.18, %for.inc36.6.18 ], [ 0, %for.body10.6.18.preheader ]
  %partial_sum.05.6.18 = phi float [ %partial_sum.3.6.18, %for.inc36.6.18 ], [ 0.000000e+00, %for.body10.6.18.preheader ]
  %add.6.18 = add nsw i32 %ki.06.6.18, %inc58.17
  %notlhs.6.18 = icmp slt i32 %add.6.18, 0
  %notrhs.6.18 = icmp uge i32 %add.6.18, %img_height
  %.not.6.18 = or i1 %notrhs.6.18, %notlhs.6.18
  %brmerge.6.18 = or i1 %.not.6.18, %cmp151.not.6.18
  br i1 %brmerge.6.18, label %for.inc36.6.18, label %for.body16.lr.ph.6.18

for.body16.lr.ph.6.18:                            ; preds = %for.body10.6.18
  %mul.6.18 = shl i32 %add.6.18, 7
  %mul30.6.18 = mul i32 %ki.06.6.18, %kern_width
  br label %for.body16.6.18

for.body16.6.18:                                  ; preds = %for.inc.6.18, %for.body16.lr.ph.6.18
  %indvars.iv.6.18 = phi i64 [ 0, %for.body16.lr.ph.6.18 ], [ %indvars.iv.next.6.18, %for.inc.6.18 ]
  %partial_sum.12.6.18 = phi float [ %partial_sum.05.6.18, %for.body16.lr.ph.6.18 ], [ %partial_sum.2.6.18, %for.inc.6.18 ]
  %1362 = trunc i64 %indvars.iv.6.18 to i32
  %add17.6.18 = add nsw i32 %1362, %inc54.5.18
  %cmp18.6.18 = icmp sgt i32 %add17.6.18, -1
  %cmp21.6.18 = icmp ult i32 %add17.6.18, %img_width
  %1363 = and i1 %cmp18.6.18, %cmp21.6.18
  br i1 %1363, label %if.end26.6.18, label %for.inc.6.18

if.end26.6.18:                                    ; preds = %for.body16.6.18
  %add29.6.18 = add nsw i32 %add17.6.18, %mul.6.18
  %idxprom.6.18 = sext i32 %add29.6.18 to i64
  %arrayidx.6.18 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.18
  %1364 = load float, float* %arrayidx.6.18, align 4
  %1365 = trunc i64 %indvars.iv.6.18 to i32
  %add31.6.18 = add i32 %1365, %mul30.6.18
  %idxprom32.6.18 = zext i32 %add31.6.18 to i64
  %arrayidx33.6.18 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.18
  %1366 = load float, float* %arrayidx33.6.18, align 4
  %mul34.6.18 = fmul float %1364, %1366
  %add35.6.18 = fadd float %partial_sum.12.6.18, %mul34.6.18
  br label %for.inc.6.18

for.inc.6.18:                                     ; preds = %if.end26.6.18, %for.body16.6.18
  %partial_sum.2.6.18 = phi float [ %add35.6.18, %if.end26.6.18 ], [ %partial_sum.12.6.18, %for.body16.6.18 ]
  %indvars.iv.next.6.18 = add nuw nsw i64 %indvars.iv.6.18, 1
  %lftr.wideiv.6.18 = trunc i64 %indvars.iv.next.6.18 to i32
  %exitcond.6.18 = icmp eq i32 %lftr.wideiv.6.18, %kern_width
  br i1 %exitcond.6.18, label %for.inc36.6.18.loopexit, label %for.body16.6.18, !llvm.loop !1

for.inc36.6.18.loopexit:                          ; preds = %for.inc.6.18
  %partial_sum.2.6.18.lcssa = phi float [ %partial_sum.2.6.18, %for.inc.6.18 ]
  br label %for.inc36.6.18

for.inc36.6.18:                                   ; preds = %for.inc36.6.18.loopexit, %for.body10.6.18
  %partial_sum.3.6.18 = phi float [ %partial_sum.05.6.18, %for.body10.6.18 ], [ %partial_sum.2.6.18.lcssa, %for.inc36.6.18.loopexit ]
  %inc37.6.18 = add nuw nsw i32 %ki.06.6.18, 1
  %exitcond19.6.18 = icmp eq i32 %inc37.6.18, %kern_height
  br i1 %exitcond19.6.18, label %for.end38.6.18.loopexit, label %for.body10.6.18, !llvm.loop !3

for.end38.6.18.loopexit:                          ; preds = %for.inc36.6.18
  %partial_sum.3.6.18.lcssa = phi float [ %partial_sum.3.6.18, %for.inc36.6.18 ]
  br label %for.end38.6.18

for.end38.6.18:                                   ; preds = %for.end38.6.18.loopexit, %for.inc53.5.18
  %partial_sum.0.lcssa.6.18 = phi float [ 0.000000e+00, %for.inc53.5.18 ], [ %partial_sum.3.6.18.lcssa, %for.end38.6.18.loopexit ]
  br i1 %tobool39, label %if.else.6.18, label %if.then40.6.18

if.then40.6.18:                                   ; preds = %for.end38.6.18
  %cmp41.6.18 = fcmp olt float %partial_sum.0.lcssa.6.18, 0.000000e+00
  %sub42.6.18 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.18
  %cond.6.18 = select i1 %cmp41.6.18, float %sub42.6.18, float %partial_sum.0.lcssa.6.18
  %conv.6.18 = fptoui float %cond.6.18 to i8
  %conv43.6.18 = uitofp i8 %conv.6.18 to float
  %1367 = add nsw i64 %indvars.iv.next21.5.18, %1312
  %arrayidx47.6.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1367
  store float %conv43.6.18, float* %arrayidx47.6.18, align 4
  br label %for.inc53.6.18

if.else.6.18:                                     ; preds = %for.end38.6.18
  %1368 = add nsw i64 %indvars.iv.next21.5.18, %1311
  %arrayidx51.6.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1368
  store float %partial_sum.0.lcssa.6.18, float* %arrayidx51.6.18, align 4
  br label %for.inc53.6.18

for.inc53.6.18:                                   ; preds = %if.else.6.18, %if.then40.6.18
  %inc54.6.18 = add nsw i32 %in_j.011.18, 7
  %indvars.iv.next21.6.18 = add nsw i64 %indvars.iv20.18, 7
  br i1 %cmp94, label %for.end38.7.18, label %for.body10.7.18.preheader

for.body10.7.18.preheader:                        ; preds = %for.inc53.6.18
  br label %for.body10.7.18

for.body10.7.18:                                  ; preds = %for.body10.7.18.preheader, %for.inc36.7.18
  %ki.06.7.18 = phi i32 [ %inc37.7.18, %for.inc36.7.18 ], [ 0, %for.body10.7.18.preheader ]
  %partial_sum.05.7.18 = phi float [ %partial_sum.3.7.18, %for.inc36.7.18 ], [ 0.000000e+00, %for.body10.7.18.preheader ]
  %add.7.18 = add nsw i32 %ki.06.7.18, %inc58.17
  %notlhs.7.18 = icmp slt i32 %add.7.18, 0
  %notrhs.7.18 = icmp uge i32 %add.7.18, %img_height
  %.not.7.18 = or i1 %notrhs.7.18, %notlhs.7.18
  %brmerge.7.18 = or i1 %.not.7.18, %cmp151.not.7.18
  br i1 %brmerge.7.18, label %for.inc36.7.18, label %for.body16.lr.ph.7.18

for.body16.lr.ph.7.18:                            ; preds = %for.body10.7.18
  %mul.7.18 = shl i32 %add.7.18, 7
  %mul30.7.18 = mul i32 %ki.06.7.18, %kern_width
  br label %for.body16.7.18

for.body16.7.18:                                  ; preds = %for.inc.7.18, %for.body16.lr.ph.7.18
  %indvars.iv.7.18 = phi i64 [ 0, %for.body16.lr.ph.7.18 ], [ %indvars.iv.next.7.18, %for.inc.7.18 ]
  %partial_sum.12.7.18 = phi float [ %partial_sum.05.7.18, %for.body16.lr.ph.7.18 ], [ %partial_sum.2.7.18, %for.inc.7.18 ]
  %1369 = trunc i64 %indvars.iv.7.18 to i32
  %add17.7.18 = add nsw i32 %1369, %inc54.6.18
  %cmp18.7.18 = icmp sgt i32 %add17.7.18, -1
  %cmp21.7.18 = icmp ult i32 %add17.7.18, %img_width
  %1370 = and i1 %cmp18.7.18, %cmp21.7.18
  br i1 %1370, label %if.end26.7.18, label %for.inc.7.18

if.end26.7.18:                                    ; preds = %for.body16.7.18
  %add29.7.18 = add nsw i32 %add17.7.18, %mul.7.18
  %idxprom.7.18 = sext i32 %add29.7.18 to i64
  %arrayidx.7.18 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.18
  %1371 = load float, float* %arrayidx.7.18, align 4
  %1372 = trunc i64 %indvars.iv.7.18 to i32
  %add31.7.18 = add i32 %1372, %mul30.7.18
  %idxprom32.7.18 = zext i32 %add31.7.18 to i64
  %arrayidx33.7.18 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.18
  %1373 = load float, float* %arrayidx33.7.18, align 4
  %mul34.7.18 = fmul float %1371, %1373
  %add35.7.18 = fadd float %partial_sum.12.7.18, %mul34.7.18
  br label %for.inc.7.18

for.inc.7.18:                                     ; preds = %if.end26.7.18, %for.body16.7.18
  %partial_sum.2.7.18 = phi float [ %add35.7.18, %if.end26.7.18 ], [ %partial_sum.12.7.18, %for.body16.7.18 ]
  %indvars.iv.next.7.18 = add nuw nsw i64 %indvars.iv.7.18, 1
  %lftr.wideiv.7.18 = trunc i64 %indvars.iv.next.7.18 to i32
  %exitcond.7.18 = icmp eq i32 %lftr.wideiv.7.18, %kern_width
  br i1 %exitcond.7.18, label %for.inc36.7.18.loopexit, label %for.body16.7.18, !llvm.loop !1

for.inc36.7.18.loopexit:                          ; preds = %for.inc.7.18
  %partial_sum.2.7.18.lcssa = phi float [ %partial_sum.2.7.18, %for.inc.7.18 ]
  br label %for.inc36.7.18

for.inc36.7.18:                                   ; preds = %for.inc36.7.18.loopexit, %for.body10.7.18
  %partial_sum.3.7.18 = phi float [ %partial_sum.05.7.18, %for.body10.7.18 ], [ %partial_sum.2.7.18.lcssa, %for.inc36.7.18.loopexit ]
  %inc37.7.18 = add nuw nsw i32 %ki.06.7.18, 1
  %exitcond19.7.18 = icmp eq i32 %inc37.7.18, %kern_height
  br i1 %exitcond19.7.18, label %for.end38.7.18.loopexit, label %for.body10.7.18, !llvm.loop !3

for.end38.7.18.loopexit:                          ; preds = %for.inc36.7.18
  %partial_sum.3.7.18.lcssa = phi float [ %partial_sum.3.7.18, %for.inc36.7.18 ]
  br label %for.end38.7.18

for.end38.7.18:                                   ; preds = %for.end38.7.18.loopexit, %for.inc53.6.18
  %partial_sum.0.lcssa.7.18 = phi float [ 0.000000e+00, %for.inc53.6.18 ], [ %partial_sum.3.7.18.lcssa, %for.end38.7.18.loopexit ]
  br i1 %tobool39, label %if.else.7.18, label %if.then40.7.18

if.then40.7.18:                                   ; preds = %for.end38.7.18
  %cmp41.7.18 = fcmp olt float %partial_sum.0.lcssa.7.18, 0.000000e+00
  %sub42.7.18 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.18
  %cond.7.18 = select i1 %cmp41.7.18, float %sub42.7.18, float %partial_sum.0.lcssa.7.18
  %conv.7.18 = fptoui float %cond.7.18 to i8
  %conv43.7.18 = uitofp i8 %conv.7.18 to float
  %1374 = add nsw i64 %indvars.iv.next21.6.18, %1312
  %arrayidx47.7.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1374
  store float %conv43.7.18, float* %arrayidx47.7.18, align 4
  br label %for.inc53.7.18

if.else.7.18:                                     ; preds = %for.end38.7.18
  %1375 = add nsw i64 %indvars.iv.next21.6.18, %1311
  %arrayidx51.7.18 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1375
  store float %partial_sum.0.lcssa.7.18, float* %arrayidx51.7.18, align 4
  br label %for.inc53.7.18

for.inc53.7.18:                                   ; preds = %if.else.7.18, %if.then40.7.18
  %inc54.7.18 = add nsw i32 %in_j.011.18, 8
  %indvars.iv.next21.7.18 = add nsw i64 %indvars.iv20.18, 8
  %lftr.wideiv24.7.18 = trunc i64 %indvars.iv.next21.7.18 to i32
  %exitcond25.7.18 = icmp eq i32 %lftr.wideiv24.7.18, %img_width
  br i1 %exitcond25.7.18, label %for.inc57.18.loopexit, label %for.cond8.preheader.18, !llvm.loop !5

for.inc57.18.loopexit:                            ; preds = %for.inc53.7.18
  br label %for.inc57.18

for.inc57.18:                                     ; preds = %for.inc57.18.loopexit, %for.cond8.preheader.lr.ph.split.18
  %inc58.18 = add nsw i32 %in_i.015, 19
  %indvars.iv.next27.18 = add nsw i64 %indvars.iv26, 19
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.19

for.cond8.preheader.lr.ph.19:                     ; preds = %for.inc57.18
  %1376 = trunc i64 %indvars.iv.next27.18 to i32
  %mul48.19 = shl i32 %1376, 7
  %1377 = trunc i64 %indvars.iv.next27.18 to i32
  %mul44.19 = shl i32 %1377, 7
  %1378 = sext i32 %mul48.19 to i64
  %1379 = sext i32 %mul44.19 to i64
  br i1 %lcmp.mod.19, label %for.cond8.preheader.lr.ph.split.19, label %for.cond8.preheader.prol.19.preheader

for.cond8.preheader.prol.19.preheader:            ; preds = %for.cond8.preheader.lr.ph.19
  br label %for.cond8.preheader.prol.19

for.cond8.preheader.prol.19:                      ; preds = %for.cond8.preheader.prol.19.preheader, %for.inc53.prol.19
  %indvars.iv20.prol.19 = phi i64 [ %indvars.iv.next21.prol.19, %for.inc53.prol.19 ], [ 0, %for.cond8.preheader.prol.19.preheader ]
  %in_j.011.prol.19 = phi i32 [ %inc54.prol.19, %for.inc53.prol.19 ], [ %sub4, %for.cond8.preheader.prol.19.preheader ]
  %prol.iter.19 = phi i32 [ %prol.iter.sub.19, %for.inc53.prol.19 ], [ %xtraiter.19, %for.cond8.preheader.prol.19.preheader ]
  br i1 %cmp94, label %for.end38.prol.19, label %for.body10.prol.19.preheader

for.body10.prol.19.preheader:                     ; preds = %for.cond8.preheader.prol.19
  br label %for.body10.prol.19

for.body10.prol.19:                               ; preds = %for.body10.prol.19.preheader, %for.inc36.prol.19
  %ki.06.prol.19 = phi i32 [ %inc37.prol.19, %for.inc36.prol.19 ], [ 0, %for.body10.prol.19.preheader ]
  %partial_sum.05.prol.19 = phi float [ %partial_sum.3.prol.19, %for.inc36.prol.19 ], [ 0.000000e+00, %for.body10.prol.19.preheader ]
  %add.prol.19 = add nsw i32 %ki.06.prol.19, %inc58.18
  %notlhs.prol.19 = icmp slt i32 %add.prol.19, 0
  %notrhs.prol.19 = icmp uge i32 %add.prol.19, %img_height
  %.not.prol.19 = or i1 %notrhs.prol.19, %notlhs.prol.19
  %brmerge.prol.19 = or i1 %.not.prol.19, %cmp151.not.prol.19
  br i1 %brmerge.prol.19, label %for.inc36.prol.19, label %for.body16.lr.ph.prol.19

for.body16.lr.ph.prol.19:                         ; preds = %for.body10.prol.19
  %mul.prol.19 = shl i32 %add.prol.19, 7
  %mul30.prol.19 = mul i32 %ki.06.prol.19, %kern_width
  br label %for.body16.prol.19

for.body16.prol.19:                               ; preds = %for.inc.prol.19, %for.body16.lr.ph.prol.19
  %indvars.iv.prol.19 = phi i64 [ 0, %for.body16.lr.ph.prol.19 ], [ %indvars.iv.next.prol.19, %for.inc.prol.19 ]
  %partial_sum.12.prol.19 = phi float [ %partial_sum.05.prol.19, %for.body16.lr.ph.prol.19 ], [ %partial_sum.2.prol.19, %for.inc.prol.19 ]
  %1380 = trunc i64 %indvars.iv.prol.19 to i32
  %add17.prol.19 = add nsw i32 %1380, %in_j.011.prol.19
  %cmp18.prol.19 = icmp sgt i32 %add17.prol.19, -1
  %cmp21.prol.19 = icmp ult i32 %add17.prol.19, %img_width
  %1381 = and i1 %cmp18.prol.19, %cmp21.prol.19
  br i1 %1381, label %if.end26.prol.19, label %for.inc.prol.19

if.end26.prol.19:                                 ; preds = %for.body16.prol.19
  %add29.prol.19 = add nsw i32 %add17.prol.19, %mul.prol.19
  %idxprom.prol.19 = sext i32 %add29.prol.19 to i64
  %arrayidx.prol.19 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.19
  %1382 = load float, float* %arrayidx.prol.19, align 4
  %1383 = trunc i64 %indvars.iv.prol.19 to i32
  %add31.prol.19 = add i32 %1383, %mul30.prol.19
  %idxprom32.prol.19 = zext i32 %add31.prol.19 to i64
  %arrayidx33.prol.19 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.19
  %1384 = load float, float* %arrayidx33.prol.19, align 4
  %mul34.prol.19 = fmul float %1382, %1384
  %add35.prol.19 = fadd float %partial_sum.12.prol.19, %mul34.prol.19
  br label %for.inc.prol.19

for.inc.prol.19:                                  ; preds = %if.end26.prol.19, %for.body16.prol.19
  %partial_sum.2.prol.19 = phi float [ %add35.prol.19, %if.end26.prol.19 ], [ %partial_sum.12.prol.19, %for.body16.prol.19 ]
  %indvars.iv.next.prol.19 = add nuw nsw i64 %indvars.iv.prol.19, 1
  %lftr.wideiv.prol.19 = trunc i64 %indvars.iv.next.prol.19 to i32
  %exitcond.prol.19 = icmp eq i32 %lftr.wideiv.prol.19, %kern_width
  br i1 %exitcond.prol.19, label %for.inc36.prol.19.loopexit, label %for.body16.prol.19, !llvm.loop !1

for.inc36.prol.19.loopexit:                       ; preds = %for.inc.prol.19
  %partial_sum.2.prol.19.lcssa = phi float [ %partial_sum.2.prol.19, %for.inc.prol.19 ]
  br label %for.inc36.prol.19

for.inc36.prol.19:                                ; preds = %for.inc36.prol.19.loopexit, %for.body10.prol.19
  %partial_sum.3.prol.19 = phi float [ %partial_sum.05.prol.19, %for.body10.prol.19 ], [ %partial_sum.2.prol.19.lcssa, %for.inc36.prol.19.loopexit ]
  %inc37.prol.19 = add nuw nsw i32 %ki.06.prol.19, 1
  %exitcond19.prol.19 = icmp eq i32 %inc37.prol.19, %kern_height
  br i1 %exitcond19.prol.19, label %for.end38.prol.19.loopexit, label %for.body10.prol.19, !llvm.loop !3

for.end38.prol.19.loopexit:                       ; preds = %for.inc36.prol.19
  %partial_sum.3.prol.19.lcssa = phi float [ %partial_sum.3.prol.19, %for.inc36.prol.19 ]
  br label %for.end38.prol.19

for.end38.prol.19:                                ; preds = %for.end38.prol.19.loopexit, %for.cond8.preheader.prol.19
  %partial_sum.0.lcssa.prol.19 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.19 ], [ %partial_sum.3.prol.19.lcssa, %for.end38.prol.19.loopexit ]
  br i1 %tobool39, label %if.else.prol.19, label %if.then40.prol.19

if.then40.prol.19:                                ; preds = %for.end38.prol.19
  %cmp41.prol.19 = fcmp olt float %partial_sum.0.lcssa.prol.19, 0.000000e+00
  %sub42.prol.19 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.19
  %cond.prol.19 = select i1 %cmp41.prol.19, float %sub42.prol.19, float %partial_sum.0.lcssa.prol.19
  %conv.prol.19 = fptoui float %cond.prol.19 to i8
  %conv43.prol.19 = uitofp i8 %conv.prol.19 to float
  %1385 = add nsw i64 %indvars.iv20.prol.19, %1379
  %arrayidx47.prol.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1385
  store float %conv43.prol.19, float* %arrayidx47.prol.19, align 4
  br label %for.inc53.prol.19

if.else.prol.19:                                  ; preds = %for.end38.prol.19
  %1386 = add nsw i64 %indvars.iv20.prol.19, %1378
  %arrayidx51.prol.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1386
  store float %partial_sum.0.lcssa.prol.19, float* %arrayidx51.prol.19, align 4
  br label %for.inc53.prol.19

for.inc53.prol.19:                                ; preds = %if.else.prol.19, %if.then40.prol.19
  %inc54.prol.19 = add nsw i32 %in_j.011.prol.19, 1
  %indvars.iv.next21.prol.19 = add nuw nsw i64 %indvars.iv20.prol.19, 1
  %prol.iter.sub.19 = add i32 %prol.iter.19, -1
  %prol.iter.cmp.19 = icmp eq i32 %prol.iter.sub.19, 0
  br i1 %prol.iter.cmp.19, label %for.cond8.preheader.lr.ph.split.19.loopexit, label %for.cond8.preheader.prol.19, !llvm.loop !4

for.cond8.preheader.lr.ph.split.19.loopexit:      ; preds = %for.inc53.prol.19
  %indvars.iv.next21.prol.19.lcssa = phi i64 [ %indvars.iv.next21.prol.19, %for.inc53.prol.19 ]
  %inc54.prol.19.lcssa = phi i32 [ %inc54.prol.19, %for.inc53.prol.19 ]
  br label %for.cond8.preheader.lr.ph.split.19

for.cond8.preheader.lr.ph.split.19:               ; preds = %for.cond8.preheader.lr.ph.split.19.loopexit, %for.cond8.preheader.lr.ph.19
  %indvars.iv20.unr.19 = phi i64 [ 0, %for.cond8.preheader.lr.ph.19 ], [ %indvars.iv.next21.prol.19.lcssa, %for.cond8.preheader.lr.ph.split.19.loopexit ]
  %in_j.011.unr.19 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.19 ], [ %inc54.prol.19.lcssa, %for.cond8.preheader.lr.ph.split.19.loopexit ]
  br i1 %90, label %for.inc57.19, label %for.cond8.preheader.19.preheader

for.cond8.preheader.19.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.19
  br label %for.cond8.preheader.19

for.cond8.preheader.19:                           ; preds = %for.cond8.preheader.19.preheader, %for.inc53.7.19
  %indvars.iv20.19 = phi i64 [ %indvars.iv.next21.7.19, %for.inc53.7.19 ], [ %indvars.iv20.unr.19, %for.cond8.preheader.19.preheader ]
  %in_j.011.19 = phi i32 [ %inc54.7.19, %for.inc53.7.19 ], [ %in_j.011.unr.19, %for.cond8.preheader.19.preheader ]
  br i1 %cmp94, label %for.end38.19, label %for.body10.19.preheader

for.body10.19.preheader:                          ; preds = %for.cond8.preheader.19
  br label %for.body10.19

for.body10.19:                                    ; preds = %for.body10.19.preheader, %for.inc36.19
  %ki.06.19 = phi i32 [ %inc37.19, %for.inc36.19 ], [ 0, %for.body10.19.preheader ]
  %partial_sum.05.19 = phi float [ %partial_sum.3.19, %for.inc36.19 ], [ 0.000000e+00, %for.body10.19.preheader ]
  %add.19 = add nsw i32 %ki.06.19, %inc58.18
  %notlhs.19 = icmp slt i32 %add.19, 0
  %notrhs.19 = icmp uge i32 %add.19, %img_height
  %.not.19 = or i1 %notrhs.19, %notlhs.19
  %brmerge.19 = or i1 %.not.19, %cmp151.not.19
  br i1 %brmerge.19, label %for.inc36.19, label %for.body16.lr.ph.19

for.body16.lr.ph.19:                              ; preds = %for.body10.19
  %mul.19 = shl i32 %add.19, 7
  %mul30.19 = mul i32 %ki.06.19, %kern_width
  br label %for.body16.19

for.body16.19:                                    ; preds = %for.inc.19, %for.body16.lr.ph.19
  %indvars.iv.19 = phi i64 [ 0, %for.body16.lr.ph.19 ], [ %indvars.iv.next.19, %for.inc.19 ]
  %partial_sum.12.19 = phi float [ %partial_sum.05.19, %for.body16.lr.ph.19 ], [ %partial_sum.2.19, %for.inc.19 ]
  %1387 = trunc i64 %indvars.iv.19 to i32
  %add17.19 = add nsw i32 %1387, %in_j.011.19
  %cmp18.19 = icmp sgt i32 %add17.19, -1
  %cmp21.19 = icmp ult i32 %add17.19, %img_width
  %1388 = and i1 %cmp18.19, %cmp21.19
  br i1 %1388, label %if.end26.19, label %for.inc.19

if.end26.19:                                      ; preds = %for.body16.19
  %add29.19 = add nsw i32 %add17.19, %mul.19
  %idxprom.19 = sext i32 %add29.19 to i64
  %arrayidx.19 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.19
  %1389 = load float, float* %arrayidx.19, align 4
  %1390 = trunc i64 %indvars.iv.19 to i32
  %add31.19 = add i32 %1390, %mul30.19
  %idxprom32.19 = zext i32 %add31.19 to i64
  %arrayidx33.19 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.19
  %1391 = load float, float* %arrayidx33.19, align 4
  %mul34.19 = fmul float %1389, %1391
  %add35.19 = fadd float %partial_sum.12.19, %mul34.19
  br label %for.inc.19

for.inc.19:                                       ; preds = %if.end26.19, %for.body16.19
  %partial_sum.2.19 = phi float [ %add35.19, %if.end26.19 ], [ %partial_sum.12.19, %for.body16.19 ]
  %indvars.iv.next.19 = add nuw nsw i64 %indvars.iv.19, 1
  %lftr.wideiv.19 = trunc i64 %indvars.iv.next.19 to i32
  %exitcond.19 = icmp eq i32 %lftr.wideiv.19, %kern_width
  br i1 %exitcond.19, label %for.inc36.19.loopexit, label %for.body16.19, !llvm.loop !1

for.inc36.19.loopexit:                            ; preds = %for.inc.19
  %partial_sum.2.19.lcssa = phi float [ %partial_sum.2.19, %for.inc.19 ]
  br label %for.inc36.19

for.inc36.19:                                     ; preds = %for.inc36.19.loopexit, %for.body10.19
  %partial_sum.3.19 = phi float [ %partial_sum.05.19, %for.body10.19 ], [ %partial_sum.2.19.lcssa, %for.inc36.19.loopexit ]
  %inc37.19 = add nuw nsw i32 %ki.06.19, 1
  %exitcond19.19 = icmp eq i32 %inc37.19, %kern_height
  br i1 %exitcond19.19, label %for.end38.19.loopexit, label %for.body10.19, !llvm.loop !3

for.end38.19.loopexit:                            ; preds = %for.inc36.19
  %partial_sum.3.19.lcssa = phi float [ %partial_sum.3.19, %for.inc36.19 ]
  br label %for.end38.19

for.end38.19:                                     ; preds = %for.end38.19.loopexit, %for.cond8.preheader.19
  %partial_sum.0.lcssa.19 = phi float [ 0.000000e+00, %for.cond8.preheader.19 ], [ %partial_sum.3.19.lcssa, %for.end38.19.loopexit ]
  br i1 %tobool39, label %if.else.19, label %if.then40.19

if.then40.19:                                     ; preds = %for.end38.19
  %cmp41.19 = fcmp olt float %partial_sum.0.lcssa.19, 0.000000e+00
  %sub42.19 = fsub float -0.000000e+00, %partial_sum.0.lcssa.19
  %cond.19 = select i1 %cmp41.19, float %sub42.19, float %partial_sum.0.lcssa.19
  %conv.19 = fptoui float %cond.19 to i8
  %conv43.19 = uitofp i8 %conv.19 to float
  %1392 = add nsw i64 %indvars.iv20.19, %1379
  %arrayidx47.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1392
  store float %conv43.19, float* %arrayidx47.19, align 4
  br label %for.inc53.19

if.else.19:                                       ; preds = %for.end38.19
  %1393 = add nsw i64 %indvars.iv20.19, %1378
  %arrayidx51.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1393
  store float %partial_sum.0.lcssa.19, float* %arrayidx51.19, align 4
  br label %for.inc53.19

for.inc53.19:                                     ; preds = %if.else.19, %if.then40.19
  %inc54.19 = add nsw i32 %in_j.011.19, 1
  %indvars.iv.next21.19 = add nuw nsw i64 %indvars.iv20.19, 1
  br i1 %cmp94, label %for.end38.1.19, label %for.body10.1.19.preheader

for.body10.1.19.preheader:                        ; preds = %for.inc53.19
  br label %for.body10.1.19

for.body10.1.19:                                  ; preds = %for.body10.1.19.preheader, %for.inc36.1.19
  %ki.06.1.19 = phi i32 [ %inc37.1.19, %for.inc36.1.19 ], [ 0, %for.body10.1.19.preheader ]
  %partial_sum.05.1.19 = phi float [ %partial_sum.3.1.19, %for.inc36.1.19 ], [ 0.000000e+00, %for.body10.1.19.preheader ]
  %add.1.19 = add nsw i32 %ki.06.1.19, %inc58.18
  %notlhs.1.19 = icmp slt i32 %add.1.19, 0
  %notrhs.1.19 = icmp uge i32 %add.1.19, %img_height
  %.not.1.19 = or i1 %notrhs.1.19, %notlhs.1.19
  %brmerge.1.19 = or i1 %.not.1.19, %cmp151.not.1.19
  br i1 %brmerge.1.19, label %for.inc36.1.19, label %for.body16.lr.ph.1.19

for.body16.lr.ph.1.19:                            ; preds = %for.body10.1.19
  %mul.1.19 = shl i32 %add.1.19, 7
  %mul30.1.19 = mul i32 %ki.06.1.19, %kern_width
  br label %for.body16.1.19

for.body16.1.19:                                  ; preds = %for.inc.1.19, %for.body16.lr.ph.1.19
  %indvars.iv.1.19 = phi i64 [ 0, %for.body16.lr.ph.1.19 ], [ %indvars.iv.next.1.19, %for.inc.1.19 ]
  %partial_sum.12.1.19 = phi float [ %partial_sum.05.1.19, %for.body16.lr.ph.1.19 ], [ %partial_sum.2.1.19, %for.inc.1.19 ]
  %1394 = trunc i64 %indvars.iv.1.19 to i32
  %add17.1.19 = add nsw i32 %1394, %inc54.19
  %cmp18.1.19 = icmp sgt i32 %add17.1.19, -1
  %cmp21.1.19 = icmp ult i32 %add17.1.19, %img_width
  %1395 = and i1 %cmp18.1.19, %cmp21.1.19
  br i1 %1395, label %if.end26.1.19, label %for.inc.1.19

if.end26.1.19:                                    ; preds = %for.body16.1.19
  %add29.1.19 = add nsw i32 %add17.1.19, %mul.1.19
  %idxprom.1.19 = sext i32 %add29.1.19 to i64
  %arrayidx.1.19 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.19
  %1396 = load float, float* %arrayidx.1.19, align 4
  %1397 = trunc i64 %indvars.iv.1.19 to i32
  %add31.1.19 = add i32 %1397, %mul30.1.19
  %idxprom32.1.19 = zext i32 %add31.1.19 to i64
  %arrayidx33.1.19 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.19
  %1398 = load float, float* %arrayidx33.1.19, align 4
  %mul34.1.19 = fmul float %1396, %1398
  %add35.1.19 = fadd float %partial_sum.12.1.19, %mul34.1.19
  br label %for.inc.1.19

for.inc.1.19:                                     ; preds = %if.end26.1.19, %for.body16.1.19
  %partial_sum.2.1.19 = phi float [ %add35.1.19, %if.end26.1.19 ], [ %partial_sum.12.1.19, %for.body16.1.19 ]
  %indvars.iv.next.1.19 = add nuw nsw i64 %indvars.iv.1.19, 1
  %lftr.wideiv.1.19 = trunc i64 %indvars.iv.next.1.19 to i32
  %exitcond.1.19 = icmp eq i32 %lftr.wideiv.1.19, %kern_width
  br i1 %exitcond.1.19, label %for.inc36.1.19.loopexit, label %for.body16.1.19, !llvm.loop !1

for.inc36.1.19.loopexit:                          ; preds = %for.inc.1.19
  %partial_sum.2.1.19.lcssa = phi float [ %partial_sum.2.1.19, %for.inc.1.19 ]
  br label %for.inc36.1.19

for.inc36.1.19:                                   ; preds = %for.inc36.1.19.loopexit, %for.body10.1.19
  %partial_sum.3.1.19 = phi float [ %partial_sum.05.1.19, %for.body10.1.19 ], [ %partial_sum.2.1.19.lcssa, %for.inc36.1.19.loopexit ]
  %inc37.1.19 = add nuw nsw i32 %ki.06.1.19, 1
  %exitcond19.1.19 = icmp eq i32 %inc37.1.19, %kern_height
  br i1 %exitcond19.1.19, label %for.end38.1.19.loopexit, label %for.body10.1.19, !llvm.loop !3

for.end38.1.19.loopexit:                          ; preds = %for.inc36.1.19
  %partial_sum.3.1.19.lcssa = phi float [ %partial_sum.3.1.19, %for.inc36.1.19 ]
  br label %for.end38.1.19

for.end38.1.19:                                   ; preds = %for.end38.1.19.loopexit, %for.inc53.19
  %partial_sum.0.lcssa.1.19 = phi float [ 0.000000e+00, %for.inc53.19 ], [ %partial_sum.3.1.19.lcssa, %for.end38.1.19.loopexit ]
  br i1 %tobool39, label %if.else.1.19, label %if.then40.1.19

if.then40.1.19:                                   ; preds = %for.end38.1.19
  %cmp41.1.19 = fcmp olt float %partial_sum.0.lcssa.1.19, 0.000000e+00
  %sub42.1.19 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.19
  %cond.1.19 = select i1 %cmp41.1.19, float %sub42.1.19, float %partial_sum.0.lcssa.1.19
  %conv.1.19 = fptoui float %cond.1.19 to i8
  %conv43.1.19 = uitofp i8 %conv.1.19 to float
  %1399 = add nsw i64 %indvars.iv.next21.19, %1379
  %arrayidx47.1.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1399
  store float %conv43.1.19, float* %arrayidx47.1.19, align 4
  br label %for.inc53.1.19

if.else.1.19:                                     ; preds = %for.end38.1.19
  %1400 = add nsw i64 %indvars.iv.next21.19, %1378
  %arrayidx51.1.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1400
  store float %partial_sum.0.lcssa.1.19, float* %arrayidx51.1.19, align 4
  br label %for.inc53.1.19

for.inc53.1.19:                                   ; preds = %if.else.1.19, %if.then40.1.19
  %inc54.1.19 = add nsw i32 %in_j.011.19, 2
  %indvars.iv.next21.1.19 = add nsw i64 %indvars.iv20.19, 2
  br i1 %cmp94, label %for.end38.2.19, label %for.body10.2.19.preheader

for.body10.2.19.preheader:                        ; preds = %for.inc53.1.19
  br label %for.body10.2.19

for.body10.2.19:                                  ; preds = %for.body10.2.19.preheader, %for.inc36.2.19
  %ki.06.2.19 = phi i32 [ %inc37.2.19, %for.inc36.2.19 ], [ 0, %for.body10.2.19.preheader ]
  %partial_sum.05.2.19 = phi float [ %partial_sum.3.2.19, %for.inc36.2.19 ], [ 0.000000e+00, %for.body10.2.19.preheader ]
  %add.2.19 = add nsw i32 %ki.06.2.19, %inc58.18
  %notlhs.2.19 = icmp slt i32 %add.2.19, 0
  %notrhs.2.19 = icmp uge i32 %add.2.19, %img_height
  %.not.2.19 = or i1 %notrhs.2.19, %notlhs.2.19
  %brmerge.2.19 = or i1 %.not.2.19, %cmp151.not.2.19
  br i1 %brmerge.2.19, label %for.inc36.2.19, label %for.body16.lr.ph.2.19

for.body16.lr.ph.2.19:                            ; preds = %for.body10.2.19
  %mul.2.19 = shl i32 %add.2.19, 7
  %mul30.2.19 = mul i32 %ki.06.2.19, %kern_width
  br label %for.body16.2.19

for.body16.2.19:                                  ; preds = %for.inc.2.19, %for.body16.lr.ph.2.19
  %indvars.iv.2.19 = phi i64 [ 0, %for.body16.lr.ph.2.19 ], [ %indvars.iv.next.2.19, %for.inc.2.19 ]
  %partial_sum.12.2.19 = phi float [ %partial_sum.05.2.19, %for.body16.lr.ph.2.19 ], [ %partial_sum.2.2.19, %for.inc.2.19 ]
  %1401 = trunc i64 %indvars.iv.2.19 to i32
  %add17.2.19 = add nsw i32 %1401, %inc54.1.19
  %cmp18.2.19 = icmp sgt i32 %add17.2.19, -1
  %cmp21.2.19 = icmp ult i32 %add17.2.19, %img_width
  %1402 = and i1 %cmp18.2.19, %cmp21.2.19
  br i1 %1402, label %if.end26.2.19, label %for.inc.2.19

if.end26.2.19:                                    ; preds = %for.body16.2.19
  %add29.2.19 = add nsw i32 %add17.2.19, %mul.2.19
  %idxprom.2.19 = sext i32 %add29.2.19 to i64
  %arrayidx.2.19 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.19
  %1403 = load float, float* %arrayidx.2.19, align 4
  %1404 = trunc i64 %indvars.iv.2.19 to i32
  %add31.2.19 = add i32 %1404, %mul30.2.19
  %idxprom32.2.19 = zext i32 %add31.2.19 to i64
  %arrayidx33.2.19 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.19
  %1405 = load float, float* %arrayidx33.2.19, align 4
  %mul34.2.19 = fmul float %1403, %1405
  %add35.2.19 = fadd float %partial_sum.12.2.19, %mul34.2.19
  br label %for.inc.2.19

for.inc.2.19:                                     ; preds = %if.end26.2.19, %for.body16.2.19
  %partial_sum.2.2.19 = phi float [ %add35.2.19, %if.end26.2.19 ], [ %partial_sum.12.2.19, %for.body16.2.19 ]
  %indvars.iv.next.2.19 = add nuw nsw i64 %indvars.iv.2.19, 1
  %lftr.wideiv.2.19 = trunc i64 %indvars.iv.next.2.19 to i32
  %exitcond.2.19 = icmp eq i32 %lftr.wideiv.2.19, %kern_width
  br i1 %exitcond.2.19, label %for.inc36.2.19.loopexit, label %for.body16.2.19, !llvm.loop !1

for.inc36.2.19.loopexit:                          ; preds = %for.inc.2.19
  %partial_sum.2.2.19.lcssa = phi float [ %partial_sum.2.2.19, %for.inc.2.19 ]
  br label %for.inc36.2.19

for.inc36.2.19:                                   ; preds = %for.inc36.2.19.loopexit, %for.body10.2.19
  %partial_sum.3.2.19 = phi float [ %partial_sum.05.2.19, %for.body10.2.19 ], [ %partial_sum.2.2.19.lcssa, %for.inc36.2.19.loopexit ]
  %inc37.2.19 = add nuw nsw i32 %ki.06.2.19, 1
  %exitcond19.2.19 = icmp eq i32 %inc37.2.19, %kern_height
  br i1 %exitcond19.2.19, label %for.end38.2.19.loopexit, label %for.body10.2.19, !llvm.loop !3

for.end38.2.19.loopexit:                          ; preds = %for.inc36.2.19
  %partial_sum.3.2.19.lcssa = phi float [ %partial_sum.3.2.19, %for.inc36.2.19 ]
  br label %for.end38.2.19

for.end38.2.19:                                   ; preds = %for.end38.2.19.loopexit, %for.inc53.1.19
  %partial_sum.0.lcssa.2.19 = phi float [ 0.000000e+00, %for.inc53.1.19 ], [ %partial_sum.3.2.19.lcssa, %for.end38.2.19.loopexit ]
  br i1 %tobool39, label %if.else.2.19, label %if.then40.2.19

if.then40.2.19:                                   ; preds = %for.end38.2.19
  %cmp41.2.19 = fcmp olt float %partial_sum.0.lcssa.2.19, 0.000000e+00
  %sub42.2.19 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.19
  %cond.2.19 = select i1 %cmp41.2.19, float %sub42.2.19, float %partial_sum.0.lcssa.2.19
  %conv.2.19 = fptoui float %cond.2.19 to i8
  %conv43.2.19 = uitofp i8 %conv.2.19 to float
  %1406 = add nsw i64 %indvars.iv.next21.1.19, %1379
  %arrayidx47.2.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1406
  store float %conv43.2.19, float* %arrayidx47.2.19, align 4
  br label %for.inc53.2.19

if.else.2.19:                                     ; preds = %for.end38.2.19
  %1407 = add nsw i64 %indvars.iv.next21.1.19, %1378
  %arrayidx51.2.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1407
  store float %partial_sum.0.lcssa.2.19, float* %arrayidx51.2.19, align 4
  br label %for.inc53.2.19

for.inc53.2.19:                                   ; preds = %if.else.2.19, %if.then40.2.19
  %inc54.2.19 = add nsw i32 %in_j.011.19, 3
  %indvars.iv.next21.2.19 = add nsw i64 %indvars.iv20.19, 3
  br i1 %cmp94, label %for.end38.3.19, label %for.body10.3.19.preheader

for.body10.3.19.preheader:                        ; preds = %for.inc53.2.19
  br label %for.body10.3.19

for.body10.3.19:                                  ; preds = %for.body10.3.19.preheader, %for.inc36.3.19
  %ki.06.3.19 = phi i32 [ %inc37.3.19, %for.inc36.3.19 ], [ 0, %for.body10.3.19.preheader ]
  %partial_sum.05.3.19 = phi float [ %partial_sum.3.3.19, %for.inc36.3.19 ], [ 0.000000e+00, %for.body10.3.19.preheader ]
  %add.3.19 = add nsw i32 %ki.06.3.19, %inc58.18
  %notlhs.3.19 = icmp slt i32 %add.3.19, 0
  %notrhs.3.19 = icmp uge i32 %add.3.19, %img_height
  %.not.3.19 = or i1 %notrhs.3.19, %notlhs.3.19
  %brmerge.3.19 = or i1 %.not.3.19, %cmp151.not.3.19
  br i1 %brmerge.3.19, label %for.inc36.3.19, label %for.body16.lr.ph.3.19

for.body16.lr.ph.3.19:                            ; preds = %for.body10.3.19
  %mul.3.19 = shl i32 %add.3.19, 7
  %mul30.3.19 = mul i32 %ki.06.3.19, %kern_width
  br label %for.body16.3.19

for.body16.3.19:                                  ; preds = %for.inc.3.19, %for.body16.lr.ph.3.19
  %indvars.iv.3.19 = phi i64 [ 0, %for.body16.lr.ph.3.19 ], [ %indvars.iv.next.3.19, %for.inc.3.19 ]
  %partial_sum.12.3.19 = phi float [ %partial_sum.05.3.19, %for.body16.lr.ph.3.19 ], [ %partial_sum.2.3.19, %for.inc.3.19 ]
  %1408 = trunc i64 %indvars.iv.3.19 to i32
  %add17.3.19 = add nsw i32 %1408, %inc54.2.19
  %cmp18.3.19 = icmp sgt i32 %add17.3.19, -1
  %cmp21.3.19 = icmp ult i32 %add17.3.19, %img_width
  %1409 = and i1 %cmp18.3.19, %cmp21.3.19
  br i1 %1409, label %if.end26.3.19, label %for.inc.3.19

if.end26.3.19:                                    ; preds = %for.body16.3.19
  %add29.3.19 = add nsw i32 %add17.3.19, %mul.3.19
  %idxprom.3.19 = sext i32 %add29.3.19 to i64
  %arrayidx.3.19 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.19
  %1410 = load float, float* %arrayidx.3.19, align 4
  %1411 = trunc i64 %indvars.iv.3.19 to i32
  %add31.3.19 = add i32 %1411, %mul30.3.19
  %idxprom32.3.19 = zext i32 %add31.3.19 to i64
  %arrayidx33.3.19 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.19
  %1412 = load float, float* %arrayidx33.3.19, align 4
  %mul34.3.19 = fmul float %1410, %1412
  %add35.3.19 = fadd float %partial_sum.12.3.19, %mul34.3.19
  br label %for.inc.3.19

for.inc.3.19:                                     ; preds = %if.end26.3.19, %for.body16.3.19
  %partial_sum.2.3.19 = phi float [ %add35.3.19, %if.end26.3.19 ], [ %partial_sum.12.3.19, %for.body16.3.19 ]
  %indvars.iv.next.3.19 = add nuw nsw i64 %indvars.iv.3.19, 1
  %lftr.wideiv.3.19 = trunc i64 %indvars.iv.next.3.19 to i32
  %exitcond.3.19 = icmp eq i32 %lftr.wideiv.3.19, %kern_width
  br i1 %exitcond.3.19, label %for.inc36.3.19.loopexit, label %for.body16.3.19, !llvm.loop !1

for.inc36.3.19.loopexit:                          ; preds = %for.inc.3.19
  %partial_sum.2.3.19.lcssa = phi float [ %partial_sum.2.3.19, %for.inc.3.19 ]
  br label %for.inc36.3.19

for.inc36.3.19:                                   ; preds = %for.inc36.3.19.loopexit, %for.body10.3.19
  %partial_sum.3.3.19 = phi float [ %partial_sum.05.3.19, %for.body10.3.19 ], [ %partial_sum.2.3.19.lcssa, %for.inc36.3.19.loopexit ]
  %inc37.3.19 = add nuw nsw i32 %ki.06.3.19, 1
  %exitcond19.3.19 = icmp eq i32 %inc37.3.19, %kern_height
  br i1 %exitcond19.3.19, label %for.end38.3.19.loopexit, label %for.body10.3.19, !llvm.loop !3

for.end38.3.19.loopexit:                          ; preds = %for.inc36.3.19
  %partial_sum.3.3.19.lcssa = phi float [ %partial_sum.3.3.19, %for.inc36.3.19 ]
  br label %for.end38.3.19

for.end38.3.19:                                   ; preds = %for.end38.3.19.loopexit, %for.inc53.2.19
  %partial_sum.0.lcssa.3.19 = phi float [ 0.000000e+00, %for.inc53.2.19 ], [ %partial_sum.3.3.19.lcssa, %for.end38.3.19.loopexit ]
  br i1 %tobool39, label %if.else.3.19, label %if.then40.3.19

if.then40.3.19:                                   ; preds = %for.end38.3.19
  %cmp41.3.19 = fcmp olt float %partial_sum.0.lcssa.3.19, 0.000000e+00
  %sub42.3.19 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.19
  %cond.3.19 = select i1 %cmp41.3.19, float %sub42.3.19, float %partial_sum.0.lcssa.3.19
  %conv.3.19 = fptoui float %cond.3.19 to i8
  %conv43.3.19 = uitofp i8 %conv.3.19 to float
  %1413 = add nsw i64 %indvars.iv.next21.2.19, %1379
  %arrayidx47.3.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1413
  store float %conv43.3.19, float* %arrayidx47.3.19, align 4
  br label %for.inc53.3.19

if.else.3.19:                                     ; preds = %for.end38.3.19
  %1414 = add nsw i64 %indvars.iv.next21.2.19, %1378
  %arrayidx51.3.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1414
  store float %partial_sum.0.lcssa.3.19, float* %arrayidx51.3.19, align 4
  br label %for.inc53.3.19

for.inc53.3.19:                                   ; preds = %if.else.3.19, %if.then40.3.19
  %inc54.3.19 = add nsw i32 %in_j.011.19, 4
  %indvars.iv.next21.3.19 = add nsw i64 %indvars.iv20.19, 4
  br i1 %cmp94, label %for.end38.4.19, label %for.body10.4.19.preheader

for.body10.4.19.preheader:                        ; preds = %for.inc53.3.19
  br label %for.body10.4.19

for.body10.4.19:                                  ; preds = %for.body10.4.19.preheader, %for.inc36.4.19
  %ki.06.4.19 = phi i32 [ %inc37.4.19, %for.inc36.4.19 ], [ 0, %for.body10.4.19.preheader ]
  %partial_sum.05.4.19 = phi float [ %partial_sum.3.4.19, %for.inc36.4.19 ], [ 0.000000e+00, %for.body10.4.19.preheader ]
  %add.4.19 = add nsw i32 %ki.06.4.19, %inc58.18
  %notlhs.4.19 = icmp slt i32 %add.4.19, 0
  %notrhs.4.19 = icmp uge i32 %add.4.19, %img_height
  %.not.4.19 = or i1 %notrhs.4.19, %notlhs.4.19
  %brmerge.4.19 = or i1 %.not.4.19, %cmp151.not.4.19
  br i1 %brmerge.4.19, label %for.inc36.4.19, label %for.body16.lr.ph.4.19

for.body16.lr.ph.4.19:                            ; preds = %for.body10.4.19
  %mul.4.19 = shl i32 %add.4.19, 7
  %mul30.4.19 = mul i32 %ki.06.4.19, %kern_width
  br label %for.body16.4.19

for.body16.4.19:                                  ; preds = %for.inc.4.19, %for.body16.lr.ph.4.19
  %indvars.iv.4.19 = phi i64 [ 0, %for.body16.lr.ph.4.19 ], [ %indvars.iv.next.4.19, %for.inc.4.19 ]
  %partial_sum.12.4.19 = phi float [ %partial_sum.05.4.19, %for.body16.lr.ph.4.19 ], [ %partial_sum.2.4.19, %for.inc.4.19 ]
  %1415 = trunc i64 %indvars.iv.4.19 to i32
  %add17.4.19 = add nsw i32 %1415, %inc54.3.19
  %cmp18.4.19 = icmp sgt i32 %add17.4.19, -1
  %cmp21.4.19 = icmp ult i32 %add17.4.19, %img_width
  %1416 = and i1 %cmp18.4.19, %cmp21.4.19
  br i1 %1416, label %if.end26.4.19, label %for.inc.4.19

if.end26.4.19:                                    ; preds = %for.body16.4.19
  %add29.4.19 = add nsw i32 %add17.4.19, %mul.4.19
  %idxprom.4.19 = sext i32 %add29.4.19 to i64
  %arrayidx.4.19 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.19
  %1417 = load float, float* %arrayidx.4.19, align 4
  %1418 = trunc i64 %indvars.iv.4.19 to i32
  %add31.4.19 = add i32 %1418, %mul30.4.19
  %idxprom32.4.19 = zext i32 %add31.4.19 to i64
  %arrayidx33.4.19 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.19
  %1419 = load float, float* %arrayidx33.4.19, align 4
  %mul34.4.19 = fmul float %1417, %1419
  %add35.4.19 = fadd float %partial_sum.12.4.19, %mul34.4.19
  br label %for.inc.4.19

for.inc.4.19:                                     ; preds = %if.end26.4.19, %for.body16.4.19
  %partial_sum.2.4.19 = phi float [ %add35.4.19, %if.end26.4.19 ], [ %partial_sum.12.4.19, %for.body16.4.19 ]
  %indvars.iv.next.4.19 = add nuw nsw i64 %indvars.iv.4.19, 1
  %lftr.wideiv.4.19 = trunc i64 %indvars.iv.next.4.19 to i32
  %exitcond.4.19 = icmp eq i32 %lftr.wideiv.4.19, %kern_width
  br i1 %exitcond.4.19, label %for.inc36.4.19.loopexit, label %for.body16.4.19, !llvm.loop !1

for.inc36.4.19.loopexit:                          ; preds = %for.inc.4.19
  %partial_sum.2.4.19.lcssa = phi float [ %partial_sum.2.4.19, %for.inc.4.19 ]
  br label %for.inc36.4.19

for.inc36.4.19:                                   ; preds = %for.inc36.4.19.loopexit, %for.body10.4.19
  %partial_sum.3.4.19 = phi float [ %partial_sum.05.4.19, %for.body10.4.19 ], [ %partial_sum.2.4.19.lcssa, %for.inc36.4.19.loopexit ]
  %inc37.4.19 = add nuw nsw i32 %ki.06.4.19, 1
  %exitcond19.4.19 = icmp eq i32 %inc37.4.19, %kern_height
  br i1 %exitcond19.4.19, label %for.end38.4.19.loopexit, label %for.body10.4.19, !llvm.loop !3

for.end38.4.19.loopexit:                          ; preds = %for.inc36.4.19
  %partial_sum.3.4.19.lcssa = phi float [ %partial_sum.3.4.19, %for.inc36.4.19 ]
  br label %for.end38.4.19

for.end38.4.19:                                   ; preds = %for.end38.4.19.loopexit, %for.inc53.3.19
  %partial_sum.0.lcssa.4.19 = phi float [ 0.000000e+00, %for.inc53.3.19 ], [ %partial_sum.3.4.19.lcssa, %for.end38.4.19.loopexit ]
  br i1 %tobool39, label %if.else.4.19, label %if.then40.4.19

if.then40.4.19:                                   ; preds = %for.end38.4.19
  %cmp41.4.19 = fcmp olt float %partial_sum.0.lcssa.4.19, 0.000000e+00
  %sub42.4.19 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.19
  %cond.4.19 = select i1 %cmp41.4.19, float %sub42.4.19, float %partial_sum.0.lcssa.4.19
  %conv.4.19 = fptoui float %cond.4.19 to i8
  %conv43.4.19 = uitofp i8 %conv.4.19 to float
  %1420 = add nsw i64 %indvars.iv.next21.3.19, %1379
  %arrayidx47.4.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1420
  store float %conv43.4.19, float* %arrayidx47.4.19, align 4
  br label %for.inc53.4.19

if.else.4.19:                                     ; preds = %for.end38.4.19
  %1421 = add nsw i64 %indvars.iv.next21.3.19, %1378
  %arrayidx51.4.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1421
  store float %partial_sum.0.lcssa.4.19, float* %arrayidx51.4.19, align 4
  br label %for.inc53.4.19

for.inc53.4.19:                                   ; preds = %if.else.4.19, %if.then40.4.19
  %inc54.4.19 = add nsw i32 %in_j.011.19, 5
  %indvars.iv.next21.4.19 = add nsw i64 %indvars.iv20.19, 5
  br i1 %cmp94, label %for.end38.5.19, label %for.body10.5.19.preheader

for.body10.5.19.preheader:                        ; preds = %for.inc53.4.19
  br label %for.body10.5.19

for.body10.5.19:                                  ; preds = %for.body10.5.19.preheader, %for.inc36.5.19
  %ki.06.5.19 = phi i32 [ %inc37.5.19, %for.inc36.5.19 ], [ 0, %for.body10.5.19.preheader ]
  %partial_sum.05.5.19 = phi float [ %partial_sum.3.5.19, %for.inc36.5.19 ], [ 0.000000e+00, %for.body10.5.19.preheader ]
  %add.5.19 = add nsw i32 %ki.06.5.19, %inc58.18
  %notlhs.5.19 = icmp slt i32 %add.5.19, 0
  %notrhs.5.19 = icmp uge i32 %add.5.19, %img_height
  %.not.5.19 = or i1 %notrhs.5.19, %notlhs.5.19
  %brmerge.5.19 = or i1 %.not.5.19, %cmp151.not.5.19
  br i1 %brmerge.5.19, label %for.inc36.5.19, label %for.body16.lr.ph.5.19

for.body16.lr.ph.5.19:                            ; preds = %for.body10.5.19
  %mul.5.19 = shl i32 %add.5.19, 7
  %mul30.5.19 = mul i32 %ki.06.5.19, %kern_width
  br label %for.body16.5.19

for.body16.5.19:                                  ; preds = %for.inc.5.19, %for.body16.lr.ph.5.19
  %indvars.iv.5.19 = phi i64 [ 0, %for.body16.lr.ph.5.19 ], [ %indvars.iv.next.5.19, %for.inc.5.19 ]
  %partial_sum.12.5.19 = phi float [ %partial_sum.05.5.19, %for.body16.lr.ph.5.19 ], [ %partial_sum.2.5.19, %for.inc.5.19 ]
  %1422 = trunc i64 %indvars.iv.5.19 to i32
  %add17.5.19 = add nsw i32 %1422, %inc54.4.19
  %cmp18.5.19 = icmp sgt i32 %add17.5.19, -1
  %cmp21.5.19 = icmp ult i32 %add17.5.19, %img_width
  %1423 = and i1 %cmp18.5.19, %cmp21.5.19
  br i1 %1423, label %if.end26.5.19, label %for.inc.5.19

if.end26.5.19:                                    ; preds = %for.body16.5.19
  %add29.5.19 = add nsw i32 %add17.5.19, %mul.5.19
  %idxprom.5.19 = sext i32 %add29.5.19 to i64
  %arrayidx.5.19 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.19
  %1424 = load float, float* %arrayidx.5.19, align 4
  %1425 = trunc i64 %indvars.iv.5.19 to i32
  %add31.5.19 = add i32 %1425, %mul30.5.19
  %idxprom32.5.19 = zext i32 %add31.5.19 to i64
  %arrayidx33.5.19 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.19
  %1426 = load float, float* %arrayidx33.5.19, align 4
  %mul34.5.19 = fmul float %1424, %1426
  %add35.5.19 = fadd float %partial_sum.12.5.19, %mul34.5.19
  br label %for.inc.5.19

for.inc.5.19:                                     ; preds = %if.end26.5.19, %for.body16.5.19
  %partial_sum.2.5.19 = phi float [ %add35.5.19, %if.end26.5.19 ], [ %partial_sum.12.5.19, %for.body16.5.19 ]
  %indvars.iv.next.5.19 = add nuw nsw i64 %indvars.iv.5.19, 1
  %lftr.wideiv.5.19 = trunc i64 %indvars.iv.next.5.19 to i32
  %exitcond.5.19 = icmp eq i32 %lftr.wideiv.5.19, %kern_width
  br i1 %exitcond.5.19, label %for.inc36.5.19.loopexit, label %for.body16.5.19, !llvm.loop !1

for.inc36.5.19.loopexit:                          ; preds = %for.inc.5.19
  %partial_sum.2.5.19.lcssa = phi float [ %partial_sum.2.5.19, %for.inc.5.19 ]
  br label %for.inc36.5.19

for.inc36.5.19:                                   ; preds = %for.inc36.5.19.loopexit, %for.body10.5.19
  %partial_sum.3.5.19 = phi float [ %partial_sum.05.5.19, %for.body10.5.19 ], [ %partial_sum.2.5.19.lcssa, %for.inc36.5.19.loopexit ]
  %inc37.5.19 = add nuw nsw i32 %ki.06.5.19, 1
  %exitcond19.5.19 = icmp eq i32 %inc37.5.19, %kern_height
  br i1 %exitcond19.5.19, label %for.end38.5.19.loopexit, label %for.body10.5.19, !llvm.loop !3

for.end38.5.19.loopexit:                          ; preds = %for.inc36.5.19
  %partial_sum.3.5.19.lcssa = phi float [ %partial_sum.3.5.19, %for.inc36.5.19 ]
  br label %for.end38.5.19

for.end38.5.19:                                   ; preds = %for.end38.5.19.loopexit, %for.inc53.4.19
  %partial_sum.0.lcssa.5.19 = phi float [ 0.000000e+00, %for.inc53.4.19 ], [ %partial_sum.3.5.19.lcssa, %for.end38.5.19.loopexit ]
  br i1 %tobool39, label %if.else.5.19, label %if.then40.5.19

if.then40.5.19:                                   ; preds = %for.end38.5.19
  %cmp41.5.19 = fcmp olt float %partial_sum.0.lcssa.5.19, 0.000000e+00
  %sub42.5.19 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.19
  %cond.5.19 = select i1 %cmp41.5.19, float %sub42.5.19, float %partial_sum.0.lcssa.5.19
  %conv.5.19 = fptoui float %cond.5.19 to i8
  %conv43.5.19 = uitofp i8 %conv.5.19 to float
  %1427 = add nsw i64 %indvars.iv.next21.4.19, %1379
  %arrayidx47.5.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1427
  store float %conv43.5.19, float* %arrayidx47.5.19, align 4
  br label %for.inc53.5.19

if.else.5.19:                                     ; preds = %for.end38.5.19
  %1428 = add nsw i64 %indvars.iv.next21.4.19, %1378
  %arrayidx51.5.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1428
  store float %partial_sum.0.lcssa.5.19, float* %arrayidx51.5.19, align 4
  br label %for.inc53.5.19

for.inc53.5.19:                                   ; preds = %if.else.5.19, %if.then40.5.19
  %inc54.5.19 = add nsw i32 %in_j.011.19, 6
  %indvars.iv.next21.5.19 = add nsw i64 %indvars.iv20.19, 6
  br i1 %cmp94, label %for.end38.6.19, label %for.body10.6.19.preheader

for.body10.6.19.preheader:                        ; preds = %for.inc53.5.19
  br label %for.body10.6.19

for.body10.6.19:                                  ; preds = %for.body10.6.19.preheader, %for.inc36.6.19
  %ki.06.6.19 = phi i32 [ %inc37.6.19, %for.inc36.6.19 ], [ 0, %for.body10.6.19.preheader ]
  %partial_sum.05.6.19 = phi float [ %partial_sum.3.6.19, %for.inc36.6.19 ], [ 0.000000e+00, %for.body10.6.19.preheader ]
  %add.6.19 = add nsw i32 %ki.06.6.19, %inc58.18
  %notlhs.6.19 = icmp slt i32 %add.6.19, 0
  %notrhs.6.19 = icmp uge i32 %add.6.19, %img_height
  %.not.6.19 = or i1 %notrhs.6.19, %notlhs.6.19
  %brmerge.6.19 = or i1 %.not.6.19, %cmp151.not.6.19
  br i1 %brmerge.6.19, label %for.inc36.6.19, label %for.body16.lr.ph.6.19

for.body16.lr.ph.6.19:                            ; preds = %for.body10.6.19
  %mul.6.19 = shl i32 %add.6.19, 7
  %mul30.6.19 = mul i32 %ki.06.6.19, %kern_width
  br label %for.body16.6.19

for.body16.6.19:                                  ; preds = %for.inc.6.19, %for.body16.lr.ph.6.19
  %indvars.iv.6.19 = phi i64 [ 0, %for.body16.lr.ph.6.19 ], [ %indvars.iv.next.6.19, %for.inc.6.19 ]
  %partial_sum.12.6.19 = phi float [ %partial_sum.05.6.19, %for.body16.lr.ph.6.19 ], [ %partial_sum.2.6.19, %for.inc.6.19 ]
  %1429 = trunc i64 %indvars.iv.6.19 to i32
  %add17.6.19 = add nsw i32 %1429, %inc54.5.19
  %cmp18.6.19 = icmp sgt i32 %add17.6.19, -1
  %cmp21.6.19 = icmp ult i32 %add17.6.19, %img_width
  %1430 = and i1 %cmp18.6.19, %cmp21.6.19
  br i1 %1430, label %if.end26.6.19, label %for.inc.6.19

if.end26.6.19:                                    ; preds = %for.body16.6.19
  %add29.6.19 = add nsw i32 %add17.6.19, %mul.6.19
  %idxprom.6.19 = sext i32 %add29.6.19 to i64
  %arrayidx.6.19 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.19
  %1431 = load float, float* %arrayidx.6.19, align 4
  %1432 = trunc i64 %indvars.iv.6.19 to i32
  %add31.6.19 = add i32 %1432, %mul30.6.19
  %idxprom32.6.19 = zext i32 %add31.6.19 to i64
  %arrayidx33.6.19 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.19
  %1433 = load float, float* %arrayidx33.6.19, align 4
  %mul34.6.19 = fmul float %1431, %1433
  %add35.6.19 = fadd float %partial_sum.12.6.19, %mul34.6.19
  br label %for.inc.6.19

for.inc.6.19:                                     ; preds = %if.end26.6.19, %for.body16.6.19
  %partial_sum.2.6.19 = phi float [ %add35.6.19, %if.end26.6.19 ], [ %partial_sum.12.6.19, %for.body16.6.19 ]
  %indvars.iv.next.6.19 = add nuw nsw i64 %indvars.iv.6.19, 1
  %lftr.wideiv.6.19 = trunc i64 %indvars.iv.next.6.19 to i32
  %exitcond.6.19 = icmp eq i32 %lftr.wideiv.6.19, %kern_width
  br i1 %exitcond.6.19, label %for.inc36.6.19.loopexit, label %for.body16.6.19, !llvm.loop !1

for.inc36.6.19.loopexit:                          ; preds = %for.inc.6.19
  %partial_sum.2.6.19.lcssa = phi float [ %partial_sum.2.6.19, %for.inc.6.19 ]
  br label %for.inc36.6.19

for.inc36.6.19:                                   ; preds = %for.inc36.6.19.loopexit, %for.body10.6.19
  %partial_sum.3.6.19 = phi float [ %partial_sum.05.6.19, %for.body10.6.19 ], [ %partial_sum.2.6.19.lcssa, %for.inc36.6.19.loopexit ]
  %inc37.6.19 = add nuw nsw i32 %ki.06.6.19, 1
  %exitcond19.6.19 = icmp eq i32 %inc37.6.19, %kern_height
  br i1 %exitcond19.6.19, label %for.end38.6.19.loopexit, label %for.body10.6.19, !llvm.loop !3

for.end38.6.19.loopexit:                          ; preds = %for.inc36.6.19
  %partial_sum.3.6.19.lcssa = phi float [ %partial_sum.3.6.19, %for.inc36.6.19 ]
  br label %for.end38.6.19

for.end38.6.19:                                   ; preds = %for.end38.6.19.loopexit, %for.inc53.5.19
  %partial_sum.0.lcssa.6.19 = phi float [ 0.000000e+00, %for.inc53.5.19 ], [ %partial_sum.3.6.19.lcssa, %for.end38.6.19.loopexit ]
  br i1 %tobool39, label %if.else.6.19, label %if.then40.6.19

if.then40.6.19:                                   ; preds = %for.end38.6.19
  %cmp41.6.19 = fcmp olt float %partial_sum.0.lcssa.6.19, 0.000000e+00
  %sub42.6.19 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.19
  %cond.6.19 = select i1 %cmp41.6.19, float %sub42.6.19, float %partial_sum.0.lcssa.6.19
  %conv.6.19 = fptoui float %cond.6.19 to i8
  %conv43.6.19 = uitofp i8 %conv.6.19 to float
  %1434 = add nsw i64 %indvars.iv.next21.5.19, %1379
  %arrayidx47.6.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1434
  store float %conv43.6.19, float* %arrayidx47.6.19, align 4
  br label %for.inc53.6.19

if.else.6.19:                                     ; preds = %for.end38.6.19
  %1435 = add nsw i64 %indvars.iv.next21.5.19, %1378
  %arrayidx51.6.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1435
  store float %partial_sum.0.lcssa.6.19, float* %arrayidx51.6.19, align 4
  br label %for.inc53.6.19

for.inc53.6.19:                                   ; preds = %if.else.6.19, %if.then40.6.19
  %inc54.6.19 = add nsw i32 %in_j.011.19, 7
  %indvars.iv.next21.6.19 = add nsw i64 %indvars.iv20.19, 7
  br i1 %cmp94, label %for.end38.7.19, label %for.body10.7.19.preheader

for.body10.7.19.preheader:                        ; preds = %for.inc53.6.19
  br label %for.body10.7.19

for.body10.7.19:                                  ; preds = %for.body10.7.19.preheader, %for.inc36.7.19
  %ki.06.7.19 = phi i32 [ %inc37.7.19, %for.inc36.7.19 ], [ 0, %for.body10.7.19.preheader ]
  %partial_sum.05.7.19 = phi float [ %partial_sum.3.7.19, %for.inc36.7.19 ], [ 0.000000e+00, %for.body10.7.19.preheader ]
  %add.7.19 = add nsw i32 %ki.06.7.19, %inc58.18
  %notlhs.7.19 = icmp slt i32 %add.7.19, 0
  %notrhs.7.19 = icmp uge i32 %add.7.19, %img_height
  %.not.7.19 = or i1 %notrhs.7.19, %notlhs.7.19
  %brmerge.7.19 = or i1 %.not.7.19, %cmp151.not.7.19
  br i1 %brmerge.7.19, label %for.inc36.7.19, label %for.body16.lr.ph.7.19

for.body16.lr.ph.7.19:                            ; preds = %for.body10.7.19
  %mul.7.19 = shl i32 %add.7.19, 7
  %mul30.7.19 = mul i32 %ki.06.7.19, %kern_width
  br label %for.body16.7.19

for.body16.7.19:                                  ; preds = %for.inc.7.19, %for.body16.lr.ph.7.19
  %indvars.iv.7.19 = phi i64 [ 0, %for.body16.lr.ph.7.19 ], [ %indvars.iv.next.7.19, %for.inc.7.19 ]
  %partial_sum.12.7.19 = phi float [ %partial_sum.05.7.19, %for.body16.lr.ph.7.19 ], [ %partial_sum.2.7.19, %for.inc.7.19 ]
  %1436 = trunc i64 %indvars.iv.7.19 to i32
  %add17.7.19 = add nsw i32 %1436, %inc54.6.19
  %cmp18.7.19 = icmp sgt i32 %add17.7.19, -1
  %cmp21.7.19 = icmp ult i32 %add17.7.19, %img_width
  %1437 = and i1 %cmp18.7.19, %cmp21.7.19
  br i1 %1437, label %if.end26.7.19, label %for.inc.7.19

if.end26.7.19:                                    ; preds = %for.body16.7.19
  %add29.7.19 = add nsw i32 %add17.7.19, %mul.7.19
  %idxprom.7.19 = sext i32 %add29.7.19 to i64
  %arrayidx.7.19 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.19
  %1438 = load float, float* %arrayidx.7.19, align 4
  %1439 = trunc i64 %indvars.iv.7.19 to i32
  %add31.7.19 = add i32 %1439, %mul30.7.19
  %idxprom32.7.19 = zext i32 %add31.7.19 to i64
  %arrayidx33.7.19 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.19
  %1440 = load float, float* %arrayidx33.7.19, align 4
  %mul34.7.19 = fmul float %1438, %1440
  %add35.7.19 = fadd float %partial_sum.12.7.19, %mul34.7.19
  br label %for.inc.7.19

for.inc.7.19:                                     ; preds = %if.end26.7.19, %for.body16.7.19
  %partial_sum.2.7.19 = phi float [ %add35.7.19, %if.end26.7.19 ], [ %partial_sum.12.7.19, %for.body16.7.19 ]
  %indvars.iv.next.7.19 = add nuw nsw i64 %indvars.iv.7.19, 1
  %lftr.wideiv.7.19 = trunc i64 %indvars.iv.next.7.19 to i32
  %exitcond.7.19 = icmp eq i32 %lftr.wideiv.7.19, %kern_width
  br i1 %exitcond.7.19, label %for.inc36.7.19.loopexit, label %for.body16.7.19, !llvm.loop !1

for.inc36.7.19.loopexit:                          ; preds = %for.inc.7.19
  %partial_sum.2.7.19.lcssa = phi float [ %partial_sum.2.7.19, %for.inc.7.19 ]
  br label %for.inc36.7.19

for.inc36.7.19:                                   ; preds = %for.inc36.7.19.loopexit, %for.body10.7.19
  %partial_sum.3.7.19 = phi float [ %partial_sum.05.7.19, %for.body10.7.19 ], [ %partial_sum.2.7.19.lcssa, %for.inc36.7.19.loopexit ]
  %inc37.7.19 = add nuw nsw i32 %ki.06.7.19, 1
  %exitcond19.7.19 = icmp eq i32 %inc37.7.19, %kern_height
  br i1 %exitcond19.7.19, label %for.end38.7.19.loopexit, label %for.body10.7.19, !llvm.loop !3

for.end38.7.19.loopexit:                          ; preds = %for.inc36.7.19
  %partial_sum.3.7.19.lcssa = phi float [ %partial_sum.3.7.19, %for.inc36.7.19 ]
  br label %for.end38.7.19

for.end38.7.19:                                   ; preds = %for.end38.7.19.loopexit, %for.inc53.6.19
  %partial_sum.0.lcssa.7.19 = phi float [ 0.000000e+00, %for.inc53.6.19 ], [ %partial_sum.3.7.19.lcssa, %for.end38.7.19.loopexit ]
  br i1 %tobool39, label %if.else.7.19, label %if.then40.7.19

if.then40.7.19:                                   ; preds = %for.end38.7.19
  %cmp41.7.19 = fcmp olt float %partial_sum.0.lcssa.7.19, 0.000000e+00
  %sub42.7.19 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.19
  %cond.7.19 = select i1 %cmp41.7.19, float %sub42.7.19, float %partial_sum.0.lcssa.7.19
  %conv.7.19 = fptoui float %cond.7.19 to i8
  %conv43.7.19 = uitofp i8 %conv.7.19 to float
  %1441 = add nsw i64 %indvars.iv.next21.6.19, %1379
  %arrayidx47.7.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1441
  store float %conv43.7.19, float* %arrayidx47.7.19, align 4
  br label %for.inc53.7.19

if.else.7.19:                                     ; preds = %for.end38.7.19
  %1442 = add nsw i64 %indvars.iv.next21.6.19, %1378
  %arrayidx51.7.19 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1442
  store float %partial_sum.0.lcssa.7.19, float* %arrayidx51.7.19, align 4
  br label %for.inc53.7.19

for.inc53.7.19:                                   ; preds = %if.else.7.19, %if.then40.7.19
  %inc54.7.19 = add nsw i32 %in_j.011.19, 8
  %indvars.iv.next21.7.19 = add nsw i64 %indvars.iv20.19, 8
  %lftr.wideiv24.7.19 = trunc i64 %indvars.iv.next21.7.19 to i32
  %exitcond25.7.19 = icmp eq i32 %lftr.wideiv24.7.19, %img_width
  br i1 %exitcond25.7.19, label %for.inc57.19.loopexit, label %for.cond8.preheader.19, !llvm.loop !5

for.inc57.19.loopexit:                            ; preds = %for.inc53.7.19
  br label %for.inc57.19

for.inc57.19:                                     ; preds = %for.inc57.19.loopexit, %for.cond8.preheader.lr.ph.split.19
  %inc58.19 = add nsw i32 %in_i.015, 20
  %indvars.iv.next27.19 = add nsw i64 %indvars.iv26, 20
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.20

for.cond8.preheader.lr.ph.20:                     ; preds = %for.inc57.19
  %1443 = trunc i64 %indvars.iv.next27.19 to i32
  %mul48.20 = shl i32 %1443, 7
  %1444 = trunc i64 %indvars.iv.next27.19 to i32
  %mul44.20 = shl i32 %1444, 7
  %1445 = sext i32 %mul48.20 to i64
  %1446 = sext i32 %mul44.20 to i64
  br i1 %lcmp.mod.20, label %for.cond8.preheader.lr.ph.split.20, label %for.cond8.preheader.prol.20.preheader

for.cond8.preheader.prol.20.preheader:            ; preds = %for.cond8.preheader.lr.ph.20
  br label %for.cond8.preheader.prol.20

for.cond8.preheader.prol.20:                      ; preds = %for.cond8.preheader.prol.20.preheader, %for.inc53.prol.20
  %indvars.iv20.prol.20 = phi i64 [ %indvars.iv.next21.prol.20, %for.inc53.prol.20 ], [ 0, %for.cond8.preheader.prol.20.preheader ]
  %in_j.011.prol.20 = phi i32 [ %inc54.prol.20, %for.inc53.prol.20 ], [ %sub4, %for.cond8.preheader.prol.20.preheader ]
  %prol.iter.20 = phi i32 [ %prol.iter.sub.20, %for.inc53.prol.20 ], [ %xtraiter.20, %for.cond8.preheader.prol.20.preheader ]
  br i1 %cmp94, label %for.end38.prol.20, label %for.body10.prol.20.preheader

for.body10.prol.20.preheader:                     ; preds = %for.cond8.preheader.prol.20
  br label %for.body10.prol.20

for.body10.prol.20:                               ; preds = %for.body10.prol.20.preheader, %for.inc36.prol.20
  %ki.06.prol.20 = phi i32 [ %inc37.prol.20, %for.inc36.prol.20 ], [ 0, %for.body10.prol.20.preheader ]
  %partial_sum.05.prol.20 = phi float [ %partial_sum.3.prol.20, %for.inc36.prol.20 ], [ 0.000000e+00, %for.body10.prol.20.preheader ]
  %add.prol.20 = add nsw i32 %ki.06.prol.20, %inc58.19
  %notlhs.prol.20 = icmp slt i32 %add.prol.20, 0
  %notrhs.prol.20 = icmp uge i32 %add.prol.20, %img_height
  %.not.prol.20 = or i1 %notrhs.prol.20, %notlhs.prol.20
  %brmerge.prol.20 = or i1 %.not.prol.20, %cmp151.not.prol.20
  br i1 %brmerge.prol.20, label %for.inc36.prol.20, label %for.body16.lr.ph.prol.20

for.body16.lr.ph.prol.20:                         ; preds = %for.body10.prol.20
  %mul.prol.20 = shl i32 %add.prol.20, 7
  %mul30.prol.20 = mul i32 %ki.06.prol.20, %kern_width
  br label %for.body16.prol.20

for.body16.prol.20:                               ; preds = %for.inc.prol.20, %for.body16.lr.ph.prol.20
  %indvars.iv.prol.20 = phi i64 [ 0, %for.body16.lr.ph.prol.20 ], [ %indvars.iv.next.prol.20, %for.inc.prol.20 ]
  %partial_sum.12.prol.20 = phi float [ %partial_sum.05.prol.20, %for.body16.lr.ph.prol.20 ], [ %partial_sum.2.prol.20, %for.inc.prol.20 ]
  %1447 = trunc i64 %indvars.iv.prol.20 to i32
  %add17.prol.20 = add nsw i32 %1447, %in_j.011.prol.20
  %cmp18.prol.20 = icmp sgt i32 %add17.prol.20, -1
  %cmp21.prol.20 = icmp ult i32 %add17.prol.20, %img_width
  %1448 = and i1 %cmp18.prol.20, %cmp21.prol.20
  br i1 %1448, label %if.end26.prol.20, label %for.inc.prol.20

if.end26.prol.20:                                 ; preds = %for.body16.prol.20
  %add29.prol.20 = add nsw i32 %add17.prol.20, %mul.prol.20
  %idxprom.prol.20 = sext i32 %add29.prol.20 to i64
  %arrayidx.prol.20 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.20
  %1449 = load float, float* %arrayidx.prol.20, align 4
  %1450 = trunc i64 %indvars.iv.prol.20 to i32
  %add31.prol.20 = add i32 %1450, %mul30.prol.20
  %idxprom32.prol.20 = zext i32 %add31.prol.20 to i64
  %arrayidx33.prol.20 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.20
  %1451 = load float, float* %arrayidx33.prol.20, align 4
  %mul34.prol.20 = fmul float %1449, %1451
  %add35.prol.20 = fadd float %partial_sum.12.prol.20, %mul34.prol.20
  br label %for.inc.prol.20

for.inc.prol.20:                                  ; preds = %if.end26.prol.20, %for.body16.prol.20
  %partial_sum.2.prol.20 = phi float [ %add35.prol.20, %if.end26.prol.20 ], [ %partial_sum.12.prol.20, %for.body16.prol.20 ]
  %indvars.iv.next.prol.20 = add nuw nsw i64 %indvars.iv.prol.20, 1
  %lftr.wideiv.prol.20 = trunc i64 %indvars.iv.next.prol.20 to i32
  %exitcond.prol.20 = icmp eq i32 %lftr.wideiv.prol.20, %kern_width
  br i1 %exitcond.prol.20, label %for.inc36.prol.20.loopexit, label %for.body16.prol.20, !llvm.loop !1

for.inc36.prol.20.loopexit:                       ; preds = %for.inc.prol.20
  %partial_sum.2.prol.20.lcssa = phi float [ %partial_sum.2.prol.20, %for.inc.prol.20 ]
  br label %for.inc36.prol.20

for.inc36.prol.20:                                ; preds = %for.inc36.prol.20.loopexit, %for.body10.prol.20
  %partial_sum.3.prol.20 = phi float [ %partial_sum.05.prol.20, %for.body10.prol.20 ], [ %partial_sum.2.prol.20.lcssa, %for.inc36.prol.20.loopexit ]
  %inc37.prol.20 = add nuw nsw i32 %ki.06.prol.20, 1
  %exitcond19.prol.20 = icmp eq i32 %inc37.prol.20, %kern_height
  br i1 %exitcond19.prol.20, label %for.end38.prol.20.loopexit, label %for.body10.prol.20, !llvm.loop !3

for.end38.prol.20.loopexit:                       ; preds = %for.inc36.prol.20
  %partial_sum.3.prol.20.lcssa = phi float [ %partial_sum.3.prol.20, %for.inc36.prol.20 ]
  br label %for.end38.prol.20

for.end38.prol.20:                                ; preds = %for.end38.prol.20.loopexit, %for.cond8.preheader.prol.20
  %partial_sum.0.lcssa.prol.20 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.20 ], [ %partial_sum.3.prol.20.lcssa, %for.end38.prol.20.loopexit ]
  br i1 %tobool39, label %if.else.prol.20, label %if.then40.prol.20

if.then40.prol.20:                                ; preds = %for.end38.prol.20
  %cmp41.prol.20 = fcmp olt float %partial_sum.0.lcssa.prol.20, 0.000000e+00
  %sub42.prol.20 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.20
  %cond.prol.20 = select i1 %cmp41.prol.20, float %sub42.prol.20, float %partial_sum.0.lcssa.prol.20
  %conv.prol.20 = fptoui float %cond.prol.20 to i8
  %conv43.prol.20 = uitofp i8 %conv.prol.20 to float
  %1452 = add nsw i64 %indvars.iv20.prol.20, %1446
  %arrayidx47.prol.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1452
  store float %conv43.prol.20, float* %arrayidx47.prol.20, align 4
  br label %for.inc53.prol.20

if.else.prol.20:                                  ; preds = %for.end38.prol.20
  %1453 = add nsw i64 %indvars.iv20.prol.20, %1445
  %arrayidx51.prol.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1453
  store float %partial_sum.0.lcssa.prol.20, float* %arrayidx51.prol.20, align 4
  br label %for.inc53.prol.20

for.inc53.prol.20:                                ; preds = %if.else.prol.20, %if.then40.prol.20
  %inc54.prol.20 = add nsw i32 %in_j.011.prol.20, 1
  %indvars.iv.next21.prol.20 = add nuw nsw i64 %indvars.iv20.prol.20, 1
  %prol.iter.sub.20 = add i32 %prol.iter.20, -1
  %prol.iter.cmp.20 = icmp eq i32 %prol.iter.sub.20, 0
  br i1 %prol.iter.cmp.20, label %for.cond8.preheader.lr.ph.split.20.loopexit, label %for.cond8.preheader.prol.20, !llvm.loop !4

for.cond8.preheader.lr.ph.split.20.loopexit:      ; preds = %for.inc53.prol.20
  %indvars.iv.next21.prol.20.lcssa = phi i64 [ %indvars.iv.next21.prol.20, %for.inc53.prol.20 ]
  %inc54.prol.20.lcssa = phi i32 [ %inc54.prol.20, %for.inc53.prol.20 ]
  br label %for.cond8.preheader.lr.ph.split.20

for.cond8.preheader.lr.ph.split.20:               ; preds = %for.cond8.preheader.lr.ph.split.20.loopexit, %for.cond8.preheader.lr.ph.20
  %indvars.iv20.unr.20 = phi i64 [ 0, %for.cond8.preheader.lr.ph.20 ], [ %indvars.iv.next21.prol.20.lcssa, %for.cond8.preheader.lr.ph.split.20.loopexit ]
  %in_j.011.unr.20 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.20 ], [ %inc54.prol.20.lcssa, %for.cond8.preheader.lr.ph.split.20.loopexit ]
  br i1 %91, label %for.inc57.20, label %for.cond8.preheader.20.preheader

for.cond8.preheader.20.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.20
  br label %for.cond8.preheader.20

for.cond8.preheader.20:                           ; preds = %for.cond8.preheader.20.preheader, %for.inc53.7.20
  %indvars.iv20.20 = phi i64 [ %indvars.iv.next21.7.20, %for.inc53.7.20 ], [ %indvars.iv20.unr.20, %for.cond8.preheader.20.preheader ]
  %in_j.011.20 = phi i32 [ %inc54.7.20, %for.inc53.7.20 ], [ %in_j.011.unr.20, %for.cond8.preheader.20.preheader ]
  br i1 %cmp94, label %for.end38.20, label %for.body10.20.preheader

for.body10.20.preheader:                          ; preds = %for.cond8.preheader.20
  br label %for.body10.20

for.body10.20:                                    ; preds = %for.body10.20.preheader, %for.inc36.20
  %ki.06.20 = phi i32 [ %inc37.20, %for.inc36.20 ], [ 0, %for.body10.20.preheader ]
  %partial_sum.05.20 = phi float [ %partial_sum.3.20, %for.inc36.20 ], [ 0.000000e+00, %for.body10.20.preheader ]
  %add.20 = add nsw i32 %ki.06.20, %inc58.19
  %notlhs.20 = icmp slt i32 %add.20, 0
  %notrhs.20 = icmp uge i32 %add.20, %img_height
  %.not.20 = or i1 %notrhs.20, %notlhs.20
  %brmerge.20 = or i1 %.not.20, %cmp151.not.20
  br i1 %brmerge.20, label %for.inc36.20, label %for.body16.lr.ph.20

for.body16.lr.ph.20:                              ; preds = %for.body10.20
  %mul.20 = shl i32 %add.20, 7
  %mul30.20 = mul i32 %ki.06.20, %kern_width
  br label %for.body16.20

for.body16.20:                                    ; preds = %for.inc.20, %for.body16.lr.ph.20
  %indvars.iv.20 = phi i64 [ 0, %for.body16.lr.ph.20 ], [ %indvars.iv.next.20, %for.inc.20 ]
  %partial_sum.12.20 = phi float [ %partial_sum.05.20, %for.body16.lr.ph.20 ], [ %partial_sum.2.20, %for.inc.20 ]
  %1454 = trunc i64 %indvars.iv.20 to i32
  %add17.20 = add nsw i32 %1454, %in_j.011.20
  %cmp18.20 = icmp sgt i32 %add17.20, -1
  %cmp21.20 = icmp ult i32 %add17.20, %img_width
  %1455 = and i1 %cmp18.20, %cmp21.20
  br i1 %1455, label %if.end26.20, label %for.inc.20

if.end26.20:                                      ; preds = %for.body16.20
  %add29.20 = add nsw i32 %add17.20, %mul.20
  %idxprom.20 = sext i32 %add29.20 to i64
  %arrayidx.20 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.20
  %1456 = load float, float* %arrayidx.20, align 4
  %1457 = trunc i64 %indvars.iv.20 to i32
  %add31.20 = add i32 %1457, %mul30.20
  %idxprom32.20 = zext i32 %add31.20 to i64
  %arrayidx33.20 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.20
  %1458 = load float, float* %arrayidx33.20, align 4
  %mul34.20 = fmul float %1456, %1458
  %add35.20 = fadd float %partial_sum.12.20, %mul34.20
  br label %for.inc.20

for.inc.20:                                       ; preds = %if.end26.20, %for.body16.20
  %partial_sum.2.20 = phi float [ %add35.20, %if.end26.20 ], [ %partial_sum.12.20, %for.body16.20 ]
  %indvars.iv.next.20 = add nuw nsw i64 %indvars.iv.20, 1
  %lftr.wideiv.20 = trunc i64 %indvars.iv.next.20 to i32
  %exitcond.20 = icmp eq i32 %lftr.wideiv.20, %kern_width
  br i1 %exitcond.20, label %for.inc36.20.loopexit, label %for.body16.20, !llvm.loop !1

for.inc36.20.loopexit:                            ; preds = %for.inc.20
  %partial_sum.2.20.lcssa = phi float [ %partial_sum.2.20, %for.inc.20 ]
  br label %for.inc36.20

for.inc36.20:                                     ; preds = %for.inc36.20.loopexit, %for.body10.20
  %partial_sum.3.20 = phi float [ %partial_sum.05.20, %for.body10.20 ], [ %partial_sum.2.20.lcssa, %for.inc36.20.loopexit ]
  %inc37.20 = add nuw nsw i32 %ki.06.20, 1
  %exitcond19.20 = icmp eq i32 %inc37.20, %kern_height
  br i1 %exitcond19.20, label %for.end38.20.loopexit, label %for.body10.20, !llvm.loop !3

for.end38.20.loopexit:                            ; preds = %for.inc36.20
  %partial_sum.3.20.lcssa = phi float [ %partial_sum.3.20, %for.inc36.20 ]
  br label %for.end38.20

for.end38.20:                                     ; preds = %for.end38.20.loopexit, %for.cond8.preheader.20
  %partial_sum.0.lcssa.20 = phi float [ 0.000000e+00, %for.cond8.preheader.20 ], [ %partial_sum.3.20.lcssa, %for.end38.20.loopexit ]
  br i1 %tobool39, label %if.else.20, label %if.then40.20

if.then40.20:                                     ; preds = %for.end38.20
  %cmp41.20 = fcmp olt float %partial_sum.0.lcssa.20, 0.000000e+00
  %sub42.20 = fsub float -0.000000e+00, %partial_sum.0.lcssa.20
  %cond.20 = select i1 %cmp41.20, float %sub42.20, float %partial_sum.0.lcssa.20
  %conv.20 = fptoui float %cond.20 to i8
  %conv43.20 = uitofp i8 %conv.20 to float
  %1459 = add nsw i64 %indvars.iv20.20, %1446
  %arrayidx47.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1459
  store float %conv43.20, float* %arrayidx47.20, align 4
  br label %for.inc53.20

if.else.20:                                       ; preds = %for.end38.20
  %1460 = add nsw i64 %indvars.iv20.20, %1445
  %arrayidx51.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1460
  store float %partial_sum.0.lcssa.20, float* %arrayidx51.20, align 4
  br label %for.inc53.20

for.inc53.20:                                     ; preds = %if.else.20, %if.then40.20
  %inc54.20 = add nsw i32 %in_j.011.20, 1
  %indvars.iv.next21.20 = add nuw nsw i64 %indvars.iv20.20, 1
  br i1 %cmp94, label %for.end38.1.20, label %for.body10.1.20.preheader

for.body10.1.20.preheader:                        ; preds = %for.inc53.20
  br label %for.body10.1.20

for.body10.1.20:                                  ; preds = %for.body10.1.20.preheader, %for.inc36.1.20
  %ki.06.1.20 = phi i32 [ %inc37.1.20, %for.inc36.1.20 ], [ 0, %for.body10.1.20.preheader ]
  %partial_sum.05.1.20 = phi float [ %partial_sum.3.1.20, %for.inc36.1.20 ], [ 0.000000e+00, %for.body10.1.20.preheader ]
  %add.1.20 = add nsw i32 %ki.06.1.20, %inc58.19
  %notlhs.1.20 = icmp slt i32 %add.1.20, 0
  %notrhs.1.20 = icmp uge i32 %add.1.20, %img_height
  %.not.1.20 = or i1 %notrhs.1.20, %notlhs.1.20
  %brmerge.1.20 = or i1 %.not.1.20, %cmp151.not.1.20
  br i1 %brmerge.1.20, label %for.inc36.1.20, label %for.body16.lr.ph.1.20

for.body16.lr.ph.1.20:                            ; preds = %for.body10.1.20
  %mul.1.20 = shl i32 %add.1.20, 7
  %mul30.1.20 = mul i32 %ki.06.1.20, %kern_width
  br label %for.body16.1.20

for.body16.1.20:                                  ; preds = %for.inc.1.20, %for.body16.lr.ph.1.20
  %indvars.iv.1.20 = phi i64 [ 0, %for.body16.lr.ph.1.20 ], [ %indvars.iv.next.1.20, %for.inc.1.20 ]
  %partial_sum.12.1.20 = phi float [ %partial_sum.05.1.20, %for.body16.lr.ph.1.20 ], [ %partial_sum.2.1.20, %for.inc.1.20 ]
  %1461 = trunc i64 %indvars.iv.1.20 to i32
  %add17.1.20 = add nsw i32 %1461, %inc54.20
  %cmp18.1.20 = icmp sgt i32 %add17.1.20, -1
  %cmp21.1.20 = icmp ult i32 %add17.1.20, %img_width
  %1462 = and i1 %cmp18.1.20, %cmp21.1.20
  br i1 %1462, label %if.end26.1.20, label %for.inc.1.20

if.end26.1.20:                                    ; preds = %for.body16.1.20
  %add29.1.20 = add nsw i32 %add17.1.20, %mul.1.20
  %idxprom.1.20 = sext i32 %add29.1.20 to i64
  %arrayidx.1.20 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.20
  %1463 = load float, float* %arrayidx.1.20, align 4
  %1464 = trunc i64 %indvars.iv.1.20 to i32
  %add31.1.20 = add i32 %1464, %mul30.1.20
  %idxprom32.1.20 = zext i32 %add31.1.20 to i64
  %arrayidx33.1.20 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.20
  %1465 = load float, float* %arrayidx33.1.20, align 4
  %mul34.1.20 = fmul float %1463, %1465
  %add35.1.20 = fadd float %partial_sum.12.1.20, %mul34.1.20
  br label %for.inc.1.20

for.inc.1.20:                                     ; preds = %if.end26.1.20, %for.body16.1.20
  %partial_sum.2.1.20 = phi float [ %add35.1.20, %if.end26.1.20 ], [ %partial_sum.12.1.20, %for.body16.1.20 ]
  %indvars.iv.next.1.20 = add nuw nsw i64 %indvars.iv.1.20, 1
  %lftr.wideiv.1.20 = trunc i64 %indvars.iv.next.1.20 to i32
  %exitcond.1.20 = icmp eq i32 %lftr.wideiv.1.20, %kern_width
  br i1 %exitcond.1.20, label %for.inc36.1.20.loopexit, label %for.body16.1.20, !llvm.loop !1

for.inc36.1.20.loopexit:                          ; preds = %for.inc.1.20
  %partial_sum.2.1.20.lcssa = phi float [ %partial_sum.2.1.20, %for.inc.1.20 ]
  br label %for.inc36.1.20

for.inc36.1.20:                                   ; preds = %for.inc36.1.20.loopexit, %for.body10.1.20
  %partial_sum.3.1.20 = phi float [ %partial_sum.05.1.20, %for.body10.1.20 ], [ %partial_sum.2.1.20.lcssa, %for.inc36.1.20.loopexit ]
  %inc37.1.20 = add nuw nsw i32 %ki.06.1.20, 1
  %exitcond19.1.20 = icmp eq i32 %inc37.1.20, %kern_height
  br i1 %exitcond19.1.20, label %for.end38.1.20.loopexit, label %for.body10.1.20, !llvm.loop !3

for.end38.1.20.loopexit:                          ; preds = %for.inc36.1.20
  %partial_sum.3.1.20.lcssa = phi float [ %partial_sum.3.1.20, %for.inc36.1.20 ]
  br label %for.end38.1.20

for.end38.1.20:                                   ; preds = %for.end38.1.20.loopexit, %for.inc53.20
  %partial_sum.0.lcssa.1.20 = phi float [ 0.000000e+00, %for.inc53.20 ], [ %partial_sum.3.1.20.lcssa, %for.end38.1.20.loopexit ]
  br i1 %tobool39, label %if.else.1.20, label %if.then40.1.20

if.then40.1.20:                                   ; preds = %for.end38.1.20
  %cmp41.1.20 = fcmp olt float %partial_sum.0.lcssa.1.20, 0.000000e+00
  %sub42.1.20 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.20
  %cond.1.20 = select i1 %cmp41.1.20, float %sub42.1.20, float %partial_sum.0.lcssa.1.20
  %conv.1.20 = fptoui float %cond.1.20 to i8
  %conv43.1.20 = uitofp i8 %conv.1.20 to float
  %1466 = add nsw i64 %indvars.iv.next21.20, %1446
  %arrayidx47.1.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1466
  store float %conv43.1.20, float* %arrayidx47.1.20, align 4
  br label %for.inc53.1.20

if.else.1.20:                                     ; preds = %for.end38.1.20
  %1467 = add nsw i64 %indvars.iv.next21.20, %1445
  %arrayidx51.1.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1467
  store float %partial_sum.0.lcssa.1.20, float* %arrayidx51.1.20, align 4
  br label %for.inc53.1.20

for.inc53.1.20:                                   ; preds = %if.else.1.20, %if.then40.1.20
  %inc54.1.20 = add nsw i32 %in_j.011.20, 2
  %indvars.iv.next21.1.20 = add nsw i64 %indvars.iv20.20, 2
  br i1 %cmp94, label %for.end38.2.20, label %for.body10.2.20.preheader

for.body10.2.20.preheader:                        ; preds = %for.inc53.1.20
  br label %for.body10.2.20

for.body10.2.20:                                  ; preds = %for.body10.2.20.preheader, %for.inc36.2.20
  %ki.06.2.20 = phi i32 [ %inc37.2.20, %for.inc36.2.20 ], [ 0, %for.body10.2.20.preheader ]
  %partial_sum.05.2.20 = phi float [ %partial_sum.3.2.20, %for.inc36.2.20 ], [ 0.000000e+00, %for.body10.2.20.preheader ]
  %add.2.20 = add nsw i32 %ki.06.2.20, %inc58.19
  %notlhs.2.20 = icmp slt i32 %add.2.20, 0
  %notrhs.2.20 = icmp uge i32 %add.2.20, %img_height
  %.not.2.20 = or i1 %notrhs.2.20, %notlhs.2.20
  %brmerge.2.20 = or i1 %.not.2.20, %cmp151.not.2.20
  br i1 %brmerge.2.20, label %for.inc36.2.20, label %for.body16.lr.ph.2.20

for.body16.lr.ph.2.20:                            ; preds = %for.body10.2.20
  %mul.2.20 = shl i32 %add.2.20, 7
  %mul30.2.20 = mul i32 %ki.06.2.20, %kern_width
  br label %for.body16.2.20

for.body16.2.20:                                  ; preds = %for.inc.2.20, %for.body16.lr.ph.2.20
  %indvars.iv.2.20 = phi i64 [ 0, %for.body16.lr.ph.2.20 ], [ %indvars.iv.next.2.20, %for.inc.2.20 ]
  %partial_sum.12.2.20 = phi float [ %partial_sum.05.2.20, %for.body16.lr.ph.2.20 ], [ %partial_sum.2.2.20, %for.inc.2.20 ]
  %1468 = trunc i64 %indvars.iv.2.20 to i32
  %add17.2.20 = add nsw i32 %1468, %inc54.1.20
  %cmp18.2.20 = icmp sgt i32 %add17.2.20, -1
  %cmp21.2.20 = icmp ult i32 %add17.2.20, %img_width
  %1469 = and i1 %cmp18.2.20, %cmp21.2.20
  br i1 %1469, label %if.end26.2.20, label %for.inc.2.20

if.end26.2.20:                                    ; preds = %for.body16.2.20
  %add29.2.20 = add nsw i32 %add17.2.20, %mul.2.20
  %idxprom.2.20 = sext i32 %add29.2.20 to i64
  %arrayidx.2.20 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.20
  %1470 = load float, float* %arrayidx.2.20, align 4
  %1471 = trunc i64 %indvars.iv.2.20 to i32
  %add31.2.20 = add i32 %1471, %mul30.2.20
  %idxprom32.2.20 = zext i32 %add31.2.20 to i64
  %arrayidx33.2.20 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.20
  %1472 = load float, float* %arrayidx33.2.20, align 4
  %mul34.2.20 = fmul float %1470, %1472
  %add35.2.20 = fadd float %partial_sum.12.2.20, %mul34.2.20
  br label %for.inc.2.20

for.inc.2.20:                                     ; preds = %if.end26.2.20, %for.body16.2.20
  %partial_sum.2.2.20 = phi float [ %add35.2.20, %if.end26.2.20 ], [ %partial_sum.12.2.20, %for.body16.2.20 ]
  %indvars.iv.next.2.20 = add nuw nsw i64 %indvars.iv.2.20, 1
  %lftr.wideiv.2.20 = trunc i64 %indvars.iv.next.2.20 to i32
  %exitcond.2.20 = icmp eq i32 %lftr.wideiv.2.20, %kern_width
  br i1 %exitcond.2.20, label %for.inc36.2.20.loopexit, label %for.body16.2.20, !llvm.loop !1

for.inc36.2.20.loopexit:                          ; preds = %for.inc.2.20
  %partial_sum.2.2.20.lcssa = phi float [ %partial_sum.2.2.20, %for.inc.2.20 ]
  br label %for.inc36.2.20

for.inc36.2.20:                                   ; preds = %for.inc36.2.20.loopexit, %for.body10.2.20
  %partial_sum.3.2.20 = phi float [ %partial_sum.05.2.20, %for.body10.2.20 ], [ %partial_sum.2.2.20.lcssa, %for.inc36.2.20.loopexit ]
  %inc37.2.20 = add nuw nsw i32 %ki.06.2.20, 1
  %exitcond19.2.20 = icmp eq i32 %inc37.2.20, %kern_height
  br i1 %exitcond19.2.20, label %for.end38.2.20.loopexit, label %for.body10.2.20, !llvm.loop !3

for.end38.2.20.loopexit:                          ; preds = %for.inc36.2.20
  %partial_sum.3.2.20.lcssa = phi float [ %partial_sum.3.2.20, %for.inc36.2.20 ]
  br label %for.end38.2.20

for.end38.2.20:                                   ; preds = %for.end38.2.20.loopexit, %for.inc53.1.20
  %partial_sum.0.lcssa.2.20 = phi float [ 0.000000e+00, %for.inc53.1.20 ], [ %partial_sum.3.2.20.lcssa, %for.end38.2.20.loopexit ]
  br i1 %tobool39, label %if.else.2.20, label %if.then40.2.20

if.then40.2.20:                                   ; preds = %for.end38.2.20
  %cmp41.2.20 = fcmp olt float %partial_sum.0.lcssa.2.20, 0.000000e+00
  %sub42.2.20 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.20
  %cond.2.20 = select i1 %cmp41.2.20, float %sub42.2.20, float %partial_sum.0.lcssa.2.20
  %conv.2.20 = fptoui float %cond.2.20 to i8
  %conv43.2.20 = uitofp i8 %conv.2.20 to float
  %1473 = add nsw i64 %indvars.iv.next21.1.20, %1446
  %arrayidx47.2.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1473
  store float %conv43.2.20, float* %arrayidx47.2.20, align 4
  br label %for.inc53.2.20

if.else.2.20:                                     ; preds = %for.end38.2.20
  %1474 = add nsw i64 %indvars.iv.next21.1.20, %1445
  %arrayidx51.2.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1474
  store float %partial_sum.0.lcssa.2.20, float* %arrayidx51.2.20, align 4
  br label %for.inc53.2.20

for.inc53.2.20:                                   ; preds = %if.else.2.20, %if.then40.2.20
  %inc54.2.20 = add nsw i32 %in_j.011.20, 3
  %indvars.iv.next21.2.20 = add nsw i64 %indvars.iv20.20, 3
  br i1 %cmp94, label %for.end38.3.20, label %for.body10.3.20.preheader

for.body10.3.20.preheader:                        ; preds = %for.inc53.2.20
  br label %for.body10.3.20

for.body10.3.20:                                  ; preds = %for.body10.3.20.preheader, %for.inc36.3.20
  %ki.06.3.20 = phi i32 [ %inc37.3.20, %for.inc36.3.20 ], [ 0, %for.body10.3.20.preheader ]
  %partial_sum.05.3.20 = phi float [ %partial_sum.3.3.20, %for.inc36.3.20 ], [ 0.000000e+00, %for.body10.3.20.preheader ]
  %add.3.20 = add nsw i32 %ki.06.3.20, %inc58.19
  %notlhs.3.20 = icmp slt i32 %add.3.20, 0
  %notrhs.3.20 = icmp uge i32 %add.3.20, %img_height
  %.not.3.20 = or i1 %notrhs.3.20, %notlhs.3.20
  %brmerge.3.20 = or i1 %.not.3.20, %cmp151.not.3.20
  br i1 %brmerge.3.20, label %for.inc36.3.20, label %for.body16.lr.ph.3.20

for.body16.lr.ph.3.20:                            ; preds = %for.body10.3.20
  %mul.3.20 = shl i32 %add.3.20, 7
  %mul30.3.20 = mul i32 %ki.06.3.20, %kern_width
  br label %for.body16.3.20

for.body16.3.20:                                  ; preds = %for.inc.3.20, %for.body16.lr.ph.3.20
  %indvars.iv.3.20 = phi i64 [ 0, %for.body16.lr.ph.3.20 ], [ %indvars.iv.next.3.20, %for.inc.3.20 ]
  %partial_sum.12.3.20 = phi float [ %partial_sum.05.3.20, %for.body16.lr.ph.3.20 ], [ %partial_sum.2.3.20, %for.inc.3.20 ]
  %1475 = trunc i64 %indvars.iv.3.20 to i32
  %add17.3.20 = add nsw i32 %1475, %inc54.2.20
  %cmp18.3.20 = icmp sgt i32 %add17.3.20, -1
  %cmp21.3.20 = icmp ult i32 %add17.3.20, %img_width
  %1476 = and i1 %cmp18.3.20, %cmp21.3.20
  br i1 %1476, label %if.end26.3.20, label %for.inc.3.20

if.end26.3.20:                                    ; preds = %for.body16.3.20
  %add29.3.20 = add nsw i32 %add17.3.20, %mul.3.20
  %idxprom.3.20 = sext i32 %add29.3.20 to i64
  %arrayidx.3.20 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.20
  %1477 = load float, float* %arrayidx.3.20, align 4
  %1478 = trunc i64 %indvars.iv.3.20 to i32
  %add31.3.20 = add i32 %1478, %mul30.3.20
  %idxprom32.3.20 = zext i32 %add31.3.20 to i64
  %arrayidx33.3.20 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.20
  %1479 = load float, float* %arrayidx33.3.20, align 4
  %mul34.3.20 = fmul float %1477, %1479
  %add35.3.20 = fadd float %partial_sum.12.3.20, %mul34.3.20
  br label %for.inc.3.20

for.inc.3.20:                                     ; preds = %if.end26.3.20, %for.body16.3.20
  %partial_sum.2.3.20 = phi float [ %add35.3.20, %if.end26.3.20 ], [ %partial_sum.12.3.20, %for.body16.3.20 ]
  %indvars.iv.next.3.20 = add nuw nsw i64 %indvars.iv.3.20, 1
  %lftr.wideiv.3.20 = trunc i64 %indvars.iv.next.3.20 to i32
  %exitcond.3.20 = icmp eq i32 %lftr.wideiv.3.20, %kern_width
  br i1 %exitcond.3.20, label %for.inc36.3.20.loopexit, label %for.body16.3.20, !llvm.loop !1

for.inc36.3.20.loopexit:                          ; preds = %for.inc.3.20
  %partial_sum.2.3.20.lcssa = phi float [ %partial_sum.2.3.20, %for.inc.3.20 ]
  br label %for.inc36.3.20

for.inc36.3.20:                                   ; preds = %for.inc36.3.20.loopexit, %for.body10.3.20
  %partial_sum.3.3.20 = phi float [ %partial_sum.05.3.20, %for.body10.3.20 ], [ %partial_sum.2.3.20.lcssa, %for.inc36.3.20.loopexit ]
  %inc37.3.20 = add nuw nsw i32 %ki.06.3.20, 1
  %exitcond19.3.20 = icmp eq i32 %inc37.3.20, %kern_height
  br i1 %exitcond19.3.20, label %for.end38.3.20.loopexit, label %for.body10.3.20, !llvm.loop !3

for.end38.3.20.loopexit:                          ; preds = %for.inc36.3.20
  %partial_sum.3.3.20.lcssa = phi float [ %partial_sum.3.3.20, %for.inc36.3.20 ]
  br label %for.end38.3.20

for.end38.3.20:                                   ; preds = %for.end38.3.20.loopexit, %for.inc53.2.20
  %partial_sum.0.lcssa.3.20 = phi float [ 0.000000e+00, %for.inc53.2.20 ], [ %partial_sum.3.3.20.lcssa, %for.end38.3.20.loopexit ]
  br i1 %tobool39, label %if.else.3.20, label %if.then40.3.20

if.then40.3.20:                                   ; preds = %for.end38.3.20
  %cmp41.3.20 = fcmp olt float %partial_sum.0.lcssa.3.20, 0.000000e+00
  %sub42.3.20 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.20
  %cond.3.20 = select i1 %cmp41.3.20, float %sub42.3.20, float %partial_sum.0.lcssa.3.20
  %conv.3.20 = fptoui float %cond.3.20 to i8
  %conv43.3.20 = uitofp i8 %conv.3.20 to float
  %1480 = add nsw i64 %indvars.iv.next21.2.20, %1446
  %arrayidx47.3.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1480
  store float %conv43.3.20, float* %arrayidx47.3.20, align 4
  br label %for.inc53.3.20

if.else.3.20:                                     ; preds = %for.end38.3.20
  %1481 = add nsw i64 %indvars.iv.next21.2.20, %1445
  %arrayidx51.3.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1481
  store float %partial_sum.0.lcssa.3.20, float* %arrayidx51.3.20, align 4
  br label %for.inc53.3.20

for.inc53.3.20:                                   ; preds = %if.else.3.20, %if.then40.3.20
  %inc54.3.20 = add nsw i32 %in_j.011.20, 4
  %indvars.iv.next21.3.20 = add nsw i64 %indvars.iv20.20, 4
  br i1 %cmp94, label %for.end38.4.20, label %for.body10.4.20.preheader

for.body10.4.20.preheader:                        ; preds = %for.inc53.3.20
  br label %for.body10.4.20

for.body10.4.20:                                  ; preds = %for.body10.4.20.preheader, %for.inc36.4.20
  %ki.06.4.20 = phi i32 [ %inc37.4.20, %for.inc36.4.20 ], [ 0, %for.body10.4.20.preheader ]
  %partial_sum.05.4.20 = phi float [ %partial_sum.3.4.20, %for.inc36.4.20 ], [ 0.000000e+00, %for.body10.4.20.preheader ]
  %add.4.20 = add nsw i32 %ki.06.4.20, %inc58.19
  %notlhs.4.20 = icmp slt i32 %add.4.20, 0
  %notrhs.4.20 = icmp uge i32 %add.4.20, %img_height
  %.not.4.20 = or i1 %notrhs.4.20, %notlhs.4.20
  %brmerge.4.20 = or i1 %.not.4.20, %cmp151.not.4.20
  br i1 %brmerge.4.20, label %for.inc36.4.20, label %for.body16.lr.ph.4.20

for.body16.lr.ph.4.20:                            ; preds = %for.body10.4.20
  %mul.4.20 = shl i32 %add.4.20, 7
  %mul30.4.20 = mul i32 %ki.06.4.20, %kern_width
  br label %for.body16.4.20

for.body16.4.20:                                  ; preds = %for.inc.4.20, %for.body16.lr.ph.4.20
  %indvars.iv.4.20 = phi i64 [ 0, %for.body16.lr.ph.4.20 ], [ %indvars.iv.next.4.20, %for.inc.4.20 ]
  %partial_sum.12.4.20 = phi float [ %partial_sum.05.4.20, %for.body16.lr.ph.4.20 ], [ %partial_sum.2.4.20, %for.inc.4.20 ]
  %1482 = trunc i64 %indvars.iv.4.20 to i32
  %add17.4.20 = add nsw i32 %1482, %inc54.3.20
  %cmp18.4.20 = icmp sgt i32 %add17.4.20, -1
  %cmp21.4.20 = icmp ult i32 %add17.4.20, %img_width
  %1483 = and i1 %cmp18.4.20, %cmp21.4.20
  br i1 %1483, label %if.end26.4.20, label %for.inc.4.20

if.end26.4.20:                                    ; preds = %for.body16.4.20
  %add29.4.20 = add nsw i32 %add17.4.20, %mul.4.20
  %idxprom.4.20 = sext i32 %add29.4.20 to i64
  %arrayidx.4.20 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.20
  %1484 = load float, float* %arrayidx.4.20, align 4
  %1485 = trunc i64 %indvars.iv.4.20 to i32
  %add31.4.20 = add i32 %1485, %mul30.4.20
  %idxprom32.4.20 = zext i32 %add31.4.20 to i64
  %arrayidx33.4.20 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.20
  %1486 = load float, float* %arrayidx33.4.20, align 4
  %mul34.4.20 = fmul float %1484, %1486
  %add35.4.20 = fadd float %partial_sum.12.4.20, %mul34.4.20
  br label %for.inc.4.20

for.inc.4.20:                                     ; preds = %if.end26.4.20, %for.body16.4.20
  %partial_sum.2.4.20 = phi float [ %add35.4.20, %if.end26.4.20 ], [ %partial_sum.12.4.20, %for.body16.4.20 ]
  %indvars.iv.next.4.20 = add nuw nsw i64 %indvars.iv.4.20, 1
  %lftr.wideiv.4.20 = trunc i64 %indvars.iv.next.4.20 to i32
  %exitcond.4.20 = icmp eq i32 %lftr.wideiv.4.20, %kern_width
  br i1 %exitcond.4.20, label %for.inc36.4.20.loopexit, label %for.body16.4.20, !llvm.loop !1

for.inc36.4.20.loopexit:                          ; preds = %for.inc.4.20
  %partial_sum.2.4.20.lcssa = phi float [ %partial_sum.2.4.20, %for.inc.4.20 ]
  br label %for.inc36.4.20

for.inc36.4.20:                                   ; preds = %for.inc36.4.20.loopexit, %for.body10.4.20
  %partial_sum.3.4.20 = phi float [ %partial_sum.05.4.20, %for.body10.4.20 ], [ %partial_sum.2.4.20.lcssa, %for.inc36.4.20.loopexit ]
  %inc37.4.20 = add nuw nsw i32 %ki.06.4.20, 1
  %exitcond19.4.20 = icmp eq i32 %inc37.4.20, %kern_height
  br i1 %exitcond19.4.20, label %for.end38.4.20.loopexit, label %for.body10.4.20, !llvm.loop !3

for.end38.4.20.loopexit:                          ; preds = %for.inc36.4.20
  %partial_sum.3.4.20.lcssa = phi float [ %partial_sum.3.4.20, %for.inc36.4.20 ]
  br label %for.end38.4.20

for.end38.4.20:                                   ; preds = %for.end38.4.20.loopexit, %for.inc53.3.20
  %partial_sum.0.lcssa.4.20 = phi float [ 0.000000e+00, %for.inc53.3.20 ], [ %partial_sum.3.4.20.lcssa, %for.end38.4.20.loopexit ]
  br i1 %tobool39, label %if.else.4.20, label %if.then40.4.20

if.then40.4.20:                                   ; preds = %for.end38.4.20
  %cmp41.4.20 = fcmp olt float %partial_sum.0.lcssa.4.20, 0.000000e+00
  %sub42.4.20 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.20
  %cond.4.20 = select i1 %cmp41.4.20, float %sub42.4.20, float %partial_sum.0.lcssa.4.20
  %conv.4.20 = fptoui float %cond.4.20 to i8
  %conv43.4.20 = uitofp i8 %conv.4.20 to float
  %1487 = add nsw i64 %indvars.iv.next21.3.20, %1446
  %arrayidx47.4.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1487
  store float %conv43.4.20, float* %arrayidx47.4.20, align 4
  br label %for.inc53.4.20

if.else.4.20:                                     ; preds = %for.end38.4.20
  %1488 = add nsw i64 %indvars.iv.next21.3.20, %1445
  %arrayidx51.4.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1488
  store float %partial_sum.0.lcssa.4.20, float* %arrayidx51.4.20, align 4
  br label %for.inc53.4.20

for.inc53.4.20:                                   ; preds = %if.else.4.20, %if.then40.4.20
  %inc54.4.20 = add nsw i32 %in_j.011.20, 5
  %indvars.iv.next21.4.20 = add nsw i64 %indvars.iv20.20, 5
  br i1 %cmp94, label %for.end38.5.20, label %for.body10.5.20.preheader

for.body10.5.20.preheader:                        ; preds = %for.inc53.4.20
  br label %for.body10.5.20

for.body10.5.20:                                  ; preds = %for.body10.5.20.preheader, %for.inc36.5.20
  %ki.06.5.20 = phi i32 [ %inc37.5.20, %for.inc36.5.20 ], [ 0, %for.body10.5.20.preheader ]
  %partial_sum.05.5.20 = phi float [ %partial_sum.3.5.20, %for.inc36.5.20 ], [ 0.000000e+00, %for.body10.5.20.preheader ]
  %add.5.20 = add nsw i32 %ki.06.5.20, %inc58.19
  %notlhs.5.20 = icmp slt i32 %add.5.20, 0
  %notrhs.5.20 = icmp uge i32 %add.5.20, %img_height
  %.not.5.20 = or i1 %notrhs.5.20, %notlhs.5.20
  %brmerge.5.20 = or i1 %.not.5.20, %cmp151.not.5.20
  br i1 %brmerge.5.20, label %for.inc36.5.20, label %for.body16.lr.ph.5.20

for.body16.lr.ph.5.20:                            ; preds = %for.body10.5.20
  %mul.5.20 = shl i32 %add.5.20, 7
  %mul30.5.20 = mul i32 %ki.06.5.20, %kern_width
  br label %for.body16.5.20

for.body16.5.20:                                  ; preds = %for.inc.5.20, %for.body16.lr.ph.5.20
  %indvars.iv.5.20 = phi i64 [ 0, %for.body16.lr.ph.5.20 ], [ %indvars.iv.next.5.20, %for.inc.5.20 ]
  %partial_sum.12.5.20 = phi float [ %partial_sum.05.5.20, %for.body16.lr.ph.5.20 ], [ %partial_sum.2.5.20, %for.inc.5.20 ]
  %1489 = trunc i64 %indvars.iv.5.20 to i32
  %add17.5.20 = add nsw i32 %1489, %inc54.4.20
  %cmp18.5.20 = icmp sgt i32 %add17.5.20, -1
  %cmp21.5.20 = icmp ult i32 %add17.5.20, %img_width
  %1490 = and i1 %cmp18.5.20, %cmp21.5.20
  br i1 %1490, label %if.end26.5.20, label %for.inc.5.20

if.end26.5.20:                                    ; preds = %for.body16.5.20
  %add29.5.20 = add nsw i32 %add17.5.20, %mul.5.20
  %idxprom.5.20 = sext i32 %add29.5.20 to i64
  %arrayidx.5.20 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.20
  %1491 = load float, float* %arrayidx.5.20, align 4
  %1492 = trunc i64 %indvars.iv.5.20 to i32
  %add31.5.20 = add i32 %1492, %mul30.5.20
  %idxprom32.5.20 = zext i32 %add31.5.20 to i64
  %arrayidx33.5.20 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.20
  %1493 = load float, float* %arrayidx33.5.20, align 4
  %mul34.5.20 = fmul float %1491, %1493
  %add35.5.20 = fadd float %partial_sum.12.5.20, %mul34.5.20
  br label %for.inc.5.20

for.inc.5.20:                                     ; preds = %if.end26.5.20, %for.body16.5.20
  %partial_sum.2.5.20 = phi float [ %add35.5.20, %if.end26.5.20 ], [ %partial_sum.12.5.20, %for.body16.5.20 ]
  %indvars.iv.next.5.20 = add nuw nsw i64 %indvars.iv.5.20, 1
  %lftr.wideiv.5.20 = trunc i64 %indvars.iv.next.5.20 to i32
  %exitcond.5.20 = icmp eq i32 %lftr.wideiv.5.20, %kern_width
  br i1 %exitcond.5.20, label %for.inc36.5.20.loopexit, label %for.body16.5.20, !llvm.loop !1

for.inc36.5.20.loopexit:                          ; preds = %for.inc.5.20
  %partial_sum.2.5.20.lcssa = phi float [ %partial_sum.2.5.20, %for.inc.5.20 ]
  br label %for.inc36.5.20

for.inc36.5.20:                                   ; preds = %for.inc36.5.20.loopexit, %for.body10.5.20
  %partial_sum.3.5.20 = phi float [ %partial_sum.05.5.20, %for.body10.5.20 ], [ %partial_sum.2.5.20.lcssa, %for.inc36.5.20.loopexit ]
  %inc37.5.20 = add nuw nsw i32 %ki.06.5.20, 1
  %exitcond19.5.20 = icmp eq i32 %inc37.5.20, %kern_height
  br i1 %exitcond19.5.20, label %for.end38.5.20.loopexit, label %for.body10.5.20, !llvm.loop !3

for.end38.5.20.loopexit:                          ; preds = %for.inc36.5.20
  %partial_sum.3.5.20.lcssa = phi float [ %partial_sum.3.5.20, %for.inc36.5.20 ]
  br label %for.end38.5.20

for.end38.5.20:                                   ; preds = %for.end38.5.20.loopexit, %for.inc53.4.20
  %partial_sum.0.lcssa.5.20 = phi float [ 0.000000e+00, %for.inc53.4.20 ], [ %partial_sum.3.5.20.lcssa, %for.end38.5.20.loopexit ]
  br i1 %tobool39, label %if.else.5.20, label %if.then40.5.20

if.then40.5.20:                                   ; preds = %for.end38.5.20
  %cmp41.5.20 = fcmp olt float %partial_sum.0.lcssa.5.20, 0.000000e+00
  %sub42.5.20 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.20
  %cond.5.20 = select i1 %cmp41.5.20, float %sub42.5.20, float %partial_sum.0.lcssa.5.20
  %conv.5.20 = fptoui float %cond.5.20 to i8
  %conv43.5.20 = uitofp i8 %conv.5.20 to float
  %1494 = add nsw i64 %indvars.iv.next21.4.20, %1446
  %arrayidx47.5.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1494
  store float %conv43.5.20, float* %arrayidx47.5.20, align 4
  br label %for.inc53.5.20

if.else.5.20:                                     ; preds = %for.end38.5.20
  %1495 = add nsw i64 %indvars.iv.next21.4.20, %1445
  %arrayidx51.5.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1495
  store float %partial_sum.0.lcssa.5.20, float* %arrayidx51.5.20, align 4
  br label %for.inc53.5.20

for.inc53.5.20:                                   ; preds = %if.else.5.20, %if.then40.5.20
  %inc54.5.20 = add nsw i32 %in_j.011.20, 6
  %indvars.iv.next21.5.20 = add nsw i64 %indvars.iv20.20, 6
  br i1 %cmp94, label %for.end38.6.20, label %for.body10.6.20.preheader

for.body10.6.20.preheader:                        ; preds = %for.inc53.5.20
  br label %for.body10.6.20

for.body10.6.20:                                  ; preds = %for.body10.6.20.preheader, %for.inc36.6.20
  %ki.06.6.20 = phi i32 [ %inc37.6.20, %for.inc36.6.20 ], [ 0, %for.body10.6.20.preheader ]
  %partial_sum.05.6.20 = phi float [ %partial_sum.3.6.20, %for.inc36.6.20 ], [ 0.000000e+00, %for.body10.6.20.preheader ]
  %add.6.20 = add nsw i32 %ki.06.6.20, %inc58.19
  %notlhs.6.20 = icmp slt i32 %add.6.20, 0
  %notrhs.6.20 = icmp uge i32 %add.6.20, %img_height
  %.not.6.20 = or i1 %notrhs.6.20, %notlhs.6.20
  %brmerge.6.20 = or i1 %.not.6.20, %cmp151.not.6.20
  br i1 %brmerge.6.20, label %for.inc36.6.20, label %for.body16.lr.ph.6.20

for.body16.lr.ph.6.20:                            ; preds = %for.body10.6.20
  %mul.6.20 = shl i32 %add.6.20, 7
  %mul30.6.20 = mul i32 %ki.06.6.20, %kern_width
  br label %for.body16.6.20

for.body16.6.20:                                  ; preds = %for.inc.6.20, %for.body16.lr.ph.6.20
  %indvars.iv.6.20 = phi i64 [ 0, %for.body16.lr.ph.6.20 ], [ %indvars.iv.next.6.20, %for.inc.6.20 ]
  %partial_sum.12.6.20 = phi float [ %partial_sum.05.6.20, %for.body16.lr.ph.6.20 ], [ %partial_sum.2.6.20, %for.inc.6.20 ]
  %1496 = trunc i64 %indvars.iv.6.20 to i32
  %add17.6.20 = add nsw i32 %1496, %inc54.5.20
  %cmp18.6.20 = icmp sgt i32 %add17.6.20, -1
  %cmp21.6.20 = icmp ult i32 %add17.6.20, %img_width
  %1497 = and i1 %cmp18.6.20, %cmp21.6.20
  br i1 %1497, label %if.end26.6.20, label %for.inc.6.20

if.end26.6.20:                                    ; preds = %for.body16.6.20
  %add29.6.20 = add nsw i32 %add17.6.20, %mul.6.20
  %idxprom.6.20 = sext i32 %add29.6.20 to i64
  %arrayidx.6.20 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.20
  %1498 = load float, float* %arrayidx.6.20, align 4
  %1499 = trunc i64 %indvars.iv.6.20 to i32
  %add31.6.20 = add i32 %1499, %mul30.6.20
  %idxprom32.6.20 = zext i32 %add31.6.20 to i64
  %arrayidx33.6.20 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.20
  %1500 = load float, float* %arrayidx33.6.20, align 4
  %mul34.6.20 = fmul float %1498, %1500
  %add35.6.20 = fadd float %partial_sum.12.6.20, %mul34.6.20
  br label %for.inc.6.20

for.inc.6.20:                                     ; preds = %if.end26.6.20, %for.body16.6.20
  %partial_sum.2.6.20 = phi float [ %add35.6.20, %if.end26.6.20 ], [ %partial_sum.12.6.20, %for.body16.6.20 ]
  %indvars.iv.next.6.20 = add nuw nsw i64 %indvars.iv.6.20, 1
  %lftr.wideiv.6.20 = trunc i64 %indvars.iv.next.6.20 to i32
  %exitcond.6.20 = icmp eq i32 %lftr.wideiv.6.20, %kern_width
  br i1 %exitcond.6.20, label %for.inc36.6.20.loopexit, label %for.body16.6.20, !llvm.loop !1

for.inc36.6.20.loopexit:                          ; preds = %for.inc.6.20
  %partial_sum.2.6.20.lcssa = phi float [ %partial_sum.2.6.20, %for.inc.6.20 ]
  br label %for.inc36.6.20

for.inc36.6.20:                                   ; preds = %for.inc36.6.20.loopexit, %for.body10.6.20
  %partial_sum.3.6.20 = phi float [ %partial_sum.05.6.20, %for.body10.6.20 ], [ %partial_sum.2.6.20.lcssa, %for.inc36.6.20.loopexit ]
  %inc37.6.20 = add nuw nsw i32 %ki.06.6.20, 1
  %exitcond19.6.20 = icmp eq i32 %inc37.6.20, %kern_height
  br i1 %exitcond19.6.20, label %for.end38.6.20.loopexit, label %for.body10.6.20, !llvm.loop !3

for.end38.6.20.loopexit:                          ; preds = %for.inc36.6.20
  %partial_sum.3.6.20.lcssa = phi float [ %partial_sum.3.6.20, %for.inc36.6.20 ]
  br label %for.end38.6.20

for.end38.6.20:                                   ; preds = %for.end38.6.20.loopexit, %for.inc53.5.20
  %partial_sum.0.lcssa.6.20 = phi float [ 0.000000e+00, %for.inc53.5.20 ], [ %partial_sum.3.6.20.lcssa, %for.end38.6.20.loopexit ]
  br i1 %tobool39, label %if.else.6.20, label %if.then40.6.20

if.then40.6.20:                                   ; preds = %for.end38.6.20
  %cmp41.6.20 = fcmp olt float %partial_sum.0.lcssa.6.20, 0.000000e+00
  %sub42.6.20 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.20
  %cond.6.20 = select i1 %cmp41.6.20, float %sub42.6.20, float %partial_sum.0.lcssa.6.20
  %conv.6.20 = fptoui float %cond.6.20 to i8
  %conv43.6.20 = uitofp i8 %conv.6.20 to float
  %1501 = add nsw i64 %indvars.iv.next21.5.20, %1446
  %arrayidx47.6.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1501
  store float %conv43.6.20, float* %arrayidx47.6.20, align 4
  br label %for.inc53.6.20

if.else.6.20:                                     ; preds = %for.end38.6.20
  %1502 = add nsw i64 %indvars.iv.next21.5.20, %1445
  %arrayidx51.6.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1502
  store float %partial_sum.0.lcssa.6.20, float* %arrayidx51.6.20, align 4
  br label %for.inc53.6.20

for.inc53.6.20:                                   ; preds = %if.else.6.20, %if.then40.6.20
  %inc54.6.20 = add nsw i32 %in_j.011.20, 7
  %indvars.iv.next21.6.20 = add nsw i64 %indvars.iv20.20, 7
  br i1 %cmp94, label %for.end38.7.20, label %for.body10.7.20.preheader

for.body10.7.20.preheader:                        ; preds = %for.inc53.6.20
  br label %for.body10.7.20

for.body10.7.20:                                  ; preds = %for.body10.7.20.preheader, %for.inc36.7.20
  %ki.06.7.20 = phi i32 [ %inc37.7.20, %for.inc36.7.20 ], [ 0, %for.body10.7.20.preheader ]
  %partial_sum.05.7.20 = phi float [ %partial_sum.3.7.20, %for.inc36.7.20 ], [ 0.000000e+00, %for.body10.7.20.preheader ]
  %add.7.20 = add nsw i32 %ki.06.7.20, %inc58.19
  %notlhs.7.20 = icmp slt i32 %add.7.20, 0
  %notrhs.7.20 = icmp uge i32 %add.7.20, %img_height
  %.not.7.20 = or i1 %notrhs.7.20, %notlhs.7.20
  %brmerge.7.20 = or i1 %.not.7.20, %cmp151.not.7.20
  br i1 %brmerge.7.20, label %for.inc36.7.20, label %for.body16.lr.ph.7.20

for.body16.lr.ph.7.20:                            ; preds = %for.body10.7.20
  %mul.7.20 = shl i32 %add.7.20, 7
  %mul30.7.20 = mul i32 %ki.06.7.20, %kern_width
  br label %for.body16.7.20

for.body16.7.20:                                  ; preds = %for.inc.7.20, %for.body16.lr.ph.7.20
  %indvars.iv.7.20 = phi i64 [ 0, %for.body16.lr.ph.7.20 ], [ %indvars.iv.next.7.20, %for.inc.7.20 ]
  %partial_sum.12.7.20 = phi float [ %partial_sum.05.7.20, %for.body16.lr.ph.7.20 ], [ %partial_sum.2.7.20, %for.inc.7.20 ]
  %1503 = trunc i64 %indvars.iv.7.20 to i32
  %add17.7.20 = add nsw i32 %1503, %inc54.6.20
  %cmp18.7.20 = icmp sgt i32 %add17.7.20, -1
  %cmp21.7.20 = icmp ult i32 %add17.7.20, %img_width
  %1504 = and i1 %cmp18.7.20, %cmp21.7.20
  br i1 %1504, label %if.end26.7.20, label %for.inc.7.20

if.end26.7.20:                                    ; preds = %for.body16.7.20
  %add29.7.20 = add nsw i32 %add17.7.20, %mul.7.20
  %idxprom.7.20 = sext i32 %add29.7.20 to i64
  %arrayidx.7.20 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.20
  %1505 = load float, float* %arrayidx.7.20, align 4
  %1506 = trunc i64 %indvars.iv.7.20 to i32
  %add31.7.20 = add i32 %1506, %mul30.7.20
  %idxprom32.7.20 = zext i32 %add31.7.20 to i64
  %arrayidx33.7.20 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.20
  %1507 = load float, float* %arrayidx33.7.20, align 4
  %mul34.7.20 = fmul float %1505, %1507
  %add35.7.20 = fadd float %partial_sum.12.7.20, %mul34.7.20
  br label %for.inc.7.20

for.inc.7.20:                                     ; preds = %if.end26.7.20, %for.body16.7.20
  %partial_sum.2.7.20 = phi float [ %add35.7.20, %if.end26.7.20 ], [ %partial_sum.12.7.20, %for.body16.7.20 ]
  %indvars.iv.next.7.20 = add nuw nsw i64 %indvars.iv.7.20, 1
  %lftr.wideiv.7.20 = trunc i64 %indvars.iv.next.7.20 to i32
  %exitcond.7.20 = icmp eq i32 %lftr.wideiv.7.20, %kern_width
  br i1 %exitcond.7.20, label %for.inc36.7.20.loopexit, label %for.body16.7.20, !llvm.loop !1

for.inc36.7.20.loopexit:                          ; preds = %for.inc.7.20
  %partial_sum.2.7.20.lcssa = phi float [ %partial_sum.2.7.20, %for.inc.7.20 ]
  br label %for.inc36.7.20

for.inc36.7.20:                                   ; preds = %for.inc36.7.20.loopexit, %for.body10.7.20
  %partial_sum.3.7.20 = phi float [ %partial_sum.05.7.20, %for.body10.7.20 ], [ %partial_sum.2.7.20.lcssa, %for.inc36.7.20.loopexit ]
  %inc37.7.20 = add nuw nsw i32 %ki.06.7.20, 1
  %exitcond19.7.20 = icmp eq i32 %inc37.7.20, %kern_height
  br i1 %exitcond19.7.20, label %for.end38.7.20.loopexit, label %for.body10.7.20, !llvm.loop !3

for.end38.7.20.loopexit:                          ; preds = %for.inc36.7.20
  %partial_sum.3.7.20.lcssa = phi float [ %partial_sum.3.7.20, %for.inc36.7.20 ]
  br label %for.end38.7.20

for.end38.7.20:                                   ; preds = %for.end38.7.20.loopexit, %for.inc53.6.20
  %partial_sum.0.lcssa.7.20 = phi float [ 0.000000e+00, %for.inc53.6.20 ], [ %partial_sum.3.7.20.lcssa, %for.end38.7.20.loopexit ]
  br i1 %tobool39, label %if.else.7.20, label %if.then40.7.20

if.then40.7.20:                                   ; preds = %for.end38.7.20
  %cmp41.7.20 = fcmp olt float %partial_sum.0.lcssa.7.20, 0.000000e+00
  %sub42.7.20 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.20
  %cond.7.20 = select i1 %cmp41.7.20, float %sub42.7.20, float %partial_sum.0.lcssa.7.20
  %conv.7.20 = fptoui float %cond.7.20 to i8
  %conv43.7.20 = uitofp i8 %conv.7.20 to float
  %1508 = add nsw i64 %indvars.iv.next21.6.20, %1446
  %arrayidx47.7.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1508
  store float %conv43.7.20, float* %arrayidx47.7.20, align 4
  br label %for.inc53.7.20

if.else.7.20:                                     ; preds = %for.end38.7.20
  %1509 = add nsw i64 %indvars.iv.next21.6.20, %1445
  %arrayidx51.7.20 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1509
  store float %partial_sum.0.lcssa.7.20, float* %arrayidx51.7.20, align 4
  br label %for.inc53.7.20

for.inc53.7.20:                                   ; preds = %if.else.7.20, %if.then40.7.20
  %inc54.7.20 = add nsw i32 %in_j.011.20, 8
  %indvars.iv.next21.7.20 = add nsw i64 %indvars.iv20.20, 8
  %lftr.wideiv24.7.20 = trunc i64 %indvars.iv.next21.7.20 to i32
  %exitcond25.7.20 = icmp eq i32 %lftr.wideiv24.7.20, %img_width
  br i1 %exitcond25.7.20, label %for.inc57.20.loopexit, label %for.cond8.preheader.20, !llvm.loop !5

for.inc57.20.loopexit:                            ; preds = %for.inc53.7.20
  br label %for.inc57.20

for.inc57.20:                                     ; preds = %for.inc57.20.loopexit, %for.cond8.preheader.lr.ph.split.20
  %inc58.20 = add nsw i32 %in_i.015, 21
  %indvars.iv.next27.20 = add nsw i64 %indvars.iv26, 21
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.21

for.cond8.preheader.lr.ph.21:                     ; preds = %for.inc57.20
  %1510 = trunc i64 %indvars.iv.next27.20 to i32
  %mul48.21 = shl i32 %1510, 7
  %1511 = trunc i64 %indvars.iv.next27.20 to i32
  %mul44.21 = shl i32 %1511, 7
  %1512 = sext i32 %mul48.21 to i64
  %1513 = sext i32 %mul44.21 to i64
  br i1 %lcmp.mod.21, label %for.cond8.preheader.lr.ph.split.21, label %for.cond8.preheader.prol.21.preheader

for.cond8.preheader.prol.21.preheader:            ; preds = %for.cond8.preheader.lr.ph.21
  br label %for.cond8.preheader.prol.21

for.cond8.preheader.prol.21:                      ; preds = %for.cond8.preheader.prol.21.preheader, %for.inc53.prol.21
  %indvars.iv20.prol.21 = phi i64 [ %indvars.iv.next21.prol.21, %for.inc53.prol.21 ], [ 0, %for.cond8.preheader.prol.21.preheader ]
  %in_j.011.prol.21 = phi i32 [ %inc54.prol.21, %for.inc53.prol.21 ], [ %sub4, %for.cond8.preheader.prol.21.preheader ]
  %prol.iter.21 = phi i32 [ %prol.iter.sub.21, %for.inc53.prol.21 ], [ %xtraiter.21, %for.cond8.preheader.prol.21.preheader ]
  br i1 %cmp94, label %for.end38.prol.21, label %for.body10.prol.21.preheader

for.body10.prol.21.preheader:                     ; preds = %for.cond8.preheader.prol.21
  br label %for.body10.prol.21

for.body10.prol.21:                               ; preds = %for.body10.prol.21.preheader, %for.inc36.prol.21
  %ki.06.prol.21 = phi i32 [ %inc37.prol.21, %for.inc36.prol.21 ], [ 0, %for.body10.prol.21.preheader ]
  %partial_sum.05.prol.21 = phi float [ %partial_sum.3.prol.21, %for.inc36.prol.21 ], [ 0.000000e+00, %for.body10.prol.21.preheader ]
  %add.prol.21 = add nsw i32 %ki.06.prol.21, %inc58.20
  %notlhs.prol.21 = icmp slt i32 %add.prol.21, 0
  %notrhs.prol.21 = icmp uge i32 %add.prol.21, %img_height
  %.not.prol.21 = or i1 %notrhs.prol.21, %notlhs.prol.21
  %brmerge.prol.21 = or i1 %.not.prol.21, %cmp151.not.prol.21
  br i1 %brmerge.prol.21, label %for.inc36.prol.21, label %for.body16.lr.ph.prol.21

for.body16.lr.ph.prol.21:                         ; preds = %for.body10.prol.21
  %mul.prol.21 = shl i32 %add.prol.21, 7
  %mul30.prol.21 = mul i32 %ki.06.prol.21, %kern_width
  br label %for.body16.prol.21

for.body16.prol.21:                               ; preds = %for.inc.prol.21, %for.body16.lr.ph.prol.21
  %indvars.iv.prol.21 = phi i64 [ 0, %for.body16.lr.ph.prol.21 ], [ %indvars.iv.next.prol.21, %for.inc.prol.21 ]
  %partial_sum.12.prol.21 = phi float [ %partial_sum.05.prol.21, %for.body16.lr.ph.prol.21 ], [ %partial_sum.2.prol.21, %for.inc.prol.21 ]
  %1514 = trunc i64 %indvars.iv.prol.21 to i32
  %add17.prol.21 = add nsw i32 %1514, %in_j.011.prol.21
  %cmp18.prol.21 = icmp sgt i32 %add17.prol.21, -1
  %cmp21.prol.21 = icmp ult i32 %add17.prol.21, %img_width
  %1515 = and i1 %cmp18.prol.21, %cmp21.prol.21
  br i1 %1515, label %if.end26.prol.21, label %for.inc.prol.21

if.end26.prol.21:                                 ; preds = %for.body16.prol.21
  %add29.prol.21 = add nsw i32 %add17.prol.21, %mul.prol.21
  %idxprom.prol.21 = sext i32 %add29.prol.21 to i64
  %arrayidx.prol.21 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.21
  %1516 = load float, float* %arrayidx.prol.21, align 4
  %1517 = trunc i64 %indvars.iv.prol.21 to i32
  %add31.prol.21 = add i32 %1517, %mul30.prol.21
  %idxprom32.prol.21 = zext i32 %add31.prol.21 to i64
  %arrayidx33.prol.21 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.21
  %1518 = load float, float* %arrayidx33.prol.21, align 4
  %mul34.prol.21 = fmul float %1516, %1518
  %add35.prol.21 = fadd float %partial_sum.12.prol.21, %mul34.prol.21
  br label %for.inc.prol.21

for.inc.prol.21:                                  ; preds = %if.end26.prol.21, %for.body16.prol.21
  %partial_sum.2.prol.21 = phi float [ %add35.prol.21, %if.end26.prol.21 ], [ %partial_sum.12.prol.21, %for.body16.prol.21 ]
  %indvars.iv.next.prol.21 = add nuw nsw i64 %indvars.iv.prol.21, 1
  %lftr.wideiv.prol.21 = trunc i64 %indvars.iv.next.prol.21 to i32
  %exitcond.prol.21 = icmp eq i32 %lftr.wideiv.prol.21, %kern_width
  br i1 %exitcond.prol.21, label %for.inc36.prol.21.loopexit, label %for.body16.prol.21, !llvm.loop !1

for.inc36.prol.21.loopexit:                       ; preds = %for.inc.prol.21
  %partial_sum.2.prol.21.lcssa = phi float [ %partial_sum.2.prol.21, %for.inc.prol.21 ]
  br label %for.inc36.prol.21

for.inc36.prol.21:                                ; preds = %for.inc36.prol.21.loopexit, %for.body10.prol.21
  %partial_sum.3.prol.21 = phi float [ %partial_sum.05.prol.21, %for.body10.prol.21 ], [ %partial_sum.2.prol.21.lcssa, %for.inc36.prol.21.loopexit ]
  %inc37.prol.21 = add nuw nsw i32 %ki.06.prol.21, 1
  %exitcond19.prol.21 = icmp eq i32 %inc37.prol.21, %kern_height
  br i1 %exitcond19.prol.21, label %for.end38.prol.21.loopexit, label %for.body10.prol.21, !llvm.loop !3

for.end38.prol.21.loopexit:                       ; preds = %for.inc36.prol.21
  %partial_sum.3.prol.21.lcssa = phi float [ %partial_sum.3.prol.21, %for.inc36.prol.21 ]
  br label %for.end38.prol.21

for.end38.prol.21:                                ; preds = %for.end38.prol.21.loopexit, %for.cond8.preheader.prol.21
  %partial_sum.0.lcssa.prol.21 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.21 ], [ %partial_sum.3.prol.21.lcssa, %for.end38.prol.21.loopexit ]
  br i1 %tobool39, label %if.else.prol.21, label %if.then40.prol.21

if.then40.prol.21:                                ; preds = %for.end38.prol.21
  %cmp41.prol.21 = fcmp olt float %partial_sum.0.lcssa.prol.21, 0.000000e+00
  %sub42.prol.21 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.21
  %cond.prol.21 = select i1 %cmp41.prol.21, float %sub42.prol.21, float %partial_sum.0.lcssa.prol.21
  %conv.prol.21 = fptoui float %cond.prol.21 to i8
  %conv43.prol.21 = uitofp i8 %conv.prol.21 to float
  %1519 = add nsw i64 %indvars.iv20.prol.21, %1513
  %arrayidx47.prol.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1519
  store float %conv43.prol.21, float* %arrayidx47.prol.21, align 4
  br label %for.inc53.prol.21

if.else.prol.21:                                  ; preds = %for.end38.prol.21
  %1520 = add nsw i64 %indvars.iv20.prol.21, %1512
  %arrayidx51.prol.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1520
  store float %partial_sum.0.lcssa.prol.21, float* %arrayidx51.prol.21, align 4
  br label %for.inc53.prol.21

for.inc53.prol.21:                                ; preds = %if.else.prol.21, %if.then40.prol.21
  %inc54.prol.21 = add nsw i32 %in_j.011.prol.21, 1
  %indvars.iv.next21.prol.21 = add nuw nsw i64 %indvars.iv20.prol.21, 1
  %prol.iter.sub.21 = add i32 %prol.iter.21, -1
  %prol.iter.cmp.21 = icmp eq i32 %prol.iter.sub.21, 0
  br i1 %prol.iter.cmp.21, label %for.cond8.preheader.lr.ph.split.21.loopexit, label %for.cond8.preheader.prol.21, !llvm.loop !4

for.cond8.preheader.lr.ph.split.21.loopexit:      ; preds = %for.inc53.prol.21
  %indvars.iv.next21.prol.21.lcssa = phi i64 [ %indvars.iv.next21.prol.21, %for.inc53.prol.21 ]
  %inc54.prol.21.lcssa = phi i32 [ %inc54.prol.21, %for.inc53.prol.21 ]
  br label %for.cond8.preheader.lr.ph.split.21

for.cond8.preheader.lr.ph.split.21:               ; preds = %for.cond8.preheader.lr.ph.split.21.loopexit, %for.cond8.preheader.lr.ph.21
  %indvars.iv20.unr.21 = phi i64 [ 0, %for.cond8.preheader.lr.ph.21 ], [ %indvars.iv.next21.prol.21.lcssa, %for.cond8.preheader.lr.ph.split.21.loopexit ]
  %in_j.011.unr.21 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.21 ], [ %inc54.prol.21.lcssa, %for.cond8.preheader.lr.ph.split.21.loopexit ]
  br i1 %92, label %for.inc57.21, label %for.cond8.preheader.21.preheader

for.cond8.preheader.21.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.21
  br label %for.cond8.preheader.21

for.cond8.preheader.21:                           ; preds = %for.cond8.preheader.21.preheader, %for.inc53.7.21
  %indvars.iv20.21 = phi i64 [ %indvars.iv.next21.7.21, %for.inc53.7.21 ], [ %indvars.iv20.unr.21, %for.cond8.preheader.21.preheader ]
  %in_j.011.21 = phi i32 [ %inc54.7.21, %for.inc53.7.21 ], [ %in_j.011.unr.21, %for.cond8.preheader.21.preheader ]
  br i1 %cmp94, label %for.end38.21, label %for.body10.21.preheader

for.body10.21.preheader:                          ; preds = %for.cond8.preheader.21
  br label %for.body10.21

for.body10.21:                                    ; preds = %for.body10.21.preheader, %for.inc36.21
  %ki.06.21 = phi i32 [ %inc37.21, %for.inc36.21 ], [ 0, %for.body10.21.preheader ]
  %partial_sum.05.21 = phi float [ %partial_sum.3.21, %for.inc36.21 ], [ 0.000000e+00, %for.body10.21.preheader ]
  %add.21 = add nsw i32 %ki.06.21, %inc58.20
  %notlhs.21 = icmp slt i32 %add.21, 0
  %notrhs.21 = icmp uge i32 %add.21, %img_height
  %.not.21 = or i1 %notrhs.21, %notlhs.21
  %brmerge.21 = or i1 %.not.21, %cmp151.not.21
  br i1 %brmerge.21, label %for.inc36.21, label %for.body16.lr.ph.21

for.body16.lr.ph.21:                              ; preds = %for.body10.21
  %mul.21 = shl i32 %add.21, 7
  %mul30.21 = mul i32 %ki.06.21, %kern_width
  br label %for.body16.21

for.body16.21:                                    ; preds = %for.inc.21, %for.body16.lr.ph.21
  %indvars.iv.21 = phi i64 [ 0, %for.body16.lr.ph.21 ], [ %indvars.iv.next.21, %for.inc.21 ]
  %partial_sum.12.21 = phi float [ %partial_sum.05.21, %for.body16.lr.ph.21 ], [ %partial_sum.2.21, %for.inc.21 ]
  %1521 = trunc i64 %indvars.iv.21 to i32
  %add17.21 = add nsw i32 %1521, %in_j.011.21
  %cmp18.21 = icmp sgt i32 %add17.21, -1
  %cmp21.21 = icmp ult i32 %add17.21, %img_width
  %1522 = and i1 %cmp18.21, %cmp21.21
  br i1 %1522, label %if.end26.21, label %for.inc.21

if.end26.21:                                      ; preds = %for.body16.21
  %add29.21 = add nsw i32 %add17.21, %mul.21
  %idxprom.21 = sext i32 %add29.21 to i64
  %arrayidx.21 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.21
  %1523 = load float, float* %arrayidx.21, align 4
  %1524 = trunc i64 %indvars.iv.21 to i32
  %add31.21 = add i32 %1524, %mul30.21
  %idxprom32.21 = zext i32 %add31.21 to i64
  %arrayidx33.21 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.21
  %1525 = load float, float* %arrayidx33.21, align 4
  %mul34.21 = fmul float %1523, %1525
  %add35.21 = fadd float %partial_sum.12.21, %mul34.21
  br label %for.inc.21

for.inc.21:                                       ; preds = %if.end26.21, %for.body16.21
  %partial_sum.2.21 = phi float [ %add35.21, %if.end26.21 ], [ %partial_sum.12.21, %for.body16.21 ]
  %indvars.iv.next.21 = add nuw nsw i64 %indvars.iv.21, 1
  %lftr.wideiv.21 = trunc i64 %indvars.iv.next.21 to i32
  %exitcond.21 = icmp eq i32 %lftr.wideiv.21, %kern_width
  br i1 %exitcond.21, label %for.inc36.21.loopexit, label %for.body16.21, !llvm.loop !1

for.inc36.21.loopexit:                            ; preds = %for.inc.21
  %partial_sum.2.21.lcssa = phi float [ %partial_sum.2.21, %for.inc.21 ]
  br label %for.inc36.21

for.inc36.21:                                     ; preds = %for.inc36.21.loopexit, %for.body10.21
  %partial_sum.3.21 = phi float [ %partial_sum.05.21, %for.body10.21 ], [ %partial_sum.2.21.lcssa, %for.inc36.21.loopexit ]
  %inc37.21 = add nuw nsw i32 %ki.06.21, 1
  %exitcond19.21 = icmp eq i32 %inc37.21, %kern_height
  br i1 %exitcond19.21, label %for.end38.21.loopexit, label %for.body10.21, !llvm.loop !3

for.end38.21.loopexit:                            ; preds = %for.inc36.21
  %partial_sum.3.21.lcssa = phi float [ %partial_sum.3.21, %for.inc36.21 ]
  br label %for.end38.21

for.end38.21:                                     ; preds = %for.end38.21.loopexit, %for.cond8.preheader.21
  %partial_sum.0.lcssa.21 = phi float [ 0.000000e+00, %for.cond8.preheader.21 ], [ %partial_sum.3.21.lcssa, %for.end38.21.loopexit ]
  br i1 %tobool39, label %if.else.21, label %if.then40.21

if.then40.21:                                     ; preds = %for.end38.21
  %cmp41.21 = fcmp olt float %partial_sum.0.lcssa.21, 0.000000e+00
  %sub42.21 = fsub float -0.000000e+00, %partial_sum.0.lcssa.21
  %cond.21 = select i1 %cmp41.21, float %sub42.21, float %partial_sum.0.lcssa.21
  %conv.21 = fptoui float %cond.21 to i8
  %conv43.21 = uitofp i8 %conv.21 to float
  %1526 = add nsw i64 %indvars.iv20.21, %1513
  %arrayidx47.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1526
  store float %conv43.21, float* %arrayidx47.21, align 4
  br label %for.inc53.21

if.else.21:                                       ; preds = %for.end38.21
  %1527 = add nsw i64 %indvars.iv20.21, %1512
  %arrayidx51.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1527
  store float %partial_sum.0.lcssa.21, float* %arrayidx51.21, align 4
  br label %for.inc53.21

for.inc53.21:                                     ; preds = %if.else.21, %if.then40.21
  %inc54.21 = add nsw i32 %in_j.011.21, 1
  %indvars.iv.next21.21 = add nuw nsw i64 %indvars.iv20.21, 1
  br i1 %cmp94, label %for.end38.1.21, label %for.body10.1.21.preheader

for.body10.1.21.preheader:                        ; preds = %for.inc53.21
  br label %for.body10.1.21

for.body10.1.21:                                  ; preds = %for.body10.1.21.preheader, %for.inc36.1.21
  %ki.06.1.21 = phi i32 [ %inc37.1.21, %for.inc36.1.21 ], [ 0, %for.body10.1.21.preheader ]
  %partial_sum.05.1.21 = phi float [ %partial_sum.3.1.21, %for.inc36.1.21 ], [ 0.000000e+00, %for.body10.1.21.preheader ]
  %add.1.21 = add nsw i32 %ki.06.1.21, %inc58.20
  %notlhs.1.21 = icmp slt i32 %add.1.21, 0
  %notrhs.1.21 = icmp uge i32 %add.1.21, %img_height
  %.not.1.21 = or i1 %notrhs.1.21, %notlhs.1.21
  %brmerge.1.21 = or i1 %.not.1.21, %cmp151.not.1.21
  br i1 %brmerge.1.21, label %for.inc36.1.21, label %for.body16.lr.ph.1.21

for.body16.lr.ph.1.21:                            ; preds = %for.body10.1.21
  %mul.1.21 = shl i32 %add.1.21, 7
  %mul30.1.21 = mul i32 %ki.06.1.21, %kern_width
  br label %for.body16.1.21

for.body16.1.21:                                  ; preds = %for.inc.1.21, %for.body16.lr.ph.1.21
  %indvars.iv.1.21 = phi i64 [ 0, %for.body16.lr.ph.1.21 ], [ %indvars.iv.next.1.21, %for.inc.1.21 ]
  %partial_sum.12.1.21 = phi float [ %partial_sum.05.1.21, %for.body16.lr.ph.1.21 ], [ %partial_sum.2.1.21, %for.inc.1.21 ]
  %1528 = trunc i64 %indvars.iv.1.21 to i32
  %add17.1.21 = add nsw i32 %1528, %inc54.21
  %cmp18.1.21 = icmp sgt i32 %add17.1.21, -1
  %cmp21.1.21 = icmp ult i32 %add17.1.21, %img_width
  %1529 = and i1 %cmp18.1.21, %cmp21.1.21
  br i1 %1529, label %if.end26.1.21, label %for.inc.1.21

if.end26.1.21:                                    ; preds = %for.body16.1.21
  %add29.1.21 = add nsw i32 %add17.1.21, %mul.1.21
  %idxprom.1.21 = sext i32 %add29.1.21 to i64
  %arrayidx.1.21 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.21
  %1530 = load float, float* %arrayidx.1.21, align 4
  %1531 = trunc i64 %indvars.iv.1.21 to i32
  %add31.1.21 = add i32 %1531, %mul30.1.21
  %idxprom32.1.21 = zext i32 %add31.1.21 to i64
  %arrayidx33.1.21 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.21
  %1532 = load float, float* %arrayidx33.1.21, align 4
  %mul34.1.21 = fmul float %1530, %1532
  %add35.1.21 = fadd float %partial_sum.12.1.21, %mul34.1.21
  br label %for.inc.1.21

for.inc.1.21:                                     ; preds = %if.end26.1.21, %for.body16.1.21
  %partial_sum.2.1.21 = phi float [ %add35.1.21, %if.end26.1.21 ], [ %partial_sum.12.1.21, %for.body16.1.21 ]
  %indvars.iv.next.1.21 = add nuw nsw i64 %indvars.iv.1.21, 1
  %lftr.wideiv.1.21 = trunc i64 %indvars.iv.next.1.21 to i32
  %exitcond.1.21 = icmp eq i32 %lftr.wideiv.1.21, %kern_width
  br i1 %exitcond.1.21, label %for.inc36.1.21.loopexit, label %for.body16.1.21, !llvm.loop !1

for.inc36.1.21.loopexit:                          ; preds = %for.inc.1.21
  %partial_sum.2.1.21.lcssa = phi float [ %partial_sum.2.1.21, %for.inc.1.21 ]
  br label %for.inc36.1.21

for.inc36.1.21:                                   ; preds = %for.inc36.1.21.loopexit, %for.body10.1.21
  %partial_sum.3.1.21 = phi float [ %partial_sum.05.1.21, %for.body10.1.21 ], [ %partial_sum.2.1.21.lcssa, %for.inc36.1.21.loopexit ]
  %inc37.1.21 = add nuw nsw i32 %ki.06.1.21, 1
  %exitcond19.1.21 = icmp eq i32 %inc37.1.21, %kern_height
  br i1 %exitcond19.1.21, label %for.end38.1.21.loopexit, label %for.body10.1.21, !llvm.loop !3

for.end38.1.21.loopexit:                          ; preds = %for.inc36.1.21
  %partial_sum.3.1.21.lcssa = phi float [ %partial_sum.3.1.21, %for.inc36.1.21 ]
  br label %for.end38.1.21

for.end38.1.21:                                   ; preds = %for.end38.1.21.loopexit, %for.inc53.21
  %partial_sum.0.lcssa.1.21 = phi float [ 0.000000e+00, %for.inc53.21 ], [ %partial_sum.3.1.21.lcssa, %for.end38.1.21.loopexit ]
  br i1 %tobool39, label %if.else.1.21, label %if.then40.1.21

if.then40.1.21:                                   ; preds = %for.end38.1.21
  %cmp41.1.21 = fcmp olt float %partial_sum.0.lcssa.1.21, 0.000000e+00
  %sub42.1.21 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.21
  %cond.1.21 = select i1 %cmp41.1.21, float %sub42.1.21, float %partial_sum.0.lcssa.1.21
  %conv.1.21 = fptoui float %cond.1.21 to i8
  %conv43.1.21 = uitofp i8 %conv.1.21 to float
  %1533 = add nsw i64 %indvars.iv.next21.21, %1513
  %arrayidx47.1.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1533
  store float %conv43.1.21, float* %arrayidx47.1.21, align 4
  br label %for.inc53.1.21

if.else.1.21:                                     ; preds = %for.end38.1.21
  %1534 = add nsw i64 %indvars.iv.next21.21, %1512
  %arrayidx51.1.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1534
  store float %partial_sum.0.lcssa.1.21, float* %arrayidx51.1.21, align 4
  br label %for.inc53.1.21

for.inc53.1.21:                                   ; preds = %if.else.1.21, %if.then40.1.21
  %inc54.1.21 = add nsw i32 %in_j.011.21, 2
  %indvars.iv.next21.1.21 = add nsw i64 %indvars.iv20.21, 2
  br i1 %cmp94, label %for.end38.2.21, label %for.body10.2.21.preheader

for.body10.2.21.preheader:                        ; preds = %for.inc53.1.21
  br label %for.body10.2.21

for.body10.2.21:                                  ; preds = %for.body10.2.21.preheader, %for.inc36.2.21
  %ki.06.2.21 = phi i32 [ %inc37.2.21, %for.inc36.2.21 ], [ 0, %for.body10.2.21.preheader ]
  %partial_sum.05.2.21 = phi float [ %partial_sum.3.2.21, %for.inc36.2.21 ], [ 0.000000e+00, %for.body10.2.21.preheader ]
  %add.2.21 = add nsw i32 %ki.06.2.21, %inc58.20
  %notlhs.2.21 = icmp slt i32 %add.2.21, 0
  %notrhs.2.21 = icmp uge i32 %add.2.21, %img_height
  %.not.2.21 = or i1 %notrhs.2.21, %notlhs.2.21
  %brmerge.2.21 = or i1 %.not.2.21, %cmp151.not.2.21
  br i1 %brmerge.2.21, label %for.inc36.2.21, label %for.body16.lr.ph.2.21

for.body16.lr.ph.2.21:                            ; preds = %for.body10.2.21
  %mul.2.21 = shl i32 %add.2.21, 7
  %mul30.2.21 = mul i32 %ki.06.2.21, %kern_width
  br label %for.body16.2.21

for.body16.2.21:                                  ; preds = %for.inc.2.21, %for.body16.lr.ph.2.21
  %indvars.iv.2.21 = phi i64 [ 0, %for.body16.lr.ph.2.21 ], [ %indvars.iv.next.2.21, %for.inc.2.21 ]
  %partial_sum.12.2.21 = phi float [ %partial_sum.05.2.21, %for.body16.lr.ph.2.21 ], [ %partial_sum.2.2.21, %for.inc.2.21 ]
  %1535 = trunc i64 %indvars.iv.2.21 to i32
  %add17.2.21 = add nsw i32 %1535, %inc54.1.21
  %cmp18.2.21 = icmp sgt i32 %add17.2.21, -1
  %cmp21.2.21 = icmp ult i32 %add17.2.21, %img_width
  %1536 = and i1 %cmp18.2.21, %cmp21.2.21
  br i1 %1536, label %if.end26.2.21, label %for.inc.2.21

if.end26.2.21:                                    ; preds = %for.body16.2.21
  %add29.2.21 = add nsw i32 %add17.2.21, %mul.2.21
  %idxprom.2.21 = sext i32 %add29.2.21 to i64
  %arrayidx.2.21 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.21
  %1537 = load float, float* %arrayidx.2.21, align 4
  %1538 = trunc i64 %indvars.iv.2.21 to i32
  %add31.2.21 = add i32 %1538, %mul30.2.21
  %idxprom32.2.21 = zext i32 %add31.2.21 to i64
  %arrayidx33.2.21 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.21
  %1539 = load float, float* %arrayidx33.2.21, align 4
  %mul34.2.21 = fmul float %1537, %1539
  %add35.2.21 = fadd float %partial_sum.12.2.21, %mul34.2.21
  br label %for.inc.2.21

for.inc.2.21:                                     ; preds = %if.end26.2.21, %for.body16.2.21
  %partial_sum.2.2.21 = phi float [ %add35.2.21, %if.end26.2.21 ], [ %partial_sum.12.2.21, %for.body16.2.21 ]
  %indvars.iv.next.2.21 = add nuw nsw i64 %indvars.iv.2.21, 1
  %lftr.wideiv.2.21 = trunc i64 %indvars.iv.next.2.21 to i32
  %exitcond.2.21 = icmp eq i32 %lftr.wideiv.2.21, %kern_width
  br i1 %exitcond.2.21, label %for.inc36.2.21.loopexit, label %for.body16.2.21, !llvm.loop !1

for.inc36.2.21.loopexit:                          ; preds = %for.inc.2.21
  %partial_sum.2.2.21.lcssa = phi float [ %partial_sum.2.2.21, %for.inc.2.21 ]
  br label %for.inc36.2.21

for.inc36.2.21:                                   ; preds = %for.inc36.2.21.loopexit, %for.body10.2.21
  %partial_sum.3.2.21 = phi float [ %partial_sum.05.2.21, %for.body10.2.21 ], [ %partial_sum.2.2.21.lcssa, %for.inc36.2.21.loopexit ]
  %inc37.2.21 = add nuw nsw i32 %ki.06.2.21, 1
  %exitcond19.2.21 = icmp eq i32 %inc37.2.21, %kern_height
  br i1 %exitcond19.2.21, label %for.end38.2.21.loopexit, label %for.body10.2.21, !llvm.loop !3

for.end38.2.21.loopexit:                          ; preds = %for.inc36.2.21
  %partial_sum.3.2.21.lcssa = phi float [ %partial_sum.3.2.21, %for.inc36.2.21 ]
  br label %for.end38.2.21

for.end38.2.21:                                   ; preds = %for.end38.2.21.loopexit, %for.inc53.1.21
  %partial_sum.0.lcssa.2.21 = phi float [ 0.000000e+00, %for.inc53.1.21 ], [ %partial_sum.3.2.21.lcssa, %for.end38.2.21.loopexit ]
  br i1 %tobool39, label %if.else.2.21, label %if.then40.2.21

if.then40.2.21:                                   ; preds = %for.end38.2.21
  %cmp41.2.21 = fcmp olt float %partial_sum.0.lcssa.2.21, 0.000000e+00
  %sub42.2.21 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.21
  %cond.2.21 = select i1 %cmp41.2.21, float %sub42.2.21, float %partial_sum.0.lcssa.2.21
  %conv.2.21 = fptoui float %cond.2.21 to i8
  %conv43.2.21 = uitofp i8 %conv.2.21 to float
  %1540 = add nsw i64 %indvars.iv.next21.1.21, %1513
  %arrayidx47.2.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1540
  store float %conv43.2.21, float* %arrayidx47.2.21, align 4
  br label %for.inc53.2.21

if.else.2.21:                                     ; preds = %for.end38.2.21
  %1541 = add nsw i64 %indvars.iv.next21.1.21, %1512
  %arrayidx51.2.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1541
  store float %partial_sum.0.lcssa.2.21, float* %arrayidx51.2.21, align 4
  br label %for.inc53.2.21

for.inc53.2.21:                                   ; preds = %if.else.2.21, %if.then40.2.21
  %inc54.2.21 = add nsw i32 %in_j.011.21, 3
  %indvars.iv.next21.2.21 = add nsw i64 %indvars.iv20.21, 3
  br i1 %cmp94, label %for.end38.3.21, label %for.body10.3.21.preheader

for.body10.3.21.preheader:                        ; preds = %for.inc53.2.21
  br label %for.body10.3.21

for.body10.3.21:                                  ; preds = %for.body10.3.21.preheader, %for.inc36.3.21
  %ki.06.3.21 = phi i32 [ %inc37.3.21, %for.inc36.3.21 ], [ 0, %for.body10.3.21.preheader ]
  %partial_sum.05.3.21 = phi float [ %partial_sum.3.3.21, %for.inc36.3.21 ], [ 0.000000e+00, %for.body10.3.21.preheader ]
  %add.3.21 = add nsw i32 %ki.06.3.21, %inc58.20
  %notlhs.3.21 = icmp slt i32 %add.3.21, 0
  %notrhs.3.21 = icmp uge i32 %add.3.21, %img_height
  %.not.3.21 = or i1 %notrhs.3.21, %notlhs.3.21
  %brmerge.3.21 = or i1 %.not.3.21, %cmp151.not.3.21
  br i1 %brmerge.3.21, label %for.inc36.3.21, label %for.body16.lr.ph.3.21

for.body16.lr.ph.3.21:                            ; preds = %for.body10.3.21
  %mul.3.21 = shl i32 %add.3.21, 7
  %mul30.3.21 = mul i32 %ki.06.3.21, %kern_width
  br label %for.body16.3.21

for.body16.3.21:                                  ; preds = %for.inc.3.21, %for.body16.lr.ph.3.21
  %indvars.iv.3.21 = phi i64 [ 0, %for.body16.lr.ph.3.21 ], [ %indvars.iv.next.3.21, %for.inc.3.21 ]
  %partial_sum.12.3.21 = phi float [ %partial_sum.05.3.21, %for.body16.lr.ph.3.21 ], [ %partial_sum.2.3.21, %for.inc.3.21 ]
  %1542 = trunc i64 %indvars.iv.3.21 to i32
  %add17.3.21 = add nsw i32 %1542, %inc54.2.21
  %cmp18.3.21 = icmp sgt i32 %add17.3.21, -1
  %cmp21.3.21 = icmp ult i32 %add17.3.21, %img_width
  %1543 = and i1 %cmp18.3.21, %cmp21.3.21
  br i1 %1543, label %if.end26.3.21, label %for.inc.3.21

if.end26.3.21:                                    ; preds = %for.body16.3.21
  %add29.3.21 = add nsw i32 %add17.3.21, %mul.3.21
  %idxprom.3.21 = sext i32 %add29.3.21 to i64
  %arrayidx.3.21 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.21
  %1544 = load float, float* %arrayidx.3.21, align 4
  %1545 = trunc i64 %indvars.iv.3.21 to i32
  %add31.3.21 = add i32 %1545, %mul30.3.21
  %idxprom32.3.21 = zext i32 %add31.3.21 to i64
  %arrayidx33.3.21 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.21
  %1546 = load float, float* %arrayidx33.3.21, align 4
  %mul34.3.21 = fmul float %1544, %1546
  %add35.3.21 = fadd float %partial_sum.12.3.21, %mul34.3.21
  br label %for.inc.3.21

for.inc.3.21:                                     ; preds = %if.end26.3.21, %for.body16.3.21
  %partial_sum.2.3.21 = phi float [ %add35.3.21, %if.end26.3.21 ], [ %partial_sum.12.3.21, %for.body16.3.21 ]
  %indvars.iv.next.3.21 = add nuw nsw i64 %indvars.iv.3.21, 1
  %lftr.wideiv.3.21 = trunc i64 %indvars.iv.next.3.21 to i32
  %exitcond.3.21 = icmp eq i32 %lftr.wideiv.3.21, %kern_width
  br i1 %exitcond.3.21, label %for.inc36.3.21.loopexit, label %for.body16.3.21, !llvm.loop !1

for.inc36.3.21.loopexit:                          ; preds = %for.inc.3.21
  %partial_sum.2.3.21.lcssa = phi float [ %partial_sum.2.3.21, %for.inc.3.21 ]
  br label %for.inc36.3.21

for.inc36.3.21:                                   ; preds = %for.inc36.3.21.loopexit, %for.body10.3.21
  %partial_sum.3.3.21 = phi float [ %partial_sum.05.3.21, %for.body10.3.21 ], [ %partial_sum.2.3.21.lcssa, %for.inc36.3.21.loopexit ]
  %inc37.3.21 = add nuw nsw i32 %ki.06.3.21, 1
  %exitcond19.3.21 = icmp eq i32 %inc37.3.21, %kern_height
  br i1 %exitcond19.3.21, label %for.end38.3.21.loopexit, label %for.body10.3.21, !llvm.loop !3

for.end38.3.21.loopexit:                          ; preds = %for.inc36.3.21
  %partial_sum.3.3.21.lcssa = phi float [ %partial_sum.3.3.21, %for.inc36.3.21 ]
  br label %for.end38.3.21

for.end38.3.21:                                   ; preds = %for.end38.3.21.loopexit, %for.inc53.2.21
  %partial_sum.0.lcssa.3.21 = phi float [ 0.000000e+00, %for.inc53.2.21 ], [ %partial_sum.3.3.21.lcssa, %for.end38.3.21.loopexit ]
  br i1 %tobool39, label %if.else.3.21, label %if.then40.3.21

if.then40.3.21:                                   ; preds = %for.end38.3.21
  %cmp41.3.21 = fcmp olt float %partial_sum.0.lcssa.3.21, 0.000000e+00
  %sub42.3.21 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.21
  %cond.3.21 = select i1 %cmp41.3.21, float %sub42.3.21, float %partial_sum.0.lcssa.3.21
  %conv.3.21 = fptoui float %cond.3.21 to i8
  %conv43.3.21 = uitofp i8 %conv.3.21 to float
  %1547 = add nsw i64 %indvars.iv.next21.2.21, %1513
  %arrayidx47.3.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1547
  store float %conv43.3.21, float* %arrayidx47.3.21, align 4
  br label %for.inc53.3.21

if.else.3.21:                                     ; preds = %for.end38.3.21
  %1548 = add nsw i64 %indvars.iv.next21.2.21, %1512
  %arrayidx51.3.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1548
  store float %partial_sum.0.lcssa.3.21, float* %arrayidx51.3.21, align 4
  br label %for.inc53.3.21

for.inc53.3.21:                                   ; preds = %if.else.3.21, %if.then40.3.21
  %inc54.3.21 = add nsw i32 %in_j.011.21, 4
  %indvars.iv.next21.3.21 = add nsw i64 %indvars.iv20.21, 4
  br i1 %cmp94, label %for.end38.4.21, label %for.body10.4.21.preheader

for.body10.4.21.preheader:                        ; preds = %for.inc53.3.21
  br label %for.body10.4.21

for.body10.4.21:                                  ; preds = %for.body10.4.21.preheader, %for.inc36.4.21
  %ki.06.4.21 = phi i32 [ %inc37.4.21, %for.inc36.4.21 ], [ 0, %for.body10.4.21.preheader ]
  %partial_sum.05.4.21 = phi float [ %partial_sum.3.4.21, %for.inc36.4.21 ], [ 0.000000e+00, %for.body10.4.21.preheader ]
  %add.4.21 = add nsw i32 %ki.06.4.21, %inc58.20
  %notlhs.4.21 = icmp slt i32 %add.4.21, 0
  %notrhs.4.21 = icmp uge i32 %add.4.21, %img_height
  %.not.4.21 = or i1 %notrhs.4.21, %notlhs.4.21
  %brmerge.4.21 = or i1 %.not.4.21, %cmp151.not.4.21
  br i1 %brmerge.4.21, label %for.inc36.4.21, label %for.body16.lr.ph.4.21

for.body16.lr.ph.4.21:                            ; preds = %for.body10.4.21
  %mul.4.21 = shl i32 %add.4.21, 7
  %mul30.4.21 = mul i32 %ki.06.4.21, %kern_width
  br label %for.body16.4.21

for.body16.4.21:                                  ; preds = %for.inc.4.21, %for.body16.lr.ph.4.21
  %indvars.iv.4.21 = phi i64 [ 0, %for.body16.lr.ph.4.21 ], [ %indvars.iv.next.4.21, %for.inc.4.21 ]
  %partial_sum.12.4.21 = phi float [ %partial_sum.05.4.21, %for.body16.lr.ph.4.21 ], [ %partial_sum.2.4.21, %for.inc.4.21 ]
  %1549 = trunc i64 %indvars.iv.4.21 to i32
  %add17.4.21 = add nsw i32 %1549, %inc54.3.21
  %cmp18.4.21 = icmp sgt i32 %add17.4.21, -1
  %cmp21.4.21 = icmp ult i32 %add17.4.21, %img_width
  %1550 = and i1 %cmp18.4.21, %cmp21.4.21
  br i1 %1550, label %if.end26.4.21, label %for.inc.4.21

if.end26.4.21:                                    ; preds = %for.body16.4.21
  %add29.4.21 = add nsw i32 %add17.4.21, %mul.4.21
  %idxprom.4.21 = sext i32 %add29.4.21 to i64
  %arrayidx.4.21 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.21
  %1551 = load float, float* %arrayidx.4.21, align 4
  %1552 = trunc i64 %indvars.iv.4.21 to i32
  %add31.4.21 = add i32 %1552, %mul30.4.21
  %idxprom32.4.21 = zext i32 %add31.4.21 to i64
  %arrayidx33.4.21 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.21
  %1553 = load float, float* %arrayidx33.4.21, align 4
  %mul34.4.21 = fmul float %1551, %1553
  %add35.4.21 = fadd float %partial_sum.12.4.21, %mul34.4.21
  br label %for.inc.4.21

for.inc.4.21:                                     ; preds = %if.end26.4.21, %for.body16.4.21
  %partial_sum.2.4.21 = phi float [ %add35.4.21, %if.end26.4.21 ], [ %partial_sum.12.4.21, %for.body16.4.21 ]
  %indvars.iv.next.4.21 = add nuw nsw i64 %indvars.iv.4.21, 1
  %lftr.wideiv.4.21 = trunc i64 %indvars.iv.next.4.21 to i32
  %exitcond.4.21 = icmp eq i32 %lftr.wideiv.4.21, %kern_width
  br i1 %exitcond.4.21, label %for.inc36.4.21.loopexit, label %for.body16.4.21, !llvm.loop !1

for.inc36.4.21.loopexit:                          ; preds = %for.inc.4.21
  %partial_sum.2.4.21.lcssa = phi float [ %partial_sum.2.4.21, %for.inc.4.21 ]
  br label %for.inc36.4.21

for.inc36.4.21:                                   ; preds = %for.inc36.4.21.loopexit, %for.body10.4.21
  %partial_sum.3.4.21 = phi float [ %partial_sum.05.4.21, %for.body10.4.21 ], [ %partial_sum.2.4.21.lcssa, %for.inc36.4.21.loopexit ]
  %inc37.4.21 = add nuw nsw i32 %ki.06.4.21, 1
  %exitcond19.4.21 = icmp eq i32 %inc37.4.21, %kern_height
  br i1 %exitcond19.4.21, label %for.end38.4.21.loopexit, label %for.body10.4.21, !llvm.loop !3

for.end38.4.21.loopexit:                          ; preds = %for.inc36.4.21
  %partial_sum.3.4.21.lcssa = phi float [ %partial_sum.3.4.21, %for.inc36.4.21 ]
  br label %for.end38.4.21

for.end38.4.21:                                   ; preds = %for.end38.4.21.loopexit, %for.inc53.3.21
  %partial_sum.0.lcssa.4.21 = phi float [ 0.000000e+00, %for.inc53.3.21 ], [ %partial_sum.3.4.21.lcssa, %for.end38.4.21.loopexit ]
  br i1 %tobool39, label %if.else.4.21, label %if.then40.4.21

if.then40.4.21:                                   ; preds = %for.end38.4.21
  %cmp41.4.21 = fcmp olt float %partial_sum.0.lcssa.4.21, 0.000000e+00
  %sub42.4.21 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.21
  %cond.4.21 = select i1 %cmp41.4.21, float %sub42.4.21, float %partial_sum.0.lcssa.4.21
  %conv.4.21 = fptoui float %cond.4.21 to i8
  %conv43.4.21 = uitofp i8 %conv.4.21 to float
  %1554 = add nsw i64 %indvars.iv.next21.3.21, %1513
  %arrayidx47.4.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1554
  store float %conv43.4.21, float* %arrayidx47.4.21, align 4
  br label %for.inc53.4.21

if.else.4.21:                                     ; preds = %for.end38.4.21
  %1555 = add nsw i64 %indvars.iv.next21.3.21, %1512
  %arrayidx51.4.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1555
  store float %partial_sum.0.lcssa.4.21, float* %arrayidx51.4.21, align 4
  br label %for.inc53.4.21

for.inc53.4.21:                                   ; preds = %if.else.4.21, %if.then40.4.21
  %inc54.4.21 = add nsw i32 %in_j.011.21, 5
  %indvars.iv.next21.4.21 = add nsw i64 %indvars.iv20.21, 5
  br i1 %cmp94, label %for.end38.5.21, label %for.body10.5.21.preheader

for.body10.5.21.preheader:                        ; preds = %for.inc53.4.21
  br label %for.body10.5.21

for.body10.5.21:                                  ; preds = %for.body10.5.21.preheader, %for.inc36.5.21
  %ki.06.5.21 = phi i32 [ %inc37.5.21, %for.inc36.5.21 ], [ 0, %for.body10.5.21.preheader ]
  %partial_sum.05.5.21 = phi float [ %partial_sum.3.5.21, %for.inc36.5.21 ], [ 0.000000e+00, %for.body10.5.21.preheader ]
  %add.5.21 = add nsw i32 %ki.06.5.21, %inc58.20
  %notlhs.5.21 = icmp slt i32 %add.5.21, 0
  %notrhs.5.21 = icmp uge i32 %add.5.21, %img_height
  %.not.5.21 = or i1 %notrhs.5.21, %notlhs.5.21
  %brmerge.5.21 = or i1 %.not.5.21, %cmp151.not.5.21
  br i1 %brmerge.5.21, label %for.inc36.5.21, label %for.body16.lr.ph.5.21

for.body16.lr.ph.5.21:                            ; preds = %for.body10.5.21
  %mul.5.21 = shl i32 %add.5.21, 7
  %mul30.5.21 = mul i32 %ki.06.5.21, %kern_width
  br label %for.body16.5.21

for.body16.5.21:                                  ; preds = %for.inc.5.21, %for.body16.lr.ph.5.21
  %indvars.iv.5.21 = phi i64 [ 0, %for.body16.lr.ph.5.21 ], [ %indvars.iv.next.5.21, %for.inc.5.21 ]
  %partial_sum.12.5.21 = phi float [ %partial_sum.05.5.21, %for.body16.lr.ph.5.21 ], [ %partial_sum.2.5.21, %for.inc.5.21 ]
  %1556 = trunc i64 %indvars.iv.5.21 to i32
  %add17.5.21 = add nsw i32 %1556, %inc54.4.21
  %cmp18.5.21 = icmp sgt i32 %add17.5.21, -1
  %cmp21.5.21 = icmp ult i32 %add17.5.21, %img_width
  %1557 = and i1 %cmp18.5.21, %cmp21.5.21
  br i1 %1557, label %if.end26.5.21, label %for.inc.5.21

if.end26.5.21:                                    ; preds = %for.body16.5.21
  %add29.5.21 = add nsw i32 %add17.5.21, %mul.5.21
  %idxprom.5.21 = sext i32 %add29.5.21 to i64
  %arrayidx.5.21 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.21
  %1558 = load float, float* %arrayidx.5.21, align 4
  %1559 = trunc i64 %indvars.iv.5.21 to i32
  %add31.5.21 = add i32 %1559, %mul30.5.21
  %idxprom32.5.21 = zext i32 %add31.5.21 to i64
  %arrayidx33.5.21 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.21
  %1560 = load float, float* %arrayidx33.5.21, align 4
  %mul34.5.21 = fmul float %1558, %1560
  %add35.5.21 = fadd float %partial_sum.12.5.21, %mul34.5.21
  br label %for.inc.5.21

for.inc.5.21:                                     ; preds = %if.end26.5.21, %for.body16.5.21
  %partial_sum.2.5.21 = phi float [ %add35.5.21, %if.end26.5.21 ], [ %partial_sum.12.5.21, %for.body16.5.21 ]
  %indvars.iv.next.5.21 = add nuw nsw i64 %indvars.iv.5.21, 1
  %lftr.wideiv.5.21 = trunc i64 %indvars.iv.next.5.21 to i32
  %exitcond.5.21 = icmp eq i32 %lftr.wideiv.5.21, %kern_width
  br i1 %exitcond.5.21, label %for.inc36.5.21.loopexit, label %for.body16.5.21, !llvm.loop !1

for.inc36.5.21.loopexit:                          ; preds = %for.inc.5.21
  %partial_sum.2.5.21.lcssa = phi float [ %partial_sum.2.5.21, %for.inc.5.21 ]
  br label %for.inc36.5.21

for.inc36.5.21:                                   ; preds = %for.inc36.5.21.loopexit, %for.body10.5.21
  %partial_sum.3.5.21 = phi float [ %partial_sum.05.5.21, %for.body10.5.21 ], [ %partial_sum.2.5.21.lcssa, %for.inc36.5.21.loopexit ]
  %inc37.5.21 = add nuw nsw i32 %ki.06.5.21, 1
  %exitcond19.5.21 = icmp eq i32 %inc37.5.21, %kern_height
  br i1 %exitcond19.5.21, label %for.end38.5.21.loopexit, label %for.body10.5.21, !llvm.loop !3

for.end38.5.21.loopexit:                          ; preds = %for.inc36.5.21
  %partial_sum.3.5.21.lcssa = phi float [ %partial_sum.3.5.21, %for.inc36.5.21 ]
  br label %for.end38.5.21

for.end38.5.21:                                   ; preds = %for.end38.5.21.loopexit, %for.inc53.4.21
  %partial_sum.0.lcssa.5.21 = phi float [ 0.000000e+00, %for.inc53.4.21 ], [ %partial_sum.3.5.21.lcssa, %for.end38.5.21.loopexit ]
  br i1 %tobool39, label %if.else.5.21, label %if.then40.5.21

if.then40.5.21:                                   ; preds = %for.end38.5.21
  %cmp41.5.21 = fcmp olt float %partial_sum.0.lcssa.5.21, 0.000000e+00
  %sub42.5.21 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.21
  %cond.5.21 = select i1 %cmp41.5.21, float %sub42.5.21, float %partial_sum.0.lcssa.5.21
  %conv.5.21 = fptoui float %cond.5.21 to i8
  %conv43.5.21 = uitofp i8 %conv.5.21 to float
  %1561 = add nsw i64 %indvars.iv.next21.4.21, %1513
  %arrayidx47.5.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1561
  store float %conv43.5.21, float* %arrayidx47.5.21, align 4
  br label %for.inc53.5.21

if.else.5.21:                                     ; preds = %for.end38.5.21
  %1562 = add nsw i64 %indvars.iv.next21.4.21, %1512
  %arrayidx51.5.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1562
  store float %partial_sum.0.lcssa.5.21, float* %arrayidx51.5.21, align 4
  br label %for.inc53.5.21

for.inc53.5.21:                                   ; preds = %if.else.5.21, %if.then40.5.21
  %inc54.5.21 = add nsw i32 %in_j.011.21, 6
  %indvars.iv.next21.5.21 = add nsw i64 %indvars.iv20.21, 6
  br i1 %cmp94, label %for.end38.6.21, label %for.body10.6.21.preheader

for.body10.6.21.preheader:                        ; preds = %for.inc53.5.21
  br label %for.body10.6.21

for.body10.6.21:                                  ; preds = %for.body10.6.21.preheader, %for.inc36.6.21
  %ki.06.6.21 = phi i32 [ %inc37.6.21, %for.inc36.6.21 ], [ 0, %for.body10.6.21.preheader ]
  %partial_sum.05.6.21 = phi float [ %partial_sum.3.6.21, %for.inc36.6.21 ], [ 0.000000e+00, %for.body10.6.21.preheader ]
  %add.6.21 = add nsw i32 %ki.06.6.21, %inc58.20
  %notlhs.6.21 = icmp slt i32 %add.6.21, 0
  %notrhs.6.21 = icmp uge i32 %add.6.21, %img_height
  %.not.6.21 = or i1 %notrhs.6.21, %notlhs.6.21
  %brmerge.6.21 = or i1 %.not.6.21, %cmp151.not.6.21
  br i1 %brmerge.6.21, label %for.inc36.6.21, label %for.body16.lr.ph.6.21

for.body16.lr.ph.6.21:                            ; preds = %for.body10.6.21
  %mul.6.21 = shl i32 %add.6.21, 7
  %mul30.6.21 = mul i32 %ki.06.6.21, %kern_width
  br label %for.body16.6.21

for.body16.6.21:                                  ; preds = %for.inc.6.21, %for.body16.lr.ph.6.21
  %indvars.iv.6.21 = phi i64 [ 0, %for.body16.lr.ph.6.21 ], [ %indvars.iv.next.6.21, %for.inc.6.21 ]
  %partial_sum.12.6.21 = phi float [ %partial_sum.05.6.21, %for.body16.lr.ph.6.21 ], [ %partial_sum.2.6.21, %for.inc.6.21 ]
  %1563 = trunc i64 %indvars.iv.6.21 to i32
  %add17.6.21 = add nsw i32 %1563, %inc54.5.21
  %cmp18.6.21 = icmp sgt i32 %add17.6.21, -1
  %cmp21.6.21 = icmp ult i32 %add17.6.21, %img_width
  %1564 = and i1 %cmp18.6.21, %cmp21.6.21
  br i1 %1564, label %if.end26.6.21, label %for.inc.6.21

if.end26.6.21:                                    ; preds = %for.body16.6.21
  %add29.6.21 = add nsw i32 %add17.6.21, %mul.6.21
  %idxprom.6.21 = sext i32 %add29.6.21 to i64
  %arrayidx.6.21 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.21
  %1565 = load float, float* %arrayidx.6.21, align 4
  %1566 = trunc i64 %indvars.iv.6.21 to i32
  %add31.6.21 = add i32 %1566, %mul30.6.21
  %idxprom32.6.21 = zext i32 %add31.6.21 to i64
  %arrayidx33.6.21 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.21
  %1567 = load float, float* %arrayidx33.6.21, align 4
  %mul34.6.21 = fmul float %1565, %1567
  %add35.6.21 = fadd float %partial_sum.12.6.21, %mul34.6.21
  br label %for.inc.6.21

for.inc.6.21:                                     ; preds = %if.end26.6.21, %for.body16.6.21
  %partial_sum.2.6.21 = phi float [ %add35.6.21, %if.end26.6.21 ], [ %partial_sum.12.6.21, %for.body16.6.21 ]
  %indvars.iv.next.6.21 = add nuw nsw i64 %indvars.iv.6.21, 1
  %lftr.wideiv.6.21 = trunc i64 %indvars.iv.next.6.21 to i32
  %exitcond.6.21 = icmp eq i32 %lftr.wideiv.6.21, %kern_width
  br i1 %exitcond.6.21, label %for.inc36.6.21.loopexit, label %for.body16.6.21, !llvm.loop !1

for.inc36.6.21.loopexit:                          ; preds = %for.inc.6.21
  %partial_sum.2.6.21.lcssa = phi float [ %partial_sum.2.6.21, %for.inc.6.21 ]
  br label %for.inc36.6.21

for.inc36.6.21:                                   ; preds = %for.inc36.6.21.loopexit, %for.body10.6.21
  %partial_sum.3.6.21 = phi float [ %partial_sum.05.6.21, %for.body10.6.21 ], [ %partial_sum.2.6.21.lcssa, %for.inc36.6.21.loopexit ]
  %inc37.6.21 = add nuw nsw i32 %ki.06.6.21, 1
  %exitcond19.6.21 = icmp eq i32 %inc37.6.21, %kern_height
  br i1 %exitcond19.6.21, label %for.end38.6.21.loopexit, label %for.body10.6.21, !llvm.loop !3

for.end38.6.21.loopexit:                          ; preds = %for.inc36.6.21
  %partial_sum.3.6.21.lcssa = phi float [ %partial_sum.3.6.21, %for.inc36.6.21 ]
  br label %for.end38.6.21

for.end38.6.21:                                   ; preds = %for.end38.6.21.loopexit, %for.inc53.5.21
  %partial_sum.0.lcssa.6.21 = phi float [ 0.000000e+00, %for.inc53.5.21 ], [ %partial_sum.3.6.21.lcssa, %for.end38.6.21.loopexit ]
  br i1 %tobool39, label %if.else.6.21, label %if.then40.6.21

if.then40.6.21:                                   ; preds = %for.end38.6.21
  %cmp41.6.21 = fcmp olt float %partial_sum.0.lcssa.6.21, 0.000000e+00
  %sub42.6.21 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.21
  %cond.6.21 = select i1 %cmp41.6.21, float %sub42.6.21, float %partial_sum.0.lcssa.6.21
  %conv.6.21 = fptoui float %cond.6.21 to i8
  %conv43.6.21 = uitofp i8 %conv.6.21 to float
  %1568 = add nsw i64 %indvars.iv.next21.5.21, %1513
  %arrayidx47.6.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1568
  store float %conv43.6.21, float* %arrayidx47.6.21, align 4
  br label %for.inc53.6.21

if.else.6.21:                                     ; preds = %for.end38.6.21
  %1569 = add nsw i64 %indvars.iv.next21.5.21, %1512
  %arrayidx51.6.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1569
  store float %partial_sum.0.lcssa.6.21, float* %arrayidx51.6.21, align 4
  br label %for.inc53.6.21

for.inc53.6.21:                                   ; preds = %if.else.6.21, %if.then40.6.21
  %inc54.6.21 = add nsw i32 %in_j.011.21, 7
  %indvars.iv.next21.6.21 = add nsw i64 %indvars.iv20.21, 7
  br i1 %cmp94, label %for.end38.7.21, label %for.body10.7.21.preheader

for.body10.7.21.preheader:                        ; preds = %for.inc53.6.21
  br label %for.body10.7.21

for.body10.7.21:                                  ; preds = %for.body10.7.21.preheader, %for.inc36.7.21
  %ki.06.7.21 = phi i32 [ %inc37.7.21, %for.inc36.7.21 ], [ 0, %for.body10.7.21.preheader ]
  %partial_sum.05.7.21 = phi float [ %partial_sum.3.7.21, %for.inc36.7.21 ], [ 0.000000e+00, %for.body10.7.21.preheader ]
  %add.7.21 = add nsw i32 %ki.06.7.21, %inc58.20
  %notlhs.7.21 = icmp slt i32 %add.7.21, 0
  %notrhs.7.21 = icmp uge i32 %add.7.21, %img_height
  %.not.7.21 = or i1 %notrhs.7.21, %notlhs.7.21
  %brmerge.7.21 = or i1 %.not.7.21, %cmp151.not.7.21
  br i1 %brmerge.7.21, label %for.inc36.7.21, label %for.body16.lr.ph.7.21

for.body16.lr.ph.7.21:                            ; preds = %for.body10.7.21
  %mul.7.21 = shl i32 %add.7.21, 7
  %mul30.7.21 = mul i32 %ki.06.7.21, %kern_width
  br label %for.body16.7.21

for.body16.7.21:                                  ; preds = %for.inc.7.21, %for.body16.lr.ph.7.21
  %indvars.iv.7.21 = phi i64 [ 0, %for.body16.lr.ph.7.21 ], [ %indvars.iv.next.7.21, %for.inc.7.21 ]
  %partial_sum.12.7.21 = phi float [ %partial_sum.05.7.21, %for.body16.lr.ph.7.21 ], [ %partial_sum.2.7.21, %for.inc.7.21 ]
  %1570 = trunc i64 %indvars.iv.7.21 to i32
  %add17.7.21 = add nsw i32 %1570, %inc54.6.21
  %cmp18.7.21 = icmp sgt i32 %add17.7.21, -1
  %cmp21.7.21 = icmp ult i32 %add17.7.21, %img_width
  %1571 = and i1 %cmp18.7.21, %cmp21.7.21
  br i1 %1571, label %if.end26.7.21, label %for.inc.7.21

if.end26.7.21:                                    ; preds = %for.body16.7.21
  %add29.7.21 = add nsw i32 %add17.7.21, %mul.7.21
  %idxprom.7.21 = sext i32 %add29.7.21 to i64
  %arrayidx.7.21 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.21
  %1572 = load float, float* %arrayidx.7.21, align 4
  %1573 = trunc i64 %indvars.iv.7.21 to i32
  %add31.7.21 = add i32 %1573, %mul30.7.21
  %idxprom32.7.21 = zext i32 %add31.7.21 to i64
  %arrayidx33.7.21 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.21
  %1574 = load float, float* %arrayidx33.7.21, align 4
  %mul34.7.21 = fmul float %1572, %1574
  %add35.7.21 = fadd float %partial_sum.12.7.21, %mul34.7.21
  br label %for.inc.7.21

for.inc.7.21:                                     ; preds = %if.end26.7.21, %for.body16.7.21
  %partial_sum.2.7.21 = phi float [ %add35.7.21, %if.end26.7.21 ], [ %partial_sum.12.7.21, %for.body16.7.21 ]
  %indvars.iv.next.7.21 = add nuw nsw i64 %indvars.iv.7.21, 1
  %lftr.wideiv.7.21 = trunc i64 %indvars.iv.next.7.21 to i32
  %exitcond.7.21 = icmp eq i32 %lftr.wideiv.7.21, %kern_width
  br i1 %exitcond.7.21, label %for.inc36.7.21.loopexit, label %for.body16.7.21, !llvm.loop !1

for.inc36.7.21.loopexit:                          ; preds = %for.inc.7.21
  %partial_sum.2.7.21.lcssa = phi float [ %partial_sum.2.7.21, %for.inc.7.21 ]
  br label %for.inc36.7.21

for.inc36.7.21:                                   ; preds = %for.inc36.7.21.loopexit, %for.body10.7.21
  %partial_sum.3.7.21 = phi float [ %partial_sum.05.7.21, %for.body10.7.21 ], [ %partial_sum.2.7.21.lcssa, %for.inc36.7.21.loopexit ]
  %inc37.7.21 = add nuw nsw i32 %ki.06.7.21, 1
  %exitcond19.7.21 = icmp eq i32 %inc37.7.21, %kern_height
  br i1 %exitcond19.7.21, label %for.end38.7.21.loopexit, label %for.body10.7.21, !llvm.loop !3

for.end38.7.21.loopexit:                          ; preds = %for.inc36.7.21
  %partial_sum.3.7.21.lcssa = phi float [ %partial_sum.3.7.21, %for.inc36.7.21 ]
  br label %for.end38.7.21

for.end38.7.21:                                   ; preds = %for.end38.7.21.loopexit, %for.inc53.6.21
  %partial_sum.0.lcssa.7.21 = phi float [ 0.000000e+00, %for.inc53.6.21 ], [ %partial_sum.3.7.21.lcssa, %for.end38.7.21.loopexit ]
  br i1 %tobool39, label %if.else.7.21, label %if.then40.7.21

if.then40.7.21:                                   ; preds = %for.end38.7.21
  %cmp41.7.21 = fcmp olt float %partial_sum.0.lcssa.7.21, 0.000000e+00
  %sub42.7.21 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.21
  %cond.7.21 = select i1 %cmp41.7.21, float %sub42.7.21, float %partial_sum.0.lcssa.7.21
  %conv.7.21 = fptoui float %cond.7.21 to i8
  %conv43.7.21 = uitofp i8 %conv.7.21 to float
  %1575 = add nsw i64 %indvars.iv.next21.6.21, %1513
  %arrayidx47.7.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1575
  store float %conv43.7.21, float* %arrayidx47.7.21, align 4
  br label %for.inc53.7.21

if.else.7.21:                                     ; preds = %for.end38.7.21
  %1576 = add nsw i64 %indvars.iv.next21.6.21, %1512
  %arrayidx51.7.21 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1576
  store float %partial_sum.0.lcssa.7.21, float* %arrayidx51.7.21, align 4
  br label %for.inc53.7.21

for.inc53.7.21:                                   ; preds = %if.else.7.21, %if.then40.7.21
  %inc54.7.21 = add nsw i32 %in_j.011.21, 8
  %indvars.iv.next21.7.21 = add nsw i64 %indvars.iv20.21, 8
  %lftr.wideiv24.7.21 = trunc i64 %indvars.iv.next21.7.21 to i32
  %exitcond25.7.21 = icmp eq i32 %lftr.wideiv24.7.21, %img_width
  br i1 %exitcond25.7.21, label %for.inc57.21.loopexit, label %for.cond8.preheader.21, !llvm.loop !5

for.inc57.21.loopexit:                            ; preds = %for.inc53.7.21
  br label %for.inc57.21

for.inc57.21:                                     ; preds = %for.inc57.21.loopexit, %for.cond8.preheader.lr.ph.split.21
  %inc58.21 = add nsw i32 %in_i.015, 22
  %indvars.iv.next27.21 = add nsw i64 %indvars.iv26, 22
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.22

for.cond8.preheader.lr.ph.22:                     ; preds = %for.inc57.21
  %1577 = trunc i64 %indvars.iv.next27.21 to i32
  %mul48.22 = shl i32 %1577, 7
  %1578 = trunc i64 %indvars.iv.next27.21 to i32
  %mul44.22 = shl i32 %1578, 7
  %1579 = sext i32 %mul48.22 to i64
  %1580 = sext i32 %mul44.22 to i64
  br i1 %lcmp.mod.22, label %for.cond8.preheader.lr.ph.split.22, label %for.cond8.preheader.prol.22.preheader

for.cond8.preheader.prol.22.preheader:            ; preds = %for.cond8.preheader.lr.ph.22
  br label %for.cond8.preheader.prol.22

for.cond8.preheader.prol.22:                      ; preds = %for.cond8.preheader.prol.22.preheader, %for.inc53.prol.22
  %indvars.iv20.prol.22 = phi i64 [ %indvars.iv.next21.prol.22, %for.inc53.prol.22 ], [ 0, %for.cond8.preheader.prol.22.preheader ]
  %in_j.011.prol.22 = phi i32 [ %inc54.prol.22, %for.inc53.prol.22 ], [ %sub4, %for.cond8.preheader.prol.22.preheader ]
  %prol.iter.22 = phi i32 [ %prol.iter.sub.22, %for.inc53.prol.22 ], [ %xtraiter.22, %for.cond8.preheader.prol.22.preheader ]
  br i1 %cmp94, label %for.end38.prol.22, label %for.body10.prol.22.preheader

for.body10.prol.22.preheader:                     ; preds = %for.cond8.preheader.prol.22
  br label %for.body10.prol.22

for.body10.prol.22:                               ; preds = %for.body10.prol.22.preheader, %for.inc36.prol.22
  %ki.06.prol.22 = phi i32 [ %inc37.prol.22, %for.inc36.prol.22 ], [ 0, %for.body10.prol.22.preheader ]
  %partial_sum.05.prol.22 = phi float [ %partial_sum.3.prol.22, %for.inc36.prol.22 ], [ 0.000000e+00, %for.body10.prol.22.preheader ]
  %add.prol.22 = add nsw i32 %ki.06.prol.22, %inc58.21
  %notlhs.prol.22 = icmp slt i32 %add.prol.22, 0
  %notrhs.prol.22 = icmp uge i32 %add.prol.22, %img_height
  %.not.prol.22 = or i1 %notrhs.prol.22, %notlhs.prol.22
  %brmerge.prol.22 = or i1 %.not.prol.22, %cmp151.not.prol.22
  br i1 %brmerge.prol.22, label %for.inc36.prol.22, label %for.body16.lr.ph.prol.22

for.body16.lr.ph.prol.22:                         ; preds = %for.body10.prol.22
  %mul.prol.22 = shl i32 %add.prol.22, 7
  %mul30.prol.22 = mul i32 %ki.06.prol.22, %kern_width
  br label %for.body16.prol.22

for.body16.prol.22:                               ; preds = %for.inc.prol.22, %for.body16.lr.ph.prol.22
  %indvars.iv.prol.22 = phi i64 [ 0, %for.body16.lr.ph.prol.22 ], [ %indvars.iv.next.prol.22, %for.inc.prol.22 ]
  %partial_sum.12.prol.22 = phi float [ %partial_sum.05.prol.22, %for.body16.lr.ph.prol.22 ], [ %partial_sum.2.prol.22, %for.inc.prol.22 ]
  %1581 = trunc i64 %indvars.iv.prol.22 to i32
  %add17.prol.22 = add nsw i32 %1581, %in_j.011.prol.22
  %cmp18.prol.22 = icmp sgt i32 %add17.prol.22, -1
  %cmp21.prol.22 = icmp ult i32 %add17.prol.22, %img_width
  %1582 = and i1 %cmp18.prol.22, %cmp21.prol.22
  br i1 %1582, label %if.end26.prol.22, label %for.inc.prol.22

if.end26.prol.22:                                 ; preds = %for.body16.prol.22
  %add29.prol.22 = add nsw i32 %add17.prol.22, %mul.prol.22
  %idxprom.prol.22 = sext i32 %add29.prol.22 to i64
  %arrayidx.prol.22 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.22
  %1583 = load float, float* %arrayidx.prol.22, align 4
  %1584 = trunc i64 %indvars.iv.prol.22 to i32
  %add31.prol.22 = add i32 %1584, %mul30.prol.22
  %idxprom32.prol.22 = zext i32 %add31.prol.22 to i64
  %arrayidx33.prol.22 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.22
  %1585 = load float, float* %arrayidx33.prol.22, align 4
  %mul34.prol.22 = fmul float %1583, %1585
  %add35.prol.22 = fadd float %partial_sum.12.prol.22, %mul34.prol.22
  br label %for.inc.prol.22

for.inc.prol.22:                                  ; preds = %if.end26.prol.22, %for.body16.prol.22
  %partial_sum.2.prol.22 = phi float [ %add35.prol.22, %if.end26.prol.22 ], [ %partial_sum.12.prol.22, %for.body16.prol.22 ]
  %indvars.iv.next.prol.22 = add nuw nsw i64 %indvars.iv.prol.22, 1
  %lftr.wideiv.prol.22 = trunc i64 %indvars.iv.next.prol.22 to i32
  %exitcond.prol.22 = icmp eq i32 %lftr.wideiv.prol.22, %kern_width
  br i1 %exitcond.prol.22, label %for.inc36.prol.22.loopexit, label %for.body16.prol.22, !llvm.loop !1

for.inc36.prol.22.loopexit:                       ; preds = %for.inc.prol.22
  %partial_sum.2.prol.22.lcssa = phi float [ %partial_sum.2.prol.22, %for.inc.prol.22 ]
  br label %for.inc36.prol.22

for.inc36.prol.22:                                ; preds = %for.inc36.prol.22.loopexit, %for.body10.prol.22
  %partial_sum.3.prol.22 = phi float [ %partial_sum.05.prol.22, %for.body10.prol.22 ], [ %partial_sum.2.prol.22.lcssa, %for.inc36.prol.22.loopexit ]
  %inc37.prol.22 = add nuw nsw i32 %ki.06.prol.22, 1
  %exitcond19.prol.22 = icmp eq i32 %inc37.prol.22, %kern_height
  br i1 %exitcond19.prol.22, label %for.end38.prol.22.loopexit, label %for.body10.prol.22, !llvm.loop !3

for.end38.prol.22.loopexit:                       ; preds = %for.inc36.prol.22
  %partial_sum.3.prol.22.lcssa = phi float [ %partial_sum.3.prol.22, %for.inc36.prol.22 ]
  br label %for.end38.prol.22

for.end38.prol.22:                                ; preds = %for.end38.prol.22.loopexit, %for.cond8.preheader.prol.22
  %partial_sum.0.lcssa.prol.22 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.22 ], [ %partial_sum.3.prol.22.lcssa, %for.end38.prol.22.loopexit ]
  br i1 %tobool39, label %if.else.prol.22, label %if.then40.prol.22

if.then40.prol.22:                                ; preds = %for.end38.prol.22
  %cmp41.prol.22 = fcmp olt float %partial_sum.0.lcssa.prol.22, 0.000000e+00
  %sub42.prol.22 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.22
  %cond.prol.22 = select i1 %cmp41.prol.22, float %sub42.prol.22, float %partial_sum.0.lcssa.prol.22
  %conv.prol.22 = fptoui float %cond.prol.22 to i8
  %conv43.prol.22 = uitofp i8 %conv.prol.22 to float
  %1586 = add nsw i64 %indvars.iv20.prol.22, %1580
  %arrayidx47.prol.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1586
  store float %conv43.prol.22, float* %arrayidx47.prol.22, align 4
  br label %for.inc53.prol.22

if.else.prol.22:                                  ; preds = %for.end38.prol.22
  %1587 = add nsw i64 %indvars.iv20.prol.22, %1579
  %arrayidx51.prol.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1587
  store float %partial_sum.0.lcssa.prol.22, float* %arrayidx51.prol.22, align 4
  br label %for.inc53.prol.22

for.inc53.prol.22:                                ; preds = %if.else.prol.22, %if.then40.prol.22
  %inc54.prol.22 = add nsw i32 %in_j.011.prol.22, 1
  %indvars.iv.next21.prol.22 = add nuw nsw i64 %indvars.iv20.prol.22, 1
  %prol.iter.sub.22 = add i32 %prol.iter.22, -1
  %prol.iter.cmp.22 = icmp eq i32 %prol.iter.sub.22, 0
  br i1 %prol.iter.cmp.22, label %for.cond8.preheader.lr.ph.split.22.loopexit, label %for.cond8.preheader.prol.22, !llvm.loop !4

for.cond8.preheader.lr.ph.split.22.loopexit:      ; preds = %for.inc53.prol.22
  %indvars.iv.next21.prol.22.lcssa = phi i64 [ %indvars.iv.next21.prol.22, %for.inc53.prol.22 ]
  %inc54.prol.22.lcssa = phi i32 [ %inc54.prol.22, %for.inc53.prol.22 ]
  br label %for.cond8.preheader.lr.ph.split.22

for.cond8.preheader.lr.ph.split.22:               ; preds = %for.cond8.preheader.lr.ph.split.22.loopexit, %for.cond8.preheader.lr.ph.22
  %indvars.iv20.unr.22 = phi i64 [ 0, %for.cond8.preheader.lr.ph.22 ], [ %indvars.iv.next21.prol.22.lcssa, %for.cond8.preheader.lr.ph.split.22.loopexit ]
  %in_j.011.unr.22 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.22 ], [ %inc54.prol.22.lcssa, %for.cond8.preheader.lr.ph.split.22.loopexit ]
  br i1 %93, label %for.inc57.22, label %for.cond8.preheader.22.preheader

for.cond8.preheader.22.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.22
  br label %for.cond8.preheader.22

for.cond8.preheader.22:                           ; preds = %for.cond8.preheader.22.preheader, %for.inc53.7.22
  %indvars.iv20.22 = phi i64 [ %indvars.iv.next21.7.22, %for.inc53.7.22 ], [ %indvars.iv20.unr.22, %for.cond8.preheader.22.preheader ]
  %in_j.011.22 = phi i32 [ %inc54.7.22, %for.inc53.7.22 ], [ %in_j.011.unr.22, %for.cond8.preheader.22.preheader ]
  br i1 %cmp94, label %for.end38.22, label %for.body10.22.preheader

for.body10.22.preheader:                          ; preds = %for.cond8.preheader.22
  br label %for.body10.22

for.body10.22:                                    ; preds = %for.body10.22.preheader, %for.inc36.22
  %ki.06.22 = phi i32 [ %inc37.22, %for.inc36.22 ], [ 0, %for.body10.22.preheader ]
  %partial_sum.05.22 = phi float [ %partial_sum.3.22, %for.inc36.22 ], [ 0.000000e+00, %for.body10.22.preheader ]
  %add.22 = add nsw i32 %ki.06.22, %inc58.21
  %notlhs.22 = icmp slt i32 %add.22, 0
  %notrhs.22 = icmp uge i32 %add.22, %img_height
  %.not.22 = or i1 %notrhs.22, %notlhs.22
  %brmerge.22 = or i1 %.not.22, %cmp151.not.22
  br i1 %brmerge.22, label %for.inc36.22, label %for.body16.lr.ph.22

for.body16.lr.ph.22:                              ; preds = %for.body10.22
  %mul.22 = shl i32 %add.22, 7
  %mul30.22 = mul i32 %ki.06.22, %kern_width
  br label %for.body16.22

for.body16.22:                                    ; preds = %for.inc.22, %for.body16.lr.ph.22
  %indvars.iv.22 = phi i64 [ 0, %for.body16.lr.ph.22 ], [ %indvars.iv.next.22, %for.inc.22 ]
  %partial_sum.12.22 = phi float [ %partial_sum.05.22, %for.body16.lr.ph.22 ], [ %partial_sum.2.22, %for.inc.22 ]
  %1588 = trunc i64 %indvars.iv.22 to i32
  %add17.22 = add nsw i32 %1588, %in_j.011.22
  %cmp18.22 = icmp sgt i32 %add17.22, -1
  %cmp21.22 = icmp ult i32 %add17.22, %img_width
  %1589 = and i1 %cmp18.22, %cmp21.22
  br i1 %1589, label %if.end26.22, label %for.inc.22

if.end26.22:                                      ; preds = %for.body16.22
  %add29.22 = add nsw i32 %add17.22, %mul.22
  %idxprom.22 = sext i32 %add29.22 to i64
  %arrayidx.22 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.22
  %1590 = load float, float* %arrayidx.22, align 4
  %1591 = trunc i64 %indvars.iv.22 to i32
  %add31.22 = add i32 %1591, %mul30.22
  %idxprom32.22 = zext i32 %add31.22 to i64
  %arrayidx33.22 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.22
  %1592 = load float, float* %arrayidx33.22, align 4
  %mul34.22 = fmul float %1590, %1592
  %add35.22 = fadd float %partial_sum.12.22, %mul34.22
  br label %for.inc.22

for.inc.22:                                       ; preds = %if.end26.22, %for.body16.22
  %partial_sum.2.22 = phi float [ %add35.22, %if.end26.22 ], [ %partial_sum.12.22, %for.body16.22 ]
  %indvars.iv.next.22 = add nuw nsw i64 %indvars.iv.22, 1
  %lftr.wideiv.22 = trunc i64 %indvars.iv.next.22 to i32
  %exitcond.22 = icmp eq i32 %lftr.wideiv.22, %kern_width
  br i1 %exitcond.22, label %for.inc36.22.loopexit, label %for.body16.22, !llvm.loop !1

for.inc36.22.loopexit:                            ; preds = %for.inc.22
  %partial_sum.2.22.lcssa = phi float [ %partial_sum.2.22, %for.inc.22 ]
  br label %for.inc36.22

for.inc36.22:                                     ; preds = %for.inc36.22.loopexit, %for.body10.22
  %partial_sum.3.22 = phi float [ %partial_sum.05.22, %for.body10.22 ], [ %partial_sum.2.22.lcssa, %for.inc36.22.loopexit ]
  %inc37.22 = add nuw nsw i32 %ki.06.22, 1
  %exitcond19.22 = icmp eq i32 %inc37.22, %kern_height
  br i1 %exitcond19.22, label %for.end38.22.loopexit, label %for.body10.22, !llvm.loop !3

for.end38.22.loopexit:                            ; preds = %for.inc36.22
  %partial_sum.3.22.lcssa = phi float [ %partial_sum.3.22, %for.inc36.22 ]
  br label %for.end38.22

for.end38.22:                                     ; preds = %for.end38.22.loopexit, %for.cond8.preheader.22
  %partial_sum.0.lcssa.22 = phi float [ 0.000000e+00, %for.cond8.preheader.22 ], [ %partial_sum.3.22.lcssa, %for.end38.22.loopexit ]
  br i1 %tobool39, label %if.else.22, label %if.then40.22

if.then40.22:                                     ; preds = %for.end38.22
  %cmp41.22 = fcmp olt float %partial_sum.0.lcssa.22, 0.000000e+00
  %sub42.22 = fsub float -0.000000e+00, %partial_sum.0.lcssa.22
  %cond.22 = select i1 %cmp41.22, float %sub42.22, float %partial_sum.0.lcssa.22
  %conv.22 = fptoui float %cond.22 to i8
  %conv43.22 = uitofp i8 %conv.22 to float
  %1593 = add nsw i64 %indvars.iv20.22, %1580
  %arrayidx47.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1593
  store float %conv43.22, float* %arrayidx47.22, align 4
  br label %for.inc53.22

if.else.22:                                       ; preds = %for.end38.22
  %1594 = add nsw i64 %indvars.iv20.22, %1579
  %arrayidx51.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1594
  store float %partial_sum.0.lcssa.22, float* %arrayidx51.22, align 4
  br label %for.inc53.22

for.inc53.22:                                     ; preds = %if.else.22, %if.then40.22
  %inc54.22 = add nsw i32 %in_j.011.22, 1
  %indvars.iv.next21.22 = add nuw nsw i64 %indvars.iv20.22, 1
  br i1 %cmp94, label %for.end38.1.22, label %for.body10.1.22.preheader

for.body10.1.22.preheader:                        ; preds = %for.inc53.22
  br label %for.body10.1.22

for.body10.1.22:                                  ; preds = %for.body10.1.22.preheader, %for.inc36.1.22
  %ki.06.1.22 = phi i32 [ %inc37.1.22, %for.inc36.1.22 ], [ 0, %for.body10.1.22.preheader ]
  %partial_sum.05.1.22 = phi float [ %partial_sum.3.1.22, %for.inc36.1.22 ], [ 0.000000e+00, %for.body10.1.22.preheader ]
  %add.1.22 = add nsw i32 %ki.06.1.22, %inc58.21
  %notlhs.1.22 = icmp slt i32 %add.1.22, 0
  %notrhs.1.22 = icmp uge i32 %add.1.22, %img_height
  %.not.1.22 = or i1 %notrhs.1.22, %notlhs.1.22
  %brmerge.1.22 = or i1 %.not.1.22, %cmp151.not.1.22
  br i1 %brmerge.1.22, label %for.inc36.1.22, label %for.body16.lr.ph.1.22

for.body16.lr.ph.1.22:                            ; preds = %for.body10.1.22
  %mul.1.22 = shl i32 %add.1.22, 7
  %mul30.1.22 = mul i32 %ki.06.1.22, %kern_width
  br label %for.body16.1.22

for.body16.1.22:                                  ; preds = %for.inc.1.22, %for.body16.lr.ph.1.22
  %indvars.iv.1.22 = phi i64 [ 0, %for.body16.lr.ph.1.22 ], [ %indvars.iv.next.1.22, %for.inc.1.22 ]
  %partial_sum.12.1.22 = phi float [ %partial_sum.05.1.22, %for.body16.lr.ph.1.22 ], [ %partial_sum.2.1.22, %for.inc.1.22 ]
  %1595 = trunc i64 %indvars.iv.1.22 to i32
  %add17.1.22 = add nsw i32 %1595, %inc54.22
  %cmp18.1.22 = icmp sgt i32 %add17.1.22, -1
  %cmp21.1.22 = icmp ult i32 %add17.1.22, %img_width
  %1596 = and i1 %cmp18.1.22, %cmp21.1.22
  br i1 %1596, label %if.end26.1.22, label %for.inc.1.22

if.end26.1.22:                                    ; preds = %for.body16.1.22
  %add29.1.22 = add nsw i32 %add17.1.22, %mul.1.22
  %idxprom.1.22 = sext i32 %add29.1.22 to i64
  %arrayidx.1.22 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.22
  %1597 = load float, float* %arrayidx.1.22, align 4
  %1598 = trunc i64 %indvars.iv.1.22 to i32
  %add31.1.22 = add i32 %1598, %mul30.1.22
  %idxprom32.1.22 = zext i32 %add31.1.22 to i64
  %arrayidx33.1.22 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.22
  %1599 = load float, float* %arrayidx33.1.22, align 4
  %mul34.1.22 = fmul float %1597, %1599
  %add35.1.22 = fadd float %partial_sum.12.1.22, %mul34.1.22
  br label %for.inc.1.22

for.inc.1.22:                                     ; preds = %if.end26.1.22, %for.body16.1.22
  %partial_sum.2.1.22 = phi float [ %add35.1.22, %if.end26.1.22 ], [ %partial_sum.12.1.22, %for.body16.1.22 ]
  %indvars.iv.next.1.22 = add nuw nsw i64 %indvars.iv.1.22, 1
  %lftr.wideiv.1.22 = trunc i64 %indvars.iv.next.1.22 to i32
  %exitcond.1.22 = icmp eq i32 %lftr.wideiv.1.22, %kern_width
  br i1 %exitcond.1.22, label %for.inc36.1.22.loopexit, label %for.body16.1.22, !llvm.loop !1

for.inc36.1.22.loopexit:                          ; preds = %for.inc.1.22
  %partial_sum.2.1.22.lcssa = phi float [ %partial_sum.2.1.22, %for.inc.1.22 ]
  br label %for.inc36.1.22

for.inc36.1.22:                                   ; preds = %for.inc36.1.22.loopexit, %for.body10.1.22
  %partial_sum.3.1.22 = phi float [ %partial_sum.05.1.22, %for.body10.1.22 ], [ %partial_sum.2.1.22.lcssa, %for.inc36.1.22.loopexit ]
  %inc37.1.22 = add nuw nsw i32 %ki.06.1.22, 1
  %exitcond19.1.22 = icmp eq i32 %inc37.1.22, %kern_height
  br i1 %exitcond19.1.22, label %for.end38.1.22.loopexit, label %for.body10.1.22, !llvm.loop !3

for.end38.1.22.loopexit:                          ; preds = %for.inc36.1.22
  %partial_sum.3.1.22.lcssa = phi float [ %partial_sum.3.1.22, %for.inc36.1.22 ]
  br label %for.end38.1.22

for.end38.1.22:                                   ; preds = %for.end38.1.22.loopexit, %for.inc53.22
  %partial_sum.0.lcssa.1.22 = phi float [ 0.000000e+00, %for.inc53.22 ], [ %partial_sum.3.1.22.lcssa, %for.end38.1.22.loopexit ]
  br i1 %tobool39, label %if.else.1.22, label %if.then40.1.22

if.then40.1.22:                                   ; preds = %for.end38.1.22
  %cmp41.1.22 = fcmp olt float %partial_sum.0.lcssa.1.22, 0.000000e+00
  %sub42.1.22 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.22
  %cond.1.22 = select i1 %cmp41.1.22, float %sub42.1.22, float %partial_sum.0.lcssa.1.22
  %conv.1.22 = fptoui float %cond.1.22 to i8
  %conv43.1.22 = uitofp i8 %conv.1.22 to float
  %1600 = add nsw i64 %indvars.iv.next21.22, %1580
  %arrayidx47.1.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1600
  store float %conv43.1.22, float* %arrayidx47.1.22, align 4
  br label %for.inc53.1.22

if.else.1.22:                                     ; preds = %for.end38.1.22
  %1601 = add nsw i64 %indvars.iv.next21.22, %1579
  %arrayidx51.1.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1601
  store float %partial_sum.0.lcssa.1.22, float* %arrayidx51.1.22, align 4
  br label %for.inc53.1.22

for.inc53.1.22:                                   ; preds = %if.else.1.22, %if.then40.1.22
  %inc54.1.22 = add nsw i32 %in_j.011.22, 2
  %indvars.iv.next21.1.22 = add nsw i64 %indvars.iv20.22, 2
  br i1 %cmp94, label %for.end38.2.22, label %for.body10.2.22.preheader

for.body10.2.22.preheader:                        ; preds = %for.inc53.1.22
  br label %for.body10.2.22

for.body10.2.22:                                  ; preds = %for.body10.2.22.preheader, %for.inc36.2.22
  %ki.06.2.22 = phi i32 [ %inc37.2.22, %for.inc36.2.22 ], [ 0, %for.body10.2.22.preheader ]
  %partial_sum.05.2.22 = phi float [ %partial_sum.3.2.22, %for.inc36.2.22 ], [ 0.000000e+00, %for.body10.2.22.preheader ]
  %add.2.22 = add nsw i32 %ki.06.2.22, %inc58.21
  %notlhs.2.22 = icmp slt i32 %add.2.22, 0
  %notrhs.2.22 = icmp uge i32 %add.2.22, %img_height
  %.not.2.22 = or i1 %notrhs.2.22, %notlhs.2.22
  %brmerge.2.22 = or i1 %.not.2.22, %cmp151.not.2.22
  br i1 %brmerge.2.22, label %for.inc36.2.22, label %for.body16.lr.ph.2.22

for.body16.lr.ph.2.22:                            ; preds = %for.body10.2.22
  %mul.2.22 = shl i32 %add.2.22, 7
  %mul30.2.22 = mul i32 %ki.06.2.22, %kern_width
  br label %for.body16.2.22

for.body16.2.22:                                  ; preds = %for.inc.2.22, %for.body16.lr.ph.2.22
  %indvars.iv.2.22 = phi i64 [ 0, %for.body16.lr.ph.2.22 ], [ %indvars.iv.next.2.22, %for.inc.2.22 ]
  %partial_sum.12.2.22 = phi float [ %partial_sum.05.2.22, %for.body16.lr.ph.2.22 ], [ %partial_sum.2.2.22, %for.inc.2.22 ]
  %1602 = trunc i64 %indvars.iv.2.22 to i32
  %add17.2.22 = add nsw i32 %1602, %inc54.1.22
  %cmp18.2.22 = icmp sgt i32 %add17.2.22, -1
  %cmp21.2.22 = icmp ult i32 %add17.2.22, %img_width
  %1603 = and i1 %cmp18.2.22, %cmp21.2.22
  br i1 %1603, label %if.end26.2.22, label %for.inc.2.22

if.end26.2.22:                                    ; preds = %for.body16.2.22
  %add29.2.22 = add nsw i32 %add17.2.22, %mul.2.22
  %idxprom.2.22 = sext i32 %add29.2.22 to i64
  %arrayidx.2.22 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.22
  %1604 = load float, float* %arrayidx.2.22, align 4
  %1605 = trunc i64 %indvars.iv.2.22 to i32
  %add31.2.22 = add i32 %1605, %mul30.2.22
  %idxprom32.2.22 = zext i32 %add31.2.22 to i64
  %arrayidx33.2.22 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.22
  %1606 = load float, float* %arrayidx33.2.22, align 4
  %mul34.2.22 = fmul float %1604, %1606
  %add35.2.22 = fadd float %partial_sum.12.2.22, %mul34.2.22
  br label %for.inc.2.22

for.inc.2.22:                                     ; preds = %if.end26.2.22, %for.body16.2.22
  %partial_sum.2.2.22 = phi float [ %add35.2.22, %if.end26.2.22 ], [ %partial_sum.12.2.22, %for.body16.2.22 ]
  %indvars.iv.next.2.22 = add nuw nsw i64 %indvars.iv.2.22, 1
  %lftr.wideiv.2.22 = trunc i64 %indvars.iv.next.2.22 to i32
  %exitcond.2.22 = icmp eq i32 %lftr.wideiv.2.22, %kern_width
  br i1 %exitcond.2.22, label %for.inc36.2.22.loopexit, label %for.body16.2.22, !llvm.loop !1

for.inc36.2.22.loopexit:                          ; preds = %for.inc.2.22
  %partial_sum.2.2.22.lcssa = phi float [ %partial_sum.2.2.22, %for.inc.2.22 ]
  br label %for.inc36.2.22

for.inc36.2.22:                                   ; preds = %for.inc36.2.22.loopexit, %for.body10.2.22
  %partial_sum.3.2.22 = phi float [ %partial_sum.05.2.22, %for.body10.2.22 ], [ %partial_sum.2.2.22.lcssa, %for.inc36.2.22.loopexit ]
  %inc37.2.22 = add nuw nsw i32 %ki.06.2.22, 1
  %exitcond19.2.22 = icmp eq i32 %inc37.2.22, %kern_height
  br i1 %exitcond19.2.22, label %for.end38.2.22.loopexit, label %for.body10.2.22, !llvm.loop !3

for.end38.2.22.loopexit:                          ; preds = %for.inc36.2.22
  %partial_sum.3.2.22.lcssa = phi float [ %partial_sum.3.2.22, %for.inc36.2.22 ]
  br label %for.end38.2.22

for.end38.2.22:                                   ; preds = %for.end38.2.22.loopexit, %for.inc53.1.22
  %partial_sum.0.lcssa.2.22 = phi float [ 0.000000e+00, %for.inc53.1.22 ], [ %partial_sum.3.2.22.lcssa, %for.end38.2.22.loopexit ]
  br i1 %tobool39, label %if.else.2.22, label %if.then40.2.22

if.then40.2.22:                                   ; preds = %for.end38.2.22
  %cmp41.2.22 = fcmp olt float %partial_sum.0.lcssa.2.22, 0.000000e+00
  %sub42.2.22 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.22
  %cond.2.22 = select i1 %cmp41.2.22, float %sub42.2.22, float %partial_sum.0.lcssa.2.22
  %conv.2.22 = fptoui float %cond.2.22 to i8
  %conv43.2.22 = uitofp i8 %conv.2.22 to float
  %1607 = add nsw i64 %indvars.iv.next21.1.22, %1580
  %arrayidx47.2.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1607
  store float %conv43.2.22, float* %arrayidx47.2.22, align 4
  br label %for.inc53.2.22

if.else.2.22:                                     ; preds = %for.end38.2.22
  %1608 = add nsw i64 %indvars.iv.next21.1.22, %1579
  %arrayidx51.2.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1608
  store float %partial_sum.0.lcssa.2.22, float* %arrayidx51.2.22, align 4
  br label %for.inc53.2.22

for.inc53.2.22:                                   ; preds = %if.else.2.22, %if.then40.2.22
  %inc54.2.22 = add nsw i32 %in_j.011.22, 3
  %indvars.iv.next21.2.22 = add nsw i64 %indvars.iv20.22, 3
  br i1 %cmp94, label %for.end38.3.22, label %for.body10.3.22.preheader

for.body10.3.22.preheader:                        ; preds = %for.inc53.2.22
  br label %for.body10.3.22

for.body10.3.22:                                  ; preds = %for.body10.3.22.preheader, %for.inc36.3.22
  %ki.06.3.22 = phi i32 [ %inc37.3.22, %for.inc36.3.22 ], [ 0, %for.body10.3.22.preheader ]
  %partial_sum.05.3.22 = phi float [ %partial_sum.3.3.22, %for.inc36.3.22 ], [ 0.000000e+00, %for.body10.3.22.preheader ]
  %add.3.22 = add nsw i32 %ki.06.3.22, %inc58.21
  %notlhs.3.22 = icmp slt i32 %add.3.22, 0
  %notrhs.3.22 = icmp uge i32 %add.3.22, %img_height
  %.not.3.22 = or i1 %notrhs.3.22, %notlhs.3.22
  %brmerge.3.22 = or i1 %.not.3.22, %cmp151.not.3.22
  br i1 %brmerge.3.22, label %for.inc36.3.22, label %for.body16.lr.ph.3.22

for.body16.lr.ph.3.22:                            ; preds = %for.body10.3.22
  %mul.3.22 = shl i32 %add.3.22, 7
  %mul30.3.22 = mul i32 %ki.06.3.22, %kern_width
  br label %for.body16.3.22

for.body16.3.22:                                  ; preds = %for.inc.3.22, %for.body16.lr.ph.3.22
  %indvars.iv.3.22 = phi i64 [ 0, %for.body16.lr.ph.3.22 ], [ %indvars.iv.next.3.22, %for.inc.3.22 ]
  %partial_sum.12.3.22 = phi float [ %partial_sum.05.3.22, %for.body16.lr.ph.3.22 ], [ %partial_sum.2.3.22, %for.inc.3.22 ]
  %1609 = trunc i64 %indvars.iv.3.22 to i32
  %add17.3.22 = add nsw i32 %1609, %inc54.2.22
  %cmp18.3.22 = icmp sgt i32 %add17.3.22, -1
  %cmp21.3.22 = icmp ult i32 %add17.3.22, %img_width
  %1610 = and i1 %cmp18.3.22, %cmp21.3.22
  br i1 %1610, label %if.end26.3.22, label %for.inc.3.22

if.end26.3.22:                                    ; preds = %for.body16.3.22
  %add29.3.22 = add nsw i32 %add17.3.22, %mul.3.22
  %idxprom.3.22 = sext i32 %add29.3.22 to i64
  %arrayidx.3.22 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.22
  %1611 = load float, float* %arrayidx.3.22, align 4
  %1612 = trunc i64 %indvars.iv.3.22 to i32
  %add31.3.22 = add i32 %1612, %mul30.3.22
  %idxprom32.3.22 = zext i32 %add31.3.22 to i64
  %arrayidx33.3.22 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.22
  %1613 = load float, float* %arrayidx33.3.22, align 4
  %mul34.3.22 = fmul float %1611, %1613
  %add35.3.22 = fadd float %partial_sum.12.3.22, %mul34.3.22
  br label %for.inc.3.22

for.inc.3.22:                                     ; preds = %if.end26.3.22, %for.body16.3.22
  %partial_sum.2.3.22 = phi float [ %add35.3.22, %if.end26.3.22 ], [ %partial_sum.12.3.22, %for.body16.3.22 ]
  %indvars.iv.next.3.22 = add nuw nsw i64 %indvars.iv.3.22, 1
  %lftr.wideiv.3.22 = trunc i64 %indvars.iv.next.3.22 to i32
  %exitcond.3.22 = icmp eq i32 %lftr.wideiv.3.22, %kern_width
  br i1 %exitcond.3.22, label %for.inc36.3.22.loopexit, label %for.body16.3.22, !llvm.loop !1

for.inc36.3.22.loopexit:                          ; preds = %for.inc.3.22
  %partial_sum.2.3.22.lcssa = phi float [ %partial_sum.2.3.22, %for.inc.3.22 ]
  br label %for.inc36.3.22

for.inc36.3.22:                                   ; preds = %for.inc36.3.22.loopexit, %for.body10.3.22
  %partial_sum.3.3.22 = phi float [ %partial_sum.05.3.22, %for.body10.3.22 ], [ %partial_sum.2.3.22.lcssa, %for.inc36.3.22.loopexit ]
  %inc37.3.22 = add nuw nsw i32 %ki.06.3.22, 1
  %exitcond19.3.22 = icmp eq i32 %inc37.3.22, %kern_height
  br i1 %exitcond19.3.22, label %for.end38.3.22.loopexit, label %for.body10.3.22, !llvm.loop !3

for.end38.3.22.loopexit:                          ; preds = %for.inc36.3.22
  %partial_sum.3.3.22.lcssa = phi float [ %partial_sum.3.3.22, %for.inc36.3.22 ]
  br label %for.end38.3.22

for.end38.3.22:                                   ; preds = %for.end38.3.22.loopexit, %for.inc53.2.22
  %partial_sum.0.lcssa.3.22 = phi float [ 0.000000e+00, %for.inc53.2.22 ], [ %partial_sum.3.3.22.lcssa, %for.end38.3.22.loopexit ]
  br i1 %tobool39, label %if.else.3.22, label %if.then40.3.22

if.then40.3.22:                                   ; preds = %for.end38.3.22
  %cmp41.3.22 = fcmp olt float %partial_sum.0.lcssa.3.22, 0.000000e+00
  %sub42.3.22 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.22
  %cond.3.22 = select i1 %cmp41.3.22, float %sub42.3.22, float %partial_sum.0.lcssa.3.22
  %conv.3.22 = fptoui float %cond.3.22 to i8
  %conv43.3.22 = uitofp i8 %conv.3.22 to float
  %1614 = add nsw i64 %indvars.iv.next21.2.22, %1580
  %arrayidx47.3.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1614
  store float %conv43.3.22, float* %arrayidx47.3.22, align 4
  br label %for.inc53.3.22

if.else.3.22:                                     ; preds = %for.end38.3.22
  %1615 = add nsw i64 %indvars.iv.next21.2.22, %1579
  %arrayidx51.3.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1615
  store float %partial_sum.0.lcssa.3.22, float* %arrayidx51.3.22, align 4
  br label %for.inc53.3.22

for.inc53.3.22:                                   ; preds = %if.else.3.22, %if.then40.3.22
  %inc54.3.22 = add nsw i32 %in_j.011.22, 4
  %indvars.iv.next21.3.22 = add nsw i64 %indvars.iv20.22, 4
  br i1 %cmp94, label %for.end38.4.22, label %for.body10.4.22.preheader

for.body10.4.22.preheader:                        ; preds = %for.inc53.3.22
  br label %for.body10.4.22

for.body10.4.22:                                  ; preds = %for.body10.4.22.preheader, %for.inc36.4.22
  %ki.06.4.22 = phi i32 [ %inc37.4.22, %for.inc36.4.22 ], [ 0, %for.body10.4.22.preheader ]
  %partial_sum.05.4.22 = phi float [ %partial_sum.3.4.22, %for.inc36.4.22 ], [ 0.000000e+00, %for.body10.4.22.preheader ]
  %add.4.22 = add nsw i32 %ki.06.4.22, %inc58.21
  %notlhs.4.22 = icmp slt i32 %add.4.22, 0
  %notrhs.4.22 = icmp uge i32 %add.4.22, %img_height
  %.not.4.22 = or i1 %notrhs.4.22, %notlhs.4.22
  %brmerge.4.22 = or i1 %.not.4.22, %cmp151.not.4.22
  br i1 %brmerge.4.22, label %for.inc36.4.22, label %for.body16.lr.ph.4.22

for.body16.lr.ph.4.22:                            ; preds = %for.body10.4.22
  %mul.4.22 = shl i32 %add.4.22, 7
  %mul30.4.22 = mul i32 %ki.06.4.22, %kern_width
  br label %for.body16.4.22

for.body16.4.22:                                  ; preds = %for.inc.4.22, %for.body16.lr.ph.4.22
  %indvars.iv.4.22 = phi i64 [ 0, %for.body16.lr.ph.4.22 ], [ %indvars.iv.next.4.22, %for.inc.4.22 ]
  %partial_sum.12.4.22 = phi float [ %partial_sum.05.4.22, %for.body16.lr.ph.4.22 ], [ %partial_sum.2.4.22, %for.inc.4.22 ]
  %1616 = trunc i64 %indvars.iv.4.22 to i32
  %add17.4.22 = add nsw i32 %1616, %inc54.3.22
  %cmp18.4.22 = icmp sgt i32 %add17.4.22, -1
  %cmp21.4.22 = icmp ult i32 %add17.4.22, %img_width
  %1617 = and i1 %cmp18.4.22, %cmp21.4.22
  br i1 %1617, label %if.end26.4.22, label %for.inc.4.22

if.end26.4.22:                                    ; preds = %for.body16.4.22
  %add29.4.22 = add nsw i32 %add17.4.22, %mul.4.22
  %idxprom.4.22 = sext i32 %add29.4.22 to i64
  %arrayidx.4.22 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.22
  %1618 = load float, float* %arrayidx.4.22, align 4
  %1619 = trunc i64 %indvars.iv.4.22 to i32
  %add31.4.22 = add i32 %1619, %mul30.4.22
  %idxprom32.4.22 = zext i32 %add31.4.22 to i64
  %arrayidx33.4.22 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.22
  %1620 = load float, float* %arrayidx33.4.22, align 4
  %mul34.4.22 = fmul float %1618, %1620
  %add35.4.22 = fadd float %partial_sum.12.4.22, %mul34.4.22
  br label %for.inc.4.22

for.inc.4.22:                                     ; preds = %if.end26.4.22, %for.body16.4.22
  %partial_sum.2.4.22 = phi float [ %add35.4.22, %if.end26.4.22 ], [ %partial_sum.12.4.22, %for.body16.4.22 ]
  %indvars.iv.next.4.22 = add nuw nsw i64 %indvars.iv.4.22, 1
  %lftr.wideiv.4.22 = trunc i64 %indvars.iv.next.4.22 to i32
  %exitcond.4.22 = icmp eq i32 %lftr.wideiv.4.22, %kern_width
  br i1 %exitcond.4.22, label %for.inc36.4.22.loopexit, label %for.body16.4.22, !llvm.loop !1

for.inc36.4.22.loopexit:                          ; preds = %for.inc.4.22
  %partial_sum.2.4.22.lcssa = phi float [ %partial_sum.2.4.22, %for.inc.4.22 ]
  br label %for.inc36.4.22

for.inc36.4.22:                                   ; preds = %for.inc36.4.22.loopexit, %for.body10.4.22
  %partial_sum.3.4.22 = phi float [ %partial_sum.05.4.22, %for.body10.4.22 ], [ %partial_sum.2.4.22.lcssa, %for.inc36.4.22.loopexit ]
  %inc37.4.22 = add nuw nsw i32 %ki.06.4.22, 1
  %exitcond19.4.22 = icmp eq i32 %inc37.4.22, %kern_height
  br i1 %exitcond19.4.22, label %for.end38.4.22.loopexit, label %for.body10.4.22, !llvm.loop !3

for.end38.4.22.loopexit:                          ; preds = %for.inc36.4.22
  %partial_sum.3.4.22.lcssa = phi float [ %partial_sum.3.4.22, %for.inc36.4.22 ]
  br label %for.end38.4.22

for.end38.4.22:                                   ; preds = %for.end38.4.22.loopexit, %for.inc53.3.22
  %partial_sum.0.lcssa.4.22 = phi float [ 0.000000e+00, %for.inc53.3.22 ], [ %partial_sum.3.4.22.lcssa, %for.end38.4.22.loopexit ]
  br i1 %tobool39, label %if.else.4.22, label %if.then40.4.22

if.then40.4.22:                                   ; preds = %for.end38.4.22
  %cmp41.4.22 = fcmp olt float %partial_sum.0.lcssa.4.22, 0.000000e+00
  %sub42.4.22 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.22
  %cond.4.22 = select i1 %cmp41.4.22, float %sub42.4.22, float %partial_sum.0.lcssa.4.22
  %conv.4.22 = fptoui float %cond.4.22 to i8
  %conv43.4.22 = uitofp i8 %conv.4.22 to float
  %1621 = add nsw i64 %indvars.iv.next21.3.22, %1580
  %arrayidx47.4.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1621
  store float %conv43.4.22, float* %arrayidx47.4.22, align 4
  br label %for.inc53.4.22

if.else.4.22:                                     ; preds = %for.end38.4.22
  %1622 = add nsw i64 %indvars.iv.next21.3.22, %1579
  %arrayidx51.4.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1622
  store float %partial_sum.0.lcssa.4.22, float* %arrayidx51.4.22, align 4
  br label %for.inc53.4.22

for.inc53.4.22:                                   ; preds = %if.else.4.22, %if.then40.4.22
  %inc54.4.22 = add nsw i32 %in_j.011.22, 5
  %indvars.iv.next21.4.22 = add nsw i64 %indvars.iv20.22, 5
  br i1 %cmp94, label %for.end38.5.22, label %for.body10.5.22.preheader

for.body10.5.22.preheader:                        ; preds = %for.inc53.4.22
  br label %for.body10.5.22

for.body10.5.22:                                  ; preds = %for.body10.5.22.preheader, %for.inc36.5.22
  %ki.06.5.22 = phi i32 [ %inc37.5.22, %for.inc36.5.22 ], [ 0, %for.body10.5.22.preheader ]
  %partial_sum.05.5.22 = phi float [ %partial_sum.3.5.22, %for.inc36.5.22 ], [ 0.000000e+00, %for.body10.5.22.preheader ]
  %add.5.22 = add nsw i32 %ki.06.5.22, %inc58.21
  %notlhs.5.22 = icmp slt i32 %add.5.22, 0
  %notrhs.5.22 = icmp uge i32 %add.5.22, %img_height
  %.not.5.22 = or i1 %notrhs.5.22, %notlhs.5.22
  %brmerge.5.22 = or i1 %.not.5.22, %cmp151.not.5.22
  br i1 %brmerge.5.22, label %for.inc36.5.22, label %for.body16.lr.ph.5.22

for.body16.lr.ph.5.22:                            ; preds = %for.body10.5.22
  %mul.5.22 = shl i32 %add.5.22, 7
  %mul30.5.22 = mul i32 %ki.06.5.22, %kern_width
  br label %for.body16.5.22

for.body16.5.22:                                  ; preds = %for.inc.5.22, %for.body16.lr.ph.5.22
  %indvars.iv.5.22 = phi i64 [ 0, %for.body16.lr.ph.5.22 ], [ %indvars.iv.next.5.22, %for.inc.5.22 ]
  %partial_sum.12.5.22 = phi float [ %partial_sum.05.5.22, %for.body16.lr.ph.5.22 ], [ %partial_sum.2.5.22, %for.inc.5.22 ]
  %1623 = trunc i64 %indvars.iv.5.22 to i32
  %add17.5.22 = add nsw i32 %1623, %inc54.4.22
  %cmp18.5.22 = icmp sgt i32 %add17.5.22, -1
  %cmp21.5.22 = icmp ult i32 %add17.5.22, %img_width
  %1624 = and i1 %cmp18.5.22, %cmp21.5.22
  br i1 %1624, label %if.end26.5.22, label %for.inc.5.22

if.end26.5.22:                                    ; preds = %for.body16.5.22
  %add29.5.22 = add nsw i32 %add17.5.22, %mul.5.22
  %idxprom.5.22 = sext i32 %add29.5.22 to i64
  %arrayidx.5.22 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.22
  %1625 = load float, float* %arrayidx.5.22, align 4
  %1626 = trunc i64 %indvars.iv.5.22 to i32
  %add31.5.22 = add i32 %1626, %mul30.5.22
  %idxprom32.5.22 = zext i32 %add31.5.22 to i64
  %arrayidx33.5.22 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.22
  %1627 = load float, float* %arrayidx33.5.22, align 4
  %mul34.5.22 = fmul float %1625, %1627
  %add35.5.22 = fadd float %partial_sum.12.5.22, %mul34.5.22
  br label %for.inc.5.22

for.inc.5.22:                                     ; preds = %if.end26.5.22, %for.body16.5.22
  %partial_sum.2.5.22 = phi float [ %add35.5.22, %if.end26.5.22 ], [ %partial_sum.12.5.22, %for.body16.5.22 ]
  %indvars.iv.next.5.22 = add nuw nsw i64 %indvars.iv.5.22, 1
  %lftr.wideiv.5.22 = trunc i64 %indvars.iv.next.5.22 to i32
  %exitcond.5.22 = icmp eq i32 %lftr.wideiv.5.22, %kern_width
  br i1 %exitcond.5.22, label %for.inc36.5.22.loopexit, label %for.body16.5.22, !llvm.loop !1

for.inc36.5.22.loopexit:                          ; preds = %for.inc.5.22
  %partial_sum.2.5.22.lcssa = phi float [ %partial_sum.2.5.22, %for.inc.5.22 ]
  br label %for.inc36.5.22

for.inc36.5.22:                                   ; preds = %for.inc36.5.22.loopexit, %for.body10.5.22
  %partial_sum.3.5.22 = phi float [ %partial_sum.05.5.22, %for.body10.5.22 ], [ %partial_sum.2.5.22.lcssa, %for.inc36.5.22.loopexit ]
  %inc37.5.22 = add nuw nsw i32 %ki.06.5.22, 1
  %exitcond19.5.22 = icmp eq i32 %inc37.5.22, %kern_height
  br i1 %exitcond19.5.22, label %for.end38.5.22.loopexit, label %for.body10.5.22, !llvm.loop !3

for.end38.5.22.loopexit:                          ; preds = %for.inc36.5.22
  %partial_sum.3.5.22.lcssa = phi float [ %partial_sum.3.5.22, %for.inc36.5.22 ]
  br label %for.end38.5.22

for.end38.5.22:                                   ; preds = %for.end38.5.22.loopexit, %for.inc53.4.22
  %partial_sum.0.lcssa.5.22 = phi float [ 0.000000e+00, %for.inc53.4.22 ], [ %partial_sum.3.5.22.lcssa, %for.end38.5.22.loopexit ]
  br i1 %tobool39, label %if.else.5.22, label %if.then40.5.22

if.then40.5.22:                                   ; preds = %for.end38.5.22
  %cmp41.5.22 = fcmp olt float %partial_sum.0.lcssa.5.22, 0.000000e+00
  %sub42.5.22 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.22
  %cond.5.22 = select i1 %cmp41.5.22, float %sub42.5.22, float %partial_sum.0.lcssa.5.22
  %conv.5.22 = fptoui float %cond.5.22 to i8
  %conv43.5.22 = uitofp i8 %conv.5.22 to float
  %1628 = add nsw i64 %indvars.iv.next21.4.22, %1580
  %arrayidx47.5.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1628
  store float %conv43.5.22, float* %arrayidx47.5.22, align 4
  br label %for.inc53.5.22

if.else.5.22:                                     ; preds = %for.end38.5.22
  %1629 = add nsw i64 %indvars.iv.next21.4.22, %1579
  %arrayidx51.5.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1629
  store float %partial_sum.0.lcssa.5.22, float* %arrayidx51.5.22, align 4
  br label %for.inc53.5.22

for.inc53.5.22:                                   ; preds = %if.else.5.22, %if.then40.5.22
  %inc54.5.22 = add nsw i32 %in_j.011.22, 6
  %indvars.iv.next21.5.22 = add nsw i64 %indvars.iv20.22, 6
  br i1 %cmp94, label %for.end38.6.22, label %for.body10.6.22.preheader

for.body10.6.22.preheader:                        ; preds = %for.inc53.5.22
  br label %for.body10.6.22

for.body10.6.22:                                  ; preds = %for.body10.6.22.preheader, %for.inc36.6.22
  %ki.06.6.22 = phi i32 [ %inc37.6.22, %for.inc36.6.22 ], [ 0, %for.body10.6.22.preheader ]
  %partial_sum.05.6.22 = phi float [ %partial_sum.3.6.22, %for.inc36.6.22 ], [ 0.000000e+00, %for.body10.6.22.preheader ]
  %add.6.22 = add nsw i32 %ki.06.6.22, %inc58.21
  %notlhs.6.22 = icmp slt i32 %add.6.22, 0
  %notrhs.6.22 = icmp uge i32 %add.6.22, %img_height
  %.not.6.22 = or i1 %notrhs.6.22, %notlhs.6.22
  %brmerge.6.22 = or i1 %.not.6.22, %cmp151.not.6.22
  br i1 %brmerge.6.22, label %for.inc36.6.22, label %for.body16.lr.ph.6.22

for.body16.lr.ph.6.22:                            ; preds = %for.body10.6.22
  %mul.6.22 = shl i32 %add.6.22, 7
  %mul30.6.22 = mul i32 %ki.06.6.22, %kern_width
  br label %for.body16.6.22

for.body16.6.22:                                  ; preds = %for.inc.6.22, %for.body16.lr.ph.6.22
  %indvars.iv.6.22 = phi i64 [ 0, %for.body16.lr.ph.6.22 ], [ %indvars.iv.next.6.22, %for.inc.6.22 ]
  %partial_sum.12.6.22 = phi float [ %partial_sum.05.6.22, %for.body16.lr.ph.6.22 ], [ %partial_sum.2.6.22, %for.inc.6.22 ]
  %1630 = trunc i64 %indvars.iv.6.22 to i32
  %add17.6.22 = add nsw i32 %1630, %inc54.5.22
  %cmp18.6.22 = icmp sgt i32 %add17.6.22, -1
  %cmp21.6.22 = icmp ult i32 %add17.6.22, %img_width
  %1631 = and i1 %cmp18.6.22, %cmp21.6.22
  br i1 %1631, label %if.end26.6.22, label %for.inc.6.22

if.end26.6.22:                                    ; preds = %for.body16.6.22
  %add29.6.22 = add nsw i32 %add17.6.22, %mul.6.22
  %idxprom.6.22 = sext i32 %add29.6.22 to i64
  %arrayidx.6.22 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.22
  %1632 = load float, float* %arrayidx.6.22, align 4
  %1633 = trunc i64 %indvars.iv.6.22 to i32
  %add31.6.22 = add i32 %1633, %mul30.6.22
  %idxprom32.6.22 = zext i32 %add31.6.22 to i64
  %arrayidx33.6.22 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.22
  %1634 = load float, float* %arrayidx33.6.22, align 4
  %mul34.6.22 = fmul float %1632, %1634
  %add35.6.22 = fadd float %partial_sum.12.6.22, %mul34.6.22
  br label %for.inc.6.22

for.inc.6.22:                                     ; preds = %if.end26.6.22, %for.body16.6.22
  %partial_sum.2.6.22 = phi float [ %add35.6.22, %if.end26.6.22 ], [ %partial_sum.12.6.22, %for.body16.6.22 ]
  %indvars.iv.next.6.22 = add nuw nsw i64 %indvars.iv.6.22, 1
  %lftr.wideiv.6.22 = trunc i64 %indvars.iv.next.6.22 to i32
  %exitcond.6.22 = icmp eq i32 %lftr.wideiv.6.22, %kern_width
  br i1 %exitcond.6.22, label %for.inc36.6.22.loopexit, label %for.body16.6.22, !llvm.loop !1

for.inc36.6.22.loopexit:                          ; preds = %for.inc.6.22
  %partial_sum.2.6.22.lcssa = phi float [ %partial_sum.2.6.22, %for.inc.6.22 ]
  br label %for.inc36.6.22

for.inc36.6.22:                                   ; preds = %for.inc36.6.22.loopexit, %for.body10.6.22
  %partial_sum.3.6.22 = phi float [ %partial_sum.05.6.22, %for.body10.6.22 ], [ %partial_sum.2.6.22.lcssa, %for.inc36.6.22.loopexit ]
  %inc37.6.22 = add nuw nsw i32 %ki.06.6.22, 1
  %exitcond19.6.22 = icmp eq i32 %inc37.6.22, %kern_height
  br i1 %exitcond19.6.22, label %for.end38.6.22.loopexit, label %for.body10.6.22, !llvm.loop !3

for.end38.6.22.loopexit:                          ; preds = %for.inc36.6.22
  %partial_sum.3.6.22.lcssa = phi float [ %partial_sum.3.6.22, %for.inc36.6.22 ]
  br label %for.end38.6.22

for.end38.6.22:                                   ; preds = %for.end38.6.22.loopexit, %for.inc53.5.22
  %partial_sum.0.lcssa.6.22 = phi float [ 0.000000e+00, %for.inc53.5.22 ], [ %partial_sum.3.6.22.lcssa, %for.end38.6.22.loopexit ]
  br i1 %tobool39, label %if.else.6.22, label %if.then40.6.22

if.then40.6.22:                                   ; preds = %for.end38.6.22
  %cmp41.6.22 = fcmp olt float %partial_sum.0.lcssa.6.22, 0.000000e+00
  %sub42.6.22 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.22
  %cond.6.22 = select i1 %cmp41.6.22, float %sub42.6.22, float %partial_sum.0.lcssa.6.22
  %conv.6.22 = fptoui float %cond.6.22 to i8
  %conv43.6.22 = uitofp i8 %conv.6.22 to float
  %1635 = add nsw i64 %indvars.iv.next21.5.22, %1580
  %arrayidx47.6.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1635
  store float %conv43.6.22, float* %arrayidx47.6.22, align 4
  br label %for.inc53.6.22

if.else.6.22:                                     ; preds = %for.end38.6.22
  %1636 = add nsw i64 %indvars.iv.next21.5.22, %1579
  %arrayidx51.6.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1636
  store float %partial_sum.0.lcssa.6.22, float* %arrayidx51.6.22, align 4
  br label %for.inc53.6.22

for.inc53.6.22:                                   ; preds = %if.else.6.22, %if.then40.6.22
  %inc54.6.22 = add nsw i32 %in_j.011.22, 7
  %indvars.iv.next21.6.22 = add nsw i64 %indvars.iv20.22, 7
  br i1 %cmp94, label %for.end38.7.22, label %for.body10.7.22.preheader

for.body10.7.22.preheader:                        ; preds = %for.inc53.6.22
  br label %for.body10.7.22

for.body10.7.22:                                  ; preds = %for.body10.7.22.preheader, %for.inc36.7.22
  %ki.06.7.22 = phi i32 [ %inc37.7.22, %for.inc36.7.22 ], [ 0, %for.body10.7.22.preheader ]
  %partial_sum.05.7.22 = phi float [ %partial_sum.3.7.22, %for.inc36.7.22 ], [ 0.000000e+00, %for.body10.7.22.preheader ]
  %add.7.22 = add nsw i32 %ki.06.7.22, %inc58.21
  %notlhs.7.22 = icmp slt i32 %add.7.22, 0
  %notrhs.7.22 = icmp uge i32 %add.7.22, %img_height
  %.not.7.22 = or i1 %notrhs.7.22, %notlhs.7.22
  %brmerge.7.22 = or i1 %.not.7.22, %cmp151.not.7.22
  br i1 %brmerge.7.22, label %for.inc36.7.22, label %for.body16.lr.ph.7.22

for.body16.lr.ph.7.22:                            ; preds = %for.body10.7.22
  %mul.7.22 = shl i32 %add.7.22, 7
  %mul30.7.22 = mul i32 %ki.06.7.22, %kern_width
  br label %for.body16.7.22

for.body16.7.22:                                  ; preds = %for.inc.7.22, %for.body16.lr.ph.7.22
  %indvars.iv.7.22 = phi i64 [ 0, %for.body16.lr.ph.7.22 ], [ %indvars.iv.next.7.22, %for.inc.7.22 ]
  %partial_sum.12.7.22 = phi float [ %partial_sum.05.7.22, %for.body16.lr.ph.7.22 ], [ %partial_sum.2.7.22, %for.inc.7.22 ]
  %1637 = trunc i64 %indvars.iv.7.22 to i32
  %add17.7.22 = add nsw i32 %1637, %inc54.6.22
  %cmp18.7.22 = icmp sgt i32 %add17.7.22, -1
  %cmp21.7.22 = icmp ult i32 %add17.7.22, %img_width
  %1638 = and i1 %cmp18.7.22, %cmp21.7.22
  br i1 %1638, label %if.end26.7.22, label %for.inc.7.22

if.end26.7.22:                                    ; preds = %for.body16.7.22
  %add29.7.22 = add nsw i32 %add17.7.22, %mul.7.22
  %idxprom.7.22 = sext i32 %add29.7.22 to i64
  %arrayidx.7.22 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.22
  %1639 = load float, float* %arrayidx.7.22, align 4
  %1640 = trunc i64 %indvars.iv.7.22 to i32
  %add31.7.22 = add i32 %1640, %mul30.7.22
  %idxprom32.7.22 = zext i32 %add31.7.22 to i64
  %arrayidx33.7.22 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.22
  %1641 = load float, float* %arrayidx33.7.22, align 4
  %mul34.7.22 = fmul float %1639, %1641
  %add35.7.22 = fadd float %partial_sum.12.7.22, %mul34.7.22
  br label %for.inc.7.22

for.inc.7.22:                                     ; preds = %if.end26.7.22, %for.body16.7.22
  %partial_sum.2.7.22 = phi float [ %add35.7.22, %if.end26.7.22 ], [ %partial_sum.12.7.22, %for.body16.7.22 ]
  %indvars.iv.next.7.22 = add nuw nsw i64 %indvars.iv.7.22, 1
  %lftr.wideiv.7.22 = trunc i64 %indvars.iv.next.7.22 to i32
  %exitcond.7.22 = icmp eq i32 %lftr.wideiv.7.22, %kern_width
  br i1 %exitcond.7.22, label %for.inc36.7.22.loopexit, label %for.body16.7.22, !llvm.loop !1

for.inc36.7.22.loopexit:                          ; preds = %for.inc.7.22
  %partial_sum.2.7.22.lcssa = phi float [ %partial_sum.2.7.22, %for.inc.7.22 ]
  br label %for.inc36.7.22

for.inc36.7.22:                                   ; preds = %for.inc36.7.22.loopexit, %for.body10.7.22
  %partial_sum.3.7.22 = phi float [ %partial_sum.05.7.22, %for.body10.7.22 ], [ %partial_sum.2.7.22.lcssa, %for.inc36.7.22.loopexit ]
  %inc37.7.22 = add nuw nsw i32 %ki.06.7.22, 1
  %exitcond19.7.22 = icmp eq i32 %inc37.7.22, %kern_height
  br i1 %exitcond19.7.22, label %for.end38.7.22.loopexit, label %for.body10.7.22, !llvm.loop !3

for.end38.7.22.loopexit:                          ; preds = %for.inc36.7.22
  %partial_sum.3.7.22.lcssa = phi float [ %partial_sum.3.7.22, %for.inc36.7.22 ]
  br label %for.end38.7.22

for.end38.7.22:                                   ; preds = %for.end38.7.22.loopexit, %for.inc53.6.22
  %partial_sum.0.lcssa.7.22 = phi float [ 0.000000e+00, %for.inc53.6.22 ], [ %partial_sum.3.7.22.lcssa, %for.end38.7.22.loopexit ]
  br i1 %tobool39, label %if.else.7.22, label %if.then40.7.22

if.then40.7.22:                                   ; preds = %for.end38.7.22
  %cmp41.7.22 = fcmp olt float %partial_sum.0.lcssa.7.22, 0.000000e+00
  %sub42.7.22 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.22
  %cond.7.22 = select i1 %cmp41.7.22, float %sub42.7.22, float %partial_sum.0.lcssa.7.22
  %conv.7.22 = fptoui float %cond.7.22 to i8
  %conv43.7.22 = uitofp i8 %conv.7.22 to float
  %1642 = add nsw i64 %indvars.iv.next21.6.22, %1580
  %arrayidx47.7.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1642
  store float %conv43.7.22, float* %arrayidx47.7.22, align 4
  br label %for.inc53.7.22

if.else.7.22:                                     ; preds = %for.end38.7.22
  %1643 = add nsw i64 %indvars.iv.next21.6.22, %1579
  %arrayidx51.7.22 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1643
  store float %partial_sum.0.lcssa.7.22, float* %arrayidx51.7.22, align 4
  br label %for.inc53.7.22

for.inc53.7.22:                                   ; preds = %if.else.7.22, %if.then40.7.22
  %inc54.7.22 = add nsw i32 %in_j.011.22, 8
  %indvars.iv.next21.7.22 = add nsw i64 %indvars.iv20.22, 8
  %lftr.wideiv24.7.22 = trunc i64 %indvars.iv.next21.7.22 to i32
  %exitcond25.7.22 = icmp eq i32 %lftr.wideiv24.7.22, %img_width
  br i1 %exitcond25.7.22, label %for.inc57.22.loopexit, label %for.cond8.preheader.22, !llvm.loop !5

for.inc57.22.loopexit:                            ; preds = %for.inc53.7.22
  br label %for.inc57.22

for.inc57.22:                                     ; preds = %for.inc57.22.loopexit, %for.cond8.preheader.lr.ph.split.22
  %inc58.22 = add nsw i32 %in_i.015, 23
  %indvars.iv.next27.22 = add nsw i64 %indvars.iv26, 23
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.23

for.cond8.preheader.lr.ph.23:                     ; preds = %for.inc57.22
  %1644 = trunc i64 %indvars.iv.next27.22 to i32
  %mul48.23 = shl i32 %1644, 7
  %1645 = trunc i64 %indvars.iv.next27.22 to i32
  %mul44.23 = shl i32 %1645, 7
  %1646 = sext i32 %mul48.23 to i64
  %1647 = sext i32 %mul44.23 to i64
  br i1 %lcmp.mod.23, label %for.cond8.preheader.lr.ph.split.23, label %for.cond8.preheader.prol.23.preheader

for.cond8.preheader.prol.23.preheader:            ; preds = %for.cond8.preheader.lr.ph.23
  br label %for.cond8.preheader.prol.23

for.cond8.preheader.prol.23:                      ; preds = %for.cond8.preheader.prol.23.preheader, %for.inc53.prol.23
  %indvars.iv20.prol.23 = phi i64 [ %indvars.iv.next21.prol.23, %for.inc53.prol.23 ], [ 0, %for.cond8.preheader.prol.23.preheader ]
  %in_j.011.prol.23 = phi i32 [ %inc54.prol.23, %for.inc53.prol.23 ], [ %sub4, %for.cond8.preheader.prol.23.preheader ]
  %prol.iter.23 = phi i32 [ %prol.iter.sub.23, %for.inc53.prol.23 ], [ %xtraiter.23, %for.cond8.preheader.prol.23.preheader ]
  br i1 %cmp94, label %for.end38.prol.23, label %for.body10.prol.23.preheader

for.body10.prol.23.preheader:                     ; preds = %for.cond8.preheader.prol.23
  br label %for.body10.prol.23

for.body10.prol.23:                               ; preds = %for.body10.prol.23.preheader, %for.inc36.prol.23
  %ki.06.prol.23 = phi i32 [ %inc37.prol.23, %for.inc36.prol.23 ], [ 0, %for.body10.prol.23.preheader ]
  %partial_sum.05.prol.23 = phi float [ %partial_sum.3.prol.23, %for.inc36.prol.23 ], [ 0.000000e+00, %for.body10.prol.23.preheader ]
  %add.prol.23 = add nsw i32 %ki.06.prol.23, %inc58.22
  %notlhs.prol.23 = icmp slt i32 %add.prol.23, 0
  %notrhs.prol.23 = icmp uge i32 %add.prol.23, %img_height
  %.not.prol.23 = or i1 %notrhs.prol.23, %notlhs.prol.23
  %brmerge.prol.23 = or i1 %.not.prol.23, %cmp151.not.prol.23
  br i1 %brmerge.prol.23, label %for.inc36.prol.23, label %for.body16.lr.ph.prol.23

for.body16.lr.ph.prol.23:                         ; preds = %for.body10.prol.23
  %mul.prol.23 = shl i32 %add.prol.23, 7
  %mul30.prol.23 = mul i32 %ki.06.prol.23, %kern_width
  br label %for.body16.prol.23

for.body16.prol.23:                               ; preds = %for.inc.prol.23, %for.body16.lr.ph.prol.23
  %indvars.iv.prol.23 = phi i64 [ 0, %for.body16.lr.ph.prol.23 ], [ %indvars.iv.next.prol.23, %for.inc.prol.23 ]
  %partial_sum.12.prol.23 = phi float [ %partial_sum.05.prol.23, %for.body16.lr.ph.prol.23 ], [ %partial_sum.2.prol.23, %for.inc.prol.23 ]
  %1648 = trunc i64 %indvars.iv.prol.23 to i32
  %add17.prol.23 = add nsw i32 %1648, %in_j.011.prol.23
  %cmp18.prol.23 = icmp sgt i32 %add17.prol.23, -1
  %cmp21.prol.23 = icmp ult i32 %add17.prol.23, %img_width
  %1649 = and i1 %cmp18.prol.23, %cmp21.prol.23
  br i1 %1649, label %if.end26.prol.23, label %for.inc.prol.23

if.end26.prol.23:                                 ; preds = %for.body16.prol.23
  %add29.prol.23 = add nsw i32 %add17.prol.23, %mul.prol.23
  %idxprom.prol.23 = sext i32 %add29.prol.23 to i64
  %arrayidx.prol.23 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.23
  %1650 = load float, float* %arrayidx.prol.23, align 4
  %1651 = trunc i64 %indvars.iv.prol.23 to i32
  %add31.prol.23 = add i32 %1651, %mul30.prol.23
  %idxprom32.prol.23 = zext i32 %add31.prol.23 to i64
  %arrayidx33.prol.23 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.23
  %1652 = load float, float* %arrayidx33.prol.23, align 4
  %mul34.prol.23 = fmul float %1650, %1652
  %add35.prol.23 = fadd float %partial_sum.12.prol.23, %mul34.prol.23
  br label %for.inc.prol.23

for.inc.prol.23:                                  ; preds = %if.end26.prol.23, %for.body16.prol.23
  %partial_sum.2.prol.23 = phi float [ %add35.prol.23, %if.end26.prol.23 ], [ %partial_sum.12.prol.23, %for.body16.prol.23 ]
  %indvars.iv.next.prol.23 = add nuw nsw i64 %indvars.iv.prol.23, 1
  %lftr.wideiv.prol.23 = trunc i64 %indvars.iv.next.prol.23 to i32
  %exitcond.prol.23 = icmp eq i32 %lftr.wideiv.prol.23, %kern_width
  br i1 %exitcond.prol.23, label %for.inc36.prol.23.loopexit, label %for.body16.prol.23, !llvm.loop !1

for.inc36.prol.23.loopexit:                       ; preds = %for.inc.prol.23
  %partial_sum.2.prol.23.lcssa = phi float [ %partial_sum.2.prol.23, %for.inc.prol.23 ]
  br label %for.inc36.prol.23

for.inc36.prol.23:                                ; preds = %for.inc36.prol.23.loopexit, %for.body10.prol.23
  %partial_sum.3.prol.23 = phi float [ %partial_sum.05.prol.23, %for.body10.prol.23 ], [ %partial_sum.2.prol.23.lcssa, %for.inc36.prol.23.loopexit ]
  %inc37.prol.23 = add nuw nsw i32 %ki.06.prol.23, 1
  %exitcond19.prol.23 = icmp eq i32 %inc37.prol.23, %kern_height
  br i1 %exitcond19.prol.23, label %for.end38.prol.23.loopexit, label %for.body10.prol.23, !llvm.loop !3

for.end38.prol.23.loopexit:                       ; preds = %for.inc36.prol.23
  %partial_sum.3.prol.23.lcssa = phi float [ %partial_sum.3.prol.23, %for.inc36.prol.23 ]
  br label %for.end38.prol.23

for.end38.prol.23:                                ; preds = %for.end38.prol.23.loopexit, %for.cond8.preheader.prol.23
  %partial_sum.0.lcssa.prol.23 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.23 ], [ %partial_sum.3.prol.23.lcssa, %for.end38.prol.23.loopexit ]
  br i1 %tobool39, label %if.else.prol.23, label %if.then40.prol.23

if.then40.prol.23:                                ; preds = %for.end38.prol.23
  %cmp41.prol.23 = fcmp olt float %partial_sum.0.lcssa.prol.23, 0.000000e+00
  %sub42.prol.23 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.23
  %cond.prol.23 = select i1 %cmp41.prol.23, float %sub42.prol.23, float %partial_sum.0.lcssa.prol.23
  %conv.prol.23 = fptoui float %cond.prol.23 to i8
  %conv43.prol.23 = uitofp i8 %conv.prol.23 to float
  %1653 = add nsw i64 %indvars.iv20.prol.23, %1647
  %arrayidx47.prol.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1653
  store float %conv43.prol.23, float* %arrayidx47.prol.23, align 4
  br label %for.inc53.prol.23

if.else.prol.23:                                  ; preds = %for.end38.prol.23
  %1654 = add nsw i64 %indvars.iv20.prol.23, %1646
  %arrayidx51.prol.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1654
  store float %partial_sum.0.lcssa.prol.23, float* %arrayidx51.prol.23, align 4
  br label %for.inc53.prol.23

for.inc53.prol.23:                                ; preds = %if.else.prol.23, %if.then40.prol.23
  %inc54.prol.23 = add nsw i32 %in_j.011.prol.23, 1
  %indvars.iv.next21.prol.23 = add nuw nsw i64 %indvars.iv20.prol.23, 1
  %prol.iter.sub.23 = add i32 %prol.iter.23, -1
  %prol.iter.cmp.23 = icmp eq i32 %prol.iter.sub.23, 0
  br i1 %prol.iter.cmp.23, label %for.cond8.preheader.lr.ph.split.23.loopexit, label %for.cond8.preheader.prol.23, !llvm.loop !4

for.cond8.preheader.lr.ph.split.23.loopexit:      ; preds = %for.inc53.prol.23
  %indvars.iv.next21.prol.23.lcssa = phi i64 [ %indvars.iv.next21.prol.23, %for.inc53.prol.23 ]
  %inc54.prol.23.lcssa = phi i32 [ %inc54.prol.23, %for.inc53.prol.23 ]
  br label %for.cond8.preheader.lr.ph.split.23

for.cond8.preheader.lr.ph.split.23:               ; preds = %for.cond8.preheader.lr.ph.split.23.loopexit, %for.cond8.preheader.lr.ph.23
  %indvars.iv20.unr.23 = phi i64 [ 0, %for.cond8.preheader.lr.ph.23 ], [ %indvars.iv.next21.prol.23.lcssa, %for.cond8.preheader.lr.ph.split.23.loopexit ]
  %in_j.011.unr.23 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.23 ], [ %inc54.prol.23.lcssa, %for.cond8.preheader.lr.ph.split.23.loopexit ]
  br i1 %94, label %for.inc57.23, label %for.cond8.preheader.23.preheader

for.cond8.preheader.23.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.23
  br label %for.cond8.preheader.23

for.cond8.preheader.23:                           ; preds = %for.cond8.preheader.23.preheader, %for.inc53.7.23
  %indvars.iv20.23 = phi i64 [ %indvars.iv.next21.7.23, %for.inc53.7.23 ], [ %indvars.iv20.unr.23, %for.cond8.preheader.23.preheader ]
  %in_j.011.23 = phi i32 [ %inc54.7.23, %for.inc53.7.23 ], [ %in_j.011.unr.23, %for.cond8.preheader.23.preheader ]
  br i1 %cmp94, label %for.end38.23, label %for.body10.23.preheader

for.body10.23.preheader:                          ; preds = %for.cond8.preheader.23
  br label %for.body10.23

for.body10.23:                                    ; preds = %for.body10.23.preheader, %for.inc36.23
  %ki.06.23 = phi i32 [ %inc37.23, %for.inc36.23 ], [ 0, %for.body10.23.preheader ]
  %partial_sum.05.23 = phi float [ %partial_sum.3.23, %for.inc36.23 ], [ 0.000000e+00, %for.body10.23.preheader ]
  %add.23 = add nsw i32 %ki.06.23, %inc58.22
  %notlhs.23 = icmp slt i32 %add.23, 0
  %notrhs.23 = icmp uge i32 %add.23, %img_height
  %.not.23 = or i1 %notrhs.23, %notlhs.23
  %brmerge.23 = or i1 %.not.23, %cmp151.not.23
  br i1 %brmerge.23, label %for.inc36.23, label %for.body16.lr.ph.23

for.body16.lr.ph.23:                              ; preds = %for.body10.23
  %mul.23 = shl i32 %add.23, 7
  %mul30.23 = mul i32 %ki.06.23, %kern_width
  br label %for.body16.23

for.body16.23:                                    ; preds = %for.inc.23, %for.body16.lr.ph.23
  %indvars.iv.23 = phi i64 [ 0, %for.body16.lr.ph.23 ], [ %indvars.iv.next.23, %for.inc.23 ]
  %partial_sum.12.23 = phi float [ %partial_sum.05.23, %for.body16.lr.ph.23 ], [ %partial_sum.2.23, %for.inc.23 ]
  %1655 = trunc i64 %indvars.iv.23 to i32
  %add17.23 = add nsw i32 %1655, %in_j.011.23
  %cmp18.23 = icmp sgt i32 %add17.23, -1
  %cmp21.23 = icmp ult i32 %add17.23, %img_width
  %1656 = and i1 %cmp18.23, %cmp21.23
  br i1 %1656, label %if.end26.23, label %for.inc.23

if.end26.23:                                      ; preds = %for.body16.23
  %add29.23 = add nsw i32 %add17.23, %mul.23
  %idxprom.23 = sext i32 %add29.23 to i64
  %arrayidx.23 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.23
  %1657 = load float, float* %arrayidx.23, align 4
  %1658 = trunc i64 %indvars.iv.23 to i32
  %add31.23 = add i32 %1658, %mul30.23
  %idxprom32.23 = zext i32 %add31.23 to i64
  %arrayidx33.23 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.23
  %1659 = load float, float* %arrayidx33.23, align 4
  %mul34.23 = fmul float %1657, %1659
  %add35.23 = fadd float %partial_sum.12.23, %mul34.23
  br label %for.inc.23

for.inc.23:                                       ; preds = %if.end26.23, %for.body16.23
  %partial_sum.2.23 = phi float [ %add35.23, %if.end26.23 ], [ %partial_sum.12.23, %for.body16.23 ]
  %indvars.iv.next.23 = add nuw nsw i64 %indvars.iv.23, 1
  %lftr.wideiv.23 = trunc i64 %indvars.iv.next.23 to i32
  %exitcond.23 = icmp eq i32 %lftr.wideiv.23, %kern_width
  br i1 %exitcond.23, label %for.inc36.23.loopexit, label %for.body16.23, !llvm.loop !1

for.inc36.23.loopexit:                            ; preds = %for.inc.23
  %partial_sum.2.23.lcssa = phi float [ %partial_sum.2.23, %for.inc.23 ]
  br label %for.inc36.23

for.inc36.23:                                     ; preds = %for.inc36.23.loopexit, %for.body10.23
  %partial_sum.3.23 = phi float [ %partial_sum.05.23, %for.body10.23 ], [ %partial_sum.2.23.lcssa, %for.inc36.23.loopexit ]
  %inc37.23 = add nuw nsw i32 %ki.06.23, 1
  %exitcond19.23 = icmp eq i32 %inc37.23, %kern_height
  br i1 %exitcond19.23, label %for.end38.23.loopexit, label %for.body10.23, !llvm.loop !3

for.end38.23.loopexit:                            ; preds = %for.inc36.23
  %partial_sum.3.23.lcssa = phi float [ %partial_sum.3.23, %for.inc36.23 ]
  br label %for.end38.23

for.end38.23:                                     ; preds = %for.end38.23.loopexit, %for.cond8.preheader.23
  %partial_sum.0.lcssa.23 = phi float [ 0.000000e+00, %for.cond8.preheader.23 ], [ %partial_sum.3.23.lcssa, %for.end38.23.loopexit ]
  br i1 %tobool39, label %if.else.23, label %if.then40.23

if.then40.23:                                     ; preds = %for.end38.23
  %cmp41.23 = fcmp olt float %partial_sum.0.lcssa.23, 0.000000e+00
  %sub42.23 = fsub float -0.000000e+00, %partial_sum.0.lcssa.23
  %cond.23 = select i1 %cmp41.23, float %sub42.23, float %partial_sum.0.lcssa.23
  %conv.23 = fptoui float %cond.23 to i8
  %conv43.23 = uitofp i8 %conv.23 to float
  %1660 = add nsw i64 %indvars.iv20.23, %1647
  %arrayidx47.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1660
  store float %conv43.23, float* %arrayidx47.23, align 4
  br label %for.inc53.23

if.else.23:                                       ; preds = %for.end38.23
  %1661 = add nsw i64 %indvars.iv20.23, %1646
  %arrayidx51.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1661
  store float %partial_sum.0.lcssa.23, float* %arrayidx51.23, align 4
  br label %for.inc53.23

for.inc53.23:                                     ; preds = %if.else.23, %if.then40.23
  %inc54.23 = add nsw i32 %in_j.011.23, 1
  %indvars.iv.next21.23 = add nuw nsw i64 %indvars.iv20.23, 1
  br i1 %cmp94, label %for.end38.1.23, label %for.body10.1.23.preheader

for.body10.1.23.preheader:                        ; preds = %for.inc53.23
  br label %for.body10.1.23

for.body10.1.23:                                  ; preds = %for.body10.1.23.preheader, %for.inc36.1.23
  %ki.06.1.23 = phi i32 [ %inc37.1.23, %for.inc36.1.23 ], [ 0, %for.body10.1.23.preheader ]
  %partial_sum.05.1.23 = phi float [ %partial_sum.3.1.23, %for.inc36.1.23 ], [ 0.000000e+00, %for.body10.1.23.preheader ]
  %add.1.23 = add nsw i32 %ki.06.1.23, %inc58.22
  %notlhs.1.23 = icmp slt i32 %add.1.23, 0
  %notrhs.1.23 = icmp uge i32 %add.1.23, %img_height
  %.not.1.23 = or i1 %notrhs.1.23, %notlhs.1.23
  %brmerge.1.23 = or i1 %.not.1.23, %cmp151.not.1.23
  br i1 %brmerge.1.23, label %for.inc36.1.23, label %for.body16.lr.ph.1.23

for.body16.lr.ph.1.23:                            ; preds = %for.body10.1.23
  %mul.1.23 = shl i32 %add.1.23, 7
  %mul30.1.23 = mul i32 %ki.06.1.23, %kern_width
  br label %for.body16.1.23

for.body16.1.23:                                  ; preds = %for.inc.1.23, %for.body16.lr.ph.1.23
  %indvars.iv.1.23 = phi i64 [ 0, %for.body16.lr.ph.1.23 ], [ %indvars.iv.next.1.23, %for.inc.1.23 ]
  %partial_sum.12.1.23 = phi float [ %partial_sum.05.1.23, %for.body16.lr.ph.1.23 ], [ %partial_sum.2.1.23, %for.inc.1.23 ]
  %1662 = trunc i64 %indvars.iv.1.23 to i32
  %add17.1.23 = add nsw i32 %1662, %inc54.23
  %cmp18.1.23 = icmp sgt i32 %add17.1.23, -1
  %cmp21.1.23 = icmp ult i32 %add17.1.23, %img_width
  %1663 = and i1 %cmp18.1.23, %cmp21.1.23
  br i1 %1663, label %if.end26.1.23, label %for.inc.1.23

if.end26.1.23:                                    ; preds = %for.body16.1.23
  %add29.1.23 = add nsw i32 %add17.1.23, %mul.1.23
  %idxprom.1.23 = sext i32 %add29.1.23 to i64
  %arrayidx.1.23 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.23
  %1664 = load float, float* %arrayidx.1.23, align 4
  %1665 = trunc i64 %indvars.iv.1.23 to i32
  %add31.1.23 = add i32 %1665, %mul30.1.23
  %idxprom32.1.23 = zext i32 %add31.1.23 to i64
  %arrayidx33.1.23 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.23
  %1666 = load float, float* %arrayidx33.1.23, align 4
  %mul34.1.23 = fmul float %1664, %1666
  %add35.1.23 = fadd float %partial_sum.12.1.23, %mul34.1.23
  br label %for.inc.1.23

for.inc.1.23:                                     ; preds = %if.end26.1.23, %for.body16.1.23
  %partial_sum.2.1.23 = phi float [ %add35.1.23, %if.end26.1.23 ], [ %partial_sum.12.1.23, %for.body16.1.23 ]
  %indvars.iv.next.1.23 = add nuw nsw i64 %indvars.iv.1.23, 1
  %lftr.wideiv.1.23 = trunc i64 %indvars.iv.next.1.23 to i32
  %exitcond.1.23 = icmp eq i32 %lftr.wideiv.1.23, %kern_width
  br i1 %exitcond.1.23, label %for.inc36.1.23.loopexit, label %for.body16.1.23, !llvm.loop !1

for.inc36.1.23.loopexit:                          ; preds = %for.inc.1.23
  %partial_sum.2.1.23.lcssa = phi float [ %partial_sum.2.1.23, %for.inc.1.23 ]
  br label %for.inc36.1.23

for.inc36.1.23:                                   ; preds = %for.inc36.1.23.loopexit, %for.body10.1.23
  %partial_sum.3.1.23 = phi float [ %partial_sum.05.1.23, %for.body10.1.23 ], [ %partial_sum.2.1.23.lcssa, %for.inc36.1.23.loopexit ]
  %inc37.1.23 = add nuw nsw i32 %ki.06.1.23, 1
  %exitcond19.1.23 = icmp eq i32 %inc37.1.23, %kern_height
  br i1 %exitcond19.1.23, label %for.end38.1.23.loopexit, label %for.body10.1.23, !llvm.loop !3

for.end38.1.23.loopexit:                          ; preds = %for.inc36.1.23
  %partial_sum.3.1.23.lcssa = phi float [ %partial_sum.3.1.23, %for.inc36.1.23 ]
  br label %for.end38.1.23

for.end38.1.23:                                   ; preds = %for.end38.1.23.loopexit, %for.inc53.23
  %partial_sum.0.lcssa.1.23 = phi float [ 0.000000e+00, %for.inc53.23 ], [ %partial_sum.3.1.23.lcssa, %for.end38.1.23.loopexit ]
  br i1 %tobool39, label %if.else.1.23, label %if.then40.1.23

if.then40.1.23:                                   ; preds = %for.end38.1.23
  %cmp41.1.23 = fcmp olt float %partial_sum.0.lcssa.1.23, 0.000000e+00
  %sub42.1.23 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.23
  %cond.1.23 = select i1 %cmp41.1.23, float %sub42.1.23, float %partial_sum.0.lcssa.1.23
  %conv.1.23 = fptoui float %cond.1.23 to i8
  %conv43.1.23 = uitofp i8 %conv.1.23 to float
  %1667 = add nsw i64 %indvars.iv.next21.23, %1647
  %arrayidx47.1.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1667
  store float %conv43.1.23, float* %arrayidx47.1.23, align 4
  br label %for.inc53.1.23

if.else.1.23:                                     ; preds = %for.end38.1.23
  %1668 = add nsw i64 %indvars.iv.next21.23, %1646
  %arrayidx51.1.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1668
  store float %partial_sum.0.lcssa.1.23, float* %arrayidx51.1.23, align 4
  br label %for.inc53.1.23

for.inc53.1.23:                                   ; preds = %if.else.1.23, %if.then40.1.23
  %inc54.1.23 = add nsw i32 %in_j.011.23, 2
  %indvars.iv.next21.1.23 = add nsw i64 %indvars.iv20.23, 2
  br i1 %cmp94, label %for.end38.2.23, label %for.body10.2.23.preheader

for.body10.2.23.preheader:                        ; preds = %for.inc53.1.23
  br label %for.body10.2.23

for.body10.2.23:                                  ; preds = %for.body10.2.23.preheader, %for.inc36.2.23
  %ki.06.2.23 = phi i32 [ %inc37.2.23, %for.inc36.2.23 ], [ 0, %for.body10.2.23.preheader ]
  %partial_sum.05.2.23 = phi float [ %partial_sum.3.2.23, %for.inc36.2.23 ], [ 0.000000e+00, %for.body10.2.23.preheader ]
  %add.2.23 = add nsw i32 %ki.06.2.23, %inc58.22
  %notlhs.2.23 = icmp slt i32 %add.2.23, 0
  %notrhs.2.23 = icmp uge i32 %add.2.23, %img_height
  %.not.2.23 = or i1 %notrhs.2.23, %notlhs.2.23
  %brmerge.2.23 = or i1 %.not.2.23, %cmp151.not.2.23
  br i1 %brmerge.2.23, label %for.inc36.2.23, label %for.body16.lr.ph.2.23

for.body16.lr.ph.2.23:                            ; preds = %for.body10.2.23
  %mul.2.23 = shl i32 %add.2.23, 7
  %mul30.2.23 = mul i32 %ki.06.2.23, %kern_width
  br label %for.body16.2.23

for.body16.2.23:                                  ; preds = %for.inc.2.23, %for.body16.lr.ph.2.23
  %indvars.iv.2.23 = phi i64 [ 0, %for.body16.lr.ph.2.23 ], [ %indvars.iv.next.2.23, %for.inc.2.23 ]
  %partial_sum.12.2.23 = phi float [ %partial_sum.05.2.23, %for.body16.lr.ph.2.23 ], [ %partial_sum.2.2.23, %for.inc.2.23 ]
  %1669 = trunc i64 %indvars.iv.2.23 to i32
  %add17.2.23 = add nsw i32 %1669, %inc54.1.23
  %cmp18.2.23 = icmp sgt i32 %add17.2.23, -1
  %cmp21.2.23 = icmp ult i32 %add17.2.23, %img_width
  %1670 = and i1 %cmp18.2.23, %cmp21.2.23
  br i1 %1670, label %if.end26.2.23, label %for.inc.2.23

if.end26.2.23:                                    ; preds = %for.body16.2.23
  %add29.2.23 = add nsw i32 %add17.2.23, %mul.2.23
  %idxprom.2.23 = sext i32 %add29.2.23 to i64
  %arrayidx.2.23 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.23
  %1671 = load float, float* %arrayidx.2.23, align 4
  %1672 = trunc i64 %indvars.iv.2.23 to i32
  %add31.2.23 = add i32 %1672, %mul30.2.23
  %idxprom32.2.23 = zext i32 %add31.2.23 to i64
  %arrayidx33.2.23 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.23
  %1673 = load float, float* %arrayidx33.2.23, align 4
  %mul34.2.23 = fmul float %1671, %1673
  %add35.2.23 = fadd float %partial_sum.12.2.23, %mul34.2.23
  br label %for.inc.2.23

for.inc.2.23:                                     ; preds = %if.end26.2.23, %for.body16.2.23
  %partial_sum.2.2.23 = phi float [ %add35.2.23, %if.end26.2.23 ], [ %partial_sum.12.2.23, %for.body16.2.23 ]
  %indvars.iv.next.2.23 = add nuw nsw i64 %indvars.iv.2.23, 1
  %lftr.wideiv.2.23 = trunc i64 %indvars.iv.next.2.23 to i32
  %exitcond.2.23 = icmp eq i32 %lftr.wideiv.2.23, %kern_width
  br i1 %exitcond.2.23, label %for.inc36.2.23.loopexit, label %for.body16.2.23, !llvm.loop !1

for.inc36.2.23.loopexit:                          ; preds = %for.inc.2.23
  %partial_sum.2.2.23.lcssa = phi float [ %partial_sum.2.2.23, %for.inc.2.23 ]
  br label %for.inc36.2.23

for.inc36.2.23:                                   ; preds = %for.inc36.2.23.loopexit, %for.body10.2.23
  %partial_sum.3.2.23 = phi float [ %partial_sum.05.2.23, %for.body10.2.23 ], [ %partial_sum.2.2.23.lcssa, %for.inc36.2.23.loopexit ]
  %inc37.2.23 = add nuw nsw i32 %ki.06.2.23, 1
  %exitcond19.2.23 = icmp eq i32 %inc37.2.23, %kern_height
  br i1 %exitcond19.2.23, label %for.end38.2.23.loopexit, label %for.body10.2.23, !llvm.loop !3

for.end38.2.23.loopexit:                          ; preds = %for.inc36.2.23
  %partial_sum.3.2.23.lcssa = phi float [ %partial_sum.3.2.23, %for.inc36.2.23 ]
  br label %for.end38.2.23

for.end38.2.23:                                   ; preds = %for.end38.2.23.loopexit, %for.inc53.1.23
  %partial_sum.0.lcssa.2.23 = phi float [ 0.000000e+00, %for.inc53.1.23 ], [ %partial_sum.3.2.23.lcssa, %for.end38.2.23.loopexit ]
  br i1 %tobool39, label %if.else.2.23, label %if.then40.2.23

if.then40.2.23:                                   ; preds = %for.end38.2.23
  %cmp41.2.23 = fcmp olt float %partial_sum.0.lcssa.2.23, 0.000000e+00
  %sub42.2.23 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.23
  %cond.2.23 = select i1 %cmp41.2.23, float %sub42.2.23, float %partial_sum.0.lcssa.2.23
  %conv.2.23 = fptoui float %cond.2.23 to i8
  %conv43.2.23 = uitofp i8 %conv.2.23 to float
  %1674 = add nsw i64 %indvars.iv.next21.1.23, %1647
  %arrayidx47.2.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1674
  store float %conv43.2.23, float* %arrayidx47.2.23, align 4
  br label %for.inc53.2.23

if.else.2.23:                                     ; preds = %for.end38.2.23
  %1675 = add nsw i64 %indvars.iv.next21.1.23, %1646
  %arrayidx51.2.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1675
  store float %partial_sum.0.lcssa.2.23, float* %arrayidx51.2.23, align 4
  br label %for.inc53.2.23

for.inc53.2.23:                                   ; preds = %if.else.2.23, %if.then40.2.23
  %inc54.2.23 = add nsw i32 %in_j.011.23, 3
  %indvars.iv.next21.2.23 = add nsw i64 %indvars.iv20.23, 3
  br i1 %cmp94, label %for.end38.3.23, label %for.body10.3.23.preheader

for.body10.3.23.preheader:                        ; preds = %for.inc53.2.23
  br label %for.body10.3.23

for.body10.3.23:                                  ; preds = %for.body10.3.23.preheader, %for.inc36.3.23
  %ki.06.3.23 = phi i32 [ %inc37.3.23, %for.inc36.3.23 ], [ 0, %for.body10.3.23.preheader ]
  %partial_sum.05.3.23 = phi float [ %partial_sum.3.3.23, %for.inc36.3.23 ], [ 0.000000e+00, %for.body10.3.23.preheader ]
  %add.3.23 = add nsw i32 %ki.06.3.23, %inc58.22
  %notlhs.3.23 = icmp slt i32 %add.3.23, 0
  %notrhs.3.23 = icmp uge i32 %add.3.23, %img_height
  %.not.3.23 = or i1 %notrhs.3.23, %notlhs.3.23
  %brmerge.3.23 = or i1 %.not.3.23, %cmp151.not.3.23
  br i1 %brmerge.3.23, label %for.inc36.3.23, label %for.body16.lr.ph.3.23

for.body16.lr.ph.3.23:                            ; preds = %for.body10.3.23
  %mul.3.23 = shl i32 %add.3.23, 7
  %mul30.3.23 = mul i32 %ki.06.3.23, %kern_width
  br label %for.body16.3.23

for.body16.3.23:                                  ; preds = %for.inc.3.23, %for.body16.lr.ph.3.23
  %indvars.iv.3.23 = phi i64 [ 0, %for.body16.lr.ph.3.23 ], [ %indvars.iv.next.3.23, %for.inc.3.23 ]
  %partial_sum.12.3.23 = phi float [ %partial_sum.05.3.23, %for.body16.lr.ph.3.23 ], [ %partial_sum.2.3.23, %for.inc.3.23 ]
  %1676 = trunc i64 %indvars.iv.3.23 to i32
  %add17.3.23 = add nsw i32 %1676, %inc54.2.23
  %cmp18.3.23 = icmp sgt i32 %add17.3.23, -1
  %cmp21.3.23 = icmp ult i32 %add17.3.23, %img_width
  %1677 = and i1 %cmp18.3.23, %cmp21.3.23
  br i1 %1677, label %if.end26.3.23, label %for.inc.3.23

if.end26.3.23:                                    ; preds = %for.body16.3.23
  %add29.3.23 = add nsw i32 %add17.3.23, %mul.3.23
  %idxprom.3.23 = sext i32 %add29.3.23 to i64
  %arrayidx.3.23 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.23
  %1678 = load float, float* %arrayidx.3.23, align 4
  %1679 = trunc i64 %indvars.iv.3.23 to i32
  %add31.3.23 = add i32 %1679, %mul30.3.23
  %idxprom32.3.23 = zext i32 %add31.3.23 to i64
  %arrayidx33.3.23 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.23
  %1680 = load float, float* %arrayidx33.3.23, align 4
  %mul34.3.23 = fmul float %1678, %1680
  %add35.3.23 = fadd float %partial_sum.12.3.23, %mul34.3.23
  br label %for.inc.3.23

for.inc.3.23:                                     ; preds = %if.end26.3.23, %for.body16.3.23
  %partial_sum.2.3.23 = phi float [ %add35.3.23, %if.end26.3.23 ], [ %partial_sum.12.3.23, %for.body16.3.23 ]
  %indvars.iv.next.3.23 = add nuw nsw i64 %indvars.iv.3.23, 1
  %lftr.wideiv.3.23 = trunc i64 %indvars.iv.next.3.23 to i32
  %exitcond.3.23 = icmp eq i32 %lftr.wideiv.3.23, %kern_width
  br i1 %exitcond.3.23, label %for.inc36.3.23.loopexit, label %for.body16.3.23, !llvm.loop !1

for.inc36.3.23.loopexit:                          ; preds = %for.inc.3.23
  %partial_sum.2.3.23.lcssa = phi float [ %partial_sum.2.3.23, %for.inc.3.23 ]
  br label %for.inc36.3.23

for.inc36.3.23:                                   ; preds = %for.inc36.3.23.loopexit, %for.body10.3.23
  %partial_sum.3.3.23 = phi float [ %partial_sum.05.3.23, %for.body10.3.23 ], [ %partial_sum.2.3.23.lcssa, %for.inc36.3.23.loopexit ]
  %inc37.3.23 = add nuw nsw i32 %ki.06.3.23, 1
  %exitcond19.3.23 = icmp eq i32 %inc37.3.23, %kern_height
  br i1 %exitcond19.3.23, label %for.end38.3.23.loopexit, label %for.body10.3.23, !llvm.loop !3

for.end38.3.23.loopexit:                          ; preds = %for.inc36.3.23
  %partial_sum.3.3.23.lcssa = phi float [ %partial_sum.3.3.23, %for.inc36.3.23 ]
  br label %for.end38.3.23

for.end38.3.23:                                   ; preds = %for.end38.3.23.loopexit, %for.inc53.2.23
  %partial_sum.0.lcssa.3.23 = phi float [ 0.000000e+00, %for.inc53.2.23 ], [ %partial_sum.3.3.23.lcssa, %for.end38.3.23.loopexit ]
  br i1 %tobool39, label %if.else.3.23, label %if.then40.3.23

if.then40.3.23:                                   ; preds = %for.end38.3.23
  %cmp41.3.23 = fcmp olt float %partial_sum.0.lcssa.3.23, 0.000000e+00
  %sub42.3.23 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.23
  %cond.3.23 = select i1 %cmp41.3.23, float %sub42.3.23, float %partial_sum.0.lcssa.3.23
  %conv.3.23 = fptoui float %cond.3.23 to i8
  %conv43.3.23 = uitofp i8 %conv.3.23 to float
  %1681 = add nsw i64 %indvars.iv.next21.2.23, %1647
  %arrayidx47.3.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1681
  store float %conv43.3.23, float* %arrayidx47.3.23, align 4
  br label %for.inc53.3.23

if.else.3.23:                                     ; preds = %for.end38.3.23
  %1682 = add nsw i64 %indvars.iv.next21.2.23, %1646
  %arrayidx51.3.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1682
  store float %partial_sum.0.lcssa.3.23, float* %arrayidx51.3.23, align 4
  br label %for.inc53.3.23

for.inc53.3.23:                                   ; preds = %if.else.3.23, %if.then40.3.23
  %inc54.3.23 = add nsw i32 %in_j.011.23, 4
  %indvars.iv.next21.3.23 = add nsw i64 %indvars.iv20.23, 4
  br i1 %cmp94, label %for.end38.4.23, label %for.body10.4.23.preheader

for.body10.4.23.preheader:                        ; preds = %for.inc53.3.23
  br label %for.body10.4.23

for.body10.4.23:                                  ; preds = %for.body10.4.23.preheader, %for.inc36.4.23
  %ki.06.4.23 = phi i32 [ %inc37.4.23, %for.inc36.4.23 ], [ 0, %for.body10.4.23.preheader ]
  %partial_sum.05.4.23 = phi float [ %partial_sum.3.4.23, %for.inc36.4.23 ], [ 0.000000e+00, %for.body10.4.23.preheader ]
  %add.4.23 = add nsw i32 %ki.06.4.23, %inc58.22
  %notlhs.4.23 = icmp slt i32 %add.4.23, 0
  %notrhs.4.23 = icmp uge i32 %add.4.23, %img_height
  %.not.4.23 = or i1 %notrhs.4.23, %notlhs.4.23
  %brmerge.4.23 = or i1 %.not.4.23, %cmp151.not.4.23
  br i1 %brmerge.4.23, label %for.inc36.4.23, label %for.body16.lr.ph.4.23

for.body16.lr.ph.4.23:                            ; preds = %for.body10.4.23
  %mul.4.23 = shl i32 %add.4.23, 7
  %mul30.4.23 = mul i32 %ki.06.4.23, %kern_width
  br label %for.body16.4.23

for.body16.4.23:                                  ; preds = %for.inc.4.23, %for.body16.lr.ph.4.23
  %indvars.iv.4.23 = phi i64 [ 0, %for.body16.lr.ph.4.23 ], [ %indvars.iv.next.4.23, %for.inc.4.23 ]
  %partial_sum.12.4.23 = phi float [ %partial_sum.05.4.23, %for.body16.lr.ph.4.23 ], [ %partial_sum.2.4.23, %for.inc.4.23 ]
  %1683 = trunc i64 %indvars.iv.4.23 to i32
  %add17.4.23 = add nsw i32 %1683, %inc54.3.23
  %cmp18.4.23 = icmp sgt i32 %add17.4.23, -1
  %cmp21.4.23 = icmp ult i32 %add17.4.23, %img_width
  %1684 = and i1 %cmp18.4.23, %cmp21.4.23
  br i1 %1684, label %if.end26.4.23, label %for.inc.4.23

if.end26.4.23:                                    ; preds = %for.body16.4.23
  %add29.4.23 = add nsw i32 %add17.4.23, %mul.4.23
  %idxprom.4.23 = sext i32 %add29.4.23 to i64
  %arrayidx.4.23 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.23
  %1685 = load float, float* %arrayidx.4.23, align 4
  %1686 = trunc i64 %indvars.iv.4.23 to i32
  %add31.4.23 = add i32 %1686, %mul30.4.23
  %idxprom32.4.23 = zext i32 %add31.4.23 to i64
  %arrayidx33.4.23 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.23
  %1687 = load float, float* %arrayidx33.4.23, align 4
  %mul34.4.23 = fmul float %1685, %1687
  %add35.4.23 = fadd float %partial_sum.12.4.23, %mul34.4.23
  br label %for.inc.4.23

for.inc.4.23:                                     ; preds = %if.end26.4.23, %for.body16.4.23
  %partial_sum.2.4.23 = phi float [ %add35.4.23, %if.end26.4.23 ], [ %partial_sum.12.4.23, %for.body16.4.23 ]
  %indvars.iv.next.4.23 = add nuw nsw i64 %indvars.iv.4.23, 1
  %lftr.wideiv.4.23 = trunc i64 %indvars.iv.next.4.23 to i32
  %exitcond.4.23 = icmp eq i32 %lftr.wideiv.4.23, %kern_width
  br i1 %exitcond.4.23, label %for.inc36.4.23.loopexit, label %for.body16.4.23, !llvm.loop !1

for.inc36.4.23.loopexit:                          ; preds = %for.inc.4.23
  %partial_sum.2.4.23.lcssa = phi float [ %partial_sum.2.4.23, %for.inc.4.23 ]
  br label %for.inc36.4.23

for.inc36.4.23:                                   ; preds = %for.inc36.4.23.loopexit, %for.body10.4.23
  %partial_sum.3.4.23 = phi float [ %partial_sum.05.4.23, %for.body10.4.23 ], [ %partial_sum.2.4.23.lcssa, %for.inc36.4.23.loopexit ]
  %inc37.4.23 = add nuw nsw i32 %ki.06.4.23, 1
  %exitcond19.4.23 = icmp eq i32 %inc37.4.23, %kern_height
  br i1 %exitcond19.4.23, label %for.end38.4.23.loopexit, label %for.body10.4.23, !llvm.loop !3

for.end38.4.23.loopexit:                          ; preds = %for.inc36.4.23
  %partial_sum.3.4.23.lcssa = phi float [ %partial_sum.3.4.23, %for.inc36.4.23 ]
  br label %for.end38.4.23

for.end38.4.23:                                   ; preds = %for.end38.4.23.loopexit, %for.inc53.3.23
  %partial_sum.0.lcssa.4.23 = phi float [ 0.000000e+00, %for.inc53.3.23 ], [ %partial_sum.3.4.23.lcssa, %for.end38.4.23.loopexit ]
  br i1 %tobool39, label %if.else.4.23, label %if.then40.4.23

if.then40.4.23:                                   ; preds = %for.end38.4.23
  %cmp41.4.23 = fcmp olt float %partial_sum.0.lcssa.4.23, 0.000000e+00
  %sub42.4.23 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.23
  %cond.4.23 = select i1 %cmp41.4.23, float %sub42.4.23, float %partial_sum.0.lcssa.4.23
  %conv.4.23 = fptoui float %cond.4.23 to i8
  %conv43.4.23 = uitofp i8 %conv.4.23 to float
  %1688 = add nsw i64 %indvars.iv.next21.3.23, %1647
  %arrayidx47.4.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1688
  store float %conv43.4.23, float* %arrayidx47.4.23, align 4
  br label %for.inc53.4.23

if.else.4.23:                                     ; preds = %for.end38.4.23
  %1689 = add nsw i64 %indvars.iv.next21.3.23, %1646
  %arrayidx51.4.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1689
  store float %partial_sum.0.lcssa.4.23, float* %arrayidx51.4.23, align 4
  br label %for.inc53.4.23

for.inc53.4.23:                                   ; preds = %if.else.4.23, %if.then40.4.23
  %inc54.4.23 = add nsw i32 %in_j.011.23, 5
  %indvars.iv.next21.4.23 = add nsw i64 %indvars.iv20.23, 5
  br i1 %cmp94, label %for.end38.5.23, label %for.body10.5.23.preheader

for.body10.5.23.preheader:                        ; preds = %for.inc53.4.23
  br label %for.body10.5.23

for.body10.5.23:                                  ; preds = %for.body10.5.23.preheader, %for.inc36.5.23
  %ki.06.5.23 = phi i32 [ %inc37.5.23, %for.inc36.5.23 ], [ 0, %for.body10.5.23.preheader ]
  %partial_sum.05.5.23 = phi float [ %partial_sum.3.5.23, %for.inc36.5.23 ], [ 0.000000e+00, %for.body10.5.23.preheader ]
  %add.5.23 = add nsw i32 %ki.06.5.23, %inc58.22
  %notlhs.5.23 = icmp slt i32 %add.5.23, 0
  %notrhs.5.23 = icmp uge i32 %add.5.23, %img_height
  %.not.5.23 = or i1 %notrhs.5.23, %notlhs.5.23
  %brmerge.5.23 = or i1 %.not.5.23, %cmp151.not.5.23
  br i1 %brmerge.5.23, label %for.inc36.5.23, label %for.body16.lr.ph.5.23

for.body16.lr.ph.5.23:                            ; preds = %for.body10.5.23
  %mul.5.23 = shl i32 %add.5.23, 7
  %mul30.5.23 = mul i32 %ki.06.5.23, %kern_width
  br label %for.body16.5.23

for.body16.5.23:                                  ; preds = %for.inc.5.23, %for.body16.lr.ph.5.23
  %indvars.iv.5.23 = phi i64 [ 0, %for.body16.lr.ph.5.23 ], [ %indvars.iv.next.5.23, %for.inc.5.23 ]
  %partial_sum.12.5.23 = phi float [ %partial_sum.05.5.23, %for.body16.lr.ph.5.23 ], [ %partial_sum.2.5.23, %for.inc.5.23 ]
  %1690 = trunc i64 %indvars.iv.5.23 to i32
  %add17.5.23 = add nsw i32 %1690, %inc54.4.23
  %cmp18.5.23 = icmp sgt i32 %add17.5.23, -1
  %cmp21.5.23 = icmp ult i32 %add17.5.23, %img_width
  %1691 = and i1 %cmp18.5.23, %cmp21.5.23
  br i1 %1691, label %if.end26.5.23, label %for.inc.5.23

if.end26.5.23:                                    ; preds = %for.body16.5.23
  %add29.5.23 = add nsw i32 %add17.5.23, %mul.5.23
  %idxprom.5.23 = sext i32 %add29.5.23 to i64
  %arrayidx.5.23 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.23
  %1692 = load float, float* %arrayidx.5.23, align 4
  %1693 = trunc i64 %indvars.iv.5.23 to i32
  %add31.5.23 = add i32 %1693, %mul30.5.23
  %idxprom32.5.23 = zext i32 %add31.5.23 to i64
  %arrayidx33.5.23 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.23
  %1694 = load float, float* %arrayidx33.5.23, align 4
  %mul34.5.23 = fmul float %1692, %1694
  %add35.5.23 = fadd float %partial_sum.12.5.23, %mul34.5.23
  br label %for.inc.5.23

for.inc.5.23:                                     ; preds = %if.end26.5.23, %for.body16.5.23
  %partial_sum.2.5.23 = phi float [ %add35.5.23, %if.end26.5.23 ], [ %partial_sum.12.5.23, %for.body16.5.23 ]
  %indvars.iv.next.5.23 = add nuw nsw i64 %indvars.iv.5.23, 1
  %lftr.wideiv.5.23 = trunc i64 %indvars.iv.next.5.23 to i32
  %exitcond.5.23 = icmp eq i32 %lftr.wideiv.5.23, %kern_width
  br i1 %exitcond.5.23, label %for.inc36.5.23.loopexit, label %for.body16.5.23, !llvm.loop !1

for.inc36.5.23.loopexit:                          ; preds = %for.inc.5.23
  %partial_sum.2.5.23.lcssa = phi float [ %partial_sum.2.5.23, %for.inc.5.23 ]
  br label %for.inc36.5.23

for.inc36.5.23:                                   ; preds = %for.inc36.5.23.loopexit, %for.body10.5.23
  %partial_sum.3.5.23 = phi float [ %partial_sum.05.5.23, %for.body10.5.23 ], [ %partial_sum.2.5.23.lcssa, %for.inc36.5.23.loopexit ]
  %inc37.5.23 = add nuw nsw i32 %ki.06.5.23, 1
  %exitcond19.5.23 = icmp eq i32 %inc37.5.23, %kern_height
  br i1 %exitcond19.5.23, label %for.end38.5.23.loopexit, label %for.body10.5.23, !llvm.loop !3

for.end38.5.23.loopexit:                          ; preds = %for.inc36.5.23
  %partial_sum.3.5.23.lcssa = phi float [ %partial_sum.3.5.23, %for.inc36.5.23 ]
  br label %for.end38.5.23

for.end38.5.23:                                   ; preds = %for.end38.5.23.loopexit, %for.inc53.4.23
  %partial_sum.0.lcssa.5.23 = phi float [ 0.000000e+00, %for.inc53.4.23 ], [ %partial_sum.3.5.23.lcssa, %for.end38.5.23.loopexit ]
  br i1 %tobool39, label %if.else.5.23, label %if.then40.5.23

if.then40.5.23:                                   ; preds = %for.end38.5.23
  %cmp41.5.23 = fcmp olt float %partial_sum.0.lcssa.5.23, 0.000000e+00
  %sub42.5.23 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.23
  %cond.5.23 = select i1 %cmp41.5.23, float %sub42.5.23, float %partial_sum.0.lcssa.5.23
  %conv.5.23 = fptoui float %cond.5.23 to i8
  %conv43.5.23 = uitofp i8 %conv.5.23 to float
  %1695 = add nsw i64 %indvars.iv.next21.4.23, %1647
  %arrayidx47.5.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1695
  store float %conv43.5.23, float* %arrayidx47.5.23, align 4
  br label %for.inc53.5.23

if.else.5.23:                                     ; preds = %for.end38.5.23
  %1696 = add nsw i64 %indvars.iv.next21.4.23, %1646
  %arrayidx51.5.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1696
  store float %partial_sum.0.lcssa.5.23, float* %arrayidx51.5.23, align 4
  br label %for.inc53.5.23

for.inc53.5.23:                                   ; preds = %if.else.5.23, %if.then40.5.23
  %inc54.5.23 = add nsw i32 %in_j.011.23, 6
  %indvars.iv.next21.5.23 = add nsw i64 %indvars.iv20.23, 6
  br i1 %cmp94, label %for.end38.6.23, label %for.body10.6.23.preheader

for.body10.6.23.preheader:                        ; preds = %for.inc53.5.23
  br label %for.body10.6.23

for.body10.6.23:                                  ; preds = %for.body10.6.23.preheader, %for.inc36.6.23
  %ki.06.6.23 = phi i32 [ %inc37.6.23, %for.inc36.6.23 ], [ 0, %for.body10.6.23.preheader ]
  %partial_sum.05.6.23 = phi float [ %partial_sum.3.6.23, %for.inc36.6.23 ], [ 0.000000e+00, %for.body10.6.23.preheader ]
  %add.6.23 = add nsw i32 %ki.06.6.23, %inc58.22
  %notlhs.6.23 = icmp slt i32 %add.6.23, 0
  %notrhs.6.23 = icmp uge i32 %add.6.23, %img_height
  %.not.6.23 = or i1 %notrhs.6.23, %notlhs.6.23
  %brmerge.6.23 = or i1 %.not.6.23, %cmp151.not.6.23
  br i1 %brmerge.6.23, label %for.inc36.6.23, label %for.body16.lr.ph.6.23

for.body16.lr.ph.6.23:                            ; preds = %for.body10.6.23
  %mul.6.23 = shl i32 %add.6.23, 7
  %mul30.6.23 = mul i32 %ki.06.6.23, %kern_width
  br label %for.body16.6.23

for.body16.6.23:                                  ; preds = %for.inc.6.23, %for.body16.lr.ph.6.23
  %indvars.iv.6.23 = phi i64 [ 0, %for.body16.lr.ph.6.23 ], [ %indvars.iv.next.6.23, %for.inc.6.23 ]
  %partial_sum.12.6.23 = phi float [ %partial_sum.05.6.23, %for.body16.lr.ph.6.23 ], [ %partial_sum.2.6.23, %for.inc.6.23 ]
  %1697 = trunc i64 %indvars.iv.6.23 to i32
  %add17.6.23 = add nsw i32 %1697, %inc54.5.23
  %cmp18.6.23 = icmp sgt i32 %add17.6.23, -1
  %cmp21.6.23 = icmp ult i32 %add17.6.23, %img_width
  %1698 = and i1 %cmp18.6.23, %cmp21.6.23
  br i1 %1698, label %if.end26.6.23, label %for.inc.6.23

if.end26.6.23:                                    ; preds = %for.body16.6.23
  %add29.6.23 = add nsw i32 %add17.6.23, %mul.6.23
  %idxprom.6.23 = sext i32 %add29.6.23 to i64
  %arrayidx.6.23 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.23
  %1699 = load float, float* %arrayidx.6.23, align 4
  %1700 = trunc i64 %indvars.iv.6.23 to i32
  %add31.6.23 = add i32 %1700, %mul30.6.23
  %idxprom32.6.23 = zext i32 %add31.6.23 to i64
  %arrayidx33.6.23 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.23
  %1701 = load float, float* %arrayidx33.6.23, align 4
  %mul34.6.23 = fmul float %1699, %1701
  %add35.6.23 = fadd float %partial_sum.12.6.23, %mul34.6.23
  br label %for.inc.6.23

for.inc.6.23:                                     ; preds = %if.end26.6.23, %for.body16.6.23
  %partial_sum.2.6.23 = phi float [ %add35.6.23, %if.end26.6.23 ], [ %partial_sum.12.6.23, %for.body16.6.23 ]
  %indvars.iv.next.6.23 = add nuw nsw i64 %indvars.iv.6.23, 1
  %lftr.wideiv.6.23 = trunc i64 %indvars.iv.next.6.23 to i32
  %exitcond.6.23 = icmp eq i32 %lftr.wideiv.6.23, %kern_width
  br i1 %exitcond.6.23, label %for.inc36.6.23.loopexit, label %for.body16.6.23, !llvm.loop !1

for.inc36.6.23.loopexit:                          ; preds = %for.inc.6.23
  %partial_sum.2.6.23.lcssa = phi float [ %partial_sum.2.6.23, %for.inc.6.23 ]
  br label %for.inc36.6.23

for.inc36.6.23:                                   ; preds = %for.inc36.6.23.loopexit, %for.body10.6.23
  %partial_sum.3.6.23 = phi float [ %partial_sum.05.6.23, %for.body10.6.23 ], [ %partial_sum.2.6.23.lcssa, %for.inc36.6.23.loopexit ]
  %inc37.6.23 = add nuw nsw i32 %ki.06.6.23, 1
  %exitcond19.6.23 = icmp eq i32 %inc37.6.23, %kern_height
  br i1 %exitcond19.6.23, label %for.end38.6.23.loopexit, label %for.body10.6.23, !llvm.loop !3

for.end38.6.23.loopexit:                          ; preds = %for.inc36.6.23
  %partial_sum.3.6.23.lcssa = phi float [ %partial_sum.3.6.23, %for.inc36.6.23 ]
  br label %for.end38.6.23

for.end38.6.23:                                   ; preds = %for.end38.6.23.loopexit, %for.inc53.5.23
  %partial_sum.0.lcssa.6.23 = phi float [ 0.000000e+00, %for.inc53.5.23 ], [ %partial_sum.3.6.23.lcssa, %for.end38.6.23.loopexit ]
  br i1 %tobool39, label %if.else.6.23, label %if.then40.6.23

if.then40.6.23:                                   ; preds = %for.end38.6.23
  %cmp41.6.23 = fcmp olt float %partial_sum.0.lcssa.6.23, 0.000000e+00
  %sub42.6.23 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.23
  %cond.6.23 = select i1 %cmp41.6.23, float %sub42.6.23, float %partial_sum.0.lcssa.6.23
  %conv.6.23 = fptoui float %cond.6.23 to i8
  %conv43.6.23 = uitofp i8 %conv.6.23 to float
  %1702 = add nsw i64 %indvars.iv.next21.5.23, %1647
  %arrayidx47.6.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1702
  store float %conv43.6.23, float* %arrayidx47.6.23, align 4
  br label %for.inc53.6.23

if.else.6.23:                                     ; preds = %for.end38.6.23
  %1703 = add nsw i64 %indvars.iv.next21.5.23, %1646
  %arrayidx51.6.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1703
  store float %partial_sum.0.lcssa.6.23, float* %arrayidx51.6.23, align 4
  br label %for.inc53.6.23

for.inc53.6.23:                                   ; preds = %if.else.6.23, %if.then40.6.23
  %inc54.6.23 = add nsw i32 %in_j.011.23, 7
  %indvars.iv.next21.6.23 = add nsw i64 %indvars.iv20.23, 7
  br i1 %cmp94, label %for.end38.7.23, label %for.body10.7.23.preheader

for.body10.7.23.preheader:                        ; preds = %for.inc53.6.23
  br label %for.body10.7.23

for.body10.7.23:                                  ; preds = %for.body10.7.23.preheader, %for.inc36.7.23
  %ki.06.7.23 = phi i32 [ %inc37.7.23, %for.inc36.7.23 ], [ 0, %for.body10.7.23.preheader ]
  %partial_sum.05.7.23 = phi float [ %partial_sum.3.7.23, %for.inc36.7.23 ], [ 0.000000e+00, %for.body10.7.23.preheader ]
  %add.7.23 = add nsw i32 %ki.06.7.23, %inc58.22
  %notlhs.7.23 = icmp slt i32 %add.7.23, 0
  %notrhs.7.23 = icmp uge i32 %add.7.23, %img_height
  %.not.7.23 = or i1 %notrhs.7.23, %notlhs.7.23
  %brmerge.7.23 = or i1 %.not.7.23, %cmp151.not.7.23
  br i1 %brmerge.7.23, label %for.inc36.7.23, label %for.body16.lr.ph.7.23

for.body16.lr.ph.7.23:                            ; preds = %for.body10.7.23
  %mul.7.23 = shl i32 %add.7.23, 7
  %mul30.7.23 = mul i32 %ki.06.7.23, %kern_width
  br label %for.body16.7.23

for.body16.7.23:                                  ; preds = %for.inc.7.23, %for.body16.lr.ph.7.23
  %indvars.iv.7.23 = phi i64 [ 0, %for.body16.lr.ph.7.23 ], [ %indvars.iv.next.7.23, %for.inc.7.23 ]
  %partial_sum.12.7.23 = phi float [ %partial_sum.05.7.23, %for.body16.lr.ph.7.23 ], [ %partial_sum.2.7.23, %for.inc.7.23 ]
  %1704 = trunc i64 %indvars.iv.7.23 to i32
  %add17.7.23 = add nsw i32 %1704, %inc54.6.23
  %cmp18.7.23 = icmp sgt i32 %add17.7.23, -1
  %cmp21.7.23 = icmp ult i32 %add17.7.23, %img_width
  %1705 = and i1 %cmp18.7.23, %cmp21.7.23
  br i1 %1705, label %if.end26.7.23, label %for.inc.7.23

if.end26.7.23:                                    ; preds = %for.body16.7.23
  %add29.7.23 = add nsw i32 %add17.7.23, %mul.7.23
  %idxprom.7.23 = sext i32 %add29.7.23 to i64
  %arrayidx.7.23 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.23
  %1706 = load float, float* %arrayidx.7.23, align 4
  %1707 = trunc i64 %indvars.iv.7.23 to i32
  %add31.7.23 = add i32 %1707, %mul30.7.23
  %idxprom32.7.23 = zext i32 %add31.7.23 to i64
  %arrayidx33.7.23 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.23
  %1708 = load float, float* %arrayidx33.7.23, align 4
  %mul34.7.23 = fmul float %1706, %1708
  %add35.7.23 = fadd float %partial_sum.12.7.23, %mul34.7.23
  br label %for.inc.7.23

for.inc.7.23:                                     ; preds = %if.end26.7.23, %for.body16.7.23
  %partial_sum.2.7.23 = phi float [ %add35.7.23, %if.end26.7.23 ], [ %partial_sum.12.7.23, %for.body16.7.23 ]
  %indvars.iv.next.7.23 = add nuw nsw i64 %indvars.iv.7.23, 1
  %lftr.wideiv.7.23 = trunc i64 %indvars.iv.next.7.23 to i32
  %exitcond.7.23 = icmp eq i32 %lftr.wideiv.7.23, %kern_width
  br i1 %exitcond.7.23, label %for.inc36.7.23.loopexit, label %for.body16.7.23, !llvm.loop !1

for.inc36.7.23.loopexit:                          ; preds = %for.inc.7.23
  %partial_sum.2.7.23.lcssa = phi float [ %partial_sum.2.7.23, %for.inc.7.23 ]
  br label %for.inc36.7.23

for.inc36.7.23:                                   ; preds = %for.inc36.7.23.loopexit, %for.body10.7.23
  %partial_sum.3.7.23 = phi float [ %partial_sum.05.7.23, %for.body10.7.23 ], [ %partial_sum.2.7.23.lcssa, %for.inc36.7.23.loopexit ]
  %inc37.7.23 = add nuw nsw i32 %ki.06.7.23, 1
  %exitcond19.7.23 = icmp eq i32 %inc37.7.23, %kern_height
  br i1 %exitcond19.7.23, label %for.end38.7.23.loopexit, label %for.body10.7.23, !llvm.loop !3

for.end38.7.23.loopexit:                          ; preds = %for.inc36.7.23
  %partial_sum.3.7.23.lcssa = phi float [ %partial_sum.3.7.23, %for.inc36.7.23 ]
  br label %for.end38.7.23

for.end38.7.23:                                   ; preds = %for.end38.7.23.loopexit, %for.inc53.6.23
  %partial_sum.0.lcssa.7.23 = phi float [ 0.000000e+00, %for.inc53.6.23 ], [ %partial_sum.3.7.23.lcssa, %for.end38.7.23.loopexit ]
  br i1 %tobool39, label %if.else.7.23, label %if.then40.7.23

if.then40.7.23:                                   ; preds = %for.end38.7.23
  %cmp41.7.23 = fcmp olt float %partial_sum.0.lcssa.7.23, 0.000000e+00
  %sub42.7.23 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.23
  %cond.7.23 = select i1 %cmp41.7.23, float %sub42.7.23, float %partial_sum.0.lcssa.7.23
  %conv.7.23 = fptoui float %cond.7.23 to i8
  %conv43.7.23 = uitofp i8 %conv.7.23 to float
  %1709 = add nsw i64 %indvars.iv.next21.6.23, %1647
  %arrayidx47.7.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1709
  store float %conv43.7.23, float* %arrayidx47.7.23, align 4
  br label %for.inc53.7.23

if.else.7.23:                                     ; preds = %for.end38.7.23
  %1710 = add nsw i64 %indvars.iv.next21.6.23, %1646
  %arrayidx51.7.23 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1710
  store float %partial_sum.0.lcssa.7.23, float* %arrayidx51.7.23, align 4
  br label %for.inc53.7.23

for.inc53.7.23:                                   ; preds = %if.else.7.23, %if.then40.7.23
  %inc54.7.23 = add nsw i32 %in_j.011.23, 8
  %indvars.iv.next21.7.23 = add nsw i64 %indvars.iv20.23, 8
  %lftr.wideiv24.7.23 = trunc i64 %indvars.iv.next21.7.23 to i32
  %exitcond25.7.23 = icmp eq i32 %lftr.wideiv24.7.23, %img_width
  br i1 %exitcond25.7.23, label %for.inc57.23.loopexit, label %for.cond8.preheader.23, !llvm.loop !5

for.inc57.23.loopexit:                            ; preds = %for.inc53.7.23
  br label %for.inc57.23

for.inc57.23:                                     ; preds = %for.inc57.23.loopexit, %for.cond8.preheader.lr.ph.split.23
  %inc58.23 = add nsw i32 %in_i.015, 24
  %indvars.iv.next27.23 = add nsw i64 %indvars.iv26, 24
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.24

for.cond8.preheader.lr.ph.24:                     ; preds = %for.inc57.23
  %1711 = trunc i64 %indvars.iv.next27.23 to i32
  %mul48.24 = shl i32 %1711, 7
  %1712 = trunc i64 %indvars.iv.next27.23 to i32
  %mul44.24 = shl i32 %1712, 7
  %1713 = sext i32 %mul48.24 to i64
  %1714 = sext i32 %mul44.24 to i64
  br i1 %lcmp.mod.24, label %for.cond8.preheader.lr.ph.split.24, label %for.cond8.preheader.prol.24.preheader

for.cond8.preheader.prol.24.preheader:            ; preds = %for.cond8.preheader.lr.ph.24
  br label %for.cond8.preheader.prol.24

for.cond8.preheader.prol.24:                      ; preds = %for.cond8.preheader.prol.24.preheader, %for.inc53.prol.24
  %indvars.iv20.prol.24 = phi i64 [ %indvars.iv.next21.prol.24, %for.inc53.prol.24 ], [ 0, %for.cond8.preheader.prol.24.preheader ]
  %in_j.011.prol.24 = phi i32 [ %inc54.prol.24, %for.inc53.prol.24 ], [ %sub4, %for.cond8.preheader.prol.24.preheader ]
  %prol.iter.24 = phi i32 [ %prol.iter.sub.24, %for.inc53.prol.24 ], [ %xtraiter.24, %for.cond8.preheader.prol.24.preheader ]
  br i1 %cmp94, label %for.end38.prol.24, label %for.body10.prol.24.preheader

for.body10.prol.24.preheader:                     ; preds = %for.cond8.preheader.prol.24
  br label %for.body10.prol.24

for.body10.prol.24:                               ; preds = %for.body10.prol.24.preheader, %for.inc36.prol.24
  %ki.06.prol.24 = phi i32 [ %inc37.prol.24, %for.inc36.prol.24 ], [ 0, %for.body10.prol.24.preheader ]
  %partial_sum.05.prol.24 = phi float [ %partial_sum.3.prol.24, %for.inc36.prol.24 ], [ 0.000000e+00, %for.body10.prol.24.preheader ]
  %add.prol.24 = add nsw i32 %ki.06.prol.24, %inc58.23
  %notlhs.prol.24 = icmp slt i32 %add.prol.24, 0
  %notrhs.prol.24 = icmp uge i32 %add.prol.24, %img_height
  %.not.prol.24 = or i1 %notrhs.prol.24, %notlhs.prol.24
  %brmerge.prol.24 = or i1 %.not.prol.24, %cmp151.not.prol.24
  br i1 %brmerge.prol.24, label %for.inc36.prol.24, label %for.body16.lr.ph.prol.24

for.body16.lr.ph.prol.24:                         ; preds = %for.body10.prol.24
  %mul.prol.24 = shl i32 %add.prol.24, 7
  %mul30.prol.24 = mul i32 %ki.06.prol.24, %kern_width
  br label %for.body16.prol.24

for.body16.prol.24:                               ; preds = %for.inc.prol.24, %for.body16.lr.ph.prol.24
  %indvars.iv.prol.24 = phi i64 [ 0, %for.body16.lr.ph.prol.24 ], [ %indvars.iv.next.prol.24, %for.inc.prol.24 ]
  %partial_sum.12.prol.24 = phi float [ %partial_sum.05.prol.24, %for.body16.lr.ph.prol.24 ], [ %partial_sum.2.prol.24, %for.inc.prol.24 ]
  %1715 = trunc i64 %indvars.iv.prol.24 to i32
  %add17.prol.24 = add nsw i32 %1715, %in_j.011.prol.24
  %cmp18.prol.24 = icmp sgt i32 %add17.prol.24, -1
  %cmp21.prol.24 = icmp ult i32 %add17.prol.24, %img_width
  %1716 = and i1 %cmp18.prol.24, %cmp21.prol.24
  br i1 %1716, label %if.end26.prol.24, label %for.inc.prol.24

if.end26.prol.24:                                 ; preds = %for.body16.prol.24
  %add29.prol.24 = add nsw i32 %add17.prol.24, %mul.prol.24
  %idxprom.prol.24 = sext i32 %add29.prol.24 to i64
  %arrayidx.prol.24 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.24
  %1717 = load float, float* %arrayidx.prol.24, align 4
  %1718 = trunc i64 %indvars.iv.prol.24 to i32
  %add31.prol.24 = add i32 %1718, %mul30.prol.24
  %idxprom32.prol.24 = zext i32 %add31.prol.24 to i64
  %arrayidx33.prol.24 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.24
  %1719 = load float, float* %arrayidx33.prol.24, align 4
  %mul34.prol.24 = fmul float %1717, %1719
  %add35.prol.24 = fadd float %partial_sum.12.prol.24, %mul34.prol.24
  br label %for.inc.prol.24

for.inc.prol.24:                                  ; preds = %if.end26.prol.24, %for.body16.prol.24
  %partial_sum.2.prol.24 = phi float [ %add35.prol.24, %if.end26.prol.24 ], [ %partial_sum.12.prol.24, %for.body16.prol.24 ]
  %indvars.iv.next.prol.24 = add nuw nsw i64 %indvars.iv.prol.24, 1
  %lftr.wideiv.prol.24 = trunc i64 %indvars.iv.next.prol.24 to i32
  %exitcond.prol.24 = icmp eq i32 %lftr.wideiv.prol.24, %kern_width
  br i1 %exitcond.prol.24, label %for.inc36.prol.24.loopexit, label %for.body16.prol.24, !llvm.loop !1

for.inc36.prol.24.loopexit:                       ; preds = %for.inc.prol.24
  %partial_sum.2.prol.24.lcssa = phi float [ %partial_sum.2.prol.24, %for.inc.prol.24 ]
  br label %for.inc36.prol.24

for.inc36.prol.24:                                ; preds = %for.inc36.prol.24.loopexit, %for.body10.prol.24
  %partial_sum.3.prol.24 = phi float [ %partial_sum.05.prol.24, %for.body10.prol.24 ], [ %partial_sum.2.prol.24.lcssa, %for.inc36.prol.24.loopexit ]
  %inc37.prol.24 = add nuw nsw i32 %ki.06.prol.24, 1
  %exitcond19.prol.24 = icmp eq i32 %inc37.prol.24, %kern_height
  br i1 %exitcond19.prol.24, label %for.end38.prol.24.loopexit, label %for.body10.prol.24, !llvm.loop !3

for.end38.prol.24.loopexit:                       ; preds = %for.inc36.prol.24
  %partial_sum.3.prol.24.lcssa = phi float [ %partial_sum.3.prol.24, %for.inc36.prol.24 ]
  br label %for.end38.prol.24

for.end38.prol.24:                                ; preds = %for.end38.prol.24.loopexit, %for.cond8.preheader.prol.24
  %partial_sum.0.lcssa.prol.24 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.24 ], [ %partial_sum.3.prol.24.lcssa, %for.end38.prol.24.loopexit ]
  br i1 %tobool39, label %if.else.prol.24, label %if.then40.prol.24

if.then40.prol.24:                                ; preds = %for.end38.prol.24
  %cmp41.prol.24 = fcmp olt float %partial_sum.0.lcssa.prol.24, 0.000000e+00
  %sub42.prol.24 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.24
  %cond.prol.24 = select i1 %cmp41.prol.24, float %sub42.prol.24, float %partial_sum.0.lcssa.prol.24
  %conv.prol.24 = fptoui float %cond.prol.24 to i8
  %conv43.prol.24 = uitofp i8 %conv.prol.24 to float
  %1720 = add nsw i64 %indvars.iv20.prol.24, %1714
  %arrayidx47.prol.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1720
  store float %conv43.prol.24, float* %arrayidx47.prol.24, align 4
  br label %for.inc53.prol.24

if.else.prol.24:                                  ; preds = %for.end38.prol.24
  %1721 = add nsw i64 %indvars.iv20.prol.24, %1713
  %arrayidx51.prol.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1721
  store float %partial_sum.0.lcssa.prol.24, float* %arrayidx51.prol.24, align 4
  br label %for.inc53.prol.24

for.inc53.prol.24:                                ; preds = %if.else.prol.24, %if.then40.prol.24
  %inc54.prol.24 = add nsw i32 %in_j.011.prol.24, 1
  %indvars.iv.next21.prol.24 = add nuw nsw i64 %indvars.iv20.prol.24, 1
  %prol.iter.sub.24 = add i32 %prol.iter.24, -1
  %prol.iter.cmp.24 = icmp eq i32 %prol.iter.sub.24, 0
  br i1 %prol.iter.cmp.24, label %for.cond8.preheader.lr.ph.split.24.loopexit, label %for.cond8.preheader.prol.24, !llvm.loop !4

for.cond8.preheader.lr.ph.split.24.loopexit:      ; preds = %for.inc53.prol.24
  %indvars.iv.next21.prol.24.lcssa = phi i64 [ %indvars.iv.next21.prol.24, %for.inc53.prol.24 ]
  %inc54.prol.24.lcssa = phi i32 [ %inc54.prol.24, %for.inc53.prol.24 ]
  br label %for.cond8.preheader.lr.ph.split.24

for.cond8.preheader.lr.ph.split.24:               ; preds = %for.cond8.preheader.lr.ph.split.24.loopexit, %for.cond8.preheader.lr.ph.24
  %indvars.iv20.unr.24 = phi i64 [ 0, %for.cond8.preheader.lr.ph.24 ], [ %indvars.iv.next21.prol.24.lcssa, %for.cond8.preheader.lr.ph.split.24.loopexit ]
  %in_j.011.unr.24 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.24 ], [ %inc54.prol.24.lcssa, %for.cond8.preheader.lr.ph.split.24.loopexit ]
  br i1 %95, label %for.inc57.24, label %for.cond8.preheader.24.preheader

for.cond8.preheader.24.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.24
  br label %for.cond8.preheader.24

for.cond8.preheader.24:                           ; preds = %for.cond8.preheader.24.preheader, %for.inc53.7.24
  %indvars.iv20.24 = phi i64 [ %indvars.iv.next21.7.24, %for.inc53.7.24 ], [ %indvars.iv20.unr.24, %for.cond8.preheader.24.preheader ]
  %in_j.011.24 = phi i32 [ %inc54.7.24, %for.inc53.7.24 ], [ %in_j.011.unr.24, %for.cond8.preheader.24.preheader ]
  br i1 %cmp94, label %for.end38.24, label %for.body10.24.preheader

for.body10.24.preheader:                          ; preds = %for.cond8.preheader.24
  br label %for.body10.24

for.body10.24:                                    ; preds = %for.body10.24.preheader, %for.inc36.24
  %ki.06.24 = phi i32 [ %inc37.24, %for.inc36.24 ], [ 0, %for.body10.24.preheader ]
  %partial_sum.05.24 = phi float [ %partial_sum.3.24, %for.inc36.24 ], [ 0.000000e+00, %for.body10.24.preheader ]
  %add.24 = add nsw i32 %ki.06.24, %inc58.23
  %notlhs.24 = icmp slt i32 %add.24, 0
  %notrhs.24 = icmp uge i32 %add.24, %img_height
  %.not.24 = or i1 %notrhs.24, %notlhs.24
  %brmerge.24 = or i1 %.not.24, %cmp151.not.24
  br i1 %brmerge.24, label %for.inc36.24, label %for.body16.lr.ph.24

for.body16.lr.ph.24:                              ; preds = %for.body10.24
  %mul.24 = shl i32 %add.24, 7
  %mul30.24 = mul i32 %ki.06.24, %kern_width
  br label %for.body16.24

for.body16.24:                                    ; preds = %for.inc.24, %for.body16.lr.ph.24
  %indvars.iv.24 = phi i64 [ 0, %for.body16.lr.ph.24 ], [ %indvars.iv.next.24, %for.inc.24 ]
  %partial_sum.12.24 = phi float [ %partial_sum.05.24, %for.body16.lr.ph.24 ], [ %partial_sum.2.24, %for.inc.24 ]
  %1722 = trunc i64 %indvars.iv.24 to i32
  %add17.24 = add nsw i32 %1722, %in_j.011.24
  %cmp18.24 = icmp sgt i32 %add17.24, -1
  %cmp21.24 = icmp ult i32 %add17.24, %img_width
  %1723 = and i1 %cmp18.24, %cmp21.24
  br i1 %1723, label %if.end26.24, label %for.inc.24

if.end26.24:                                      ; preds = %for.body16.24
  %add29.24 = add nsw i32 %add17.24, %mul.24
  %idxprom.24 = sext i32 %add29.24 to i64
  %arrayidx.24 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.24
  %1724 = load float, float* %arrayidx.24, align 4
  %1725 = trunc i64 %indvars.iv.24 to i32
  %add31.24 = add i32 %1725, %mul30.24
  %idxprom32.24 = zext i32 %add31.24 to i64
  %arrayidx33.24 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.24
  %1726 = load float, float* %arrayidx33.24, align 4
  %mul34.24 = fmul float %1724, %1726
  %add35.24 = fadd float %partial_sum.12.24, %mul34.24
  br label %for.inc.24

for.inc.24:                                       ; preds = %if.end26.24, %for.body16.24
  %partial_sum.2.24 = phi float [ %add35.24, %if.end26.24 ], [ %partial_sum.12.24, %for.body16.24 ]
  %indvars.iv.next.24 = add nuw nsw i64 %indvars.iv.24, 1
  %lftr.wideiv.24 = trunc i64 %indvars.iv.next.24 to i32
  %exitcond.24 = icmp eq i32 %lftr.wideiv.24, %kern_width
  br i1 %exitcond.24, label %for.inc36.24.loopexit, label %for.body16.24, !llvm.loop !1

for.inc36.24.loopexit:                            ; preds = %for.inc.24
  %partial_sum.2.24.lcssa = phi float [ %partial_sum.2.24, %for.inc.24 ]
  br label %for.inc36.24

for.inc36.24:                                     ; preds = %for.inc36.24.loopexit, %for.body10.24
  %partial_sum.3.24 = phi float [ %partial_sum.05.24, %for.body10.24 ], [ %partial_sum.2.24.lcssa, %for.inc36.24.loopexit ]
  %inc37.24 = add nuw nsw i32 %ki.06.24, 1
  %exitcond19.24 = icmp eq i32 %inc37.24, %kern_height
  br i1 %exitcond19.24, label %for.end38.24.loopexit, label %for.body10.24, !llvm.loop !3

for.end38.24.loopexit:                            ; preds = %for.inc36.24
  %partial_sum.3.24.lcssa = phi float [ %partial_sum.3.24, %for.inc36.24 ]
  br label %for.end38.24

for.end38.24:                                     ; preds = %for.end38.24.loopexit, %for.cond8.preheader.24
  %partial_sum.0.lcssa.24 = phi float [ 0.000000e+00, %for.cond8.preheader.24 ], [ %partial_sum.3.24.lcssa, %for.end38.24.loopexit ]
  br i1 %tobool39, label %if.else.24, label %if.then40.24

if.then40.24:                                     ; preds = %for.end38.24
  %cmp41.24 = fcmp olt float %partial_sum.0.lcssa.24, 0.000000e+00
  %sub42.24 = fsub float -0.000000e+00, %partial_sum.0.lcssa.24
  %cond.24 = select i1 %cmp41.24, float %sub42.24, float %partial_sum.0.lcssa.24
  %conv.24 = fptoui float %cond.24 to i8
  %conv43.24 = uitofp i8 %conv.24 to float
  %1727 = add nsw i64 %indvars.iv20.24, %1714
  %arrayidx47.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1727
  store float %conv43.24, float* %arrayidx47.24, align 4
  br label %for.inc53.24

if.else.24:                                       ; preds = %for.end38.24
  %1728 = add nsw i64 %indvars.iv20.24, %1713
  %arrayidx51.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1728
  store float %partial_sum.0.lcssa.24, float* %arrayidx51.24, align 4
  br label %for.inc53.24

for.inc53.24:                                     ; preds = %if.else.24, %if.then40.24
  %inc54.24 = add nsw i32 %in_j.011.24, 1
  %indvars.iv.next21.24 = add nuw nsw i64 %indvars.iv20.24, 1
  br i1 %cmp94, label %for.end38.1.24, label %for.body10.1.24.preheader

for.body10.1.24.preheader:                        ; preds = %for.inc53.24
  br label %for.body10.1.24

for.body10.1.24:                                  ; preds = %for.body10.1.24.preheader, %for.inc36.1.24
  %ki.06.1.24 = phi i32 [ %inc37.1.24, %for.inc36.1.24 ], [ 0, %for.body10.1.24.preheader ]
  %partial_sum.05.1.24 = phi float [ %partial_sum.3.1.24, %for.inc36.1.24 ], [ 0.000000e+00, %for.body10.1.24.preheader ]
  %add.1.24 = add nsw i32 %ki.06.1.24, %inc58.23
  %notlhs.1.24 = icmp slt i32 %add.1.24, 0
  %notrhs.1.24 = icmp uge i32 %add.1.24, %img_height
  %.not.1.24 = or i1 %notrhs.1.24, %notlhs.1.24
  %brmerge.1.24 = or i1 %.not.1.24, %cmp151.not.1.24
  br i1 %brmerge.1.24, label %for.inc36.1.24, label %for.body16.lr.ph.1.24

for.body16.lr.ph.1.24:                            ; preds = %for.body10.1.24
  %mul.1.24 = shl i32 %add.1.24, 7
  %mul30.1.24 = mul i32 %ki.06.1.24, %kern_width
  br label %for.body16.1.24

for.body16.1.24:                                  ; preds = %for.inc.1.24, %for.body16.lr.ph.1.24
  %indvars.iv.1.24 = phi i64 [ 0, %for.body16.lr.ph.1.24 ], [ %indvars.iv.next.1.24, %for.inc.1.24 ]
  %partial_sum.12.1.24 = phi float [ %partial_sum.05.1.24, %for.body16.lr.ph.1.24 ], [ %partial_sum.2.1.24, %for.inc.1.24 ]
  %1729 = trunc i64 %indvars.iv.1.24 to i32
  %add17.1.24 = add nsw i32 %1729, %inc54.24
  %cmp18.1.24 = icmp sgt i32 %add17.1.24, -1
  %cmp21.1.24 = icmp ult i32 %add17.1.24, %img_width
  %1730 = and i1 %cmp18.1.24, %cmp21.1.24
  br i1 %1730, label %if.end26.1.24, label %for.inc.1.24

if.end26.1.24:                                    ; preds = %for.body16.1.24
  %add29.1.24 = add nsw i32 %add17.1.24, %mul.1.24
  %idxprom.1.24 = sext i32 %add29.1.24 to i64
  %arrayidx.1.24 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.24
  %1731 = load float, float* %arrayidx.1.24, align 4
  %1732 = trunc i64 %indvars.iv.1.24 to i32
  %add31.1.24 = add i32 %1732, %mul30.1.24
  %idxprom32.1.24 = zext i32 %add31.1.24 to i64
  %arrayidx33.1.24 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.24
  %1733 = load float, float* %arrayidx33.1.24, align 4
  %mul34.1.24 = fmul float %1731, %1733
  %add35.1.24 = fadd float %partial_sum.12.1.24, %mul34.1.24
  br label %for.inc.1.24

for.inc.1.24:                                     ; preds = %if.end26.1.24, %for.body16.1.24
  %partial_sum.2.1.24 = phi float [ %add35.1.24, %if.end26.1.24 ], [ %partial_sum.12.1.24, %for.body16.1.24 ]
  %indvars.iv.next.1.24 = add nuw nsw i64 %indvars.iv.1.24, 1
  %lftr.wideiv.1.24 = trunc i64 %indvars.iv.next.1.24 to i32
  %exitcond.1.24 = icmp eq i32 %lftr.wideiv.1.24, %kern_width
  br i1 %exitcond.1.24, label %for.inc36.1.24.loopexit, label %for.body16.1.24, !llvm.loop !1

for.inc36.1.24.loopexit:                          ; preds = %for.inc.1.24
  %partial_sum.2.1.24.lcssa = phi float [ %partial_sum.2.1.24, %for.inc.1.24 ]
  br label %for.inc36.1.24

for.inc36.1.24:                                   ; preds = %for.inc36.1.24.loopexit, %for.body10.1.24
  %partial_sum.3.1.24 = phi float [ %partial_sum.05.1.24, %for.body10.1.24 ], [ %partial_sum.2.1.24.lcssa, %for.inc36.1.24.loopexit ]
  %inc37.1.24 = add nuw nsw i32 %ki.06.1.24, 1
  %exitcond19.1.24 = icmp eq i32 %inc37.1.24, %kern_height
  br i1 %exitcond19.1.24, label %for.end38.1.24.loopexit, label %for.body10.1.24, !llvm.loop !3

for.end38.1.24.loopexit:                          ; preds = %for.inc36.1.24
  %partial_sum.3.1.24.lcssa = phi float [ %partial_sum.3.1.24, %for.inc36.1.24 ]
  br label %for.end38.1.24

for.end38.1.24:                                   ; preds = %for.end38.1.24.loopexit, %for.inc53.24
  %partial_sum.0.lcssa.1.24 = phi float [ 0.000000e+00, %for.inc53.24 ], [ %partial_sum.3.1.24.lcssa, %for.end38.1.24.loopexit ]
  br i1 %tobool39, label %if.else.1.24, label %if.then40.1.24

if.then40.1.24:                                   ; preds = %for.end38.1.24
  %cmp41.1.24 = fcmp olt float %partial_sum.0.lcssa.1.24, 0.000000e+00
  %sub42.1.24 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.24
  %cond.1.24 = select i1 %cmp41.1.24, float %sub42.1.24, float %partial_sum.0.lcssa.1.24
  %conv.1.24 = fptoui float %cond.1.24 to i8
  %conv43.1.24 = uitofp i8 %conv.1.24 to float
  %1734 = add nsw i64 %indvars.iv.next21.24, %1714
  %arrayidx47.1.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1734
  store float %conv43.1.24, float* %arrayidx47.1.24, align 4
  br label %for.inc53.1.24

if.else.1.24:                                     ; preds = %for.end38.1.24
  %1735 = add nsw i64 %indvars.iv.next21.24, %1713
  %arrayidx51.1.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1735
  store float %partial_sum.0.lcssa.1.24, float* %arrayidx51.1.24, align 4
  br label %for.inc53.1.24

for.inc53.1.24:                                   ; preds = %if.else.1.24, %if.then40.1.24
  %inc54.1.24 = add nsw i32 %in_j.011.24, 2
  %indvars.iv.next21.1.24 = add nsw i64 %indvars.iv20.24, 2
  br i1 %cmp94, label %for.end38.2.24, label %for.body10.2.24.preheader

for.body10.2.24.preheader:                        ; preds = %for.inc53.1.24
  br label %for.body10.2.24

for.body10.2.24:                                  ; preds = %for.body10.2.24.preheader, %for.inc36.2.24
  %ki.06.2.24 = phi i32 [ %inc37.2.24, %for.inc36.2.24 ], [ 0, %for.body10.2.24.preheader ]
  %partial_sum.05.2.24 = phi float [ %partial_sum.3.2.24, %for.inc36.2.24 ], [ 0.000000e+00, %for.body10.2.24.preheader ]
  %add.2.24 = add nsw i32 %ki.06.2.24, %inc58.23
  %notlhs.2.24 = icmp slt i32 %add.2.24, 0
  %notrhs.2.24 = icmp uge i32 %add.2.24, %img_height
  %.not.2.24 = or i1 %notrhs.2.24, %notlhs.2.24
  %brmerge.2.24 = or i1 %.not.2.24, %cmp151.not.2.24
  br i1 %brmerge.2.24, label %for.inc36.2.24, label %for.body16.lr.ph.2.24

for.body16.lr.ph.2.24:                            ; preds = %for.body10.2.24
  %mul.2.24 = shl i32 %add.2.24, 7
  %mul30.2.24 = mul i32 %ki.06.2.24, %kern_width
  br label %for.body16.2.24

for.body16.2.24:                                  ; preds = %for.inc.2.24, %for.body16.lr.ph.2.24
  %indvars.iv.2.24 = phi i64 [ 0, %for.body16.lr.ph.2.24 ], [ %indvars.iv.next.2.24, %for.inc.2.24 ]
  %partial_sum.12.2.24 = phi float [ %partial_sum.05.2.24, %for.body16.lr.ph.2.24 ], [ %partial_sum.2.2.24, %for.inc.2.24 ]
  %1736 = trunc i64 %indvars.iv.2.24 to i32
  %add17.2.24 = add nsw i32 %1736, %inc54.1.24
  %cmp18.2.24 = icmp sgt i32 %add17.2.24, -1
  %cmp21.2.24 = icmp ult i32 %add17.2.24, %img_width
  %1737 = and i1 %cmp18.2.24, %cmp21.2.24
  br i1 %1737, label %if.end26.2.24, label %for.inc.2.24

if.end26.2.24:                                    ; preds = %for.body16.2.24
  %add29.2.24 = add nsw i32 %add17.2.24, %mul.2.24
  %idxprom.2.24 = sext i32 %add29.2.24 to i64
  %arrayidx.2.24 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.24
  %1738 = load float, float* %arrayidx.2.24, align 4
  %1739 = trunc i64 %indvars.iv.2.24 to i32
  %add31.2.24 = add i32 %1739, %mul30.2.24
  %idxprom32.2.24 = zext i32 %add31.2.24 to i64
  %arrayidx33.2.24 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.24
  %1740 = load float, float* %arrayidx33.2.24, align 4
  %mul34.2.24 = fmul float %1738, %1740
  %add35.2.24 = fadd float %partial_sum.12.2.24, %mul34.2.24
  br label %for.inc.2.24

for.inc.2.24:                                     ; preds = %if.end26.2.24, %for.body16.2.24
  %partial_sum.2.2.24 = phi float [ %add35.2.24, %if.end26.2.24 ], [ %partial_sum.12.2.24, %for.body16.2.24 ]
  %indvars.iv.next.2.24 = add nuw nsw i64 %indvars.iv.2.24, 1
  %lftr.wideiv.2.24 = trunc i64 %indvars.iv.next.2.24 to i32
  %exitcond.2.24 = icmp eq i32 %lftr.wideiv.2.24, %kern_width
  br i1 %exitcond.2.24, label %for.inc36.2.24.loopexit, label %for.body16.2.24, !llvm.loop !1

for.inc36.2.24.loopexit:                          ; preds = %for.inc.2.24
  %partial_sum.2.2.24.lcssa = phi float [ %partial_sum.2.2.24, %for.inc.2.24 ]
  br label %for.inc36.2.24

for.inc36.2.24:                                   ; preds = %for.inc36.2.24.loopexit, %for.body10.2.24
  %partial_sum.3.2.24 = phi float [ %partial_sum.05.2.24, %for.body10.2.24 ], [ %partial_sum.2.2.24.lcssa, %for.inc36.2.24.loopexit ]
  %inc37.2.24 = add nuw nsw i32 %ki.06.2.24, 1
  %exitcond19.2.24 = icmp eq i32 %inc37.2.24, %kern_height
  br i1 %exitcond19.2.24, label %for.end38.2.24.loopexit, label %for.body10.2.24, !llvm.loop !3

for.end38.2.24.loopexit:                          ; preds = %for.inc36.2.24
  %partial_sum.3.2.24.lcssa = phi float [ %partial_sum.3.2.24, %for.inc36.2.24 ]
  br label %for.end38.2.24

for.end38.2.24:                                   ; preds = %for.end38.2.24.loopexit, %for.inc53.1.24
  %partial_sum.0.lcssa.2.24 = phi float [ 0.000000e+00, %for.inc53.1.24 ], [ %partial_sum.3.2.24.lcssa, %for.end38.2.24.loopexit ]
  br i1 %tobool39, label %if.else.2.24, label %if.then40.2.24

if.then40.2.24:                                   ; preds = %for.end38.2.24
  %cmp41.2.24 = fcmp olt float %partial_sum.0.lcssa.2.24, 0.000000e+00
  %sub42.2.24 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.24
  %cond.2.24 = select i1 %cmp41.2.24, float %sub42.2.24, float %partial_sum.0.lcssa.2.24
  %conv.2.24 = fptoui float %cond.2.24 to i8
  %conv43.2.24 = uitofp i8 %conv.2.24 to float
  %1741 = add nsw i64 %indvars.iv.next21.1.24, %1714
  %arrayidx47.2.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1741
  store float %conv43.2.24, float* %arrayidx47.2.24, align 4
  br label %for.inc53.2.24

if.else.2.24:                                     ; preds = %for.end38.2.24
  %1742 = add nsw i64 %indvars.iv.next21.1.24, %1713
  %arrayidx51.2.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1742
  store float %partial_sum.0.lcssa.2.24, float* %arrayidx51.2.24, align 4
  br label %for.inc53.2.24

for.inc53.2.24:                                   ; preds = %if.else.2.24, %if.then40.2.24
  %inc54.2.24 = add nsw i32 %in_j.011.24, 3
  %indvars.iv.next21.2.24 = add nsw i64 %indvars.iv20.24, 3
  br i1 %cmp94, label %for.end38.3.24, label %for.body10.3.24.preheader

for.body10.3.24.preheader:                        ; preds = %for.inc53.2.24
  br label %for.body10.3.24

for.body10.3.24:                                  ; preds = %for.body10.3.24.preheader, %for.inc36.3.24
  %ki.06.3.24 = phi i32 [ %inc37.3.24, %for.inc36.3.24 ], [ 0, %for.body10.3.24.preheader ]
  %partial_sum.05.3.24 = phi float [ %partial_sum.3.3.24, %for.inc36.3.24 ], [ 0.000000e+00, %for.body10.3.24.preheader ]
  %add.3.24 = add nsw i32 %ki.06.3.24, %inc58.23
  %notlhs.3.24 = icmp slt i32 %add.3.24, 0
  %notrhs.3.24 = icmp uge i32 %add.3.24, %img_height
  %.not.3.24 = or i1 %notrhs.3.24, %notlhs.3.24
  %brmerge.3.24 = or i1 %.not.3.24, %cmp151.not.3.24
  br i1 %brmerge.3.24, label %for.inc36.3.24, label %for.body16.lr.ph.3.24

for.body16.lr.ph.3.24:                            ; preds = %for.body10.3.24
  %mul.3.24 = shl i32 %add.3.24, 7
  %mul30.3.24 = mul i32 %ki.06.3.24, %kern_width
  br label %for.body16.3.24

for.body16.3.24:                                  ; preds = %for.inc.3.24, %for.body16.lr.ph.3.24
  %indvars.iv.3.24 = phi i64 [ 0, %for.body16.lr.ph.3.24 ], [ %indvars.iv.next.3.24, %for.inc.3.24 ]
  %partial_sum.12.3.24 = phi float [ %partial_sum.05.3.24, %for.body16.lr.ph.3.24 ], [ %partial_sum.2.3.24, %for.inc.3.24 ]
  %1743 = trunc i64 %indvars.iv.3.24 to i32
  %add17.3.24 = add nsw i32 %1743, %inc54.2.24
  %cmp18.3.24 = icmp sgt i32 %add17.3.24, -1
  %cmp21.3.24 = icmp ult i32 %add17.3.24, %img_width
  %1744 = and i1 %cmp18.3.24, %cmp21.3.24
  br i1 %1744, label %if.end26.3.24, label %for.inc.3.24

if.end26.3.24:                                    ; preds = %for.body16.3.24
  %add29.3.24 = add nsw i32 %add17.3.24, %mul.3.24
  %idxprom.3.24 = sext i32 %add29.3.24 to i64
  %arrayidx.3.24 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.24
  %1745 = load float, float* %arrayidx.3.24, align 4
  %1746 = trunc i64 %indvars.iv.3.24 to i32
  %add31.3.24 = add i32 %1746, %mul30.3.24
  %idxprom32.3.24 = zext i32 %add31.3.24 to i64
  %arrayidx33.3.24 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.24
  %1747 = load float, float* %arrayidx33.3.24, align 4
  %mul34.3.24 = fmul float %1745, %1747
  %add35.3.24 = fadd float %partial_sum.12.3.24, %mul34.3.24
  br label %for.inc.3.24

for.inc.3.24:                                     ; preds = %if.end26.3.24, %for.body16.3.24
  %partial_sum.2.3.24 = phi float [ %add35.3.24, %if.end26.3.24 ], [ %partial_sum.12.3.24, %for.body16.3.24 ]
  %indvars.iv.next.3.24 = add nuw nsw i64 %indvars.iv.3.24, 1
  %lftr.wideiv.3.24 = trunc i64 %indvars.iv.next.3.24 to i32
  %exitcond.3.24 = icmp eq i32 %lftr.wideiv.3.24, %kern_width
  br i1 %exitcond.3.24, label %for.inc36.3.24.loopexit, label %for.body16.3.24, !llvm.loop !1

for.inc36.3.24.loopexit:                          ; preds = %for.inc.3.24
  %partial_sum.2.3.24.lcssa = phi float [ %partial_sum.2.3.24, %for.inc.3.24 ]
  br label %for.inc36.3.24

for.inc36.3.24:                                   ; preds = %for.inc36.3.24.loopexit, %for.body10.3.24
  %partial_sum.3.3.24 = phi float [ %partial_sum.05.3.24, %for.body10.3.24 ], [ %partial_sum.2.3.24.lcssa, %for.inc36.3.24.loopexit ]
  %inc37.3.24 = add nuw nsw i32 %ki.06.3.24, 1
  %exitcond19.3.24 = icmp eq i32 %inc37.3.24, %kern_height
  br i1 %exitcond19.3.24, label %for.end38.3.24.loopexit, label %for.body10.3.24, !llvm.loop !3

for.end38.3.24.loopexit:                          ; preds = %for.inc36.3.24
  %partial_sum.3.3.24.lcssa = phi float [ %partial_sum.3.3.24, %for.inc36.3.24 ]
  br label %for.end38.3.24

for.end38.3.24:                                   ; preds = %for.end38.3.24.loopexit, %for.inc53.2.24
  %partial_sum.0.lcssa.3.24 = phi float [ 0.000000e+00, %for.inc53.2.24 ], [ %partial_sum.3.3.24.lcssa, %for.end38.3.24.loopexit ]
  br i1 %tobool39, label %if.else.3.24, label %if.then40.3.24

if.then40.3.24:                                   ; preds = %for.end38.3.24
  %cmp41.3.24 = fcmp olt float %partial_sum.0.lcssa.3.24, 0.000000e+00
  %sub42.3.24 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.24
  %cond.3.24 = select i1 %cmp41.3.24, float %sub42.3.24, float %partial_sum.0.lcssa.3.24
  %conv.3.24 = fptoui float %cond.3.24 to i8
  %conv43.3.24 = uitofp i8 %conv.3.24 to float
  %1748 = add nsw i64 %indvars.iv.next21.2.24, %1714
  %arrayidx47.3.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1748
  store float %conv43.3.24, float* %arrayidx47.3.24, align 4
  br label %for.inc53.3.24

if.else.3.24:                                     ; preds = %for.end38.3.24
  %1749 = add nsw i64 %indvars.iv.next21.2.24, %1713
  %arrayidx51.3.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1749
  store float %partial_sum.0.lcssa.3.24, float* %arrayidx51.3.24, align 4
  br label %for.inc53.3.24

for.inc53.3.24:                                   ; preds = %if.else.3.24, %if.then40.3.24
  %inc54.3.24 = add nsw i32 %in_j.011.24, 4
  %indvars.iv.next21.3.24 = add nsw i64 %indvars.iv20.24, 4
  br i1 %cmp94, label %for.end38.4.24, label %for.body10.4.24.preheader

for.body10.4.24.preheader:                        ; preds = %for.inc53.3.24
  br label %for.body10.4.24

for.body10.4.24:                                  ; preds = %for.body10.4.24.preheader, %for.inc36.4.24
  %ki.06.4.24 = phi i32 [ %inc37.4.24, %for.inc36.4.24 ], [ 0, %for.body10.4.24.preheader ]
  %partial_sum.05.4.24 = phi float [ %partial_sum.3.4.24, %for.inc36.4.24 ], [ 0.000000e+00, %for.body10.4.24.preheader ]
  %add.4.24 = add nsw i32 %ki.06.4.24, %inc58.23
  %notlhs.4.24 = icmp slt i32 %add.4.24, 0
  %notrhs.4.24 = icmp uge i32 %add.4.24, %img_height
  %.not.4.24 = or i1 %notrhs.4.24, %notlhs.4.24
  %brmerge.4.24 = or i1 %.not.4.24, %cmp151.not.4.24
  br i1 %brmerge.4.24, label %for.inc36.4.24, label %for.body16.lr.ph.4.24

for.body16.lr.ph.4.24:                            ; preds = %for.body10.4.24
  %mul.4.24 = shl i32 %add.4.24, 7
  %mul30.4.24 = mul i32 %ki.06.4.24, %kern_width
  br label %for.body16.4.24

for.body16.4.24:                                  ; preds = %for.inc.4.24, %for.body16.lr.ph.4.24
  %indvars.iv.4.24 = phi i64 [ 0, %for.body16.lr.ph.4.24 ], [ %indvars.iv.next.4.24, %for.inc.4.24 ]
  %partial_sum.12.4.24 = phi float [ %partial_sum.05.4.24, %for.body16.lr.ph.4.24 ], [ %partial_sum.2.4.24, %for.inc.4.24 ]
  %1750 = trunc i64 %indvars.iv.4.24 to i32
  %add17.4.24 = add nsw i32 %1750, %inc54.3.24
  %cmp18.4.24 = icmp sgt i32 %add17.4.24, -1
  %cmp21.4.24 = icmp ult i32 %add17.4.24, %img_width
  %1751 = and i1 %cmp18.4.24, %cmp21.4.24
  br i1 %1751, label %if.end26.4.24, label %for.inc.4.24

if.end26.4.24:                                    ; preds = %for.body16.4.24
  %add29.4.24 = add nsw i32 %add17.4.24, %mul.4.24
  %idxprom.4.24 = sext i32 %add29.4.24 to i64
  %arrayidx.4.24 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.24
  %1752 = load float, float* %arrayidx.4.24, align 4
  %1753 = trunc i64 %indvars.iv.4.24 to i32
  %add31.4.24 = add i32 %1753, %mul30.4.24
  %idxprom32.4.24 = zext i32 %add31.4.24 to i64
  %arrayidx33.4.24 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.24
  %1754 = load float, float* %arrayidx33.4.24, align 4
  %mul34.4.24 = fmul float %1752, %1754
  %add35.4.24 = fadd float %partial_sum.12.4.24, %mul34.4.24
  br label %for.inc.4.24

for.inc.4.24:                                     ; preds = %if.end26.4.24, %for.body16.4.24
  %partial_sum.2.4.24 = phi float [ %add35.4.24, %if.end26.4.24 ], [ %partial_sum.12.4.24, %for.body16.4.24 ]
  %indvars.iv.next.4.24 = add nuw nsw i64 %indvars.iv.4.24, 1
  %lftr.wideiv.4.24 = trunc i64 %indvars.iv.next.4.24 to i32
  %exitcond.4.24 = icmp eq i32 %lftr.wideiv.4.24, %kern_width
  br i1 %exitcond.4.24, label %for.inc36.4.24.loopexit, label %for.body16.4.24, !llvm.loop !1

for.inc36.4.24.loopexit:                          ; preds = %for.inc.4.24
  %partial_sum.2.4.24.lcssa = phi float [ %partial_sum.2.4.24, %for.inc.4.24 ]
  br label %for.inc36.4.24

for.inc36.4.24:                                   ; preds = %for.inc36.4.24.loopexit, %for.body10.4.24
  %partial_sum.3.4.24 = phi float [ %partial_sum.05.4.24, %for.body10.4.24 ], [ %partial_sum.2.4.24.lcssa, %for.inc36.4.24.loopexit ]
  %inc37.4.24 = add nuw nsw i32 %ki.06.4.24, 1
  %exitcond19.4.24 = icmp eq i32 %inc37.4.24, %kern_height
  br i1 %exitcond19.4.24, label %for.end38.4.24.loopexit, label %for.body10.4.24, !llvm.loop !3

for.end38.4.24.loopexit:                          ; preds = %for.inc36.4.24
  %partial_sum.3.4.24.lcssa = phi float [ %partial_sum.3.4.24, %for.inc36.4.24 ]
  br label %for.end38.4.24

for.end38.4.24:                                   ; preds = %for.end38.4.24.loopexit, %for.inc53.3.24
  %partial_sum.0.lcssa.4.24 = phi float [ 0.000000e+00, %for.inc53.3.24 ], [ %partial_sum.3.4.24.lcssa, %for.end38.4.24.loopexit ]
  br i1 %tobool39, label %if.else.4.24, label %if.then40.4.24

if.then40.4.24:                                   ; preds = %for.end38.4.24
  %cmp41.4.24 = fcmp olt float %partial_sum.0.lcssa.4.24, 0.000000e+00
  %sub42.4.24 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.24
  %cond.4.24 = select i1 %cmp41.4.24, float %sub42.4.24, float %partial_sum.0.lcssa.4.24
  %conv.4.24 = fptoui float %cond.4.24 to i8
  %conv43.4.24 = uitofp i8 %conv.4.24 to float
  %1755 = add nsw i64 %indvars.iv.next21.3.24, %1714
  %arrayidx47.4.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1755
  store float %conv43.4.24, float* %arrayidx47.4.24, align 4
  br label %for.inc53.4.24

if.else.4.24:                                     ; preds = %for.end38.4.24
  %1756 = add nsw i64 %indvars.iv.next21.3.24, %1713
  %arrayidx51.4.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1756
  store float %partial_sum.0.lcssa.4.24, float* %arrayidx51.4.24, align 4
  br label %for.inc53.4.24

for.inc53.4.24:                                   ; preds = %if.else.4.24, %if.then40.4.24
  %inc54.4.24 = add nsw i32 %in_j.011.24, 5
  %indvars.iv.next21.4.24 = add nsw i64 %indvars.iv20.24, 5
  br i1 %cmp94, label %for.end38.5.24, label %for.body10.5.24.preheader

for.body10.5.24.preheader:                        ; preds = %for.inc53.4.24
  br label %for.body10.5.24

for.body10.5.24:                                  ; preds = %for.body10.5.24.preheader, %for.inc36.5.24
  %ki.06.5.24 = phi i32 [ %inc37.5.24, %for.inc36.5.24 ], [ 0, %for.body10.5.24.preheader ]
  %partial_sum.05.5.24 = phi float [ %partial_sum.3.5.24, %for.inc36.5.24 ], [ 0.000000e+00, %for.body10.5.24.preheader ]
  %add.5.24 = add nsw i32 %ki.06.5.24, %inc58.23
  %notlhs.5.24 = icmp slt i32 %add.5.24, 0
  %notrhs.5.24 = icmp uge i32 %add.5.24, %img_height
  %.not.5.24 = or i1 %notrhs.5.24, %notlhs.5.24
  %brmerge.5.24 = or i1 %.not.5.24, %cmp151.not.5.24
  br i1 %brmerge.5.24, label %for.inc36.5.24, label %for.body16.lr.ph.5.24

for.body16.lr.ph.5.24:                            ; preds = %for.body10.5.24
  %mul.5.24 = shl i32 %add.5.24, 7
  %mul30.5.24 = mul i32 %ki.06.5.24, %kern_width
  br label %for.body16.5.24

for.body16.5.24:                                  ; preds = %for.inc.5.24, %for.body16.lr.ph.5.24
  %indvars.iv.5.24 = phi i64 [ 0, %for.body16.lr.ph.5.24 ], [ %indvars.iv.next.5.24, %for.inc.5.24 ]
  %partial_sum.12.5.24 = phi float [ %partial_sum.05.5.24, %for.body16.lr.ph.5.24 ], [ %partial_sum.2.5.24, %for.inc.5.24 ]
  %1757 = trunc i64 %indvars.iv.5.24 to i32
  %add17.5.24 = add nsw i32 %1757, %inc54.4.24
  %cmp18.5.24 = icmp sgt i32 %add17.5.24, -1
  %cmp21.5.24 = icmp ult i32 %add17.5.24, %img_width
  %1758 = and i1 %cmp18.5.24, %cmp21.5.24
  br i1 %1758, label %if.end26.5.24, label %for.inc.5.24

if.end26.5.24:                                    ; preds = %for.body16.5.24
  %add29.5.24 = add nsw i32 %add17.5.24, %mul.5.24
  %idxprom.5.24 = sext i32 %add29.5.24 to i64
  %arrayidx.5.24 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.24
  %1759 = load float, float* %arrayidx.5.24, align 4
  %1760 = trunc i64 %indvars.iv.5.24 to i32
  %add31.5.24 = add i32 %1760, %mul30.5.24
  %idxprom32.5.24 = zext i32 %add31.5.24 to i64
  %arrayidx33.5.24 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.24
  %1761 = load float, float* %arrayidx33.5.24, align 4
  %mul34.5.24 = fmul float %1759, %1761
  %add35.5.24 = fadd float %partial_sum.12.5.24, %mul34.5.24
  br label %for.inc.5.24

for.inc.5.24:                                     ; preds = %if.end26.5.24, %for.body16.5.24
  %partial_sum.2.5.24 = phi float [ %add35.5.24, %if.end26.5.24 ], [ %partial_sum.12.5.24, %for.body16.5.24 ]
  %indvars.iv.next.5.24 = add nuw nsw i64 %indvars.iv.5.24, 1
  %lftr.wideiv.5.24 = trunc i64 %indvars.iv.next.5.24 to i32
  %exitcond.5.24 = icmp eq i32 %lftr.wideiv.5.24, %kern_width
  br i1 %exitcond.5.24, label %for.inc36.5.24.loopexit, label %for.body16.5.24, !llvm.loop !1

for.inc36.5.24.loopexit:                          ; preds = %for.inc.5.24
  %partial_sum.2.5.24.lcssa = phi float [ %partial_sum.2.5.24, %for.inc.5.24 ]
  br label %for.inc36.5.24

for.inc36.5.24:                                   ; preds = %for.inc36.5.24.loopexit, %for.body10.5.24
  %partial_sum.3.5.24 = phi float [ %partial_sum.05.5.24, %for.body10.5.24 ], [ %partial_sum.2.5.24.lcssa, %for.inc36.5.24.loopexit ]
  %inc37.5.24 = add nuw nsw i32 %ki.06.5.24, 1
  %exitcond19.5.24 = icmp eq i32 %inc37.5.24, %kern_height
  br i1 %exitcond19.5.24, label %for.end38.5.24.loopexit, label %for.body10.5.24, !llvm.loop !3

for.end38.5.24.loopexit:                          ; preds = %for.inc36.5.24
  %partial_sum.3.5.24.lcssa = phi float [ %partial_sum.3.5.24, %for.inc36.5.24 ]
  br label %for.end38.5.24

for.end38.5.24:                                   ; preds = %for.end38.5.24.loopexit, %for.inc53.4.24
  %partial_sum.0.lcssa.5.24 = phi float [ 0.000000e+00, %for.inc53.4.24 ], [ %partial_sum.3.5.24.lcssa, %for.end38.5.24.loopexit ]
  br i1 %tobool39, label %if.else.5.24, label %if.then40.5.24

if.then40.5.24:                                   ; preds = %for.end38.5.24
  %cmp41.5.24 = fcmp olt float %partial_sum.0.lcssa.5.24, 0.000000e+00
  %sub42.5.24 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.24
  %cond.5.24 = select i1 %cmp41.5.24, float %sub42.5.24, float %partial_sum.0.lcssa.5.24
  %conv.5.24 = fptoui float %cond.5.24 to i8
  %conv43.5.24 = uitofp i8 %conv.5.24 to float
  %1762 = add nsw i64 %indvars.iv.next21.4.24, %1714
  %arrayidx47.5.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1762
  store float %conv43.5.24, float* %arrayidx47.5.24, align 4
  br label %for.inc53.5.24

if.else.5.24:                                     ; preds = %for.end38.5.24
  %1763 = add nsw i64 %indvars.iv.next21.4.24, %1713
  %arrayidx51.5.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1763
  store float %partial_sum.0.lcssa.5.24, float* %arrayidx51.5.24, align 4
  br label %for.inc53.5.24

for.inc53.5.24:                                   ; preds = %if.else.5.24, %if.then40.5.24
  %inc54.5.24 = add nsw i32 %in_j.011.24, 6
  %indvars.iv.next21.5.24 = add nsw i64 %indvars.iv20.24, 6
  br i1 %cmp94, label %for.end38.6.24, label %for.body10.6.24.preheader

for.body10.6.24.preheader:                        ; preds = %for.inc53.5.24
  br label %for.body10.6.24

for.body10.6.24:                                  ; preds = %for.body10.6.24.preheader, %for.inc36.6.24
  %ki.06.6.24 = phi i32 [ %inc37.6.24, %for.inc36.6.24 ], [ 0, %for.body10.6.24.preheader ]
  %partial_sum.05.6.24 = phi float [ %partial_sum.3.6.24, %for.inc36.6.24 ], [ 0.000000e+00, %for.body10.6.24.preheader ]
  %add.6.24 = add nsw i32 %ki.06.6.24, %inc58.23
  %notlhs.6.24 = icmp slt i32 %add.6.24, 0
  %notrhs.6.24 = icmp uge i32 %add.6.24, %img_height
  %.not.6.24 = or i1 %notrhs.6.24, %notlhs.6.24
  %brmerge.6.24 = or i1 %.not.6.24, %cmp151.not.6.24
  br i1 %brmerge.6.24, label %for.inc36.6.24, label %for.body16.lr.ph.6.24

for.body16.lr.ph.6.24:                            ; preds = %for.body10.6.24
  %mul.6.24 = shl i32 %add.6.24, 7
  %mul30.6.24 = mul i32 %ki.06.6.24, %kern_width
  br label %for.body16.6.24

for.body16.6.24:                                  ; preds = %for.inc.6.24, %for.body16.lr.ph.6.24
  %indvars.iv.6.24 = phi i64 [ 0, %for.body16.lr.ph.6.24 ], [ %indvars.iv.next.6.24, %for.inc.6.24 ]
  %partial_sum.12.6.24 = phi float [ %partial_sum.05.6.24, %for.body16.lr.ph.6.24 ], [ %partial_sum.2.6.24, %for.inc.6.24 ]
  %1764 = trunc i64 %indvars.iv.6.24 to i32
  %add17.6.24 = add nsw i32 %1764, %inc54.5.24
  %cmp18.6.24 = icmp sgt i32 %add17.6.24, -1
  %cmp21.6.24 = icmp ult i32 %add17.6.24, %img_width
  %1765 = and i1 %cmp18.6.24, %cmp21.6.24
  br i1 %1765, label %if.end26.6.24, label %for.inc.6.24

if.end26.6.24:                                    ; preds = %for.body16.6.24
  %add29.6.24 = add nsw i32 %add17.6.24, %mul.6.24
  %idxprom.6.24 = sext i32 %add29.6.24 to i64
  %arrayidx.6.24 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.24
  %1766 = load float, float* %arrayidx.6.24, align 4
  %1767 = trunc i64 %indvars.iv.6.24 to i32
  %add31.6.24 = add i32 %1767, %mul30.6.24
  %idxprom32.6.24 = zext i32 %add31.6.24 to i64
  %arrayidx33.6.24 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.24
  %1768 = load float, float* %arrayidx33.6.24, align 4
  %mul34.6.24 = fmul float %1766, %1768
  %add35.6.24 = fadd float %partial_sum.12.6.24, %mul34.6.24
  br label %for.inc.6.24

for.inc.6.24:                                     ; preds = %if.end26.6.24, %for.body16.6.24
  %partial_sum.2.6.24 = phi float [ %add35.6.24, %if.end26.6.24 ], [ %partial_sum.12.6.24, %for.body16.6.24 ]
  %indvars.iv.next.6.24 = add nuw nsw i64 %indvars.iv.6.24, 1
  %lftr.wideiv.6.24 = trunc i64 %indvars.iv.next.6.24 to i32
  %exitcond.6.24 = icmp eq i32 %lftr.wideiv.6.24, %kern_width
  br i1 %exitcond.6.24, label %for.inc36.6.24.loopexit, label %for.body16.6.24, !llvm.loop !1

for.inc36.6.24.loopexit:                          ; preds = %for.inc.6.24
  %partial_sum.2.6.24.lcssa = phi float [ %partial_sum.2.6.24, %for.inc.6.24 ]
  br label %for.inc36.6.24

for.inc36.6.24:                                   ; preds = %for.inc36.6.24.loopexit, %for.body10.6.24
  %partial_sum.3.6.24 = phi float [ %partial_sum.05.6.24, %for.body10.6.24 ], [ %partial_sum.2.6.24.lcssa, %for.inc36.6.24.loopexit ]
  %inc37.6.24 = add nuw nsw i32 %ki.06.6.24, 1
  %exitcond19.6.24 = icmp eq i32 %inc37.6.24, %kern_height
  br i1 %exitcond19.6.24, label %for.end38.6.24.loopexit, label %for.body10.6.24, !llvm.loop !3

for.end38.6.24.loopexit:                          ; preds = %for.inc36.6.24
  %partial_sum.3.6.24.lcssa = phi float [ %partial_sum.3.6.24, %for.inc36.6.24 ]
  br label %for.end38.6.24

for.end38.6.24:                                   ; preds = %for.end38.6.24.loopexit, %for.inc53.5.24
  %partial_sum.0.lcssa.6.24 = phi float [ 0.000000e+00, %for.inc53.5.24 ], [ %partial_sum.3.6.24.lcssa, %for.end38.6.24.loopexit ]
  br i1 %tobool39, label %if.else.6.24, label %if.then40.6.24

if.then40.6.24:                                   ; preds = %for.end38.6.24
  %cmp41.6.24 = fcmp olt float %partial_sum.0.lcssa.6.24, 0.000000e+00
  %sub42.6.24 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.24
  %cond.6.24 = select i1 %cmp41.6.24, float %sub42.6.24, float %partial_sum.0.lcssa.6.24
  %conv.6.24 = fptoui float %cond.6.24 to i8
  %conv43.6.24 = uitofp i8 %conv.6.24 to float
  %1769 = add nsw i64 %indvars.iv.next21.5.24, %1714
  %arrayidx47.6.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1769
  store float %conv43.6.24, float* %arrayidx47.6.24, align 4
  br label %for.inc53.6.24

if.else.6.24:                                     ; preds = %for.end38.6.24
  %1770 = add nsw i64 %indvars.iv.next21.5.24, %1713
  %arrayidx51.6.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1770
  store float %partial_sum.0.lcssa.6.24, float* %arrayidx51.6.24, align 4
  br label %for.inc53.6.24

for.inc53.6.24:                                   ; preds = %if.else.6.24, %if.then40.6.24
  %inc54.6.24 = add nsw i32 %in_j.011.24, 7
  %indvars.iv.next21.6.24 = add nsw i64 %indvars.iv20.24, 7
  br i1 %cmp94, label %for.end38.7.24, label %for.body10.7.24.preheader

for.body10.7.24.preheader:                        ; preds = %for.inc53.6.24
  br label %for.body10.7.24

for.body10.7.24:                                  ; preds = %for.body10.7.24.preheader, %for.inc36.7.24
  %ki.06.7.24 = phi i32 [ %inc37.7.24, %for.inc36.7.24 ], [ 0, %for.body10.7.24.preheader ]
  %partial_sum.05.7.24 = phi float [ %partial_sum.3.7.24, %for.inc36.7.24 ], [ 0.000000e+00, %for.body10.7.24.preheader ]
  %add.7.24 = add nsw i32 %ki.06.7.24, %inc58.23
  %notlhs.7.24 = icmp slt i32 %add.7.24, 0
  %notrhs.7.24 = icmp uge i32 %add.7.24, %img_height
  %.not.7.24 = or i1 %notrhs.7.24, %notlhs.7.24
  %brmerge.7.24 = or i1 %.not.7.24, %cmp151.not.7.24
  br i1 %brmerge.7.24, label %for.inc36.7.24, label %for.body16.lr.ph.7.24

for.body16.lr.ph.7.24:                            ; preds = %for.body10.7.24
  %mul.7.24 = shl i32 %add.7.24, 7
  %mul30.7.24 = mul i32 %ki.06.7.24, %kern_width
  br label %for.body16.7.24

for.body16.7.24:                                  ; preds = %for.inc.7.24, %for.body16.lr.ph.7.24
  %indvars.iv.7.24 = phi i64 [ 0, %for.body16.lr.ph.7.24 ], [ %indvars.iv.next.7.24, %for.inc.7.24 ]
  %partial_sum.12.7.24 = phi float [ %partial_sum.05.7.24, %for.body16.lr.ph.7.24 ], [ %partial_sum.2.7.24, %for.inc.7.24 ]
  %1771 = trunc i64 %indvars.iv.7.24 to i32
  %add17.7.24 = add nsw i32 %1771, %inc54.6.24
  %cmp18.7.24 = icmp sgt i32 %add17.7.24, -1
  %cmp21.7.24 = icmp ult i32 %add17.7.24, %img_width
  %1772 = and i1 %cmp18.7.24, %cmp21.7.24
  br i1 %1772, label %if.end26.7.24, label %for.inc.7.24

if.end26.7.24:                                    ; preds = %for.body16.7.24
  %add29.7.24 = add nsw i32 %add17.7.24, %mul.7.24
  %idxprom.7.24 = sext i32 %add29.7.24 to i64
  %arrayidx.7.24 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.24
  %1773 = load float, float* %arrayidx.7.24, align 4
  %1774 = trunc i64 %indvars.iv.7.24 to i32
  %add31.7.24 = add i32 %1774, %mul30.7.24
  %idxprom32.7.24 = zext i32 %add31.7.24 to i64
  %arrayidx33.7.24 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.24
  %1775 = load float, float* %arrayidx33.7.24, align 4
  %mul34.7.24 = fmul float %1773, %1775
  %add35.7.24 = fadd float %partial_sum.12.7.24, %mul34.7.24
  br label %for.inc.7.24

for.inc.7.24:                                     ; preds = %if.end26.7.24, %for.body16.7.24
  %partial_sum.2.7.24 = phi float [ %add35.7.24, %if.end26.7.24 ], [ %partial_sum.12.7.24, %for.body16.7.24 ]
  %indvars.iv.next.7.24 = add nuw nsw i64 %indvars.iv.7.24, 1
  %lftr.wideiv.7.24 = trunc i64 %indvars.iv.next.7.24 to i32
  %exitcond.7.24 = icmp eq i32 %lftr.wideiv.7.24, %kern_width
  br i1 %exitcond.7.24, label %for.inc36.7.24.loopexit, label %for.body16.7.24, !llvm.loop !1

for.inc36.7.24.loopexit:                          ; preds = %for.inc.7.24
  %partial_sum.2.7.24.lcssa = phi float [ %partial_sum.2.7.24, %for.inc.7.24 ]
  br label %for.inc36.7.24

for.inc36.7.24:                                   ; preds = %for.inc36.7.24.loopexit, %for.body10.7.24
  %partial_sum.3.7.24 = phi float [ %partial_sum.05.7.24, %for.body10.7.24 ], [ %partial_sum.2.7.24.lcssa, %for.inc36.7.24.loopexit ]
  %inc37.7.24 = add nuw nsw i32 %ki.06.7.24, 1
  %exitcond19.7.24 = icmp eq i32 %inc37.7.24, %kern_height
  br i1 %exitcond19.7.24, label %for.end38.7.24.loopexit, label %for.body10.7.24, !llvm.loop !3

for.end38.7.24.loopexit:                          ; preds = %for.inc36.7.24
  %partial_sum.3.7.24.lcssa = phi float [ %partial_sum.3.7.24, %for.inc36.7.24 ]
  br label %for.end38.7.24

for.end38.7.24:                                   ; preds = %for.end38.7.24.loopexit, %for.inc53.6.24
  %partial_sum.0.lcssa.7.24 = phi float [ 0.000000e+00, %for.inc53.6.24 ], [ %partial_sum.3.7.24.lcssa, %for.end38.7.24.loopexit ]
  br i1 %tobool39, label %if.else.7.24, label %if.then40.7.24

if.then40.7.24:                                   ; preds = %for.end38.7.24
  %cmp41.7.24 = fcmp olt float %partial_sum.0.lcssa.7.24, 0.000000e+00
  %sub42.7.24 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.24
  %cond.7.24 = select i1 %cmp41.7.24, float %sub42.7.24, float %partial_sum.0.lcssa.7.24
  %conv.7.24 = fptoui float %cond.7.24 to i8
  %conv43.7.24 = uitofp i8 %conv.7.24 to float
  %1776 = add nsw i64 %indvars.iv.next21.6.24, %1714
  %arrayidx47.7.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1776
  store float %conv43.7.24, float* %arrayidx47.7.24, align 4
  br label %for.inc53.7.24

if.else.7.24:                                     ; preds = %for.end38.7.24
  %1777 = add nsw i64 %indvars.iv.next21.6.24, %1713
  %arrayidx51.7.24 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1777
  store float %partial_sum.0.lcssa.7.24, float* %arrayidx51.7.24, align 4
  br label %for.inc53.7.24

for.inc53.7.24:                                   ; preds = %if.else.7.24, %if.then40.7.24
  %inc54.7.24 = add nsw i32 %in_j.011.24, 8
  %indvars.iv.next21.7.24 = add nsw i64 %indvars.iv20.24, 8
  %lftr.wideiv24.7.24 = trunc i64 %indvars.iv.next21.7.24 to i32
  %exitcond25.7.24 = icmp eq i32 %lftr.wideiv24.7.24, %img_width
  br i1 %exitcond25.7.24, label %for.inc57.24.loopexit, label %for.cond8.preheader.24, !llvm.loop !5

for.inc57.24.loopexit:                            ; preds = %for.inc53.7.24
  br label %for.inc57.24

for.inc57.24:                                     ; preds = %for.inc57.24.loopexit, %for.cond8.preheader.lr.ph.split.24
  %inc58.24 = add nsw i32 %in_i.015, 25
  %indvars.iv.next27.24 = add nsw i64 %indvars.iv26, 25
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.25

for.cond8.preheader.lr.ph.25:                     ; preds = %for.inc57.24
  %1778 = trunc i64 %indvars.iv.next27.24 to i32
  %mul48.25 = shl i32 %1778, 7
  %1779 = trunc i64 %indvars.iv.next27.24 to i32
  %mul44.25 = shl i32 %1779, 7
  %1780 = sext i32 %mul48.25 to i64
  %1781 = sext i32 %mul44.25 to i64
  br i1 %lcmp.mod.25, label %for.cond8.preheader.lr.ph.split.25, label %for.cond8.preheader.prol.25.preheader

for.cond8.preheader.prol.25.preheader:            ; preds = %for.cond8.preheader.lr.ph.25
  br label %for.cond8.preheader.prol.25

for.cond8.preheader.prol.25:                      ; preds = %for.cond8.preheader.prol.25.preheader, %for.inc53.prol.25
  %indvars.iv20.prol.25 = phi i64 [ %indvars.iv.next21.prol.25, %for.inc53.prol.25 ], [ 0, %for.cond8.preheader.prol.25.preheader ]
  %in_j.011.prol.25 = phi i32 [ %inc54.prol.25, %for.inc53.prol.25 ], [ %sub4, %for.cond8.preheader.prol.25.preheader ]
  %prol.iter.25 = phi i32 [ %prol.iter.sub.25, %for.inc53.prol.25 ], [ %xtraiter.25, %for.cond8.preheader.prol.25.preheader ]
  br i1 %cmp94, label %for.end38.prol.25, label %for.body10.prol.25.preheader

for.body10.prol.25.preheader:                     ; preds = %for.cond8.preheader.prol.25
  br label %for.body10.prol.25

for.body10.prol.25:                               ; preds = %for.body10.prol.25.preheader, %for.inc36.prol.25
  %ki.06.prol.25 = phi i32 [ %inc37.prol.25, %for.inc36.prol.25 ], [ 0, %for.body10.prol.25.preheader ]
  %partial_sum.05.prol.25 = phi float [ %partial_sum.3.prol.25, %for.inc36.prol.25 ], [ 0.000000e+00, %for.body10.prol.25.preheader ]
  %add.prol.25 = add nsw i32 %ki.06.prol.25, %inc58.24
  %notlhs.prol.25 = icmp slt i32 %add.prol.25, 0
  %notrhs.prol.25 = icmp uge i32 %add.prol.25, %img_height
  %.not.prol.25 = or i1 %notrhs.prol.25, %notlhs.prol.25
  %brmerge.prol.25 = or i1 %.not.prol.25, %cmp151.not.prol.25
  br i1 %brmerge.prol.25, label %for.inc36.prol.25, label %for.body16.lr.ph.prol.25

for.body16.lr.ph.prol.25:                         ; preds = %for.body10.prol.25
  %mul.prol.25 = shl i32 %add.prol.25, 7
  %mul30.prol.25 = mul i32 %ki.06.prol.25, %kern_width
  br label %for.body16.prol.25

for.body16.prol.25:                               ; preds = %for.inc.prol.25, %for.body16.lr.ph.prol.25
  %indvars.iv.prol.25 = phi i64 [ 0, %for.body16.lr.ph.prol.25 ], [ %indvars.iv.next.prol.25, %for.inc.prol.25 ]
  %partial_sum.12.prol.25 = phi float [ %partial_sum.05.prol.25, %for.body16.lr.ph.prol.25 ], [ %partial_sum.2.prol.25, %for.inc.prol.25 ]
  %1782 = trunc i64 %indvars.iv.prol.25 to i32
  %add17.prol.25 = add nsw i32 %1782, %in_j.011.prol.25
  %cmp18.prol.25 = icmp sgt i32 %add17.prol.25, -1
  %cmp21.prol.25 = icmp ult i32 %add17.prol.25, %img_width
  %1783 = and i1 %cmp18.prol.25, %cmp21.prol.25
  br i1 %1783, label %if.end26.prol.25, label %for.inc.prol.25

if.end26.prol.25:                                 ; preds = %for.body16.prol.25
  %add29.prol.25 = add nsw i32 %add17.prol.25, %mul.prol.25
  %idxprom.prol.25 = sext i32 %add29.prol.25 to i64
  %arrayidx.prol.25 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.25
  %1784 = load float, float* %arrayidx.prol.25, align 4
  %1785 = trunc i64 %indvars.iv.prol.25 to i32
  %add31.prol.25 = add i32 %1785, %mul30.prol.25
  %idxprom32.prol.25 = zext i32 %add31.prol.25 to i64
  %arrayidx33.prol.25 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.25
  %1786 = load float, float* %arrayidx33.prol.25, align 4
  %mul34.prol.25 = fmul float %1784, %1786
  %add35.prol.25 = fadd float %partial_sum.12.prol.25, %mul34.prol.25
  br label %for.inc.prol.25

for.inc.prol.25:                                  ; preds = %if.end26.prol.25, %for.body16.prol.25
  %partial_sum.2.prol.25 = phi float [ %add35.prol.25, %if.end26.prol.25 ], [ %partial_sum.12.prol.25, %for.body16.prol.25 ]
  %indvars.iv.next.prol.25 = add nuw nsw i64 %indvars.iv.prol.25, 1
  %lftr.wideiv.prol.25 = trunc i64 %indvars.iv.next.prol.25 to i32
  %exitcond.prol.25 = icmp eq i32 %lftr.wideiv.prol.25, %kern_width
  br i1 %exitcond.prol.25, label %for.inc36.prol.25.loopexit, label %for.body16.prol.25, !llvm.loop !1

for.inc36.prol.25.loopexit:                       ; preds = %for.inc.prol.25
  %partial_sum.2.prol.25.lcssa = phi float [ %partial_sum.2.prol.25, %for.inc.prol.25 ]
  br label %for.inc36.prol.25

for.inc36.prol.25:                                ; preds = %for.inc36.prol.25.loopexit, %for.body10.prol.25
  %partial_sum.3.prol.25 = phi float [ %partial_sum.05.prol.25, %for.body10.prol.25 ], [ %partial_sum.2.prol.25.lcssa, %for.inc36.prol.25.loopexit ]
  %inc37.prol.25 = add nuw nsw i32 %ki.06.prol.25, 1
  %exitcond19.prol.25 = icmp eq i32 %inc37.prol.25, %kern_height
  br i1 %exitcond19.prol.25, label %for.end38.prol.25.loopexit, label %for.body10.prol.25, !llvm.loop !3

for.end38.prol.25.loopexit:                       ; preds = %for.inc36.prol.25
  %partial_sum.3.prol.25.lcssa = phi float [ %partial_sum.3.prol.25, %for.inc36.prol.25 ]
  br label %for.end38.prol.25

for.end38.prol.25:                                ; preds = %for.end38.prol.25.loopexit, %for.cond8.preheader.prol.25
  %partial_sum.0.lcssa.prol.25 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.25 ], [ %partial_sum.3.prol.25.lcssa, %for.end38.prol.25.loopexit ]
  br i1 %tobool39, label %if.else.prol.25, label %if.then40.prol.25

if.then40.prol.25:                                ; preds = %for.end38.prol.25
  %cmp41.prol.25 = fcmp olt float %partial_sum.0.lcssa.prol.25, 0.000000e+00
  %sub42.prol.25 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.25
  %cond.prol.25 = select i1 %cmp41.prol.25, float %sub42.prol.25, float %partial_sum.0.lcssa.prol.25
  %conv.prol.25 = fptoui float %cond.prol.25 to i8
  %conv43.prol.25 = uitofp i8 %conv.prol.25 to float
  %1787 = add nsw i64 %indvars.iv20.prol.25, %1781
  %arrayidx47.prol.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1787
  store float %conv43.prol.25, float* %arrayidx47.prol.25, align 4
  br label %for.inc53.prol.25

if.else.prol.25:                                  ; preds = %for.end38.prol.25
  %1788 = add nsw i64 %indvars.iv20.prol.25, %1780
  %arrayidx51.prol.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1788
  store float %partial_sum.0.lcssa.prol.25, float* %arrayidx51.prol.25, align 4
  br label %for.inc53.prol.25

for.inc53.prol.25:                                ; preds = %if.else.prol.25, %if.then40.prol.25
  %inc54.prol.25 = add nsw i32 %in_j.011.prol.25, 1
  %indvars.iv.next21.prol.25 = add nuw nsw i64 %indvars.iv20.prol.25, 1
  %prol.iter.sub.25 = add i32 %prol.iter.25, -1
  %prol.iter.cmp.25 = icmp eq i32 %prol.iter.sub.25, 0
  br i1 %prol.iter.cmp.25, label %for.cond8.preheader.lr.ph.split.25.loopexit, label %for.cond8.preheader.prol.25, !llvm.loop !4

for.cond8.preheader.lr.ph.split.25.loopexit:      ; preds = %for.inc53.prol.25
  %indvars.iv.next21.prol.25.lcssa = phi i64 [ %indvars.iv.next21.prol.25, %for.inc53.prol.25 ]
  %inc54.prol.25.lcssa = phi i32 [ %inc54.prol.25, %for.inc53.prol.25 ]
  br label %for.cond8.preheader.lr.ph.split.25

for.cond8.preheader.lr.ph.split.25:               ; preds = %for.cond8.preheader.lr.ph.split.25.loopexit, %for.cond8.preheader.lr.ph.25
  %indvars.iv20.unr.25 = phi i64 [ 0, %for.cond8.preheader.lr.ph.25 ], [ %indvars.iv.next21.prol.25.lcssa, %for.cond8.preheader.lr.ph.split.25.loopexit ]
  %in_j.011.unr.25 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.25 ], [ %inc54.prol.25.lcssa, %for.cond8.preheader.lr.ph.split.25.loopexit ]
  br i1 %96, label %for.inc57.25, label %for.cond8.preheader.25.preheader

for.cond8.preheader.25.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.25
  br label %for.cond8.preheader.25

for.cond8.preheader.25:                           ; preds = %for.cond8.preheader.25.preheader, %for.inc53.7.25
  %indvars.iv20.25 = phi i64 [ %indvars.iv.next21.7.25, %for.inc53.7.25 ], [ %indvars.iv20.unr.25, %for.cond8.preheader.25.preheader ]
  %in_j.011.25 = phi i32 [ %inc54.7.25, %for.inc53.7.25 ], [ %in_j.011.unr.25, %for.cond8.preheader.25.preheader ]
  br i1 %cmp94, label %for.end38.25, label %for.body10.25.preheader

for.body10.25.preheader:                          ; preds = %for.cond8.preheader.25
  br label %for.body10.25

for.body10.25:                                    ; preds = %for.body10.25.preheader, %for.inc36.25
  %ki.06.25 = phi i32 [ %inc37.25, %for.inc36.25 ], [ 0, %for.body10.25.preheader ]
  %partial_sum.05.25 = phi float [ %partial_sum.3.25, %for.inc36.25 ], [ 0.000000e+00, %for.body10.25.preheader ]
  %add.25 = add nsw i32 %ki.06.25, %inc58.24
  %notlhs.25 = icmp slt i32 %add.25, 0
  %notrhs.25 = icmp uge i32 %add.25, %img_height
  %.not.25 = or i1 %notrhs.25, %notlhs.25
  %brmerge.25 = or i1 %.not.25, %cmp151.not.25
  br i1 %brmerge.25, label %for.inc36.25, label %for.body16.lr.ph.25

for.body16.lr.ph.25:                              ; preds = %for.body10.25
  %mul.25 = shl i32 %add.25, 7
  %mul30.25 = mul i32 %ki.06.25, %kern_width
  br label %for.body16.25

for.body16.25:                                    ; preds = %for.inc.25, %for.body16.lr.ph.25
  %indvars.iv.25 = phi i64 [ 0, %for.body16.lr.ph.25 ], [ %indvars.iv.next.25, %for.inc.25 ]
  %partial_sum.12.25 = phi float [ %partial_sum.05.25, %for.body16.lr.ph.25 ], [ %partial_sum.2.25, %for.inc.25 ]
  %1789 = trunc i64 %indvars.iv.25 to i32
  %add17.25 = add nsw i32 %1789, %in_j.011.25
  %cmp18.25 = icmp sgt i32 %add17.25, -1
  %cmp21.25 = icmp ult i32 %add17.25, %img_width
  %1790 = and i1 %cmp18.25, %cmp21.25
  br i1 %1790, label %if.end26.25, label %for.inc.25

if.end26.25:                                      ; preds = %for.body16.25
  %add29.25 = add nsw i32 %add17.25, %mul.25
  %idxprom.25 = sext i32 %add29.25 to i64
  %arrayidx.25 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.25
  %1791 = load float, float* %arrayidx.25, align 4
  %1792 = trunc i64 %indvars.iv.25 to i32
  %add31.25 = add i32 %1792, %mul30.25
  %idxprom32.25 = zext i32 %add31.25 to i64
  %arrayidx33.25 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.25
  %1793 = load float, float* %arrayidx33.25, align 4
  %mul34.25 = fmul float %1791, %1793
  %add35.25 = fadd float %partial_sum.12.25, %mul34.25
  br label %for.inc.25

for.inc.25:                                       ; preds = %if.end26.25, %for.body16.25
  %partial_sum.2.25 = phi float [ %add35.25, %if.end26.25 ], [ %partial_sum.12.25, %for.body16.25 ]
  %indvars.iv.next.25 = add nuw nsw i64 %indvars.iv.25, 1
  %lftr.wideiv.25 = trunc i64 %indvars.iv.next.25 to i32
  %exitcond.25 = icmp eq i32 %lftr.wideiv.25, %kern_width
  br i1 %exitcond.25, label %for.inc36.25.loopexit, label %for.body16.25, !llvm.loop !1

for.inc36.25.loopexit:                            ; preds = %for.inc.25
  %partial_sum.2.25.lcssa = phi float [ %partial_sum.2.25, %for.inc.25 ]
  br label %for.inc36.25

for.inc36.25:                                     ; preds = %for.inc36.25.loopexit, %for.body10.25
  %partial_sum.3.25 = phi float [ %partial_sum.05.25, %for.body10.25 ], [ %partial_sum.2.25.lcssa, %for.inc36.25.loopexit ]
  %inc37.25 = add nuw nsw i32 %ki.06.25, 1
  %exitcond19.25 = icmp eq i32 %inc37.25, %kern_height
  br i1 %exitcond19.25, label %for.end38.25.loopexit, label %for.body10.25, !llvm.loop !3

for.end38.25.loopexit:                            ; preds = %for.inc36.25
  %partial_sum.3.25.lcssa = phi float [ %partial_sum.3.25, %for.inc36.25 ]
  br label %for.end38.25

for.end38.25:                                     ; preds = %for.end38.25.loopexit, %for.cond8.preheader.25
  %partial_sum.0.lcssa.25 = phi float [ 0.000000e+00, %for.cond8.preheader.25 ], [ %partial_sum.3.25.lcssa, %for.end38.25.loopexit ]
  br i1 %tobool39, label %if.else.25, label %if.then40.25

if.then40.25:                                     ; preds = %for.end38.25
  %cmp41.25 = fcmp olt float %partial_sum.0.lcssa.25, 0.000000e+00
  %sub42.25 = fsub float -0.000000e+00, %partial_sum.0.lcssa.25
  %cond.25 = select i1 %cmp41.25, float %sub42.25, float %partial_sum.0.lcssa.25
  %conv.25 = fptoui float %cond.25 to i8
  %conv43.25 = uitofp i8 %conv.25 to float
  %1794 = add nsw i64 %indvars.iv20.25, %1781
  %arrayidx47.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1794
  store float %conv43.25, float* %arrayidx47.25, align 4
  br label %for.inc53.25

if.else.25:                                       ; preds = %for.end38.25
  %1795 = add nsw i64 %indvars.iv20.25, %1780
  %arrayidx51.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1795
  store float %partial_sum.0.lcssa.25, float* %arrayidx51.25, align 4
  br label %for.inc53.25

for.inc53.25:                                     ; preds = %if.else.25, %if.then40.25
  %inc54.25 = add nsw i32 %in_j.011.25, 1
  %indvars.iv.next21.25 = add nuw nsw i64 %indvars.iv20.25, 1
  br i1 %cmp94, label %for.end38.1.25, label %for.body10.1.25.preheader

for.body10.1.25.preheader:                        ; preds = %for.inc53.25
  br label %for.body10.1.25

for.body10.1.25:                                  ; preds = %for.body10.1.25.preheader, %for.inc36.1.25
  %ki.06.1.25 = phi i32 [ %inc37.1.25, %for.inc36.1.25 ], [ 0, %for.body10.1.25.preheader ]
  %partial_sum.05.1.25 = phi float [ %partial_sum.3.1.25, %for.inc36.1.25 ], [ 0.000000e+00, %for.body10.1.25.preheader ]
  %add.1.25 = add nsw i32 %ki.06.1.25, %inc58.24
  %notlhs.1.25 = icmp slt i32 %add.1.25, 0
  %notrhs.1.25 = icmp uge i32 %add.1.25, %img_height
  %.not.1.25 = or i1 %notrhs.1.25, %notlhs.1.25
  %brmerge.1.25 = or i1 %.not.1.25, %cmp151.not.1.25
  br i1 %brmerge.1.25, label %for.inc36.1.25, label %for.body16.lr.ph.1.25

for.body16.lr.ph.1.25:                            ; preds = %for.body10.1.25
  %mul.1.25 = shl i32 %add.1.25, 7
  %mul30.1.25 = mul i32 %ki.06.1.25, %kern_width
  br label %for.body16.1.25

for.body16.1.25:                                  ; preds = %for.inc.1.25, %for.body16.lr.ph.1.25
  %indvars.iv.1.25 = phi i64 [ 0, %for.body16.lr.ph.1.25 ], [ %indvars.iv.next.1.25, %for.inc.1.25 ]
  %partial_sum.12.1.25 = phi float [ %partial_sum.05.1.25, %for.body16.lr.ph.1.25 ], [ %partial_sum.2.1.25, %for.inc.1.25 ]
  %1796 = trunc i64 %indvars.iv.1.25 to i32
  %add17.1.25 = add nsw i32 %1796, %inc54.25
  %cmp18.1.25 = icmp sgt i32 %add17.1.25, -1
  %cmp21.1.25 = icmp ult i32 %add17.1.25, %img_width
  %1797 = and i1 %cmp18.1.25, %cmp21.1.25
  br i1 %1797, label %if.end26.1.25, label %for.inc.1.25

if.end26.1.25:                                    ; preds = %for.body16.1.25
  %add29.1.25 = add nsw i32 %add17.1.25, %mul.1.25
  %idxprom.1.25 = sext i32 %add29.1.25 to i64
  %arrayidx.1.25 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.25
  %1798 = load float, float* %arrayidx.1.25, align 4
  %1799 = trunc i64 %indvars.iv.1.25 to i32
  %add31.1.25 = add i32 %1799, %mul30.1.25
  %idxprom32.1.25 = zext i32 %add31.1.25 to i64
  %arrayidx33.1.25 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.25
  %1800 = load float, float* %arrayidx33.1.25, align 4
  %mul34.1.25 = fmul float %1798, %1800
  %add35.1.25 = fadd float %partial_sum.12.1.25, %mul34.1.25
  br label %for.inc.1.25

for.inc.1.25:                                     ; preds = %if.end26.1.25, %for.body16.1.25
  %partial_sum.2.1.25 = phi float [ %add35.1.25, %if.end26.1.25 ], [ %partial_sum.12.1.25, %for.body16.1.25 ]
  %indvars.iv.next.1.25 = add nuw nsw i64 %indvars.iv.1.25, 1
  %lftr.wideiv.1.25 = trunc i64 %indvars.iv.next.1.25 to i32
  %exitcond.1.25 = icmp eq i32 %lftr.wideiv.1.25, %kern_width
  br i1 %exitcond.1.25, label %for.inc36.1.25.loopexit, label %for.body16.1.25, !llvm.loop !1

for.inc36.1.25.loopexit:                          ; preds = %for.inc.1.25
  %partial_sum.2.1.25.lcssa = phi float [ %partial_sum.2.1.25, %for.inc.1.25 ]
  br label %for.inc36.1.25

for.inc36.1.25:                                   ; preds = %for.inc36.1.25.loopexit, %for.body10.1.25
  %partial_sum.3.1.25 = phi float [ %partial_sum.05.1.25, %for.body10.1.25 ], [ %partial_sum.2.1.25.lcssa, %for.inc36.1.25.loopexit ]
  %inc37.1.25 = add nuw nsw i32 %ki.06.1.25, 1
  %exitcond19.1.25 = icmp eq i32 %inc37.1.25, %kern_height
  br i1 %exitcond19.1.25, label %for.end38.1.25.loopexit, label %for.body10.1.25, !llvm.loop !3

for.end38.1.25.loopexit:                          ; preds = %for.inc36.1.25
  %partial_sum.3.1.25.lcssa = phi float [ %partial_sum.3.1.25, %for.inc36.1.25 ]
  br label %for.end38.1.25

for.end38.1.25:                                   ; preds = %for.end38.1.25.loopexit, %for.inc53.25
  %partial_sum.0.lcssa.1.25 = phi float [ 0.000000e+00, %for.inc53.25 ], [ %partial_sum.3.1.25.lcssa, %for.end38.1.25.loopexit ]
  br i1 %tobool39, label %if.else.1.25, label %if.then40.1.25

if.then40.1.25:                                   ; preds = %for.end38.1.25
  %cmp41.1.25 = fcmp olt float %partial_sum.0.lcssa.1.25, 0.000000e+00
  %sub42.1.25 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.25
  %cond.1.25 = select i1 %cmp41.1.25, float %sub42.1.25, float %partial_sum.0.lcssa.1.25
  %conv.1.25 = fptoui float %cond.1.25 to i8
  %conv43.1.25 = uitofp i8 %conv.1.25 to float
  %1801 = add nsw i64 %indvars.iv.next21.25, %1781
  %arrayidx47.1.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1801
  store float %conv43.1.25, float* %arrayidx47.1.25, align 4
  br label %for.inc53.1.25

if.else.1.25:                                     ; preds = %for.end38.1.25
  %1802 = add nsw i64 %indvars.iv.next21.25, %1780
  %arrayidx51.1.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1802
  store float %partial_sum.0.lcssa.1.25, float* %arrayidx51.1.25, align 4
  br label %for.inc53.1.25

for.inc53.1.25:                                   ; preds = %if.else.1.25, %if.then40.1.25
  %inc54.1.25 = add nsw i32 %in_j.011.25, 2
  %indvars.iv.next21.1.25 = add nsw i64 %indvars.iv20.25, 2
  br i1 %cmp94, label %for.end38.2.25, label %for.body10.2.25.preheader

for.body10.2.25.preheader:                        ; preds = %for.inc53.1.25
  br label %for.body10.2.25

for.body10.2.25:                                  ; preds = %for.body10.2.25.preheader, %for.inc36.2.25
  %ki.06.2.25 = phi i32 [ %inc37.2.25, %for.inc36.2.25 ], [ 0, %for.body10.2.25.preheader ]
  %partial_sum.05.2.25 = phi float [ %partial_sum.3.2.25, %for.inc36.2.25 ], [ 0.000000e+00, %for.body10.2.25.preheader ]
  %add.2.25 = add nsw i32 %ki.06.2.25, %inc58.24
  %notlhs.2.25 = icmp slt i32 %add.2.25, 0
  %notrhs.2.25 = icmp uge i32 %add.2.25, %img_height
  %.not.2.25 = or i1 %notrhs.2.25, %notlhs.2.25
  %brmerge.2.25 = or i1 %.not.2.25, %cmp151.not.2.25
  br i1 %brmerge.2.25, label %for.inc36.2.25, label %for.body16.lr.ph.2.25

for.body16.lr.ph.2.25:                            ; preds = %for.body10.2.25
  %mul.2.25 = shl i32 %add.2.25, 7
  %mul30.2.25 = mul i32 %ki.06.2.25, %kern_width
  br label %for.body16.2.25

for.body16.2.25:                                  ; preds = %for.inc.2.25, %for.body16.lr.ph.2.25
  %indvars.iv.2.25 = phi i64 [ 0, %for.body16.lr.ph.2.25 ], [ %indvars.iv.next.2.25, %for.inc.2.25 ]
  %partial_sum.12.2.25 = phi float [ %partial_sum.05.2.25, %for.body16.lr.ph.2.25 ], [ %partial_sum.2.2.25, %for.inc.2.25 ]
  %1803 = trunc i64 %indvars.iv.2.25 to i32
  %add17.2.25 = add nsw i32 %1803, %inc54.1.25
  %cmp18.2.25 = icmp sgt i32 %add17.2.25, -1
  %cmp21.2.25 = icmp ult i32 %add17.2.25, %img_width
  %1804 = and i1 %cmp18.2.25, %cmp21.2.25
  br i1 %1804, label %if.end26.2.25, label %for.inc.2.25

if.end26.2.25:                                    ; preds = %for.body16.2.25
  %add29.2.25 = add nsw i32 %add17.2.25, %mul.2.25
  %idxprom.2.25 = sext i32 %add29.2.25 to i64
  %arrayidx.2.25 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.25
  %1805 = load float, float* %arrayidx.2.25, align 4
  %1806 = trunc i64 %indvars.iv.2.25 to i32
  %add31.2.25 = add i32 %1806, %mul30.2.25
  %idxprom32.2.25 = zext i32 %add31.2.25 to i64
  %arrayidx33.2.25 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.25
  %1807 = load float, float* %arrayidx33.2.25, align 4
  %mul34.2.25 = fmul float %1805, %1807
  %add35.2.25 = fadd float %partial_sum.12.2.25, %mul34.2.25
  br label %for.inc.2.25

for.inc.2.25:                                     ; preds = %if.end26.2.25, %for.body16.2.25
  %partial_sum.2.2.25 = phi float [ %add35.2.25, %if.end26.2.25 ], [ %partial_sum.12.2.25, %for.body16.2.25 ]
  %indvars.iv.next.2.25 = add nuw nsw i64 %indvars.iv.2.25, 1
  %lftr.wideiv.2.25 = trunc i64 %indvars.iv.next.2.25 to i32
  %exitcond.2.25 = icmp eq i32 %lftr.wideiv.2.25, %kern_width
  br i1 %exitcond.2.25, label %for.inc36.2.25.loopexit, label %for.body16.2.25, !llvm.loop !1

for.inc36.2.25.loopexit:                          ; preds = %for.inc.2.25
  %partial_sum.2.2.25.lcssa = phi float [ %partial_sum.2.2.25, %for.inc.2.25 ]
  br label %for.inc36.2.25

for.inc36.2.25:                                   ; preds = %for.inc36.2.25.loopexit, %for.body10.2.25
  %partial_sum.3.2.25 = phi float [ %partial_sum.05.2.25, %for.body10.2.25 ], [ %partial_sum.2.2.25.lcssa, %for.inc36.2.25.loopexit ]
  %inc37.2.25 = add nuw nsw i32 %ki.06.2.25, 1
  %exitcond19.2.25 = icmp eq i32 %inc37.2.25, %kern_height
  br i1 %exitcond19.2.25, label %for.end38.2.25.loopexit, label %for.body10.2.25, !llvm.loop !3

for.end38.2.25.loopexit:                          ; preds = %for.inc36.2.25
  %partial_sum.3.2.25.lcssa = phi float [ %partial_sum.3.2.25, %for.inc36.2.25 ]
  br label %for.end38.2.25

for.end38.2.25:                                   ; preds = %for.end38.2.25.loopexit, %for.inc53.1.25
  %partial_sum.0.lcssa.2.25 = phi float [ 0.000000e+00, %for.inc53.1.25 ], [ %partial_sum.3.2.25.lcssa, %for.end38.2.25.loopexit ]
  br i1 %tobool39, label %if.else.2.25, label %if.then40.2.25

if.then40.2.25:                                   ; preds = %for.end38.2.25
  %cmp41.2.25 = fcmp olt float %partial_sum.0.lcssa.2.25, 0.000000e+00
  %sub42.2.25 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.25
  %cond.2.25 = select i1 %cmp41.2.25, float %sub42.2.25, float %partial_sum.0.lcssa.2.25
  %conv.2.25 = fptoui float %cond.2.25 to i8
  %conv43.2.25 = uitofp i8 %conv.2.25 to float
  %1808 = add nsw i64 %indvars.iv.next21.1.25, %1781
  %arrayidx47.2.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1808
  store float %conv43.2.25, float* %arrayidx47.2.25, align 4
  br label %for.inc53.2.25

if.else.2.25:                                     ; preds = %for.end38.2.25
  %1809 = add nsw i64 %indvars.iv.next21.1.25, %1780
  %arrayidx51.2.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1809
  store float %partial_sum.0.lcssa.2.25, float* %arrayidx51.2.25, align 4
  br label %for.inc53.2.25

for.inc53.2.25:                                   ; preds = %if.else.2.25, %if.then40.2.25
  %inc54.2.25 = add nsw i32 %in_j.011.25, 3
  %indvars.iv.next21.2.25 = add nsw i64 %indvars.iv20.25, 3
  br i1 %cmp94, label %for.end38.3.25, label %for.body10.3.25.preheader

for.body10.3.25.preheader:                        ; preds = %for.inc53.2.25
  br label %for.body10.3.25

for.body10.3.25:                                  ; preds = %for.body10.3.25.preheader, %for.inc36.3.25
  %ki.06.3.25 = phi i32 [ %inc37.3.25, %for.inc36.3.25 ], [ 0, %for.body10.3.25.preheader ]
  %partial_sum.05.3.25 = phi float [ %partial_sum.3.3.25, %for.inc36.3.25 ], [ 0.000000e+00, %for.body10.3.25.preheader ]
  %add.3.25 = add nsw i32 %ki.06.3.25, %inc58.24
  %notlhs.3.25 = icmp slt i32 %add.3.25, 0
  %notrhs.3.25 = icmp uge i32 %add.3.25, %img_height
  %.not.3.25 = or i1 %notrhs.3.25, %notlhs.3.25
  %brmerge.3.25 = or i1 %.not.3.25, %cmp151.not.3.25
  br i1 %brmerge.3.25, label %for.inc36.3.25, label %for.body16.lr.ph.3.25

for.body16.lr.ph.3.25:                            ; preds = %for.body10.3.25
  %mul.3.25 = shl i32 %add.3.25, 7
  %mul30.3.25 = mul i32 %ki.06.3.25, %kern_width
  br label %for.body16.3.25

for.body16.3.25:                                  ; preds = %for.inc.3.25, %for.body16.lr.ph.3.25
  %indvars.iv.3.25 = phi i64 [ 0, %for.body16.lr.ph.3.25 ], [ %indvars.iv.next.3.25, %for.inc.3.25 ]
  %partial_sum.12.3.25 = phi float [ %partial_sum.05.3.25, %for.body16.lr.ph.3.25 ], [ %partial_sum.2.3.25, %for.inc.3.25 ]
  %1810 = trunc i64 %indvars.iv.3.25 to i32
  %add17.3.25 = add nsw i32 %1810, %inc54.2.25
  %cmp18.3.25 = icmp sgt i32 %add17.3.25, -1
  %cmp21.3.25 = icmp ult i32 %add17.3.25, %img_width
  %1811 = and i1 %cmp18.3.25, %cmp21.3.25
  br i1 %1811, label %if.end26.3.25, label %for.inc.3.25

if.end26.3.25:                                    ; preds = %for.body16.3.25
  %add29.3.25 = add nsw i32 %add17.3.25, %mul.3.25
  %idxprom.3.25 = sext i32 %add29.3.25 to i64
  %arrayidx.3.25 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.25
  %1812 = load float, float* %arrayidx.3.25, align 4
  %1813 = trunc i64 %indvars.iv.3.25 to i32
  %add31.3.25 = add i32 %1813, %mul30.3.25
  %idxprom32.3.25 = zext i32 %add31.3.25 to i64
  %arrayidx33.3.25 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.25
  %1814 = load float, float* %arrayidx33.3.25, align 4
  %mul34.3.25 = fmul float %1812, %1814
  %add35.3.25 = fadd float %partial_sum.12.3.25, %mul34.3.25
  br label %for.inc.3.25

for.inc.3.25:                                     ; preds = %if.end26.3.25, %for.body16.3.25
  %partial_sum.2.3.25 = phi float [ %add35.3.25, %if.end26.3.25 ], [ %partial_sum.12.3.25, %for.body16.3.25 ]
  %indvars.iv.next.3.25 = add nuw nsw i64 %indvars.iv.3.25, 1
  %lftr.wideiv.3.25 = trunc i64 %indvars.iv.next.3.25 to i32
  %exitcond.3.25 = icmp eq i32 %lftr.wideiv.3.25, %kern_width
  br i1 %exitcond.3.25, label %for.inc36.3.25.loopexit, label %for.body16.3.25, !llvm.loop !1

for.inc36.3.25.loopexit:                          ; preds = %for.inc.3.25
  %partial_sum.2.3.25.lcssa = phi float [ %partial_sum.2.3.25, %for.inc.3.25 ]
  br label %for.inc36.3.25

for.inc36.3.25:                                   ; preds = %for.inc36.3.25.loopexit, %for.body10.3.25
  %partial_sum.3.3.25 = phi float [ %partial_sum.05.3.25, %for.body10.3.25 ], [ %partial_sum.2.3.25.lcssa, %for.inc36.3.25.loopexit ]
  %inc37.3.25 = add nuw nsw i32 %ki.06.3.25, 1
  %exitcond19.3.25 = icmp eq i32 %inc37.3.25, %kern_height
  br i1 %exitcond19.3.25, label %for.end38.3.25.loopexit, label %for.body10.3.25, !llvm.loop !3

for.end38.3.25.loopexit:                          ; preds = %for.inc36.3.25
  %partial_sum.3.3.25.lcssa = phi float [ %partial_sum.3.3.25, %for.inc36.3.25 ]
  br label %for.end38.3.25

for.end38.3.25:                                   ; preds = %for.end38.3.25.loopexit, %for.inc53.2.25
  %partial_sum.0.lcssa.3.25 = phi float [ 0.000000e+00, %for.inc53.2.25 ], [ %partial_sum.3.3.25.lcssa, %for.end38.3.25.loopexit ]
  br i1 %tobool39, label %if.else.3.25, label %if.then40.3.25

if.then40.3.25:                                   ; preds = %for.end38.3.25
  %cmp41.3.25 = fcmp olt float %partial_sum.0.lcssa.3.25, 0.000000e+00
  %sub42.3.25 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.25
  %cond.3.25 = select i1 %cmp41.3.25, float %sub42.3.25, float %partial_sum.0.lcssa.3.25
  %conv.3.25 = fptoui float %cond.3.25 to i8
  %conv43.3.25 = uitofp i8 %conv.3.25 to float
  %1815 = add nsw i64 %indvars.iv.next21.2.25, %1781
  %arrayidx47.3.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1815
  store float %conv43.3.25, float* %arrayidx47.3.25, align 4
  br label %for.inc53.3.25

if.else.3.25:                                     ; preds = %for.end38.3.25
  %1816 = add nsw i64 %indvars.iv.next21.2.25, %1780
  %arrayidx51.3.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1816
  store float %partial_sum.0.lcssa.3.25, float* %arrayidx51.3.25, align 4
  br label %for.inc53.3.25

for.inc53.3.25:                                   ; preds = %if.else.3.25, %if.then40.3.25
  %inc54.3.25 = add nsw i32 %in_j.011.25, 4
  %indvars.iv.next21.3.25 = add nsw i64 %indvars.iv20.25, 4
  br i1 %cmp94, label %for.end38.4.25, label %for.body10.4.25.preheader

for.body10.4.25.preheader:                        ; preds = %for.inc53.3.25
  br label %for.body10.4.25

for.body10.4.25:                                  ; preds = %for.body10.4.25.preheader, %for.inc36.4.25
  %ki.06.4.25 = phi i32 [ %inc37.4.25, %for.inc36.4.25 ], [ 0, %for.body10.4.25.preheader ]
  %partial_sum.05.4.25 = phi float [ %partial_sum.3.4.25, %for.inc36.4.25 ], [ 0.000000e+00, %for.body10.4.25.preheader ]
  %add.4.25 = add nsw i32 %ki.06.4.25, %inc58.24
  %notlhs.4.25 = icmp slt i32 %add.4.25, 0
  %notrhs.4.25 = icmp uge i32 %add.4.25, %img_height
  %.not.4.25 = or i1 %notrhs.4.25, %notlhs.4.25
  %brmerge.4.25 = or i1 %.not.4.25, %cmp151.not.4.25
  br i1 %brmerge.4.25, label %for.inc36.4.25, label %for.body16.lr.ph.4.25

for.body16.lr.ph.4.25:                            ; preds = %for.body10.4.25
  %mul.4.25 = shl i32 %add.4.25, 7
  %mul30.4.25 = mul i32 %ki.06.4.25, %kern_width
  br label %for.body16.4.25

for.body16.4.25:                                  ; preds = %for.inc.4.25, %for.body16.lr.ph.4.25
  %indvars.iv.4.25 = phi i64 [ 0, %for.body16.lr.ph.4.25 ], [ %indvars.iv.next.4.25, %for.inc.4.25 ]
  %partial_sum.12.4.25 = phi float [ %partial_sum.05.4.25, %for.body16.lr.ph.4.25 ], [ %partial_sum.2.4.25, %for.inc.4.25 ]
  %1817 = trunc i64 %indvars.iv.4.25 to i32
  %add17.4.25 = add nsw i32 %1817, %inc54.3.25
  %cmp18.4.25 = icmp sgt i32 %add17.4.25, -1
  %cmp21.4.25 = icmp ult i32 %add17.4.25, %img_width
  %1818 = and i1 %cmp18.4.25, %cmp21.4.25
  br i1 %1818, label %if.end26.4.25, label %for.inc.4.25

if.end26.4.25:                                    ; preds = %for.body16.4.25
  %add29.4.25 = add nsw i32 %add17.4.25, %mul.4.25
  %idxprom.4.25 = sext i32 %add29.4.25 to i64
  %arrayidx.4.25 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.25
  %1819 = load float, float* %arrayidx.4.25, align 4
  %1820 = trunc i64 %indvars.iv.4.25 to i32
  %add31.4.25 = add i32 %1820, %mul30.4.25
  %idxprom32.4.25 = zext i32 %add31.4.25 to i64
  %arrayidx33.4.25 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.25
  %1821 = load float, float* %arrayidx33.4.25, align 4
  %mul34.4.25 = fmul float %1819, %1821
  %add35.4.25 = fadd float %partial_sum.12.4.25, %mul34.4.25
  br label %for.inc.4.25

for.inc.4.25:                                     ; preds = %if.end26.4.25, %for.body16.4.25
  %partial_sum.2.4.25 = phi float [ %add35.4.25, %if.end26.4.25 ], [ %partial_sum.12.4.25, %for.body16.4.25 ]
  %indvars.iv.next.4.25 = add nuw nsw i64 %indvars.iv.4.25, 1
  %lftr.wideiv.4.25 = trunc i64 %indvars.iv.next.4.25 to i32
  %exitcond.4.25 = icmp eq i32 %lftr.wideiv.4.25, %kern_width
  br i1 %exitcond.4.25, label %for.inc36.4.25.loopexit, label %for.body16.4.25, !llvm.loop !1

for.inc36.4.25.loopexit:                          ; preds = %for.inc.4.25
  %partial_sum.2.4.25.lcssa = phi float [ %partial_sum.2.4.25, %for.inc.4.25 ]
  br label %for.inc36.4.25

for.inc36.4.25:                                   ; preds = %for.inc36.4.25.loopexit, %for.body10.4.25
  %partial_sum.3.4.25 = phi float [ %partial_sum.05.4.25, %for.body10.4.25 ], [ %partial_sum.2.4.25.lcssa, %for.inc36.4.25.loopexit ]
  %inc37.4.25 = add nuw nsw i32 %ki.06.4.25, 1
  %exitcond19.4.25 = icmp eq i32 %inc37.4.25, %kern_height
  br i1 %exitcond19.4.25, label %for.end38.4.25.loopexit, label %for.body10.4.25, !llvm.loop !3

for.end38.4.25.loopexit:                          ; preds = %for.inc36.4.25
  %partial_sum.3.4.25.lcssa = phi float [ %partial_sum.3.4.25, %for.inc36.4.25 ]
  br label %for.end38.4.25

for.end38.4.25:                                   ; preds = %for.end38.4.25.loopexit, %for.inc53.3.25
  %partial_sum.0.lcssa.4.25 = phi float [ 0.000000e+00, %for.inc53.3.25 ], [ %partial_sum.3.4.25.lcssa, %for.end38.4.25.loopexit ]
  br i1 %tobool39, label %if.else.4.25, label %if.then40.4.25

if.then40.4.25:                                   ; preds = %for.end38.4.25
  %cmp41.4.25 = fcmp olt float %partial_sum.0.lcssa.4.25, 0.000000e+00
  %sub42.4.25 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.25
  %cond.4.25 = select i1 %cmp41.4.25, float %sub42.4.25, float %partial_sum.0.lcssa.4.25
  %conv.4.25 = fptoui float %cond.4.25 to i8
  %conv43.4.25 = uitofp i8 %conv.4.25 to float
  %1822 = add nsw i64 %indvars.iv.next21.3.25, %1781
  %arrayidx47.4.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1822
  store float %conv43.4.25, float* %arrayidx47.4.25, align 4
  br label %for.inc53.4.25

if.else.4.25:                                     ; preds = %for.end38.4.25
  %1823 = add nsw i64 %indvars.iv.next21.3.25, %1780
  %arrayidx51.4.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1823
  store float %partial_sum.0.lcssa.4.25, float* %arrayidx51.4.25, align 4
  br label %for.inc53.4.25

for.inc53.4.25:                                   ; preds = %if.else.4.25, %if.then40.4.25
  %inc54.4.25 = add nsw i32 %in_j.011.25, 5
  %indvars.iv.next21.4.25 = add nsw i64 %indvars.iv20.25, 5
  br i1 %cmp94, label %for.end38.5.25, label %for.body10.5.25.preheader

for.body10.5.25.preheader:                        ; preds = %for.inc53.4.25
  br label %for.body10.5.25

for.body10.5.25:                                  ; preds = %for.body10.5.25.preheader, %for.inc36.5.25
  %ki.06.5.25 = phi i32 [ %inc37.5.25, %for.inc36.5.25 ], [ 0, %for.body10.5.25.preheader ]
  %partial_sum.05.5.25 = phi float [ %partial_sum.3.5.25, %for.inc36.5.25 ], [ 0.000000e+00, %for.body10.5.25.preheader ]
  %add.5.25 = add nsw i32 %ki.06.5.25, %inc58.24
  %notlhs.5.25 = icmp slt i32 %add.5.25, 0
  %notrhs.5.25 = icmp uge i32 %add.5.25, %img_height
  %.not.5.25 = or i1 %notrhs.5.25, %notlhs.5.25
  %brmerge.5.25 = or i1 %.not.5.25, %cmp151.not.5.25
  br i1 %brmerge.5.25, label %for.inc36.5.25, label %for.body16.lr.ph.5.25

for.body16.lr.ph.5.25:                            ; preds = %for.body10.5.25
  %mul.5.25 = shl i32 %add.5.25, 7
  %mul30.5.25 = mul i32 %ki.06.5.25, %kern_width
  br label %for.body16.5.25

for.body16.5.25:                                  ; preds = %for.inc.5.25, %for.body16.lr.ph.5.25
  %indvars.iv.5.25 = phi i64 [ 0, %for.body16.lr.ph.5.25 ], [ %indvars.iv.next.5.25, %for.inc.5.25 ]
  %partial_sum.12.5.25 = phi float [ %partial_sum.05.5.25, %for.body16.lr.ph.5.25 ], [ %partial_sum.2.5.25, %for.inc.5.25 ]
  %1824 = trunc i64 %indvars.iv.5.25 to i32
  %add17.5.25 = add nsw i32 %1824, %inc54.4.25
  %cmp18.5.25 = icmp sgt i32 %add17.5.25, -1
  %cmp21.5.25 = icmp ult i32 %add17.5.25, %img_width
  %1825 = and i1 %cmp18.5.25, %cmp21.5.25
  br i1 %1825, label %if.end26.5.25, label %for.inc.5.25

if.end26.5.25:                                    ; preds = %for.body16.5.25
  %add29.5.25 = add nsw i32 %add17.5.25, %mul.5.25
  %idxprom.5.25 = sext i32 %add29.5.25 to i64
  %arrayidx.5.25 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.25
  %1826 = load float, float* %arrayidx.5.25, align 4
  %1827 = trunc i64 %indvars.iv.5.25 to i32
  %add31.5.25 = add i32 %1827, %mul30.5.25
  %idxprom32.5.25 = zext i32 %add31.5.25 to i64
  %arrayidx33.5.25 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.25
  %1828 = load float, float* %arrayidx33.5.25, align 4
  %mul34.5.25 = fmul float %1826, %1828
  %add35.5.25 = fadd float %partial_sum.12.5.25, %mul34.5.25
  br label %for.inc.5.25

for.inc.5.25:                                     ; preds = %if.end26.5.25, %for.body16.5.25
  %partial_sum.2.5.25 = phi float [ %add35.5.25, %if.end26.5.25 ], [ %partial_sum.12.5.25, %for.body16.5.25 ]
  %indvars.iv.next.5.25 = add nuw nsw i64 %indvars.iv.5.25, 1
  %lftr.wideiv.5.25 = trunc i64 %indvars.iv.next.5.25 to i32
  %exitcond.5.25 = icmp eq i32 %lftr.wideiv.5.25, %kern_width
  br i1 %exitcond.5.25, label %for.inc36.5.25.loopexit, label %for.body16.5.25, !llvm.loop !1

for.inc36.5.25.loopexit:                          ; preds = %for.inc.5.25
  %partial_sum.2.5.25.lcssa = phi float [ %partial_sum.2.5.25, %for.inc.5.25 ]
  br label %for.inc36.5.25

for.inc36.5.25:                                   ; preds = %for.inc36.5.25.loopexit, %for.body10.5.25
  %partial_sum.3.5.25 = phi float [ %partial_sum.05.5.25, %for.body10.5.25 ], [ %partial_sum.2.5.25.lcssa, %for.inc36.5.25.loopexit ]
  %inc37.5.25 = add nuw nsw i32 %ki.06.5.25, 1
  %exitcond19.5.25 = icmp eq i32 %inc37.5.25, %kern_height
  br i1 %exitcond19.5.25, label %for.end38.5.25.loopexit, label %for.body10.5.25, !llvm.loop !3

for.end38.5.25.loopexit:                          ; preds = %for.inc36.5.25
  %partial_sum.3.5.25.lcssa = phi float [ %partial_sum.3.5.25, %for.inc36.5.25 ]
  br label %for.end38.5.25

for.end38.5.25:                                   ; preds = %for.end38.5.25.loopexit, %for.inc53.4.25
  %partial_sum.0.lcssa.5.25 = phi float [ 0.000000e+00, %for.inc53.4.25 ], [ %partial_sum.3.5.25.lcssa, %for.end38.5.25.loopexit ]
  br i1 %tobool39, label %if.else.5.25, label %if.then40.5.25

if.then40.5.25:                                   ; preds = %for.end38.5.25
  %cmp41.5.25 = fcmp olt float %partial_sum.0.lcssa.5.25, 0.000000e+00
  %sub42.5.25 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.25
  %cond.5.25 = select i1 %cmp41.5.25, float %sub42.5.25, float %partial_sum.0.lcssa.5.25
  %conv.5.25 = fptoui float %cond.5.25 to i8
  %conv43.5.25 = uitofp i8 %conv.5.25 to float
  %1829 = add nsw i64 %indvars.iv.next21.4.25, %1781
  %arrayidx47.5.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1829
  store float %conv43.5.25, float* %arrayidx47.5.25, align 4
  br label %for.inc53.5.25

if.else.5.25:                                     ; preds = %for.end38.5.25
  %1830 = add nsw i64 %indvars.iv.next21.4.25, %1780
  %arrayidx51.5.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1830
  store float %partial_sum.0.lcssa.5.25, float* %arrayidx51.5.25, align 4
  br label %for.inc53.5.25

for.inc53.5.25:                                   ; preds = %if.else.5.25, %if.then40.5.25
  %inc54.5.25 = add nsw i32 %in_j.011.25, 6
  %indvars.iv.next21.5.25 = add nsw i64 %indvars.iv20.25, 6
  br i1 %cmp94, label %for.end38.6.25, label %for.body10.6.25.preheader

for.body10.6.25.preheader:                        ; preds = %for.inc53.5.25
  br label %for.body10.6.25

for.body10.6.25:                                  ; preds = %for.body10.6.25.preheader, %for.inc36.6.25
  %ki.06.6.25 = phi i32 [ %inc37.6.25, %for.inc36.6.25 ], [ 0, %for.body10.6.25.preheader ]
  %partial_sum.05.6.25 = phi float [ %partial_sum.3.6.25, %for.inc36.6.25 ], [ 0.000000e+00, %for.body10.6.25.preheader ]
  %add.6.25 = add nsw i32 %ki.06.6.25, %inc58.24
  %notlhs.6.25 = icmp slt i32 %add.6.25, 0
  %notrhs.6.25 = icmp uge i32 %add.6.25, %img_height
  %.not.6.25 = or i1 %notrhs.6.25, %notlhs.6.25
  %brmerge.6.25 = or i1 %.not.6.25, %cmp151.not.6.25
  br i1 %brmerge.6.25, label %for.inc36.6.25, label %for.body16.lr.ph.6.25

for.body16.lr.ph.6.25:                            ; preds = %for.body10.6.25
  %mul.6.25 = shl i32 %add.6.25, 7
  %mul30.6.25 = mul i32 %ki.06.6.25, %kern_width
  br label %for.body16.6.25

for.body16.6.25:                                  ; preds = %for.inc.6.25, %for.body16.lr.ph.6.25
  %indvars.iv.6.25 = phi i64 [ 0, %for.body16.lr.ph.6.25 ], [ %indvars.iv.next.6.25, %for.inc.6.25 ]
  %partial_sum.12.6.25 = phi float [ %partial_sum.05.6.25, %for.body16.lr.ph.6.25 ], [ %partial_sum.2.6.25, %for.inc.6.25 ]
  %1831 = trunc i64 %indvars.iv.6.25 to i32
  %add17.6.25 = add nsw i32 %1831, %inc54.5.25
  %cmp18.6.25 = icmp sgt i32 %add17.6.25, -1
  %cmp21.6.25 = icmp ult i32 %add17.6.25, %img_width
  %1832 = and i1 %cmp18.6.25, %cmp21.6.25
  br i1 %1832, label %if.end26.6.25, label %for.inc.6.25

if.end26.6.25:                                    ; preds = %for.body16.6.25
  %add29.6.25 = add nsw i32 %add17.6.25, %mul.6.25
  %idxprom.6.25 = sext i32 %add29.6.25 to i64
  %arrayidx.6.25 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.25
  %1833 = load float, float* %arrayidx.6.25, align 4
  %1834 = trunc i64 %indvars.iv.6.25 to i32
  %add31.6.25 = add i32 %1834, %mul30.6.25
  %idxprom32.6.25 = zext i32 %add31.6.25 to i64
  %arrayidx33.6.25 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.25
  %1835 = load float, float* %arrayidx33.6.25, align 4
  %mul34.6.25 = fmul float %1833, %1835
  %add35.6.25 = fadd float %partial_sum.12.6.25, %mul34.6.25
  br label %for.inc.6.25

for.inc.6.25:                                     ; preds = %if.end26.6.25, %for.body16.6.25
  %partial_sum.2.6.25 = phi float [ %add35.6.25, %if.end26.6.25 ], [ %partial_sum.12.6.25, %for.body16.6.25 ]
  %indvars.iv.next.6.25 = add nuw nsw i64 %indvars.iv.6.25, 1
  %lftr.wideiv.6.25 = trunc i64 %indvars.iv.next.6.25 to i32
  %exitcond.6.25 = icmp eq i32 %lftr.wideiv.6.25, %kern_width
  br i1 %exitcond.6.25, label %for.inc36.6.25.loopexit, label %for.body16.6.25, !llvm.loop !1

for.inc36.6.25.loopexit:                          ; preds = %for.inc.6.25
  %partial_sum.2.6.25.lcssa = phi float [ %partial_sum.2.6.25, %for.inc.6.25 ]
  br label %for.inc36.6.25

for.inc36.6.25:                                   ; preds = %for.inc36.6.25.loopexit, %for.body10.6.25
  %partial_sum.3.6.25 = phi float [ %partial_sum.05.6.25, %for.body10.6.25 ], [ %partial_sum.2.6.25.lcssa, %for.inc36.6.25.loopexit ]
  %inc37.6.25 = add nuw nsw i32 %ki.06.6.25, 1
  %exitcond19.6.25 = icmp eq i32 %inc37.6.25, %kern_height
  br i1 %exitcond19.6.25, label %for.end38.6.25.loopexit, label %for.body10.6.25, !llvm.loop !3

for.end38.6.25.loopexit:                          ; preds = %for.inc36.6.25
  %partial_sum.3.6.25.lcssa = phi float [ %partial_sum.3.6.25, %for.inc36.6.25 ]
  br label %for.end38.6.25

for.end38.6.25:                                   ; preds = %for.end38.6.25.loopexit, %for.inc53.5.25
  %partial_sum.0.lcssa.6.25 = phi float [ 0.000000e+00, %for.inc53.5.25 ], [ %partial_sum.3.6.25.lcssa, %for.end38.6.25.loopexit ]
  br i1 %tobool39, label %if.else.6.25, label %if.then40.6.25

if.then40.6.25:                                   ; preds = %for.end38.6.25
  %cmp41.6.25 = fcmp olt float %partial_sum.0.lcssa.6.25, 0.000000e+00
  %sub42.6.25 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.25
  %cond.6.25 = select i1 %cmp41.6.25, float %sub42.6.25, float %partial_sum.0.lcssa.6.25
  %conv.6.25 = fptoui float %cond.6.25 to i8
  %conv43.6.25 = uitofp i8 %conv.6.25 to float
  %1836 = add nsw i64 %indvars.iv.next21.5.25, %1781
  %arrayidx47.6.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1836
  store float %conv43.6.25, float* %arrayidx47.6.25, align 4
  br label %for.inc53.6.25

if.else.6.25:                                     ; preds = %for.end38.6.25
  %1837 = add nsw i64 %indvars.iv.next21.5.25, %1780
  %arrayidx51.6.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1837
  store float %partial_sum.0.lcssa.6.25, float* %arrayidx51.6.25, align 4
  br label %for.inc53.6.25

for.inc53.6.25:                                   ; preds = %if.else.6.25, %if.then40.6.25
  %inc54.6.25 = add nsw i32 %in_j.011.25, 7
  %indvars.iv.next21.6.25 = add nsw i64 %indvars.iv20.25, 7
  br i1 %cmp94, label %for.end38.7.25, label %for.body10.7.25.preheader

for.body10.7.25.preheader:                        ; preds = %for.inc53.6.25
  br label %for.body10.7.25

for.body10.7.25:                                  ; preds = %for.body10.7.25.preheader, %for.inc36.7.25
  %ki.06.7.25 = phi i32 [ %inc37.7.25, %for.inc36.7.25 ], [ 0, %for.body10.7.25.preheader ]
  %partial_sum.05.7.25 = phi float [ %partial_sum.3.7.25, %for.inc36.7.25 ], [ 0.000000e+00, %for.body10.7.25.preheader ]
  %add.7.25 = add nsw i32 %ki.06.7.25, %inc58.24
  %notlhs.7.25 = icmp slt i32 %add.7.25, 0
  %notrhs.7.25 = icmp uge i32 %add.7.25, %img_height
  %.not.7.25 = or i1 %notrhs.7.25, %notlhs.7.25
  %brmerge.7.25 = or i1 %.not.7.25, %cmp151.not.7.25
  br i1 %brmerge.7.25, label %for.inc36.7.25, label %for.body16.lr.ph.7.25

for.body16.lr.ph.7.25:                            ; preds = %for.body10.7.25
  %mul.7.25 = shl i32 %add.7.25, 7
  %mul30.7.25 = mul i32 %ki.06.7.25, %kern_width
  br label %for.body16.7.25

for.body16.7.25:                                  ; preds = %for.inc.7.25, %for.body16.lr.ph.7.25
  %indvars.iv.7.25 = phi i64 [ 0, %for.body16.lr.ph.7.25 ], [ %indvars.iv.next.7.25, %for.inc.7.25 ]
  %partial_sum.12.7.25 = phi float [ %partial_sum.05.7.25, %for.body16.lr.ph.7.25 ], [ %partial_sum.2.7.25, %for.inc.7.25 ]
  %1838 = trunc i64 %indvars.iv.7.25 to i32
  %add17.7.25 = add nsw i32 %1838, %inc54.6.25
  %cmp18.7.25 = icmp sgt i32 %add17.7.25, -1
  %cmp21.7.25 = icmp ult i32 %add17.7.25, %img_width
  %1839 = and i1 %cmp18.7.25, %cmp21.7.25
  br i1 %1839, label %if.end26.7.25, label %for.inc.7.25

if.end26.7.25:                                    ; preds = %for.body16.7.25
  %add29.7.25 = add nsw i32 %add17.7.25, %mul.7.25
  %idxprom.7.25 = sext i32 %add29.7.25 to i64
  %arrayidx.7.25 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.25
  %1840 = load float, float* %arrayidx.7.25, align 4
  %1841 = trunc i64 %indvars.iv.7.25 to i32
  %add31.7.25 = add i32 %1841, %mul30.7.25
  %idxprom32.7.25 = zext i32 %add31.7.25 to i64
  %arrayidx33.7.25 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.25
  %1842 = load float, float* %arrayidx33.7.25, align 4
  %mul34.7.25 = fmul float %1840, %1842
  %add35.7.25 = fadd float %partial_sum.12.7.25, %mul34.7.25
  br label %for.inc.7.25

for.inc.7.25:                                     ; preds = %if.end26.7.25, %for.body16.7.25
  %partial_sum.2.7.25 = phi float [ %add35.7.25, %if.end26.7.25 ], [ %partial_sum.12.7.25, %for.body16.7.25 ]
  %indvars.iv.next.7.25 = add nuw nsw i64 %indvars.iv.7.25, 1
  %lftr.wideiv.7.25 = trunc i64 %indvars.iv.next.7.25 to i32
  %exitcond.7.25 = icmp eq i32 %lftr.wideiv.7.25, %kern_width
  br i1 %exitcond.7.25, label %for.inc36.7.25.loopexit, label %for.body16.7.25, !llvm.loop !1

for.inc36.7.25.loopexit:                          ; preds = %for.inc.7.25
  %partial_sum.2.7.25.lcssa = phi float [ %partial_sum.2.7.25, %for.inc.7.25 ]
  br label %for.inc36.7.25

for.inc36.7.25:                                   ; preds = %for.inc36.7.25.loopexit, %for.body10.7.25
  %partial_sum.3.7.25 = phi float [ %partial_sum.05.7.25, %for.body10.7.25 ], [ %partial_sum.2.7.25.lcssa, %for.inc36.7.25.loopexit ]
  %inc37.7.25 = add nuw nsw i32 %ki.06.7.25, 1
  %exitcond19.7.25 = icmp eq i32 %inc37.7.25, %kern_height
  br i1 %exitcond19.7.25, label %for.end38.7.25.loopexit, label %for.body10.7.25, !llvm.loop !3

for.end38.7.25.loopexit:                          ; preds = %for.inc36.7.25
  %partial_sum.3.7.25.lcssa = phi float [ %partial_sum.3.7.25, %for.inc36.7.25 ]
  br label %for.end38.7.25

for.end38.7.25:                                   ; preds = %for.end38.7.25.loopexit, %for.inc53.6.25
  %partial_sum.0.lcssa.7.25 = phi float [ 0.000000e+00, %for.inc53.6.25 ], [ %partial_sum.3.7.25.lcssa, %for.end38.7.25.loopexit ]
  br i1 %tobool39, label %if.else.7.25, label %if.then40.7.25

if.then40.7.25:                                   ; preds = %for.end38.7.25
  %cmp41.7.25 = fcmp olt float %partial_sum.0.lcssa.7.25, 0.000000e+00
  %sub42.7.25 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.25
  %cond.7.25 = select i1 %cmp41.7.25, float %sub42.7.25, float %partial_sum.0.lcssa.7.25
  %conv.7.25 = fptoui float %cond.7.25 to i8
  %conv43.7.25 = uitofp i8 %conv.7.25 to float
  %1843 = add nsw i64 %indvars.iv.next21.6.25, %1781
  %arrayidx47.7.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1843
  store float %conv43.7.25, float* %arrayidx47.7.25, align 4
  br label %for.inc53.7.25

if.else.7.25:                                     ; preds = %for.end38.7.25
  %1844 = add nsw i64 %indvars.iv.next21.6.25, %1780
  %arrayidx51.7.25 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1844
  store float %partial_sum.0.lcssa.7.25, float* %arrayidx51.7.25, align 4
  br label %for.inc53.7.25

for.inc53.7.25:                                   ; preds = %if.else.7.25, %if.then40.7.25
  %inc54.7.25 = add nsw i32 %in_j.011.25, 8
  %indvars.iv.next21.7.25 = add nsw i64 %indvars.iv20.25, 8
  %lftr.wideiv24.7.25 = trunc i64 %indvars.iv.next21.7.25 to i32
  %exitcond25.7.25 = icmp eq i32 %lftr.wideiv24.7.25, %img_width
  br i1 %exitcond25.7.25, label %for.inc57.25.loopexit, label %for.cond8.preheader.25, !llvm.loop !5

for.inc57.25.loopexit:                            ; preds = %for.inc53.7.25
  br label %for.inc57.25

for.inc57.25:                                     ; preds = %for.inc57.25.loopexit, %for.cond8.preheader.lr.ph.split.25
  %inc58.25 = add nsw i32 %in_i.015, 26
  %indvars.iv.next27.25 = add nsw i64 %indvars.iv26, 26
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.26

for.cond8.preheader.lr.ph.26:                     ; preds = %for.inc57.25
  %1845 = trunc i64 %indvars.iv.next27.25 to i32
  %mul48.26 = shl i32 %1845, 7
  %1846 = trunc i64 %indvars.iv.next27.25 to i32
  %mul44.26 = shl i32 %1846, 7
  %1847 = sext i32 %mul48.26 to i64
  %1848 = sext i32 %mul44.26 to i64
  br i1 %lcmp.mod.26, label %for.cond8.preheader.lr.ph.split.26, label %for.cond8.preheader.prol.26.preheader

for.cond8.preheader.prol.26.preheader:            ; preds = %for.cond8.preheader.lr.ph.26
  br label %for.cond8.preheader.prol.26

for.cond8.preheader.prol.26:                      ; preds = %for.cond8.preheader.prol.26.preheader, %for.inc53.prol.26
  %indvars.iv20.prol.26 = phi i64 [ %indvars.iv.next21.prol.26, %for.inc53.prol.26 ], [ 0, %for.cond8.preheader.prol.26.preheader ]
  %in_j.011.prol.26 = phi i32 [ %inc54.prol.26, %for.inc53.prol.26 ], [ %sub4, %for.cond8.preheader.prol.26.preheader ]
  %prol.iter.26 = phi i32 [ %prol.iter.sub.26, %for.inc53.prol.26 ], [ %xtraiter.26, %for.cond8.preheader.prol.26.preheader ]
  br i1 %cmp94, label %for.end38.prol.26, label %for.body10.prol.26.preheader

for.body10.prol.26.preheader:                     ; preds = %for.cond8.preheader.prol.26
  br label %for.body10.prol.26

for.body10.prol.26:                               ; preds = %for.body10.prol.26.preheader, %for.inc36.prol.26
  %ki.06.prol.26 = phi i32 [ %inc37.prol.26, %for.inc36.prol.26 ], [ 0, %for.body10.prol.26.preheader ]
  %partial_sum.05.prol.26 = phi float [ %partial_sum.3.prol.26, %for.inc36.prol.26 ], [ 0.000000e+00, %for.body10.prol.26.preheader ]
  %add.prol.26 = add nsw i32 %ki.06.prol.26, %inc58.25
  %notlhs.prol.26 = icmp slt i32 %add.prol.26, 0
  %notrhs.prol.26 = icmp uge i32 %add.prol.26, %img_height
  %.not.prol.26 = or i1 %notrhs.prol.26, %notlhs.prol.26
  %brmerge.prol.26 = or i1 %.not.prol.26, %cmp151.not.prol.26
  br i1 %brmerge.prol.26, label %for.inc36.prol.26, label %for.body16.lr.ph.prol.26

for.body16.lr.ph.prol.26:                         ; preds = %for.body10.prol.26
  %mul.prol.26 = shl i32 %add.prol.26, 7
  %mul30.prol.26 = mul i32 %ki.06.prol.26, %kern_width
  br label %for.body16.prol.26

for.body16.prol.26:                               ; preds = %for.inc.prol.26, %for.body16.lr.ph.prol.26
  %indvars.iv.prol.26 = phi i64 [ 0, %for.body16.lr.ph.prol.26 ], [ %indvars.iv.next.prol.26, %for.inc.prol.26 ]
  %partial_sum.12.prol.26 = phi float [ %partial_sum.05.prol.26, %for.body16.lr.ph.prol.26 ], [ %partial_sum.2.prol.26, %for.inc.prol.26 ]
  %1849 = trunc i64 %indvars.iv.prol.26 to i32
  %add17.prol.26 = add nsw i32 %1849, %in_j.011.prol.26
  %cmp18.prol.26 = icmp sgt i32 %add17.prol.26, -1
  %cmp21.prol.26 = icmp ult i32 %add17.prol.26, %img_width
  %1850 = and i1 %cmp18.prol.26, %cmp21.prol.26
  br i1 %1850, label %if.end26.prol.26, label %for.inc.prol.26

if.end26.prol.26:                                 ; preds = %for.body16.prol.26
  %add29.prol.26 = add nsw i32 %add17.prol.26, %mul.prol.26
  %idxprom.prol.26 = sext i32 %add29.prol.26 to i64
  %arrayidx.prol.26 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.26
  %1851 = load float, float* %arrayidx.prol.26, align 4
  %1852 = trunc i64 %indvars.iv.prol.26 to i32
  %add31.prol.26 = add i32 %1852, %mul30.prol.26
  %idxprom32.prol.26 = zext i32 %add31.prol.26 to i64
  %arrayidx33.prol.26 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.26
  %1853 = load float, float* %arrayidx33.prol.26, align 4
  %mul34.prol.26 = fmul float %1851, %1853
  %add35.prol.26 = fadd float %partial_sum.12.prol.26, %mul34.prol.26
  br label %for.inc.prol.26

for.inc.prol.26:                                  ; preds = %if.end26.prol.26, %for.body16.prol.26
  %partial_sum.2.prol.26 = phi float [ %add35.prol.26, %if.end26.prol.26 ], [ %partial_sum.12.prol.26, %for.body16.prol.26 ]
  %indvars.iv.next.prol.26 = add nuw nsw i64 %indvars.iv.prol.26, 1
  %lftr.wideiv.prol.26 = trunc i64 %indvars.iv.next.prol.26 to i32
  %exitcond.prol.26 = icmp eq i32 %lftr.wideiv.prol.26, %kern_width
  br i1 %exitcond.prol.26, label %for.inc36.prol.26.loopexit, label %for.body16.prol.26, !llvm.loop !1

for.inc36.prol.26.loopexit:                       ; preds = %for.inc.prol.26
  %partial_sum.2.prol.26.lcssa = phi float [ %partial_sum.2.prol.26, %for.inc.prol.26 ]
  br label %for.inc36.prol.26

for.inc36.prol.26:                                ; preds = %for.inc36.prol.26.loopexit, %for.body10.prol.26
  %partial_sum.3.prol.26 = phi float [ %partial_sum.05.prol.26, %for.body10.prol.26 ], [ %partial_sum.2.prol.26.lcssa, %for.inc36.prol.26.loopexit ]
  %inc37.prol.26 = add nuw nsw i32 %ki.06.prol.26, 1
  %exitcond19.prol.26 = icmp eq i32 %inc37.prol.26, %kern_height
  br i1 %exitcond19.prol.26, label %for.end38.prol.26.loopexit, label %for.body10.prol.26, !llvm.loop !3

for.end38.prol.26.loopexit:                       ; preds = %for.inc36.prol.26
  %partial_sum.3.prol.26.lcssa = phi float [ %partial_sum.3.prol.26, %for.inc36.prol.26 ]
  br label %for.end38.prol.26

for.end38.prol.26:                                ; preds = %for.end38.prol.26.loopexit, %for.cond8.preheader.prol.26
  %partial_sum.0.lcssa.prol.26 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.26 ], [ %partial_sum.3.prol.26.lcssa, %for.end38.prol.26.loopexit ]
  br i1 %tobool39, label %if.else.prol.26, label %if.then40.prol.26

if.then40.prol.26:                                ; preds = %for.end38.prol.26
  %cmp41.prol.26 = fcmp olt float %partial_sum.0.lcssa.prol.26, 0.000000e+00
  %sub42.prol.26 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.26
  %cond.prol.26 = select i1 %cmp41.prol.26, float %sub42.prol.26, float %partial_sum.0.lcssa.prol.26
  %conv.prol.26 = fptoui float %cond.prol.26 to i8
  %conv43.prol.26 = uitofp i8 %conv.prol.26 to float
  %1854 = add nsw i64 %indvars.iv20.prol.26, %1848
  %arrayidx47.prol.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1854
  store float %conv43.prol.26, float* %arrayidx47.prol.26, align 4
  br label %for.inc53.prol.26

if.else.prol.26:                                  ; preds = %for.end38.prol.26
  %1855 = add nsw i64 %indvars.iv20.prol.26, %1847
  %arrayidx51.prol.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1855
  store float %partial_sum.0.lcssa.prol.26, float* %arrayidx51.prol.26, align 4
  br label %for.inc53.prol.26

for.inc53.prol.26:                                ; preds = %if.else.prol.26, %if.then40.prol.26
  %inc54.prol.26 = add nsw i32 %in_j.011.prol.26, 1
  %indvars.iv.next21.prol.26 = add nuw nsw i64 %indvars.iv20.prol.26, 1
  %prol.iter.sub.26 = add i32 %prol.iter.26, -1
  %prol.iter.cmp.26 = icmp eq i32 %prol.iter.sub.26, 0
  br i1 %prol.iter.cmp.26, label %for.cond8.preheader.lr.ph.split.26.loopexit, label %for.cond8.preheader.prol.26, !llvm.loop !4

for.cond8.preheader.lr.ph.split.26.loopexit:      ; preds = %for.inc53.prol.26
  %indvars.iv.next21.prol.26.lcssa = phi i64 [ %indvars.iv.next21.prol.26, %for.inc53.prol.26 ]
  %inc54.prol.26.lcssa = phi i32 [ %inc54.prol.26, %for.inc53.prol.26 ]
  br label %for.cond8.preheader.lr.ph.split.26

for.cond8.preheader.lr.ph.split.26:               ; preds = %for.cond8.preheader.lr.ph.split.26.loopexit, %for.cond8.preheader.lr.ph.26
  %indvars.iv20.unr.26 = phi i64 [ 0, %for.cond8.preheader.lr.ph.26 ], [ %indvars.iv.next21.prol.26.lcssa, %for.cond8.preheader.lr.ph.split.26.loopexit ]
  %in_j.011.unr.26 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.26 ], [ %inc54.prol.26.lcssa, %for.cond8.preheader.lr.ph.split.26.loopexit ]
  br i1 %97, label %for.inc57.26, label %for.cond8.preheader.26.preheader

for.cond8.preheader.26.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.26
  br label %for.cond8.preheader.26

for.cond8.preheader.26:                           ; preds = %for.cond8.preheader.26.preheader, %for.inc53.7.26
  %indvars.iv20.26 = phi i64 [ %indvars.iv.next21.7.26, %for.inc53.7.26 ], [ %indvars.iv20.unr.26, %for.cond8.preheader.26.preheader ]
  %in_j.011.26 = phi i32 [ %inc54.7.26, %for.inc53.7.26 ], [ %in_j.011.unr.26, %for.cond8.preheader.26.preheader ]
  br i1 %cmp94, label %for.end38.26, label %for.body10.26.preheader

for.body10.26.preheader:                          ; preds = %for.cond8.preheader.26
  br label %for.body10.26

for.body10.26:                                    ; preds = %for.body10.26.preheader, %for.inc36.26
  %ki.06.26 = phi i32 [ %inc37.26, %for.inc36.26 ], [ 0, %for.body10.26.preheader ]
  %partial_sum.05.26 = phi float [ %partial_sum.3.26, %for.inc36.26 ], [ 0.000000e+00, %for.body10.26.preheader ]
  %add.26 = add nsw i32 %ki.06.26, %inc58.25
  %notlhs.26 = icmp slt i32 %add.26, 0
  %notrhs.26 = icmp uge i32 %add.26, %img_height
  %.not.26 = or i1 %notrhs.26, %notlhs.26
  %brmerge.26 = or i1 %.not.26, %cmp151.not.26
  br i1 %brmerge.26, label %for.inc36.26, label %for.body16.lr.ph.26

for.body16.lr.ph.26:                              ; preds = %for.body10.26
  %mul.26 = shl i32 %add.26, 7
  %mul30.26 = mul i32 %ki.06.26, %kern_width
  br label %for.body16.26

for.body16.26:                                    ; preds = %for.inc.26, %for.body16.lr.ph.26
  %indvars.iv.26 = phi i64 [ 0, %for.body16.lr.ph.26 ], [ %indvars.iv.next.26, %for.inc.26 ]
  %partial_sum.12.26 = phi float [ %partial_sum.05.26, %for.body16.lr.ph.26 ], [ %partial_sum.2.26, %for.inc.26 ]
  %1856 = trunc i64 %indvars.iv.26 to i32
  %add17.26 = add nsw i32 %1856, %in_j.011.26
  %cmp18.26 = icmp sgt i32 %add17.26, -1
  %cmp21.26 = icmp ult i32 %add17.26, %img_width
  %1857 = and i1 %cmp18.26, %cmp21.26
  br i1 %1857, label %if.end26.26, label %for.inc.26

if.end26.26:                                      ; preds = %for.body16.26
  %add29.26 = add nsw i32 %add17.26, %mul.26
  %idxprom.26 = sext i32 %add29.26 to i64
  %arrayidx.26 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.26
  %1858 = load float, float* %arrayidx.26, align 4
  %1859 = trunc i64 %indvars.iv.26 to i32
  %add31.26 = add i32 %1859, %mul30.26
  %idxprom32.26 = zext i32 %add31.26 to i64
  %arrayidx33.26 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.26
  %1860 = load float, float* %arrayidx33.26, align 4
  %mul34.26 = fmul float %1858, %1860
  %add35.26 = fadd float %partial_sum.12.26, %mul34.26
  br label %for.inc.26

for.inc.26:                                       ; preds = %if.end26.26, %for.body16.26
  %partial_sum.2.26 = phi float [ %add35.26, %if.end26.26 ], [ %partial_sum.12.26, %for.body16.26 ]
  %indvars.iv.next.26 = add nuw nsw i64 %indvars.iv.26, 1
  %lftr.wideiv.26 = trunc i64 %indvars.iv.next.26 to i32
  %exitcond.26 = icmp eq i32 %lftr.wideiv.26, %kern_width
  br i1 %exitcond.26, label %for.inc36.26.loopexit, label %for.body16.26, !llvm.loop !1

for.inc36.26.loopexit:                            ; preds = %for.inc.26
  %partial_sum.2.26.lcssa = phi float [ %partial_sum.2.26, %for.inc.26 ]
  br label %for.inc36.26

for.inc36.26:                                     ; preds = %for.inc36.26.loopexit, %for.body10.26
  %partial_sum.3.26 = phi float [ %partial_sum.05.26, %for.body10.26 ], [ %partial_sum.2.26.lcssa, %for.inc36.26.loopexit ]
  %inc37.26 = add nuw nsw i32 %ki.06.26, 1
  %exitcond19.26 = icmp eq i32 %inc37.26, %kern_height
  br i1 %exitcond19.26, label %for.end38.26.loopexit, label %for.body10.26, !llvm.loop !3

for.end38.26.loopexit:                            ; preds = %for.inc36.26
  %partial_sum.3.26.lcssa = phi float [ %partial_sum.3.26, %for.inc36.26 ]
  br label %for.end38.26

for.end38.26:                                     ; preds = %for.end38.26.loopexit, %for.cond8.preheader.26
  %partial_sum.0.lcssa.26 = phi float [ 0.000000e+00, %for.cond8.preheader.26 ], [ %partial_sum.3.26.lcssa, %for.end38.26.loopexit ]
  br i1 %tobool39, label %if.else.26, label %if.then40.26

if.then40.26:                                     ; preds = %for.end38.26
  %cmp41.26 = fcmp olt float %partial_sum.0.lcssa.26, 0.000000e+00
  %sub42.26 = fsub float -0.000000e+00, %partial_sum.0.lcssa.26
  %cond.26 = select i1 %cmp41.26, float %sub42.26, float %partial_sum.0.lcssa.26
  %conv.26 = fptoui float %cond.26 to i8
  %conv43.26 = uitofp i8 %conv.26 to float
  %1861 = add nsw i64 %indvars.iv20.26, %1848
  %arrayidx47.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1861
  store float %conv43.26, float* %arrayidx47.26, align 4
  br label %for.inc53.26

if.else.26:                                       ; preds = %for.end38.26
  %1862 = add nsw i64 %indvars.iv20.26, %1847
  %arrayidx51.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1862
  store float %partial_sum.0.lcssa.26, float* %arrayidx51.26, align 4
  br label %for.inc53.26

for.inc53.26:                                     ; preds = %if.else.26, %if.then40.26
  %inc54.26 = add nsw i32 %in_j.011.26, 1
  %indvars.iv.next21.26 = add nuw nsw i64 %indvars.iv20.26, 1
  br i1 %cmp94, label %for.end38.1.26, label %for.body10.1.26.preheader

for.body10.1.26.preheader:                        ; preds = %for.inc53.26
  br label %for.body10.1.26

for.body10.1.26:                                  ; preds = %for.body10.1.26.preheader, %for.inc36.1.26
  %ki.06.1.26 = phi i32 [ %inc37.1.26, %for.inc36.1.26 ], [ 0, %for.body10.1.26.preheader ]
  %partial_sum.05.1.26 = phi float [ %partial_sum.3.1.26, %for.inc36.1.26 ], [ 0.000000e+00, %for.body10.1.26.preheader ]
  %add.1.26 = add nsw i32 %ki.06.1.26, %inc58.25
  %notlhs.1.26 = icmp slt i32 %add.1.26, 0
  %notrhs.1.26 = icmp uge i32 %add.1.26, %img_height
  %.not.1.26 = or i1 %notrhs.1.26, %notlhs.1.26
  %brmerge.1.26 = or i1 %.not.1.26, %cmp151.not.1.26
  br i1 %brmerge.1.26, label %for.inc36.1.26, label %for.body16.lr.ph.1.26

for.body16.lr.ph.1.26:                            ; preds = %for.body10.1.26
  %mul.1.26 = shl i32 %add.1.26, 7
  %mul30.1.26 = mul i32 %ki.06.1.26, %kern_width
  br label %for.body16.1.26

for.body16.1.26:                                  ; preds = %for.inc.1.26, %for.body16.lr.ph.1.26
  %indvars.iv.1.26 = phi i64 [ 0, %for.body16.lr.ph.1.26 ], [ %indvars.iv.next.1.26, %for.inc.1.26 ]
  %partial_sum.12.1.26 = phi float [ %partial_sum.05.1.26, %for.body16.lr.ph.1.26 ], [ %partial_sum.2.1.26, %for.inc.1.26 ]
  %1863 = trunc i64 %indvars.iv.1.26 to i32
  %add17.1.26 = add nsw i32 %1863, %inc54.26
  %cmp18.1.26 = icmp sgt i32 %add17.1.26, -1
  %cmp21.1.26 = icmp ult i32 %add17.1.26, %img_width
  %1864 = and i1 %cmp18.1.26, %cmp21.1.26
  br i1 %1864, label %if.end26.1.26, label %for.inc.1.26

if.end26.1.26:                                    ; preds = %for.body16.1.26
  %add29.1.26 = add nsw i32 %add17.1.26, %mul.1.26
  %idxprom.1.26 = sext i32 %add29.1.26 to i64
  %arrayidx.1.26 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.26
  %1865 = load float, float* %arrayidx.1.26, align 4
  %1866 = trunc i64 %indvars.iv.1.26 to i32
  %add31.1.26 = add i32 %1866, %mul30.1.26
  %idxprom32.1.26 = zext i32 %add31.1.26 to i64
  %arrayidx33.1.26 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.26
  %1867 = load float, float* %arrayidx33.1.26, align 4
  %mul34.1.26 = fmul float %1865, %1867
  %add35.1.26 = fadd float %partial_sum.12.1.26, %mul34.1.26
  br label %for.inc.1.26

for.inc.1.26:                                     ; preds = %if.end26.1.26, %for.body16.1.26
  %partial_sum.2.1.26 = phi float [ %add35.1.26, %if.end26.1.26 ], [ %partial_sum.12.1.26, %for.body16.1.26 ]
  %indvars.iv.next.1.26 = add nuw nsw i64 %indvars.iv.1.26, 1
  %lftr.wideiv.1.26 = trunc i64 %indvars.iv.next.1.26 to i32
  %exitcond.1.26 = icmp eq i32 %lftr.wideiv.1.26, %kern_width
  br i1 %exitcond.1.26, label %for.inc36.1.26.loopexit, label %for.body16.1.26, !llvm.loop !1

for.inc36.1.26.loopexit:                          ; preds = %for.inc.1.26
  %partial_sum.2.1.26.lcssa = phi float [ %partial_sum.2.1.26, %for.inc.1.26 ]
  br label %for.inc36.1.26

for.inc36.1.26:                                   ; preds = %for.inc36.1.26.loopexit, %for.body10.1.26
  %partial_sum.3.1.26 = phi float [ %partial_sum.05.1.26, %for.body10.1.26 ], [ %partial_sum.2.1.26.lcssa, %for.inc36.1.26.loopexit ]
  %inc37.1.26 = add nuw nsw i32 %ki.06.1.26, 1
  %exitcond19.1.26 = icmp eq i32 %inc37.1.26, %kern_height
  br i1 %exitcond19.1.26, label %for.end38.1.26.loopexit, label %for.body10.1.26, !llvm.loop !3

for.end38.1.26.loopexit:                          ; preds = %for.inc36.1.26
  %partial_sum.3.1.26.lcssa = phi float [ %partial_sum.3.1.26, %for.inc36.1.26 ]
  br label %for.end38.1.26

for.end38.1.26:                                   ; preds = %for.end38.1.26.loopexit, %for.inc53.26
  %partial_sum.0.lcssa.1.26 = phi float [ 0.000000e+00, %for.inc53.26 ], [ %partial_sum.3.1.26.lcssa, %for.end38.1.26.loopexit ]
  br i1 %tobool39, label %if.else.1.26, label %if.then40.1.26

if.then40.1.26:                                   ; preds = %for.end38.1.26
  %cmp41.1.26 = fcmp olt float %partial_sum.0.lcssa.1.26, 0.000000e+00
  %sub42.1.26 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.26
  %cond.1.26 = select i1 %cmp41.1.26, float %sub42.1.26, float %partial_sum.0.lcssa.1.26
  %conv.1.26 = fptoui float %cond.1.26 to i8
  %conv43.1.26 = uitofp i8 %conv.1.26 to float
  %1868 = add nsw i64 %indvars.iv.next21.26, %1848
  %arrayidx47.1.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1868
  store float %conv43.1.26, float* %arrayidx47.1.26, align 4
  br label %for.inc53.1.26

if.else.1.26:                                     ; preds = %for.end38.1.26
  %1869 = add nsw i64 %indvars.iv.next21.26, %1847
  %arrayidx51.1.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1869
  store float %partial_sum.0.lcssa.1.26, float* %arrayidx51.1.26, align 4
  br label %for.inc53.1.26

for.inc53.1.26:                                   ; preds = %if.else.1.26, %if.then40.1.26
  %inc54.1.26 = add nsw i32 %in_j.011.26, 2
  %indvars.iv.next21.1.26 = add nsw i64 %indvars.iv20.26, 2
  br i1 %cmp94, label %for.end38.2.26, label %for.body10.2.26.preheader

for.body10.2.26.preheader:                        ; preds = %for.inc53.1.26
  br label %for.body10.2.26

for.body10.2.26:                                  ; preds = %for.body10.2.26.preheader, %for.inc36.2.26
  %ki.06.2.26 = phi i32 [ %inc37.2.26, %for.inc36.2.26 ], [ 0, %for.body10.2.26.preheader ]
  %partial_sum.05.2.26 = phi float [ %partial_sum.3.2.26, %for.inc36.2.26 ], [ 0.000000e+00, %for.body10.2.26.preheader ]
  %add.2.26 = add nsw i32 %ki.06.2.26, %inc58.25
  %notlhs.2.26 = icmp slt i32 %add.2.26, 0
  %notrhs.2.26 = icmp uge i32 %add.2.26, %img_height
  %.not.2.26 = or i1 %notrhs.2.26, %notlhs.2.26
  %brmerge.2.26 = or i1 %.not.2.26, %cmp151.not.2.26
  br i1 %brmerge.2.26, label %for.inc36.2.26, label %for.body16.lr.ph.2.26

for.body16.lr.ph.2.26:                            ; preds = %for.body10.2.26
  %mul.2.26 = shl i32 %add.2.26, 7
  %mul30.2.26 = mul i32 %ki.06.2.26, %kern_width
  br label %for.body16.2.26

for.body16.2.26:                                  ; preds = %for.inc.2.26, %for.body16.lr.ph.2.26
  %indvars.iv.2.26 = phi i64 [ 0, %for.body16.lr.ph.2.26 ], [ %indvars.iv.next.2.26, %for.inc.2.26 ]
  %partial_sum.12.2.26 = phi float [ %partial_sum.05.2.26, %for.body16.lr.ph.2.26 ], [ %partial_sum.2.2.26, %for.inc.2.26 ]
  %1870 = trunc i64 %indvars.iv.2.26 to i32
  %add17.2.26 = add nsw i32 %1870, %inc54.1.26
  %cmp18.2.26 = icmp sgt i32 %add17.2.26, -1
  %cmp21.2.26 = icmp ult i32 %add17.2.26, %img_width
  %1871 = and i1 %cmp18.2.26, %cmp21.2.26
  br i1 %1871, label %if.end26.2.26, label %for.inc.2.26

if.end26.2.26:                                    ; preds = %for.body16.2.26
  %add29.2.26 = add nsw i32 %add17.2.26, %mul.2.26
  %idxprom.2.26 = sext i32 %add29.2.26 to i64
  %arrayidx.2.26 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.26
  %1872 = load float, float* %arrayidx.2.26, align 4
  %1873 = trunc i64 %indvars.iv.2.26 to i32
  %add31.2.26 = add i32 %1873, %mul30.2.26
  %idxprom32.2.26 = zext i32 %add31.2.26 to i64
  %arrayidx33.2.26 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.26
  %1874 = load float, float* %arrayidx33.2.26, align 4
  %mul34.2.26 = fmul float %1872, %1874
  %add35.2.26 = fadd float %partial_sum.12.2.26, %mul34.2.26
  br label %for.inc.2.26

for.inc.2.26:                                     ; preds = %if.end26.2.26, %for.body16.2.26
  %partial_sum.2.2.26 = phi float [ %add35.2.26, %if.end26.2.26 ], [ %partial_sum.12.2.26, %for.body16.2.26 ]
  %indvars.iv.next.2.26 = add nuw nsw i64 %indvars.iv.2.26, 1
  %lftr.wideiv.2.26 = trunc i64 %indvars.iv.next.2.26 to i32
  %exitcond.2.26 = icmp eq i32 %lftr.wideiv.2.26, %kern_width
  br i1 %exitcond.2.26, label %for.inc36.2.26.loopexit, label %for.body16.2.26, !llvm.loop !1

for.inc36.2.26.loopexit:                          ; preds = %for.inc.2.26
  %partial_sum.2.2.26.lcssa = phi float [ %partial_sum.2.2.26, %for.inc.2.26 ]
  br label %for.inc36.2.26

for.inc36.2.26:                                   ; preds = %for.inc36.2.26.loopexit, %for.body10.2.26
  %partial_sum.3.2.26 = phi float [ %partial_sum.05.2.26, %for.body10.2.26 ], [ %partial_sum.2.2.26.lcssa, %for.inc36.2.26.loopexit ]
  %inc37.2.26 = add nuw nsw i32 %ki.06.2.26, 1
  %exitcond19.2.26 = icmp eq i32 %inc37.2.26, %kern_height
  br i1 %exitcond19.2.26, label %for.end38.2.26.loopexit, label %for.body10.2.26, !llvm.loop !3

for.end38.2.26.loopexit:                          ; preds = %for.inc36.2.26
  %partial_sum.3.2.26.lcssa = phi float [ %partial_sum.3.2.26, %for.inc36.2.26 ]
  br label %for.end38.2.26

for.end38.2.26:                                   ; preds = %for.end38.2.26.loopexit, %for.inc53.1.26
  %partial_sum.0.lcssa.2.26 = phi float [ 0.000000e+00, %for.inc53.1.26 ], [ %partial_sum.3.2.26.lcssa, %for.end38.2.26.loopexit ]
  br i1 %tobool39, label %if.else.2.26, label %if.then40.2.26

if.then40.2.26:                                   ; preds = %for.end38.2.26
  %cmp41.2.26 = fcmp olt float %partial_sum.0.lcssa.2.26, 0.000000e+00
  %sub42.2.26 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.26
  %cond.2.26 = select i1 %cmp41.2.26, float %sub42.2.26, float %partial_sum.0.lcssa.2.26
  %conv.2.26 = fptoui float %cond.2.26 to i8
  %conv43.2.26 = uitofp i8 %conv.2.26 to float
  %1875 = add nsw i64 %indvars.iv.next21.1.26, %1848
  %arrayidx47.2.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1875
  store float %conv43.2.26, float* %arrayidx47.2.26, align 4
  br label %for.inc53.2.26

if.else.2.26:                                     ; preds = %for.end38.2.26
  %1876 = add nsw i64 %indvars.iv.next21.1.26, %1847
  %arrayidx51.2.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1876
  store float %partial_sum.0.lcssa.2.26, float* %arrayidx51.2.26, align 4
  br label %for.inc53.2.26

for.inc53.2.26:                                   ; preds = %if.else.2.26, %if.then40.2.26
  %inc54.2.26 = add nsw i32 %in_j.011.26, 3
  %indvars.iv.next21.2.26 = add nsw i64 %indvars.iv20.26, 3
  br i1 %cmp94, label %for.end38.3.26, label %for.body10.3.26.preheader

for.body10.3.26.preheader:                        ; preds = %for.inc53.2.26
  br label %for.body10.3.26

for.body10.3.26:                                  ; preds = %for.body10.3.26.preheader, %for.inc36.3.26
  %ki.06.3.26 = phi i32 [ %inc37.3.26, %for.inc36.3.26 ], [ 0, %for.body10.3.26.preheader ]
  %partial_sum.05.3.26 = phi float [ %partial_sum.3.3.26, %for.inc36.3.26 ], [ 0.000000e+00, %for.body10.3.26.preheader ]
  %add.3.26 = add nsw i32 %ki.06.3.26, %inc58.25
  %notlhs.3.26 = icmp slt i32 %add.3.26, 0
  %notrhs.3.26 = icmp uge i32 %add.3.26, %img_height
  %.not.3.26 = or i1 %notrhs.3.26, %notlhs.3.26
  %brmerge.3.26 = or i1 %.not.3.26, %cmp151.not.3.26
  br i1 %brmerge.3.26, label %for.inc36.3.26, label %for.body16.lr.ph.3.26

for.body16.lr.ph.3.26:                            ; preds = %for.body10.3.26
  %mul.3.26 = shl i32 %add.3.26, 7
  %mul30.3.26 = mul i32 %ki.06.3.26, %kern_width
  br label %for.body16.3.26

for.body16.3.26:                                  ; preds = %for.inc.3.26, %for.body16.lr.ph.3.26
  %indvars.iv.3.26 = phi i64 [ 0, %for.body16.lr.ph.3.26 ], [ %indvars.iv.next.3.26, %for.inc.3.26 ]
  %partial_sum.12.3.26 = phi float [ %partial_sum.05.3.26, %for.body16.lr.ph.3.26 ], [ %partial_sum.2.3.26, %for.inc.3.26 ]
  %1877 = trunc i64 %indvars.iv.3.26 to i32
  %add17.3.26 = add nsw i32 %1877, %inc54.2.26
  %cmp18.3.26 = icmp sgt i32 %add17.3.26, -1
  %cmp21.3.26 = icmp ult i32 %add17.3.26, %img_width
  %1878 = and i1 %cmp18.3.26, %cmp21.3.26
  br i1 %1878, label %if.end26.3.26, label %for.inc.3.26

if.end26.3.26:                                    ; preds = %for.body16.3.26
  %add29.3.26 = add nsw i32 %add17.3.26, %mul.3.26
  %idxprom.3.26 = sext i32 %add29.3.26 to i64
  %arrayidx.3.26 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.26
  %1879 = load float, float* %arrayidx.3.26, align 4
  %1880 = trunc i64 %indvars.iv.3.26 to i32
  %add31.3.26 = add i32 %1880, %mul30.3.26
  %idxprom32.3.26 = zext i32 %add31.3.26 to i64
  %arrayidx33.3.26 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.26
  %1881 = load float, float* %arrayidx33.3.26, align 4
  %mul34.3.26 = fmul float %1879, %1881
  %add35.3.26 = fadd float %partial_sum.12.3.26, %mul34.3.26
  br label %for.inc.3.26

for.inc.3.26:                                     ; preds = %if.end26.3.26, %for.body16.3.26
  %partial_sum.2.3.26 = phi float [ %add35.3.26, %if.end26.3.26 ], [ %partial_sum.12.3.26, %for.body16.3.26 ]
  %indvars.iv.next.3.26 = add nuw nsw i64 %indvars.iv.3.26, 1
  %lftr.wideiv.3.26 = trunc i64 %indvars.iv.next.3.26 to i32
  %exitcond.3.26 = icmp eq i32 %lftr.wideiv.3.26, %kern_width
  br i1 %exitcond.3.26, label %for.inc36.3.26.loopexit, label %for.body16.3.26, !llvm.loop !1

for.inc36.3.26.loopexit:                          ; preds = %for.inc.3.26
  %partial_sum.2.3.26.lcssa = phi float [ %partial_sum.2.3.26, %for.inc.3.26 ]
  br label %for.inc36.3.26

for.inc36.3.26:                                   ; preds = %for.inc36.3.26.loopexit, %for.body10.3.26
  %partial_sum.3.3.26 = phi float [ %partial_sum.05.3.26, %for.body10.3.26 ], [ %partial_sum.2.3.26.lcssa, %for.inc36.3.26.loopexit ]
  %inc37.3.26 = add nuw nsw i32 %ki.06.3.26, 1
  %exitcond19.3.26 = icmp eq i32 %inc37.3.26, %kern_height
  br i1 %exitcond19.3.26, label %for.end38.3.26.loopexit, label %for.body10.3.26, !llvm.loop !3

for.end38.3.26.loopexit:                          ; preds = %for.inc36.3.26
  %partial_sum.3.3.26.lcssa = phi float [ %partial_sum.3.3.26, %for.inc36.3.26 ]
  br label %for.end38.3.26

for.end38.3.26:                                   ; preds = %for.end38.3.26.loopexit, %for.inc53.2.26
  %partial_sum.0.lcssa.3.26 = phi float [ 0.000000e+00, %for.inc53.2.26 ], [ %partial_sum.3.3.26.lcssa, %for.end38.3.26.loopexit ]
  br i1 %tobool39, label %if.else.3.26, label %if.then40.3.26

if.then40.3.26:                                   ; preds = %for.end38.3.26
  %cmp41.3.26 = fcmp olt float %partial_sum.0.lcssa.3.26, 0.000000e+00
  %sub42.3.26 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.26
  %cond.3.26 = select i1 %cmp41.3.26, float %sub42.3.26, float %partial_sum.0.lcssa.3.26
  %conv.3.26 = fptoui float %cond.3.26 to i8
  %conv43.3.26 = uitofp i8 %conv.3.26 to float
  %1882 = add nsw i64 %indvars.iv.next21.2.26, %1848
  %arrayidx47.3.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1882
  store float %conv43.3.26, float* %arrayidx47.3.26, align 4
  br label %for.inc53.3.26

if.else.3.26:                                     ; preds = %for.end38.3.26
  %1883 = add nsw i64 %indvars.iv.next21.2.26, %1847
  %arrayidx51.3.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1883
  store float %partial_sum.0.lcssa.3.26, float* %arrayidx51.3.26, align 4
  br label %for.inc53.3.26

for.inc53.3.26:                                   ; preds = %if.else.3.26, %if.then40.3.26
  %inc54.3.26 = add nsw i32 %in_j.011.26, 4
  %indvars.iv.next21.3.26 = add nsw i64 %indvars.iv20.26, 4
  br i1 %cmp94, label %for.end38.4.26, label %for.body10.4.26.preheader

for.body10.4.26.preheader:                        ; preds = %for.inc53.3.26
  br label %for.body10.4.26

for.body10.4.26:                                  ; preds = %for.body10.4.26.preheader, %for.inc36.4.26
  %ki.06.4.26 = phi i32 [ %inc37.4.26, %for.inc36.4.26 ], [ 0, %for.body10.4.26.preheader ]
  %partial_sum.05.4.26 = phi float [ %partial_sum.3.4.26, %for.inc36.4.26 ], [ 0.000000e+00, %for.body10.4.26.preheader ]
  %add.4.26 = add nsw i32 %ki.06.4.26, %inc58.25
  %notlhs.4.26 = icmp slt i32 %add.4.26, 0
  %notrhs.4.26 = icmp uge i32 %add.4.26, %img_height
  %.not.4.26 = or i1 %notrhs.4.26, %notlhs.4.26
  %brmerge.4.26 = or i1 %.not.4.26, %cmp151.not.4.26
  br i1 %brmerge.4.26, label %for.inc36.4.26, label %for.body16.lr.ph.4.26

for.body16.lr.ph.4.26:                            ; preds = %for.body10.4.26
  %mul.4.26 = shl i32 %add.4.26, 7
  %mul30.4.26 = mul i32 %ki.06.4.26, %kern_width
  br label %for.body16.4.26

for.body16.4.26:                                  ; preds = %for.inc.4.26, %for.body16.lr.ph.4.26
  %indvars.iv.4.26 = phi i64 [ 0, %for.body16.lr.ph.4.26 ], [ %indvars.iv.next.4.26, %for.inc.4.26 ]
  %partial_sum.12.4.26 = phi float [ %partial_sum.05.4.26, %for.body16.lr.ph.4.26 ], [ %partial_sum.2.4.26, %for.inc.4.26 ]
  %1884 = trunc i64 %indvars.iv.4.26 to i32
  %add17.4.26 = add nsw i32 %1884, %inc54.3.26
  %cmp18.4.26 = icmp sgt i32 %add17.4.26, -1
  %cmp21.4.26 = icmp ult i32 %add17.4.26, %img_width
  %1885 = and i1 %cmp18.4.26, %cmp21.4.26
  br i1 %1885, label %if.end26.4.26, label %for.inc.4.26

if.end26.4.26:                                    ; preds = %for.body16.4.26
  %add29.4.26 = add nsw i32 %add17.4.26, %mul.4.26
  %idxprom.4.26 = sext i32 %add29.4.26 to i64
  %arrayidx.4.26 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.26
  %1886 = load float, float* %arrayidx.4.26, align 4
  %1887 = trunc i64 %indvars.iv.4.26 to i32
  %add31.4.26 = add i32 %1887, %mul30.4.26
  %idxprom32.4.26 = zext i32 %add31.4.26 to i64
  %arrayidx33.4.26 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.26
  %1888 = load float, float* %arrayidx33.4.26, align 4
  %mul34.4.26 = fmul float %1886, %1888
  %add35.4.26 = fadd float %partial_sum.12.4.26, %mul34.4.26
  br label %for.inc.4.26

for.inc.4.26:                                     ; preds = %if.end26.4.26, %for.body16.4.26
  %partial_sum.2.4.26 = phi float [ %add35.4.26, %if.end26.4.26 ], [ %partial_sum.12.4.26, %for.body16.4.26 ]
  %indvars.iv.next.4.26 = add nuw nsw i64 %indvars.iv.4.26, 1
  %lftr.wideiv.4.26 = trunc i64 %indvars.iv.next.4.26 to i32
  %exitcond.4.26 = icmp eq i32 %lftr.wideiv.4.26, %kern_width
  br i1 %exitcond.4.26, label %for.inc36.4.26.loopexit, label %for.body16.4.26, !llvm.loop !1

for.inc36.4.26.loopexit:                          ; preds = %for.inc.4.26
  %partial_sum.2.4.26.lcssa = phi float [ %partial_sum.2.4.26, %for.inc.4.26 ]
  br label %for.inc36.4.26

for.inc36.4.26:                                   ; preds = %for.inc36.4.26.loopexit, %for.body10.4.26
  %partial_sum.3.4.26 = phi float [ %partial_sum.05.4.26, %for.body10.4.26 ], [ %partial_sum.2.4.26.lcssa, %for.inc36.4.26.loopexit ]
  %inc37.4.26 = add nuw nsw i32 %ki.06.4.26, 1
  %exitcond19.4.26 = icmp eq i32 %inc37.4.26, %kern_height
  br i1 %exitcond19.4.26, label %for.end38.4.26.loopexit, label %for.body10.4.26, !llvm.loop !3

for.end38.4.26.loopexit:                          ; preds = %for.inc36.4.26
  %partial_sum.3.4.26.lcssa = phi float [ %partial_sum.3.4.26, %for.inc36.4.26 ]
  br label %for.end38.4.26

for.end38.4.26:                                   ; preds = %for.end38.4.26.loopexit, %for.inc53.3.26
  %partial_sum.0.lcssa.4.26 = phi float [ 0.000000e+00, %for.inc53.3.26 ], [ %partial_sum.3.4.26.lcssa, %for.end38.4.26.loopexit ]
  br i1 %tobool39, label %if.else.4.26, label %if.then40.4.26

if.then40.4.26:                                   ; preds = %for.end38.4.26
  %cmp41.4.26 = fcmp olt float %partial_sum.0.lcssa.4.26, 0.000000e+00
  %sub42.4.26 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.26
  %cond.4.26 = select i1 %cmp41.4.26, float %sub42.4.26, float %partial_sum.0.lcssa.4.26
  %conv.4.26 = fptoui float %cond.4.26 to i8
  %conv43.4.26 = uitofp i8 %conv.4.26 to float
  %1889 = add nsw i64 %indvars.iv.next21.3.26, %1848
  %arrayidx47.4.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1889
  store float %conv43.4.26, float* %arrayidx47.4.26, align 4
  br label %for.inc53.4.26

if.else.4.26:                                     ; preds = %for.end38.4.26
  %1890 = add nsw i64 %indvars.iv.next21.3.26, %1847
  %arrayidx51.4.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1890
  store float %partial_sum.0.lcssa.4.26, float* %arrayidx51.4.26, align 4
  br label %for.inc53.4.26

for.inc53.4.26:                                   ; preds = %if.else.4.26, %if.then40.4.26
  %inc54.4.26 = add nsw i32 %in_j.011.26, 5
  %indvars.iv.next21.4.26 = add nsw i64 %indvars.iv20.26, 5
  br i1 %cmp94, label %for.end38.5.26, label %for.body10.5.26.preheader

for.body10.5.26.preheader:                        ; preds = %for.inc53.4.26
  br label %for.body10.5.26

for.body10.5.26:                                  ; preds = %for.body10.5.26.preheader, %for.inc36.5.26
  %ki.06.5.26 = phi i32 [ %inc37.5.26, %for.inc36.5.26 ], [ 0, %for.body10.5.26.preheader ]
  %partial_sum.05.5.26 = phi float [ %partial_sum.3.5.26, %for.inc36.5.26 ], [ 0.000000e+00, %for.body10.5.26.preheader ]
  %add.5.26 = add nsw i32 %ki.06.5.26, %inc58.25
  %notlhs.5.26 = icmp slt i32 %add.5.26, 0
  %notrhs.5.26 = icmp uge i32 %add.5.26, %img_height
  %.not.5.26 = or i1 %notrhs.5.26, %notlhs.5.26
  %brmerge.5.26 = or i1 %.not.5.26, %cmp151.not.5.26
  br i1 %brmerge.5.26, label %for.inc36.5.26, label %for.body16.lr.ph.5.26

for.body16.lr.ph.5.26:                            ; preds = %for.body10.5.26
  %mul.5.26 = shl i32 %add.5.26, 7
  %mul30.5.26 = mul i32 %ki.06.5.26, %kern_width
  br label %for.body16.5.26

for.body16.5.26:                                  ; preds = %for.inc.5.26, %for.body16.lr.ph.5.26
  %indvars.iv.5.26 = phi i64 [ 0, %for.body16.lr.ph.5.26 ], [ %indvars.iv.next.5.26, %for.inc.5.26 ]
  %partial_sum.12.5.26 = phi float [ %partial_sum.05.5.26, %for.body16.lr.ph.5.26 ], [ %partial_sum.2.5.26, %for.inc.5.26 ]
  %1891 = trunc i64 %indvars.iv.5.26 to i32
  %add17.5.26 = add nsw i32 %1891, %inc54.4.26
  %cmp18.5.26 = icmp sgt i32 %add17.5.26, -1
  %cmp21.5.26 = icmp ult i32 %add17.5.26, %img_width
  %1892 = and i1 %cmp18.5.26, %cmp21.5.26
  br i1 %1892, label %if.end26.5.26, label %for.inc.5.26

if.end26.5.26:                                    ; preds = %for.body16.5.26
  %add29.5.26 = add nsw i32 %add17.5.26, %mul.5.26
  %idxprom.5.26 = sext i32 %add29.5.26 to i64
  %arrayidx.5.26 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.26
  %1893 = load float, float* %arrayidx.5.26, align 4
  %1894 = trunc i64 %indvars.iv.5.26 to i32
  %add31.5.26 = add i32 %1894, %mul30.5.26
  %idxprom32.5.26 = zext i32 %add31.5.26 to i64
  %arrayidx33.5.26 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.26
  %1895 = load float, float* %arrayidx33.5.26, align 4
  %mul34.5.26 = fmul float %1893, %1895
  %add35.5.26 = fadd float %partial_sum.12.5.26, %mul34.5.26
  br label %for.inc.5.26

for.inc.5.26:                                     ; preds = %if.end26.5.26, %for.body16.5.26
  %partial_sum.2.5.26 = phi float [ %add35.5.26, %if.end26.5.26 ], [ %partial_sum.12.5.26, %for.body16.5.26 ]
  %indvars.iv.next.5.26 = add nuw nsw i64 %indvars.iv.5.26, 1
  %lftr.wideiv.5.26 = trunc i64 %indvars.iv.next.5.26 to i32
  %exitcond.5.26 = icmp eq i32 %lftr.wideiv.5.26, %kern_width
  br i1 %exitcond.5.26, label %for.inc36.5.26.loopexit, label %for.body16.5.26, !llvm.loop !1

for.inc36.5.26.loopexit:                          ; preds = %for.inc.5.26
  %partial_sum.2.5.26.lcssa = phi float [ %partial_sum.2.5.26, %for.inc.5.26 ]
  br label %for.inc36.5.26

for.inc36.5.26:                                   ; preds = %for.inc36.5.26.loopexit, %for.body10.5.26
  %partial_sum.3.5.26 = phi float [ %partial_sum.05.5.26, %for.body10.5.26 ], [ %partial_sum.2.5.26.lcssa, %for.inc36.5.26.loopexit ]
  %inc37.5.26 = add nuw nsw i32 %ki.06.5.26, 1
  %exitcond19.5.26 = icmp eq i32 %inc37.5.26, %kern_height
  br i1 %exitcond19.5.26, label %for.end38.5.26.loopexit, label %for.body10.5.26, !llvm.loop !3

for.end38.5.26.loopexit:                          ; preds = %for.inc36.5.26
  %partial_sum.3.5.26.lcssa = phi float [ %partial_sum.3.5.26, %for.inc36.5.26 ]
  br label %for.end38.5.26

for.end38.5.26:                                   ; preds = %for.end38.5.26.loopexit, %for.inc53.4.26
  %partial_sum.0.lcssa.5.26 = phi float [ 0.000000e+00, %for.inc53.4.26 ], [ %partial_sum.3.5.26.lcssa, %for.end38.5.26.loopexit ]
  br i1 %tobool39, label %if.else.5.26, label %if.then40.5.26

if.then40.5.26:                                   ; preds = %for.end38.5.26
  %cmp41.5.26 = fcmp olt float %partial_sum.0.lcssa.5.26, 0.000000e+00
  %sub42.5.26 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.26
  %cond.5.26 = select i1 %cmp41.5.26, float %sub42.5.26, float %partial_sum.0.lcssa.5.26
  %conv.5.26 = fptoui float %cond.5.26 to i8
  %conv43.5.26 = uitofp i8 %conv.5.26 to float
  %1896 = add nsw i64 %indvars.iv.next21.4.26, %1848
  %arrayidx47.5.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1896
  store float %conv43.5.26, float* %arrayidx47.5.26, align 4
  br label %for.inc53.5.26

if.else.5.26:                                     ; preds = %for.end38.5.26
  %1897 = add nsw i64 %indvars.iv.next21.4.26, %1847
  %arrayidx51.5.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1897
  store float %partial_sum.0.lcssa.5.26, float* %arrayidx51.5.26, align 4
  br label %for.inc53.5.26

for.inc53.5.26:                                   ; preds = %if.else.5.26, %if.then40.5.26
  %inc54.5.26 = add nsw i32 %in_j.011.26, 6
  %indvars.iv.next21.5.26 = add nsw i64 %indvars.iv20.26, 6
  br i1 %cmp94, label %for.end38.6.26, label %for.body10.6.26.preheader

for.body10.6.26.preheader:                        ; preds = %for.inc53.5.26
  br label %for.body10.6.26

for.body10.6.26:                                  ; preds = %for.body10.6.26.preheader, %for.inc36.6.26
  %ki.06.6.26 = phi i32 [ %inc37.6.26, %for.inc36.6.26 ], [ 0, %for.body10.6.26.preheader ]
  %partial_sum.05.6.26 = phi float [ %partial_sum.3.6.26, %for.inc36.6.26 ], [ 0.000000e+00, %for.body10.6.26.preheader ]
  %add.6.26 = add nsw i32 %ki.06.6.26, %inc58.25
  %notlhs.6.26 = icmp slt i32 %add.6.26, 0
  %notrhs.6.26 = icmp uge i32 %add.6.26, %img_height
  %.not.6.26 = or i1 %notrhs.6.26, %notlhs.6.26
  %brmerge.6.26 = or i1 %.not.6.26, %cmp151.not.6.26
  br i1 %brmerge.6.26, label %for.inc36.6.26, label %for.body16.lr.ph.6.26

for.body16.lr.ph.6.26:                            ; preds = %for.body10.6.26
  %mul.6.26 = shl i32 %add.6.26, 7
  %mul30.6.26 = mul i32 %ki.06.6.26, %kern_width
  br label %for.body16.6.26

for.body16.6.26:                                  ; preds = %for.inc.6.26, %for.body16.lr.ph.6.26
  %indvars.iv.6.26 = phi i64 [ 0, %for.body16.lr.ph.6.26 ], [ %indvars.iv.next.6.26, %for.inc.6.26 ]
  %partial_sum.12.6.26 = phi float [ %partial_sum.05.6.26, %for.body16.lr.ph.6.26 ], [ %partial_sum.2.6.26, %for.inc.6.26 ]
  %1898 = trunc i64 %indvars.iv.6.26 to i32
  %add17.6.26 = add nsw i32 %1898, %inc54.5.26
  %cmp18.6.26 = icmp sgt i32 %add17.6.26, -1
  %cmp21.6.26 = icmp ult i32 %add17.6.26, %img_width
  %1899 = and i1 %cmp18.6.26, %cmp21.6.26
  br i1 %1899, label %if.end26.6.26, label %for.inc.6.26

if.end26.6.26:                                    ; preds = %for.body16.6.26
  %add29.6.26 = add nsw i32 %add17.6.26, %mul.6.26
  %idxprom.6.26 = sext i32 %add29.6.26 to i64
  %arrayidx.6.26 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.26
  %1900 = load float, float* %arrayidx.6.26, align 4
  %1901 = trunc i64 %indvars.iv.6.26 to i32
  %add31.6.26 = add i32 %1901, %mul30.6.26
  %idxprom32.6.26 = zext i32 %add31.6.26 to i64
  %arrayidx33.6.26 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.26
  %1902 = load float, float* %arrayidx33.6.26, align 4
  %mul34.6.26 = fmul float %1900, %1902
  %add35.6.26 = fadd float %partial_sum.12.6.26, %mul34.6.26
  br label %for.inc.6.26

for.inc.6.26:                                     ; preds = %if.end26.6.26, %for.body16.6.26
  %partial_sum.2.6.26 = phi float [ %add35.6.26, %if.end26.6.26 ], [ %partial_sum.12.6.26, %for.body16.6.26 ]
  %indvars.iv.next.6.26 = add nuw nsw i64 %indvars.iv.6.26, 1
  %lftr.wideiv.6.26 = trunc i64 %indvars.iv.next.6.26 to i32
  %exitcond.6.26 = icmp eq i32 %lftr.wideiv.6.26, %kern_width
  br i1 %exitcond.6.26, label %for.inc36.6.26.loopexit, label %for.body16.6.26, !llvm.loop !1

for.inc36.6.26.loopexit:                          ; preds = %for.inc.6.26
  %partial_sum.2.6.26.lcssa = phi float [ %partial_sum.2.6.26, %for.inc.6.26 ]
  br label %for.inc36.6.26

for.inc36.6.26:                                   ; preds = %for.inc36.6.26.loopexit, %for.body10.6.26
  %partial_sum.3.6.26 = phi float [ %partial_sum.05.6.26, %for.body10.6.26 ], [ %partial_sum.2.6.26.lcssa, %for.inc36.6.26.loopexit ]
  %inc37.6.26 = add nuw nsw i32 %ki.06.6.26, 1
  %exitcond19.6.26 = icmp eq i32 %inc37.6.26, %kern_height
  br i1 %exitcond19.6.26, label %for.end38.6.26.loopexit, label %for.body10.6.26, !llvm.loop !3

for.end38.6.26.loopexit:                          ; preds = %for.inc36.6.26
  %partial_sum.3.6.26.lcssa = phi float [ %partial_sum.3.6.26, %for.inc36.6.26 ]
  br label %for.end38.6.26

for.end38.6.26:                                   ; preds = %for.end38.6.26.loopexit, %for.inc53.5.26
  %partial_sum.0.lcssa.6.26 = phi float [ 0.000000e+00, %for.inc53.5.26 ], [ %partial_sum.3.6.26.lcssa, %for.end38.6.26.loopexit ]
  br i1 %tobool39, label %if.else.6.26, label %if.then40.6.26

if.then40.6.26:                                   ; preds = %for.end38.6.26
  %cmp41.6.26 = fcmp olt float %partial_sum.0.lcssa.6.26, 0.000000e+00
  %sub42.6.26 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.26
  %cond.6.26 = select i1 %cmp41.6.26, float %sub42.6.26, float %partial_sum.0.lcssa.6.26
  %conv.6.26 = fptoui float %cond.6.26 to i8
  %conv43.6.26 = uitofp i8 %conv.6.26 to float
  %1903 = add nsw i64 %indvars.iv.next21.5.26, %1848
  %arrayidx47.6.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1903
  store float %conv43.6.26, float* %arrayidx47.6.26, align 4
  br label %for.inc53.6.26

if.else.6.26:                                     ; preds = %for.end38.6.26
  %1904 = add nsw i64 %indvars.iv.next21.5.26, %1847
  %arrayidx51.6.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1904
  store float %partial_sum.0.lcssa.6.26, float* %arrayidx51.6.26, align 4
  br label %for.inc53.6.26

for.inc53.6.26:                                   ; preds = %if.else.6.26, %if.then40.6.26
  %inc54.6.26 = add nsw i32 %in_j.011.26, 7
  %indvars.iv.next21.6.26 = add nsw i64 %indvars.iv20.26, 7
  br i1 %cmp94, label %for.end38.7.26, label %for.body10.7.26.preheader

for.body10.7.26.preheader:                        ; preds = %for.inc53.6.26
  br label %for.body10.7.26

for.body10.7.26:                                  ; preds = %for.body10.7.26.preheader, %for.inc36.7.26
  %ki.06.7.26 = phi i32 [ %inc37.7.26, %for.inc36.7.26 ], [ 0, %for.body10.7.26.preheader ]
  %partial_sum.05.7.26 = phi float [ %partial_sum.3.7.26, %for.inc36.7.26 ], [ 0.000000e+00, %for.body10.7.26.preheader ]
  %add.7.26 = add nsw i32 %ki.06.7.26, %inc58.25
  %notlhs.7.26 = icmp slt i32 %add.7.26, 0
  %notrhs.7.26 = icmp uge i32 %add.7.26, %img_height
  %.not.7.26 = or i1 %notrhs.7.26, %notlhs.7.26
  %brmerge.7.26 = or i1 %.not.7.26, %cmp151.not.7.26
  br i1 %brmerge.7.26, label %for.inc36.7.26, label %for.body16.lr.ph.7.26

for.body16.lr.ph.7.26:                            ; preds = %for.body10.7.26
  %mul.7.26 = shl i32 %add.7.26, 7
  %mul30.7.26 = mul i32 %ki.06.7.26, %kern_width
  br label %for.body16.7.26

for.body16.7.26:                                  ; preds = %for.inc.7.26, %for.body16.lr.ph.7.26
  %indvars.iv.7.26 = phi i64 [ 0, %for.body16.lr.ph.7.26 ], [ %indvars.iv.next.7.26, %for.inc.7.26 ]
  %partial_sum.12.7.26 = phi float [ %partial_sum.05.7.26, %for.body16.lr.ph.7.26 ], [ %partial_sum.2.7.26, %for.inc.7.26 ]
  %1905 = trunc i64 %indvars.iv.7.26 to i32
  %add17.7.26 = add nsw i32 %1905, %inc54.6.26
  %cmp18.7.26 = icmp sgt i32 %add17.7.26, -1
  %cmp21.7.26 = icmp ult i32 %add17.7.26, %img_width
  %1906 = and i1 %cmp18.7.26, %cmp21.7.26
  br i1 %1906, label %if.end26.7.26, label %for.inc.7.26

if.end26.7.26:                                    ; preds = %for.body16.7.26
  %add29.7.26 = add nsw i32 %add17.7.26, %mul.7.26
  %idxprom.7.26 = sext i32 %add29.7.26 to i64
  %arrayidx.7.26 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.26
  %1907 = load float, float* %arrayidx.7.26, align 4
  %1908 = trunc i64 %indvars.iv.7.26 to i32
  %add31.7.26 = add i32 %1908, %mul30.7.26
  %idxprom32.7.26 = zext i32 %add31.7.26 to i64
  %arrayidx33.7.26 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.26
  %1909 = load float, float* %arrayidx33.7.26, align 4
  %mul34.7.26 = fmul float %1907, %1909
  %add35.7.26 = fadd float %partial_sum.12.7.26, %mul34.7.26
  br label %for.inc.7.26

for.inc.7.26:                                     ; preds = %if.end26.7.26, %for.body16.7.26
  %partial_sum.2.7.26 = phi float [ %add35.7.26, %if.end26.7.26 ], [ %partial_sum.12.7.26, %for.body16.7.26 ]
  %indvars.iv.next.7.26 = add nuw nsw i64 %indvars.iv.7.26, 1
  %lftr.wideiv.7.26 = trunc i64 %indvars.iv.next.7.26 to i32
  %exitcond.7.26 = icmp eq i32 %lftr.wideiv.7.26, %kern_width
  br i1 %exitcond.7.26, label %for.inc36.7.26.loopexit, label %for.body16.7.26, !llvm.loop !1

for.inc36.7.26.loopexit:                          ; preds = %for.inc.7.26
  %partial_sum.2.7.26.lcssa = phi float [ %partial_sum.2.7.26, %for.inc.7.26 ]
  br label %for.inc36.7.26

for.inc36.7.26:                                   ; preds = %for.inc36.7.26.loopexit, %for.body10.7.26
  %partial_sum.3.7.26 = phi float [ %partial_sum.05.7.26, %for.body10.7.26 ], [ %partial_sum.2.7.26.lcssa, %for.inc36.7.26.loopexit ]
  %inc37.7.26 = add nuw nsw i32 %ki.06.7.26, 1
  %exitcond19.7.26 = icmp eq i32 %inc37.7.26, %kern_height
  br i1 %exitcond19.7.26, label %for.end38.7.26.loopexit, label %for.body10.7.26, !llvm.loop !3

for.end38.7.26.loopexit:                          ; preds = %for.inc36.7.26
  %partial_sum.3.7.26.lcssa = phi float [ %partial_sum.3.7.26, %for.inc36.7.26 ]
  br label %for.end38.7.26

for.end38.7.26:                                   ; preds = %for.end38.7.26.loopexit, %for.inc53.6.26
  %partial_sum.0.lcssa.7.26 = phi float [ 0.000000e+00, %for.inc53.6.26 ], [ %partial_sum.3.7.26.lcssa, %for.end38.7.26.loopexit ]
  br i1 %tobool39, label %if.else.7.26, label %if.then40.7.26

if.then40.7.26:                                   ; preds = %for.end38.7.26
  %cmp41.7.26 = fcmp olt float %partial_sum.0.lcssa.7.26, 0.000000e+00
  %sub42.7.26 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.26
  %cond.7.26 = select i1 %cmp41.7.26, float %sub42.7.26, float %partial_sum.0.lcssa.7.26
  %conv.7.26 = fptoui float %cond.7.26 to i8
  %conv43.7.26 = uitofp i8 %conv.7.26 to float
  %1910 = add nsw i64 %indvars.iv.next21.6.26, %1848
  %arrayidx47.7.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1910
  store float %conv43.7.26, float* %arrayidx47.7.26, align 4
  br label %for.inc53.7.26

if.else.7.26:                                     ; preds = %for.end38.7.26
  %1911 = add nsw i64 %indvars.iv.next21.6.26, %1847
  %arrayidx51.7.26 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1911
  store float %partial_sum.0.lcssa.7.26, float* %arrayidx51.7.26, align 4
  br label %for.inc53.7.26

for.inc53.7.26:                                   ; preds = %if.else.7.26, %if.then40.7.26
  %inc54.7.26 = add nsw i32 %in_j.011.26, 8
  %indvars.iv.next21.7.26 = add nsw i64 %indvars.iv20.26, 8
  %lftr.wideiv24.7.26 = trunc i64 %indvars.iv.next21.7.26 to i32
  %exitcond25.7.26 = icmp eq i32 %lftr.wideiv24.7.26, %img_width
  br i1 %exitcond25.7.26, label %for.inc57.26.loopexit, label %for.cond8.preheader.26, !llvm.loop !5

for.inc57.26.loopexit:                            ; preds = %for.inc53.7.26
  br label %for.inc57.26

for.inc57.26:                                     ; preds = %for.inc57.26.loopexit, %for.cond8.preheader.lr.ph.split.26
  %inc58.26 = add nsw i32 %in_i.015, 27
  %indvars.iv.next27.26 = add nsw i64 %indvars.iv26, 27
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.27

for.cond8.preheader.lr.ph.27:                     ; preds = %for.inc57.26
  %1912 = trunc i64 %indvars.iv.next27.26 to i32
  %mul48.27 = shl i32 %1912, 7
  %1913 = trunc i64 %indvars.iv.next27.26 to i32
  %mul44.27 = shl i32 %1913, 7
  %1914 = sext i32 %mul48.27 to i64
  %1915 = sext i32 %mul44.27 to i64
  br i1 %lcmp.mod.27, label %for.cond8.preheader.lr.ph.split.27, label %for.cond8.preheader.prol.27.preheader

for.cond8.preheader.prol.27.preheader:            ; preds = %for.cond8.preheader.lr.ph.27
  br label %for.cond8.preheader.prol.27

for.cond8.preheader.prol.27:                      ; preds = %for.cond8.preheader.prol.27.preheader, %for.inc53.prol.27
  %indvars.iv20.prol.27 = phi i64 [ %indvars.iv.next21.prol.27, %for.inc53.prol.27 ], [ 0, %for.cond8.preheader.prol.27.preheader ]
  %in_j.011.prol.27 = phi i32 [ %inc54.prol.27, %for.inc53.prol.27 ], [ %sub4, %for.cond8.preheader.prol.27.preheader ]
  %prol.iter.27 = phi i32 [ %prol.iter.sub.27, %for.inc53.prol.27 ], [ %xtraiter.27, %for.cond8.preheader.prol.27.preheader ]
  br i1 %cmp94, label %for.end38.prol.27, label %for.body10.prol.27.preheader

for.body10.prol.27.preheader:                     ; preds = %for.cond8.preheader.prol.27
  br label %for.body10.prol.27

for.body10.prol.27:                               ; preds = %for.body10.prol.27.preheader, %for.inc36.prol.27
  %ki.06.prol.27 = phi i32 [ %inc37.prol.27, %for.inc36.prol.27 ], [ 0, %for.body10.prol.27.preheader ]
  %partial_sum.05.prol.27 = phi float [ %partial_sum.3.prol.27, %for.inc36.prol.27 ], [ 0.000000e+00, %for.body10.prol.27.preheader ]
  %add.prol.27 = add nsw i32 %ki.06.prol.27, %inc58.26
  %notlhs.prol.27 = icmp slt i32 %add.prol.27, 0
  %notrhs.prol.27 = icmp uge i32 %add.prol.27, %img_height
  %.not.prol.27 = or i1 %notrhs.prol.27, %notlhs.prol.27
  %brmerge.prol.27 = or i1 %.not.prol.27, %cmp151.not.prol.27
  br i1 %brmerge.prol.27, label %for.inc36.prol.27, label %for.body16.lr.ph.prol.27

for.body16.lr.ph.prol.27:                         ; preds = %for.body10.prol.27
  %mul.prol.27 = shl i32 %add.prol.27, 7
  %mul30.prol.27 = mul i32 %ki.06.prol.27, %kern_width
  br label %for.body16.prol.27

for.body16.prol.27:                               ; preds = %for.inc.prol.27, %for.body16.lr.ph.prol.27
  %indvars.iv.prol.27 = phi i64 [ 0, %for.body16.lr.ph.prol.27 ], [ %indvars.iv.next.prol.27, %for.inc.prol.27 ]
  %partial_sum.12.prol.27 = phi float [ %partial_sum.05.prol.27, %for.body16.lr.ph.prol.27 ], [ %partial_sum.2.prol.27, %for.inc.prol.27 ]
  %1916 = trunc i64 %indvars.iv.prol.27 to i32
  %add17.prol.27 = add nsw i32 %1916, %in_j.011.prol.27
  %cmp18.prol.27 = icmp sgt i32 %add17.prol.27, -1
  %cmp21.prol.27 = icmp ult i32 %add17.prol.27, %img_width
  %1917 = and i1 %cmp18.prol.27, %cmp21.prol.27
  br i1 %1917, label %if.end26.prol.27, label %for.inc.prol.27

if.end26.prol.27:                                 ; preds = %for.body16.prol.27
  %add29.prol.27 = add nsw i32 %add17.prol.27, %mul.prol.27
  %idxprom.prol.27 = sext i32 %add29.prol.27 to i64
  %arrayidx.prol.27 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.27
  %1918 = load float, float* %arrayidx.prol.27, align 4
  %1919 = trunc i64 %indvars.iv.prol.27 to i32
  %add31.prol.27 = add i32 %1919, %mul30.prol.27
  %idxprom32.prol.27 = zext i32 %add31.prol.27 to i64
  %arrayidx33.prol.27 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.27
  %1920 = load float, float* %arrayidx33.prol.27, align 4
  %mul34.prol.27 = fmul float %1918, %1920
  %add35.prol.27 = fadd float %partial_sum.12.prol.27, %mul34.prol.27
  br label %for.inc.prol.27

for.inc.prol.27:                                  ; preds = %if.end26.prol.27, %for.body16.prol.27
  %partial_sum.2.prol.27 = phi float [ %add35.prol.27, %if.end26.prol.27 ], [ %partial_sum.12.prol.27, %for.body16.prol.27 ]
  %indvars.iv.next.prol.27 = add nuw nsw i64 %indvars.iv.prol.27, 1
  %lftr.wideiv.prol.27 = trunc i64 %indvars.iv.next.prol.27 to i32
  %exitcond.prol.27 = icmp eq i32 %lftr.wideiv.prol.27, %kern_width
  br i1 %exitcond.prol.27, label %for.inc36.prol.27.loopexit, label %for.body16.prol.27, !llvm.loop !1

for.inc36.prol.27.loopexit:                       ; preds = %for.inc.prol.27
  %partial_sum.2.prol.27.lcssa = phi float [ %partial_sum.2.prol.27, %for.inc.prol.27 ]
  br label %for.inc36.prol.27

for.inc36.prol.27:                                ; preds = %for.inc36.prol.27.loopexit, %for.body10.prol.27
  %partial_sum.3.prol.27 = phi float [ %partial_sum.05.prol.27, %for.body10.prol.27 ], [ %partial_sum.2.prol.27.lcssa, %for.inc36.prol.27.loopexit ]
  %inc37.prol.27 = add nuw nsw i32 %ki.06.prol.27, 1
  %exitcond19.prol.27 = icmp eq i32 %inc37.prol.27, %kern_height
  br i1 %exitcond19.prol.27, label %for.end38.prol.27.loopexit, label %for.body10.prol.27, !llvm.loop !3

for.end38.prol.27.loopexit:                       ; preds = %for.inc36.prol.27
  %partial_sum.3.prol.27.lcssa = phi float [ %partial_sum.3.prol.27, %for.inc36.prol.27 ]
  br label %for.end38.prol.27

for.end38.prol.27:                                ; preds = %for.end38.prol.27.loopexit, %for.cond8.preheader.prol.27
  %partial_sum.0.lcssa.prol.27 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.27 ], [ %partial_sum.3.prol.27.lcssa, %for.end38.prol.27.loopexit ]
  br i1 %tobool39, label %if.else.prol.27, label %if.then40.prol.27

if.then40.prol.27:                                ; preds = %for.end38.prol.27
  %cmp41.prol.27 = fcmp olt float %partial_sum.0.lcssa.prol.27, 0.000000e+00
  %sub42.prol.27 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.27
  %cond.prol.27 = select i1 %cmp41.prol.27, float %sub42.prol.27, float %partial_sum.0.lcssa.prol.27
  %conv.prol.27 = fptoui float %cond.prol.27 to i8
  %conv43.prol.27 = uitofp i8 %conv.prol.27 to float
  %1921 = add nsw i64 %indvars.iv20.prol.27, %1915
  %arrayidx47.prol.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1921
  store float %conv43.prol.27, float* %arrayidx47.prol.27, align 4
  br label %for.inc53.prol.27

if.else.prol.27:                                  ; preds = %for.end38.prol.27
  %1922 = add nsw i64 %indvars.iv20.prol.27, %1914
  %arrayidx51.prol.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1922
  store float %partial_sum.0.lcssa.prol.27, float* %arrayidx51.prol.27, align 4
  br label %for.inc53.prol.27

for.inc53.prol.27:                                ; preds = %if.else.prol.27, %if.then40.prol.27
  %inc54.prol.27 = add nsw i32 %in_j.011.prol.27, 1
  %indvars.iv.next21.prol.27 = add nuw nsw i64 %indvars.iv20.prol.27, 1
  %prol.iter.sub.27 = add i32 %prol.iter.27, -1
  %prol.iter.cmp.27 = icmp eq i32 %prol.iter.sub.27, 0
  br i1 %prol.iter.cmp.27, label %for.cond8.preheader.lr.ph.split.27.loopexit, label %for.cond8.preheader.prol.27, !llvm.loop !4

for.cond8.preheader.lr.ph.split.27.loopexit:      ; preds = %for.inc53.prol.27
  %indvars.iv.next21.prol.27.lcssa = phi i64 [ %indvars.iv.next21.prol.27, %for.inc53.prol.27 ]
  %inc54.prol.27.lcssa = phi i32 [ %inc54.prol.27, %for.inc53.prol.27 ]
  br label %for.cond8.preheader.lr.ph.split.27

for.cond8.preheader.lr.ph.split.27:               ; preds = %for.cond8.preheader.lr.ph.split.27.loopexit, %for.cond8.preheader.lr.ph.27
  %indvars.iv20.unr.27 = phi i64 [ 0, %for.cond8.preheader.lr.ph.27 ], [ %indvars.iv.next21.prol.27.lcssa, %for.cond8.preheader.lr.ph.split.27.loopexit ]
  %in_j.011.unr.27 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.27 ], [ %inc54.prol.27.lcssa, %for.cond8.preheader.lr.ph.split.27.loopexit ]
  br i1 %98, label %for.inc57.27, label %for.cond8.preheader.27.preheader

for.cond8.preheader.27.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.27
  br label %for.cond8.preheader.27

for.cond8.preheader.27:                           ; preds = %for.cond8.preheader.27.preheader, %for.inc53.7.27
  %indvars.iv20.27 = phi i64 [ %indvars.iv.next21.7.27, %for.inc53.7.27 ], [ %indvars.iv20.unr.27, %for.cond8.preheader.27.preheader ]
  %in_j.011.27 = phi i32 [ %inc54.7.27, %for.inc53.7.27 ], [ %in_j.011.unr.27, %for.cond8.preheader.27.preheader ]
  br i1 %cmp94, label %for.end38.27, label %for.body10.27.preheader

for.body10.27.preheader:                          ; preds = %for.cond8.preheader.27
  br label %for.body10.27

for.body10.27:                                    ; preds = %for.body10.27.preheader, %for.inc36.27
  %ki.06.27 = phi i32 [ %inc37.27, %for.inc36.27 ], [ 0, %for.body10.27.preheader ]
  %partial_sum.05.27 = phi float [ %partial_sum.3.27, %for.inc36.27 ], [ 0.000000e+00, %for.body10.27.preheader ]
  %add.27 = add nsw i32 %ki.06.27, %inc58.26
  %notlhs.27 = icmp slt i32 %add.27, 0
  %notrhs.27 = icmp uge i32 %add.27, %img_height
  %.not.27 = or i1 %notrhs.27, %notlhs.27
  %brmerge.27 = or i1 %.not.27, %cmp151.not.27
  br i1 %brmerge.27, label %for.inc36.27, label %for.body16.lr.ph.27

for.body16.lr.ph.27:                              ; preds = %for.body10.27
  %mul.27 = shl i32 %add.27, 7
  %mul30.27 = mul i32 %ki.06.27, %kern_width
  br label %for.body16.27

for.body16.27:                                    ; preds = %for.inc.27, %for.body16.lr.ph.27
  %indvars.iv.27 = phi i64 [ 0, %for.body16.lr.ph.27 ], [ %indvars.iv.next.27, %for.inc.27 ]
  %partial_sum.12.27 = phi float [ %partial_sum.05.27, %for.body16.lr.ph.27 ], [ %partial_sum.2.27, %for.inc.27 ]
  %1923 = trunc i64 %indvars.iv.27 to i32
  %add17.27 = add nsw i32 %1923, %in_j.011.27
  %cmp18.27 = icmp sgt i32 %add17.27, -1
  %cmp21.27 = icmp ult i32 %add17.27, %img_width
  %1924 = and i1 %cmp18.27, %cmp21.27
  br i1 %1924, label %if.end26.27, label %for.inc.27

if.end26.27:                                      ; preds = %for.body16.27
  %add29.27 = add nsw i32 %add17.27, %mul.27
  %idxprom.27 = sext i32 %add29.27 to i64
  %arrayidx.27 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.27
  %1925 = load float, float* %arrayidx.27, align 4
  %1926 = trunc i64 %indvars.iv.27 to i32
  %add31.27 = add i32 %1926, %mul30.27
  %idxprom32.27 = zext i32 %add31.27 to i64
  %arrayidx33.27 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.27
  %1927 = load float, float* %arrayidx33.27, align 4
  %mul34.27 = fmul float %1925, %1927
  %add35.27 = fadd float %partial_sum.12.27, %mul34.27
  br label %for.inc.27

for.inc.27:                                       ; preds = %if.end26.27, %for.body16.27
  %partial_sum.2.27 = phi float [ %add35.27, %if.end26.27 ], [ %partial_sum.12.27, %for.body16.27 ]
  %indvars.iv.next.27 = add nuw nsw i64 %indvars.iv.27, 1
  %lftr.wideiv.27 = trunc i64 %indvars.iv.next.27 to i32
  %exitcond.27 = icmp eq i32 %lftr.wideiv.27, %kern_width
  br i1 %exitcond.27, label %for.inc36.27.loopexit, label %for.body16.27, !llvm.loop !1

for.inc36.27.loopexit:                            ; preds = %for.inc.27
  %partial_sum.2.27.lcssa = phi float [ %partial_sum.2.27, %for.inc.27 ]
  br label %for.inc36.27

for.inc36.27:                                     ; preds = %for.inc36.27.loopexit, %for.body10.27
  %partial_sum.3.27 = phi float [ %partial_sum.05.27, %for.body10.27 ], [ %partial_sum.2.27.lcssa, %for.inc36.27.loopexit ]
  %inc37.27 = add nuw nsw i32 %ki.06.27, 1
  %exitcond19.27 = icmp eq i32 %inc37.27, %kern_height
  br i1 %exitcond19.27, label %for.end38.27.loopexit, label %for.body10.27, !llvm.loop !3

for.end38.27.loopexit:                            ; preds = %for.inc36.27
  %partial_sum.3.27.lcssa = phi float [ %partial_sum.3.27, %for.inc36.27 ]
  br label %for.end38.27

for.end38.27:                                     ; preds = %for.end38.27.loopexit, %for.cond8.preheader.27
  %partial_sum.0.lcssa.27 = phi float [ 0.000000e+00, %for.cond8.preheader.27 ], [ %partial_sum.3.27.lcssa, %for.end38.27.loopexit ]
  br i1 %tobool39, label %if.else.27, label %if.then40.27

if.then40.27:                                     ; preds = %for.end38.27
  %cmp41.27 = fcmp olt float %partial_sum.0.lcssa.27, 0.000000e+00
  %sub42.27 = fsub float -0.000000e+00, %partial_sum.0.lcssa.27
  %cond.27 = select i1 %cmp41.27, float %sub42.27, float %partial_sum.0.lcssa.27
  %conv.27 = fptoui float %cond.27 to i8
  %conv43.27 = uitofp i8 %conv.27 to float
  %1928 = add nsw i64 %indvars.iv20.27, %1915
  %arrayidx47.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1928
  store float %conv43.27, float* %arrayidx47.27, align 4
  br label %for.inc53.27

if.else.27:                                       ; preds = %for.end38.27
  %1929 = add nsw i64 %indvars.iv20.27, %1914
  %arrayidx51.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1929
  store float %partial_sum.0.lcssa.27, float* %arrayidx51.27, align 4
  br label %for.inc53.27

for.inc53.27:                                     ; preds = %if.else.27, %if.then40.27
  %inc54.27 = add nsw i32 %in_j.011.27, 1
  %indvars.iv.next21.27 = add nuw nsw i64 %indvars.iv20.27, 1
  br i1 %cmp94, label %for.end38.1.27, label %for.body10.1.27.preheader

for.body10.1.27.preheader:                        ; preds = %for.inc53.27
  br label %for.body10.1.27

for.body10.1.27:                                  ; preds = %for.body10.1.27.preheader, %for.inc36.1.27
  %ki.06.1.27 = phi i32 [ %inc37.1.27, %for.inc36.1.27 ], [ 0, %for.body10.1.27.preheader ]
  %partial_sum.05.1.27 = phi float [ %partial_sum.3.1.27, %for.inc36.1.27 ], [ 0.000000e+00, %for.body10.1.27.preheader ]
  %add.1.27 = add nsw i32 %ki.06.1.27, %inc58.26
  %notlhs.1.27 = icmp slt i32 %add.1.27, 0
  %notrhs.1.27 = icmp uge i32 %add.1.27, %img_height
  %.not.1.27 = or i1 %notrhs.1.27, %notlhs.1.27
  %brmerge.1.27 = or i1 %.not.1.27, %cmp151.not.1.27
  br i1 %brmerge.1.27, label %for.inc36.1.27, label %for.body16.lr.ph.1.27

for.body16.lr.ph.1.27:                            ; preds = %for.body10.1.27
  %mul.1.27 = shl i32 %add.1.27, 7
  %mul30.1.27 = mul i32 %ki.06.1.27, %kern_width
  br label %for.body16.1.27

for.body16.1.27:                                  ; preds = %for.inc.1.27, %for.body16.lr.ph.1.27
  %indvars.iv.1.27 = phi i64 [ 0, %for.body16.lr.ph.1.27 ], [ %indvars.iv.next.1.27, %for.inc.1.27 ]
  %partial_sum.12.1.27 = phi float [ %partial_sum.05.1.27, %for.body16.lr.ph.1.27 ], [ %partial_sum.2.1.27, %for.inc.1.27 ]
  %1930 = trunc i64 %indvars.iv.1.27 to i32
  %add17.1.27 = add nsw i32 %1930, %inc54.27
  %cmp18.1.27 = icmp sgt i32 %add17.1.27, -1
  %cmp21.1.27 = icmp ult i32 %add17.1.27, %img_width
  %1931 = and i1 %cmp18.1.27, %cmp21.1.27
  br i1 %1931, label %if.end26.1.27, label %for.inc.1.27

if.end26.1.27:                                    ; preds = %for.body16.1.27
  %add29.1.27 = add nsw i32 %add17.1.27, %mul.1.27
  %idxprom.1.27 = sext i32 %add29.1.27 to i64
  %arrayidx.1.27 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.27
  %1932 = load float, float* %arrayidx.1.27, align 4
  %1933 = trunc i64 %indvars.iv.1.27 to i32
  %add31.1.27 = add i32 %1933, %mul30.1.27
  %idxprom32.1.27 = zext i32 %add31.1.27 to i64
  %arrayidx33.1.27 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.27
  %1934 = load float, float* %arrayidx33.1.27, align 4
  %mul34.1.27 = fmul float %1932, %1934
  %add35.1.27 = fadd float %partial_sum.12.1.27, %mul34.1.27
  br label %for.inc.1.27

for.inc.1.27:                                     ; preds = %if.end26.1.27, %for.body16.1.27
  %partial_sum.2.1.27 = phi float [ %add35.1.27, %if.end26.1.27 ], [ %partial_sum.12.1.27, %for.body16.1.27 ]
  %indvars.iv.next.1.27 = add nuw nsw i64 %indvars.iv.1.27, 1
  %lftr.wideiv.1.27 = trunc i64 %indvars.iv.next.1.27 to i32
  %exitcond.1.27 = icmp eq i32 %lftr.wideiv.1.27, %kern_width
  br i1 %exitcond.1.27, label %for.inc36.1.27.loopexit, label %for.body16.1.27, !llvm.loop !1

for.inc36.1.27.loopexit:                          ; preds = %for.inc.1.27
  %partial_sum.2.1.27.lcssa = phi float [ %partial_sum.2.1.27, %for.inc.1.27 ]
  br label %for.inc36.1.27

for.inc36.1.27:                                   ; preds = %for.inc36.1.27.loopexit, %for.body10.1.27
  %partial_sum.3.1.27 = phi float [ %partial_sum.05.1.27, %for.body10.1.27 ], [ %partial_sum.2.1.27.lcssa, %for.inc36.1.27.loopexit ]
  %inc37.1.27 = add nuw nsw i32 %ki.06.1.27, 1
  %exitcond19.1.27 = icmp eq i32 %inc37.1.27, %kern_height
  br i1 %exitcond19.1.27, label %for.end38.1.27.loopexit, label %for.body10.1.27, !llvm.loop !3

for.end38.1.27.loopexit:                          ; preds = %for.inc36.1.27
  %partial_sum.3.1.27.lcssa = phi float [ %partial_sum.3.1.27, %for.inc36.1.27 ]
  br label %for.end38.1.27

for.end38.1.27:                                   ; preds = %for.end38.1.27.loopexit, %for.inc53.27
  %partial_sum.0.lcssa.1.27 = phi float [ 0.000000e+00, %for.inc53.27 ], [ %partial_sum.3.1.27.lcssa, %for.end38.1.27.loopexit ]
  br i1 %tobool39, label %if.else.1.27, label %if.then40.1.27

if.then40.1.27:                                   ; preds = %for.end38.1.27
  %cmp41.1.27 = fcmp olt float %partial_sum.0.lcssa.1.27, 0.000000e+00
  %sub42.1.27 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.27
  %cond.1.27 = select i1 %cmp41.1.27, float %sub42.1.27, float %partial_sum.0.lcssa.1.27
  %conv.1.27 = fptoui float %cond.1.27 to i8
  %conv43.1.27 = uitofp i8 %conv.1.27 to float
  %1935 = add nsw i64 %indvars.iv.next21.27, %1915
  %arrayidx47.1.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1935
  store float %conv43.1.27, float* %arrayidx47.1.27, align 4
  br label %for.inc53.1.27

if.else.1.27:                                     ; preds = %for.end38.1.27
  %1936 = add nsw i64 %indvars.iv.next21.27, %1914
  %arrayidx51.1.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1936
  store float %partial_sum.0.lcssa.1.27, float* %arrayidx51.1.27, align 4
  br label %for.inc53.1.27

for.inc53.1.27:                                   ; preds = %if.else.1.27, %if.then40.1.27
  %inc54.1.27 = add nsw i32 %in_j.011.27, 2
  %indvars.iv.next21.1.27 = add nsw i64 %indvars.iv20.27, 2
  br i1 %cmp94, label %for.end38.2.27, label %for.body10.2.27.preheader

for.body10.2.27.preheader:                        ; preds = %for.inc53.1.27
  br label %for.body10.2.27

for.body10.2.27:                                  ; preds = %for.body10.2.27.preheader, %for.inc36.2.27
  %ki.06.2.27 = phi i32 [ %inc37.2.27, %for.inc36.2.27 ], [ 0, %for.body10.2.27.preheader ]
  %partial_sum.05.2.27 = phi float [ %partial_sum.3.2.27, %for.inc36.2.27 ], [ 0.000000e+00, %for.body10.2.27.preheader ]
  %add.2.27 = add nsw i32 %ki.06.2.27, %inc58.26
  %notlhs.2.27 = icmp slt i32 %add.2.27, 0
  %notrhs.2.27 = icmp uge i32 %add.2.27, %img_height
  %.not.2.27 = or i1 %notrhs.2.27, %notlhs.2.27
  %brmerge.2.27 = or i1 %.not.2.27, %cmp151.not.2.27
  br i1 %brmerge.2.27, label %for.inc36.2.27, label %for.body16.lr.ph.2.27

for.body16.lr.ph.2.27:                            ; preds = %for.body10.2.27
  %mul.2.27 = shl i32 %add.2.27, 7
  %mul30.2.27 = mul i32 %ki.06.2.27, %kern_width
  br label %for.body16.2.27

for.body16.2.27:                                  ; preds = %for.inc.2.27, %for.body16.lr.ph.2.27
  %indvars.iv.2.27 = phi i64 [ 0, %for.body16.lr.ph.2.27 ], [ %indvars.iv.next.2.27, %for.inc.2.27 ]
  %partial_sum.12.2.27 = phi float [ %partial_sum.05.2.27, %for.body16.lr.ph.2.27 ], [ %partial_sum.2.2.27, %for.inc.2.27 ]
  %1937 = trunc i64 %indvars.iv.2.27 to i32
  %add17.2.27 = add nsw i32 %1937, %inc54.1.27
  %cmp18.2.27 = icmp sgt i32 %add17.2.27, -1
  %cmp21.2.27 = icmp ult i32 %add17.2.27, %img_width
  %1938 = and i1 %cmp18.2.27, %cmp21.2.27
  br i1 %1938, label %if.end26.2.27, label %for.inc.2.27

if.end26.2.27:                                    ; preds = %for.body16.2.27
  %add29.2.27 = add nsw i32 %add17.2.27, %mul.2.27
  %idxprom.2.27 = sext i32 %add29.2.27 to i64
  %arrayidx.2.27 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.27
  %1939 = load float, float* %arrayidx.2.27, align 4
  %1940 = trunc i64 %indvars.iv.2.27 to i32
  %add31.2.27 = add i32 %1940, %mul30.2.27
  %idxprom32.2.27 = zext i32 %add31.2.27 to i64
  %arrayidx33.2.27 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.27
  %1941 = load float, float* %arrayidx33.2.27, align 4
  %mul34.2.27 = fmul float %1939, %1941
  %add35.2.27 = fadd float %partial_sum.12.2.27, %mul34.2.27
  br label %for.inc.2.27

for.inc.2.27:                                     ; preds = %if.end26.2.27, %for.body16.2.27
  %partial_sum.2.2.27 = phi float [ %add35.2.27, %if.end26.2.27 ], [ %partial_sum.12.2.27, %for.body16.2.27 ]
  %indvars.iv.next.2.27 = add nuw nsw i64 %indvars.iv.2.27, 1
  %lftr.wideiv.2.27 = trunc i64 %indvars.iv.next.2.27 to i32
  %exitcond.2.27 = icmp eq i32 %lftr.wideiv.2.27, %kern_width
  br i1 %exitcond.2.27, label %for.inc36.2.27.loopexit, label %for.body16.2.27, !llvm.loop !1

for.inc36.2.27.loopexit:                          ; preds = %for.inc.2.27
  %partial_sum.2.2.27.lcssa = phi float [ %partial_sum.2.2.27, %for.inc.2.27 ]
  br label %for.inc36.2.27

for.inc36.2.27:                                   ; preds = %for.inc36.2.27.loopexit, %for.body10.2.27
  %partial_sum.3.2.27 = phi float [ %partial_sum.05.2.27, %for.body10.2.27 ], [ %partial_sum.2.2.27.lcssa, %for.inc36.2.27.loopexit ]
  %inc37.2.27 = add nuw nsw i32 %ki.06.2.27, 1
  %exitcond19.2.27 = icmp eq i32 %inc37.2.27, %kern_height
  br i1 %exitcond19.2.27, label %for.end38.2.27.loopexit, label %for.body10.2.27, !llvm.loop !3

for.end38.2.27.loopexit:                          ; preds = %for.inc36.2.27
  %partial_sum.3.2.27.lcssa = phi float [ %partial_sum.3.2.27, %for.inc36.2.27 ]
  br label %for.end38.2.27

for.end38.2.27:                                   ; preds = %for.end38.2.27.loopexit, %for.inc53.1.27
  %partial_sum.0.lcssa.2.27 = phi float [ 0.000000e+00, %for.inc53.1.27 ], [ %partial_sum.3.2.27.lcssa, %for.end38.2.27.loopexit ]
  br i1 %tobool39, label %if.else.2.27, label %if.then40.2.27

if.then40.2.27:                                   ; preds = %for.end38.2.27
  %cmp41.2.27 = fcmp olt float %partial_sum.0.lcssa.2.27, 0.000000e+00
  %sub42.2.27 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.27
  %cond.2.27 = select i1 %cmp41.2.27, float %sub42.2.27, float %partial_sum.0.lcssa.2.27
  %conv.2.27 = fptoui float %cond.2.27 to i8
  %conv43.2.27 = uitofp i8 %conv.2.27 to float
  %1942 = add nsw i64 %indvars.iv.next21.1.27, %1915
  %arrayidx47.2.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1942
  store float %conv43.2.27, float* %arrayidx47.2.27, align 4
  br label %for.inc53.2.27

if.else.2.27:                                     ; preds = %for.end38.2.27
  %1943 = add nsw i64 %indvars.iv.next21.1.27, %1914
  %arrayidx51.2.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1943
  store float %partial_sum.0.lcssa.2.27, float* %arrayidx51.2.27, align 4
  br label %for.inc53.2.27

for.inc53.2.27:                                   ; preds = %if.else.2.27, %if.then40.2.27
  %inc54.2.27 = add nsw i32 %in_j.011.27, 3
  %indvars.iv.next21.2.27 = add nsw i64 %indvars.iv20.27, 3
  br i1 %cmp94, label %for.end38.3.27, label %for.body10.3.27.preheader

for.body10.3.27.preheader:                        ; preds = %for.inc53.2.27
  br label %for.body10.3.27

for.body10.3.27:                                  ; preds = %for.body10.3.27.preheader, %for.inc36.3.27
  %ki.06.3.27 = phi i32 [ %inc37.3.27, %for.inc36.3.27 ], [ 0, %for.body10.3.27.preheader ]
  %partial_sum.05.3.27 = phi float [ %partial_sum.3.3.27, %for.inc36.3.27 ], [ 0.000000e+00, %for.body10.3.27.preheader ]
  %add.3.27 = add nsw i32 %ki.06.3.27, %inc58.26
  %notlhs.3.27 = icmp slt i32 %add.3.27, 0
  %notrhs.3.27 = icmp uge i32 %add.3.27, %img_height
  %.not.3.27 = or i1 %notrhs.3.27, %notlhs.3.27
  %brmerge.3.27 = or i1 %.not.3.27, %cmp151.not.3.27
  br i1 %brmerge.3.27, label %for.inc36.3.27, label %for.body16.lr.ph.3.27

for.body16.lr.ph.3.27:                            ; preds = %for.body10.3.27
  %mul.3.27 = shl i32 %add.3.27, 7
  %mul30.3.27 = mul i32 %ki.06.3.27, %kern_width
  br label %for.body16.3.27

for.body16.3.27:                                  ; preds = %for.inc.3.27, %for.body16.lr.ph.3.27
  %indvars.iv.3.27 = phi i64 [ 0, %for.body16.lr.ph.3.27 ], [ %indvars.iv.next.3.27, %for.inc.3.27 ]
  %partial_sum.12.3.27 = phi float [ %partial_sum.05.3.27, %for.body16.lr.ph.3.27 ], [ %partial_sum.2.3.27, %for.inc.3.27 ]
  %1944 = trunc i64 %indvars.iv.3.27 to i32
  %add17.3.27 = add nsw i32 %1944, %inc54.2.27
  %cmp18.3.27 = icmp sgt i32 %add17.3.27, -1
  %cmp21.3.27 = icmp ult i32 %add17.3.27, %img_width
  %1945 = and i1 %cmp18.3.27, %cmp21.3.27
  br i1 %1945, label %if.end26.3.27, label %for.inc.3.27

if.end26.3.27:                                    ; preds = %for.body16.3.27
  %add29.3.27 = add nsw i32 %add17.3.27, %mul.3.27
  %idxprom.3.27 = sext i32 %add29.3.27 to i64
  %arrayidx.3.27 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.27
  %1946 = load float, float* %arrayidx.3.27, align 4
  %1947 = trunc i64 %indvars.iv.3.27 to i32
  %add31.3.27 = add i32 %1947, %mul30.3.27
  %idxprom32.3.27 = zext i32 %add31.3.27 to i64
  %arrayidx33.3.27 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.27
  %1948 = load float, float* %arrayidx33.3.27, align 4
  %mul34.3.27 = fmul float %1946, %1948
  %add35.3.27 = fadd float %partial_sum.12.3.27, %mul34.3.27
  br label %for.inc.3.27

for.inc.3.27:                                     ; preds = %if.end26.3.27, %for.body16.3.27
  %partial_sum.2.3.27 = phi float [ %add35.3.27, %if.end26.3.27 ], [ %partial_sum.12.3.27, %for.body16.3.27 ]
  %indvars.iv.next.3.27 = add nuw nsw i64 %indvars.iv.3.27, 1
  %lftr.wideiv.3.27 = trunc i64 %indvars.iv.next.3.27 to i32
  %exitcond.3.27 = icmp eq i32 %lftr.wideiv.3.27, %kern_width
  br i1 %exitcond.3.27, label %for.inc36.3.27.loopexit, label %for.body16.3.27, !llvm.loop !1

for.inc36.3.27.loopexit:                          ; preds = %for.inc.3.27
  %partial_sum.2.3.27.lcssa = phi float [ %partial_sum.2.3.27, %for.inc.3.27 ]
  br label %for.inc36.3.27

for.inc36.3.27:                                   ; preds = %for.inc36.3.27.loopexit, %for.body10.3.27
  %partial_sum.3.3.27 = phi float [ %partial_sum.05.3.27, %for.body10.3.27 ], [ %partial_sum.2.3.27.lcssa, %for.inc36.3.27.loopexit ]
  %inc37.3.27 = add nuw nsw i32 %ki.06.3.27, 1
  %exitcond19.3.27 = icmp eq i32 %inc37.3.27, %kern_height
  br i1 %exitcond19.3.27, label %for.end38.3.27.loopexit, label %for.body10.3.27, !llvm.loop !3

for.end38.3.27.loopexit:                          ; preds = %for.inc36.3.27
  %partial_sum.3.3.27.lcssa = phi float [ %partial_sum.3.3.27, %for.inc36.3.27 ]
  br label %for.end38.3.27

for.end38.3.27:                                   ; preds = %for.end38.3.27.loopexit, %for.inc53.2.27
  %partial_sum.0.lcssa.3.27 = phi float [ 0.000000e+00, %for.inc53.2.27 ], [ %partial_sum.3.3.27.lcssa, %for.end38.3.27.loopexit ]
  br i1 %tobool39, label %if.else.3.27, label %if.then40.3.27

if.then40.3.27:                                   ; preds = %for.end38.3.27
  %cmp41.3.27 = fcmp olt float %partial_sum.0.lcssa.3.27, 0.000000e+00
  %sub42.3.27 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.27
  %cond.3.27 = select i1 %cmp41.3.27, float %sub42.3.27, float %partial_sum.0.lcssa.3.27
  %conv.3.27 = fptoui float %cond.3.27 to i8
  %conv43.3.27 = uitofp i8 %conv.3.27 to float
  %1949 = add nsw i64 %indvars.iv.next21.2.27, %1915
  %arrayidx47.3.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1949
  store float %conv43.3.27, float* %arrayidx47.3.27, align 4
  br label %for.inc53.3.27

if.else.3.27:                                     ; preds = %for.end38.3.27
  %1950 = add nsw i64 %indvars.iv.next21.2.27, %1914
  %arrayidx51.3.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1950
  store float %partial_sum.0.lcssa.3.27, float* %arrayidx51.3.27, align 4
  br label %for.inc53.3.27

for.inc53.3.27:                                   ; preds = %if.else.3.27, %if.then40.3.27
  %inc54.3.27 = add nsw i32 %in_j.011.27, 4
  %indvars.iv.next21.3.27 = add nsw i64 %indvars.iv20.27, 4
  br i1 %cmp94, label %for.end38.4.27, label %for.body10.4.27.preheader

for.body10.4.27.preheader:                        ; preds = %for.inc53.3.27
  br label %for.body10.4.27

for.body10.4.27:                                  ; preds = %for.body10.4.27.preheader, %for.inc36.4.27
  %ki.06.4.27 = phi i32 [ %inc37.4.27, %for.inc36.4.27 ], [ 0, %for.body10.4.27.preheader ]
  %partial_sum.05.4.27 = phi float [ %partial_sum.3.4.27, %for.inc36.4.27 ], [ 0.000000e+00, %for.body10.4.27.preheader ]
  %add.4.27 = add nsw i32 %ki.06.4.27, %inc58.26
  %notlhs.4.27 = icmp slt i32 %add.4.27, 0
  %notrhs.4.27 = icmp uge i32 %add.4.27, %img_height
  %.not.4.27 = or i1 %notrhs.4.27, %notlhs.4.27
  %brmerge.4.27 = or i1 %.not.4.27, %cmp151.not.4.27
  br i1 %brmerge.4.27, label %for.inc36.4.27, label %for.body16.lr.ph.4.27

for.body16.lr.ph.4.27:                            ; preds = %for.body10.4.27
  %mul.4.27 = shl i32 %add.4.27, 7
  %mul30.4.27 = mul i32 %ki.06.4.27, %kern_width
  br label %for.body16.4.27

for.body16.4.27:                                  ; preds = %for.inc.4.27, %for.body16.lr.ph.4.27
  %indvars.iv.4.27 = phi i64 [ 0, %for.body16.lr.ph.4.27 ], [ %indvars.iv.next.4.27, %for.inc.4.27 ]
  %partial_sum.12.4.27 = phi float [ %partial_sum.05.4.27, %for.body16.lr.ph.4.27 ], [ %partial_sum.2.4.27, %for.inc.4.27 ]
  %1951 = trunc i64 %indvars.iv.4.27 to i32
  %add17.4.27 = add nsw i32 %1951, %inc54.3.27
  %cmp18.4.27 = icmp sgt i32 %add17.4.27, -1
  %cmp21.4.27 = icmp ult i32 %add17.4.27, %img_width
  %1952 = and i1 %cmp18.4.27, %cmp21.4.27
  br i1 %1952, label %if.end26.4.27, label %for.inc.4.27

if.end26.4.27:                                    ; preds = %for.body16.4.27
  %add29.4.27 = add nsw i32 %add17.4.27, %mul.4.27
  %idxprom.4.27 = sext i32 %add29.4.27 to i64
  %arrayidx.4.27 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.27
  %1953 = load float, float* %arrayidx.4.27, align 4
  %1954 = trunc i64 %indvars.iv.4.27 to i32
  %add31.4.27 = add i32 %1954, %mul30.4.27
  %idxprom32.4.27 = zext i32 %add31.4.27 to i64
  %arrayidx33.4.27 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.27
  %1955 = load float, float* %arrayidx33.4.27, align 4
  %mul34.4.27 = fmul float %1953, %1955
  %add35.4.27 = fadd float %partial_sum.12.4.27, %mul34.4.27
  br label %for.inc.4.27

for.inc.4.27:                                     ; preds = %if.end26.4.27, %for.body16.4.27
  %partial_sum.2.4.27 = phi float [ %add35.4.27, %if.end26.4.27 ], [ %partial_sum.12.4.27, %for.body16.4.27 ]
  %indvars.iv.next.4.27 = add nuw nsw i64 %indvars.iv.4.27, 1
  %lftr.wideiv.4.27 = trunc i64 %indvars.iv.next.4.27 to i32
  %exitcond.4.27 = icmp eq i32 %lftr.wideiv.4.27, %kern_width
  br i1 %exitcond.4.27, label %for.inc36.4.27.loopexit, label %for.body16.4.27, !llvm.loop !1

for.inc36.4.27.loopexit:                          ; preds = %for.inc.4.27
  %partial_sum.2.4.27.lcssa = phi float [ %partial_sum.2.4.27, %for.inc.4.27 ]
  br label %for.inc36.4.27

for.inc36.4.27:                                   ; preds = %for.inc36.4.27.loopexit, %for.body10.4.27
  %partial_sum.3.4.27 = phi float [ %partial_sum.05.4.27, %for.body10.4.27 ], [ %partial_sum.2.4.27.lcssa, %for.inc36.4.27.loopexit ]
  %inc37.4.27 = add nuw nsw i32 %ki.06.4.27, 1
  %exitcond19.4.27 = icmp eq i32 %inc37.4.27, %kern_height
  br i1 %exitcond19.4.27, label %for.end38.4.27.loopexit, label %for.body10.4.27, !llvm.loop !3

for.end38.4.27.loopexit:                          ; preds = %for.inc36.4.27
  %partial_sum.3.4.27.lcssa = phi float [ %partial_sum.3.4.27, %for.inc36.4.27 ]
  br label %for.end38.4.27

for.end38.4.27:                                   ; preds = %for.end38.4.27.loopexit, %for.inc53.3.27
  %partial_sum.0.lcssa.4.27 = phi float [ 0.000000e+00, %for.inc53.3.27 ], [ %partial_sum.3.4.27.lcssa, %for.end38.4.27.loopexit ]
  br i1 %tobool39, label %if.else.4.27, label %if.then40.4.27

if.then40.4.27:                                   ; preds = %for.end38.4.27
  %cmp41.4.27 = fcmp olt float %partial_sum.0.lcssa.4.27, 0.000000e+00
  %sub42.4.27 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.27
  %cond.4.27 = select i1 %cmp41.4.27, float %sub42.4.27, float %partial_sum.0.lcssa.4.27
  %conv.4.27 = fptoui float %cond.4.27 to i8
  %conv43.4.27 = uitofp i8 %conv.4.27 to float
  %1956 = add nsw i64 %indvars.iv.next21.3.27, %1915
  %arrayidx47.4.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1956
  store float %conv43.4.27, float* %arrayidx47.4.27, align 4
  br label %for.inc53.4.27

if.else.4.27:                                     ; preds = %for.end38.4.27
  %1957 = add nsw i64 %indvars.iv.next21.3.27, %1914
  %arrayidx51.4.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1957
  store float %partial_sum.0.lcssa.4.27, float* %arrayidx51.4.27, align 4
  br label %for.inc53.4.27

for.inc53.4.27:                                   ; preds = %if.else.4.27, %if.then40.4.27
  %inc54.4.27 = add nsw i32 %in_j.011.27, 5
  %indvars.iv.next21.4.27 = add nsw i64 %indvars.iv20.27, 5
  br i1 %cmp94, label %for.end38.5.27, label %for.body10.5.27.preheader

for.body10.5.27.preheader:                        ; preds = %for.inc53.4.27
  br label %for.body10.5.27

for.body10.5.27:                                  ; preds = %for.body10.5.27.preheader, %for.inc36.5.27
  %ki.06.5.27 = phi i32 [ %inc37.5.27, %for.inc36.5.27 ], [ 0, %for.body10.5.27.preheader ]
  %partial_sum.05.5.27 = phi float [ %partial_sum.3.5.27, %for.inc36.5.27 ], [ 0.000000e+00, %for.body10.5.27.preheader ]
  %add.5.27 = add nsw i32 %ki.06.5.27, %inc58.26
  %notlhs.5.27 = icmp slt i32 %add.5.27, 0
  %notrhs.5.27 = icmp uge i32 %add.5.27, %img_height
  %.not.5.27 = or i1 %notrhs.5.27, %notlhs.5.27
  %brmerge.5.27 = or i1 %.not.5.27, %cmp151.not.5.27
  br i1 %brmerge.5.27, label %for.inc36.5.27, label %for.body16.lr.ph.5.27

for.body16.lr.ph.5.27:                            ; preds = %for.body10.5.27
  %mul.5.27 = shl i32 %add.5.27, 7
  %mul30.5.27 = mul i32 %ki.06.5.27, %kern_width
  br label %for.body16.5.27

for.body16.5.27:                                  ; preds = %for.inc.5.27, %for.body16.lr.ph.5.27
  %indvars.iv.5.27 = phi i64 [ 0, %for.body16.lr.ph.5.27 ], [ %indvars.iv.next.5.27, %for.inc.5.27 ]
  %partial_sum.12.5.27 = phi float [ %partial_sum.05.5.27, %for.body16.lr.ph.5.27 ], [ %partial_sum.2.5.27, %for.inc.5.27 ]
  %1958 = trunc i64 %indvars.iv.5.27 to i32
  %add17.5.27 = add nsw i32 %1958, %inc54.4.27
  %cmp18.5.27 = icmp sgt i32 %add17.5.27, -1
  %cmp21.5.27 = icmp ult i32 %add17.5.27, %img_width
  %1959 = and i1 %cmp18.5.27, %cmp21.5.27
  br i1 %1959, label %if.end26.5.27, label %for.inc.5.27

if.end26.5.27:                                    ; preds = %for.body16.5.27
  %add29.5.27 = add nsw i32 %add17.5.27, %mul.5.27
  %idxprom.5.27 = sext i32 %add29.5.27 to i64
  %arrayidx.5.27 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.27
  %1960 = load float, float* %arrayidx.5.27, align 4
  %1961 = trunc i64 %indvars.iv.5.27 to i32
  %add31.5.27 = add i32 %1961, %mul30.5.27
  %idxprom32.5.27 = zext i32 %add31.5.27 to i64
  %arrayidx33.5.27 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.27
  %1962 = load float, float* %arrayidx33.5.27, align 4
  %mul34.5.27 = fmul float %1960, %1962
  %add35.5.27 = fadd float %partial_sum.12.5.27, %mul34.5.27
  br label %for.inc.5.27

for.inc.5.27:                                     ; preds = %if.end26.5.27, %for.body16.5.27
  %partial_sum.2.5.27 = phi float [ %add35.5.27, %if.end26.5.27 ], [ %partial_sum.12.5.27, %for.body16.5.27 ]
  %indvars.iv.next.5.27 = add nuw nsw i64 %indvars.iv.5.27, 1
  %lftr.wideiv.5.27 = trunc i64 %indvars.iv.next.5.27 to i32
  %exitcond.5.27 = icmp eq i32 %lftr.wideiv.5.27, %kern_width
  br i1 %exitcond.5.27, label %for.inc36.5.27.loopexit, label %for.body16.5.27, !llvm.loop !1

for.inc36.5.27.loopexit:                          ; preds = %for.inc.5.27
  %partial_sum.2.5.27.lcssa = phi float [ %partial_sum.2.5.27, %for.inc.5.27 ]
  br label %for.inc36.5.27

for.inc36.5.27:                                   ; preds = %for.inc36.5.27.loopexit, %for.body10.5.27
  %partial_sum.3.5.27 = phi float [ %partial_sum.05.5.27, %for.body10.5.27 ], [ %partial_sum.2.5.27.lcssa, %for.inc36.5.27.loopexit ]
  %inc37.5.27 = add nuw nsw i32 %ki.06.5.27, 1
  %exitcond19.5.27 = icmp eq i32 %inc37.5.27, %kern_height
  br i1 %exitcond19.5.27, label %for.end38.5.27.loopexit, label %for.body10.5.27, !llvm.loop !3

for.end38.5.27.loopexit:                          ; preds = %for.inc36.5.27
  %partial_sum.3.5.27.lcssa = phi float [ %partial_sum.3.5.27, %for.inc36.5.27 ]
  br label %for.end38.5.27

for.end38.5.27:                                   ; preds = %for.end38.5.27.loopexit, %for.inc53.4.27
  %partial_sum.0.lcssa.5.27 = phi float [ 0.000000e+00, %for.inc53.4.27 ], [ %partial_sum.3.5.27.lcssa, %for.end38.5.27.loopexit ]
  br i1 %tobool39, label %if.else.5.27, label %if.then40.5.27

if.then40.5.27:                                   ; preds = %for.end38.5.27
  %cmp41.5.27 = fcmp olt float %partial_sum.0.lcssa.5.27, 0.000000e+00
  %sub42.5.27 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.27
  %cond.5.27 = select i1 %cmp41.5.27, float %sub42.5.27, float %partial_sum.0.lcssa.5.27
  %conv.5.27 = fptoui float %cond.5.27 to i8
  %conv43.5.27 = uitofp i8 %conv.5.27 to float
  %1963 = add nsw i64 %indvars.iv.next21.4.27, %1915
  %arrayidx47.5.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1963
  store float %conv43.5.27, float* %arrayidx47.5.27, align 4
  br label %for.inc53.5.27

if.else.5.27:                                     ; preds = %for.end38.5.27
  %1964 = add nsw i64 %indvars.iv.next21.4.27, %1914
  %arrayidx51.5.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1964
  store float %partial_sum.0.lcssa.5.27, float* %arrayidx51.5.27, align 4
  br label %for.inc53.5.27

for.inc53.5.27:                                   ; preds = %if.else.5.27, %if.then40.5.27
  %inc54.5.27 = add nsw i32 %in_j.011.27, 6
  %indvars.iv.next21.5.27 = add nsw i64 %indvars.iv20.27, 6
  br i1 %cmp94, label %for.end38.6.27, label %for.body10.6.27.preheader

for.body10.6.27.preheader:                        ; preds = %for.inc53.5.27
  br label %for.body10.6.27

for.body10.6.27:                                  ; preds = %for.body10.6.27.preheader, %for.inc36.6.27
  %ki.06.6.27 = phi i32 [ %inc37.6.27, %for.inc36.6.27 ], [ 0, %for.body10.6.27.preheader ]
  %partial_sum.05.6.27 = phi float [ %partial_sum.3.6.27, %for.inc36.6.27 ], [ 0.000000e+00, %for.body10.6.27.preheader ]
  %add.6.27 = add nsw i32 %ki.06.6.27, %inc58.26
  %notlhs.6.27 = icmp slt i32 %add.6.27, 0
  %notrhs.6.27 = icmp uge i32 %add.6.27, %img_height
  %.not.6.27 = or i1 %notrhs.6.27, %notlhs.6.27
  %brmerge.6.27 = or i1 %.not.6.27, %cmp151.not.6.27
  br i1 %brmerge.6.27, label %for.inc36.6.27, label %for.body16.lr.ph.6.27

for.body16.lr.ph.6.27:                            ; preds = %for.body10.6.27
  %mul.6.27 = shl i32 %add.6.27, 7
  %mul30.6.27 = mul i32 %ki.06.6.27, %kern_width
  br label %for.body16.6.27

for.body16.6.27:                                  ; preds = %for.inc.6.27, %for.body16.lr.ph.6.27
  %indvars.iv.6.27 = phi i64 [ 0, %for.body16.lr.ph.6.27 ], [ %indvars.iv.next.6.27, %for.inc.6.27 ]
  %partial_sum.12.6.27 = phi float [ %partial_sum.05.6.27, %for.body16.lr.ph.6.27 ], [ %partial_sum.2.6.27, %for.inc.6.27 ]
  %1965 = trunc i64 %indvars.iv.6.27 to i32
  %add17.6.27 = add nsw i32 %1965, %inc54.5.27
  %cmp18.6.27 = icmp sgt i32 %add17.6.27, -1
  %cmp21.6.27 = icmp ult i32 %add17.6.27, %img_width
  %1966 = and i1 %cmp18.6.27, %cmp21.6.27
  br i1 %1966, label %if.end26.6.27, label %for.inc.6.27

if.end26.6.27:                                    ; preds = %for.body16.6.27
  %add29.6.27 = add nsw i32 %add17.6.27, %mul.6.27
  %idxprom.6.27 = sext i32 %add29.6.27 to i64
  %arrayidx.6.27 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.27
  %1967 = load float, float* %arrayidx.6.27, align 4
  %1968 = trunc i64 %indvars.iv.6.27 to i32
  %add31.6.27 = add i32 %1968, %mul30.6.27
  %idxprom32.6.27 = zext i32 %add31.6.27 to i64
  %arrayidx33.6.27 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.27
  %1969 = load float, float* %arrayidx33.6.27, align 4
  %mul34.6.27 = fmul float %1967, %1969
  %add35.6.27 = fadd float %partial_sum.12.6.27, %mul34.6.27
  br label %for.inc.6.27

for.inc.6.27:                                     ; preds = %if.end26.6.27, %for.body16.6.27
  %partial_sum.2.6.27 = phi float [ %add35.6.27, %if.end26.6.27 ], [ %partial_sum.12.6.27, %for.body16.6.27 ]
  %indvars.iv.next.6.27 = add nuw nsw i64 %indvars.iv.6.27, 1
  %lftr.wideiv.6.27 = trunc i64 %indvars.iv.next.6.27 to i32
  %exitcond.6.27 = icmp eq i32 %lftr.wideiv.6.27, %kern_width
  br i1 %exitcond.6.27, label %for.inc36.6.27.loopexit, label %for.body16.6.27, !llvm.loop !1

for.inc36.6.27.loopexit:                          ; preds = %for.inc.6.27
  %partial_sum.2.6.27.lcssa = phi float [ %partial_sum.2.6.27, %for.inc.6.27 ]
  br label %for.inc36.6.27

for.inc36.6.27:                                   ; preds = %for.inc36.6.27.loopexit, %for.body10.6.27
  %partial_sum.3.6.27 = phi float [ %partial_sum.05.6.27, %for.body10.6.27 ], [ %partial_sum.2.6.27.lcssa, %for.inc36.6.27.loopexit ]
  %inc37.6.27 = add nuw nsw i32 %ki.06.6.27, 1
  %exitcond19.6.27 = icmp eq i32 %inc37.6.27, %kern_height
  br i1 %exitcond19.6.27, label %for.end38.6.27.loopexit, label %for.body10.6.27, !llvm.loop !3

for.end38.6.27.loopexit:                          ; preds = %for.inc36.6.27
  %partial_sum.3.6.27.lcssa = phi float [ %partial_sum.3.6.27, %for.inc36.6.27 ]
  br label %for.end38.6.27

for.end38.6.27:                                   ; preds = %for.end38.6.27.loopexit, %for.inc53.5.27
  %partial_sum.0.lcssa.6.27 = phi float [ 0.000000e+00, %for.inc53.5.27 ], [ %partial_sum.3.6.27.lcssa, %for.end38.6.27.loopexit ]
  br i1 %tobool39, label %if.else.6.27, label %if.then40.6.27

if.then40.6.27:                                   ; preds = %for.end38.6.27
  %cmp41.6.27 = fcmp olt float %partial_sum.0.lcssa.6.27, 0.000000e+00
  %sub42.6.27 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.27
  %cond.6.27 = select i1 %cmp41.6.27, float %sub42.6.27, float %partial_sum.0.lcssa.6.27
  %conv.6.27 = fptoui float %cond.6.27 to i8
  %conv43.6.27 = uitofp i8 %conv.6.27 to float
  %1970 = add nsw i64 %indvars.iv.next21.5.27, %1915
  %arrayidx47.6.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1970
  store float %conv43.6.27, float* %arrayidx47.6.27, align 4
  br label %for.inc53.6.27

if.else.6.27:                                     ; preds = %for.end38.6.27
  %1971 = add nsw i64 %indvars.iv.next21.5.27, %1914
  %arrayidx51.6.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1971
  store float %partial_sum.0.lcssa.6.27, float* %arrayidx51.6.27, align 4
  br label %for.inc53.6.27

for.inc53.6.27:                                   ; preds = %if.else.6.27, %if.then40.6.27
  %inc54.6.27 = add nsw i32 %in_j.011.27, 7
  %indvars.iv.next21.6.27 = add nsw i64 %indvars.iv20.27, 7
  br i1 %cmp94, label %for.end38.7.27, label %for.body10.7.27.preheader

for.body10.7.27.preheader:                        ; preds = %for.inc53.6.27
  br label %for.body10.7.27

for.body10.7.27:                                  ; preds = %for.body10.7.27.preheader, %for.inc36.7.27
  %ki.06.7.27 = phi i32 [ %inc37.7.27, %for.inc36.7.27 ], [ 0, %for.body10.7.27.preheader ]
  %partial_sum.05.7.27 = phi float [ %partial_sum.3.7.27, %for.inc36.7.27 ], [ 0.000000e+00, %for.body10.7.27.preheader ]
  %add.7.27 = add nsw i32 %ki.06.7.27, %inc58.26
  %notlhs.7.27 = icmp slt i32 %add.7.27, 0
  %notrhs.7.27 = icmp uge i32 %add.7.27, %img_height
  %.not.7.27 = or i1 %notrhs.7.27, %notlhs.7.27
  %brmerge.7.27 = or i1 %.not.7.27, %cmp151.not.7.27
  br i1 %brmerge.7.27, label %for.inc36.7.27, label %for.body16.lr.ph.7.27

for.body16.lr.ph.7.27:                            ; preds = %for.body10.7.27
  %mul.7.27 = shl i32 %add.7.27, 7
  %mul30.7.27 = mul i32 %ki.06.7.27, %kern_width
  br label %for.body16.7.27

for.body16.7.27:                                  ; preds = %for.inc.7.27, %for.body16.lr.ph.7.27
  %indvars.iv.7.27 = phi i64 [ 0, %for.body16.lr.ph.7.27 ], [ %indvars.iv.next.7.27, %for.inc.7.27 ]
  %partial_sum.12.7.27 = phi float [ %partial_sum.05.7.27, %for.body16.lr.ph.7.27 ], [ %partial_sum.2.7.27, %for.inc.7.27 ]
  %1972 = trunc i64 %indvars.iv.7.27 to i32
  %add17.7.27 = add nsw i32 %1972, %inc54.6.27
  %cmp18.7.27 = icmp sgt i32 %add17.7.27, -1
  %cmp21.7.27 = icmp ult i32 %add17.7.27, %img_width
  %1973 = and i1 %cmp18.7.27, %cmp21.7.27
  br i1 %1973, label %if.end26.7.27, label %for.inc.7.27

if.end26.7.27:                                    ; preds = %for.body16.7.27
  %add29.7.27 = add nsw i32 %add17.7.27, %mul.7.27
  %idxprom.7.27 = sext i32 %add29.7.27 to i64
  %arrayidx.7.27 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.27
  %1974 = load float, float* %arrayidx.7.27, align 4
  %1975 = trunc i64 %indvars.iv.7.27 to i32
  %add31.7.27 = add i32 %1975, %mul30.7.27
  %idxprom32.7.27 = zext i32 %add31.7.27 to i64
  %arrayidx33.7.27 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.27
  %1976 = load float, float* %arrayidx33.7.27, align 4
  %mul34.7.27 = fmul float %1974, %1976
  %add35.7.27 = fadd float %partial_sum.12.7.27, %mul34.7.27
  br label %for.inc.7.27

for.inc.7.27:                                     ; preds = %if.end26.7.27, %for.body16.7.27
  %partial_sum.2.7.27 = phi float [ %add35.7.27, %if.end26.7.27 ], [ %partial_sum.12.7.27, %for.body16.7.27 ]
  %indvars.iv.next.7.27 = add nuw nsw i64 %indvars.iv.7.27, 1
  %lftr.wideiv.7.27 = trunc i64 %indvars.iv.next.7.27 to i32
  %exitcond.7.27 = icmp eq i32 %lftr.wideiv.7.27, %kern_width
  br i1 %exitcond.7.27, label %for.inc36.7.27.loopexit, label %for.body16.7.27, !llvm.loop !1

for.inc36.7.27.loopexit:                          ; preds = %for.inc.7.27
  %partial_sum.2.7.27.lcssa = phi float [ %partial_sum.2.7.27, %for.inc.7.27 ]
  br label %for.inc36.7.27

for.inc36.7.27:                                   ; preds = %for.inc36.7.27.loopexit, %for.body10.7.27
  %partial_sum.3.7.27 = phi float [ %partial_sum.05.7.27, %for.body10.7.27 ], [ %partial_sum.2.7.27.lcssa, %for.inc36.7.27.loopexit ]
  %inc37.7.27 = add nuw nsw i32 %ki.06.7.27, 1
  %exitcond19.7.27 = icmp eq i32 %inc37.7.27, %kern_height
  br i1 %exitcond19.7.27, label %for.end38.7.27.loopexit, label %for.body10.7.27, !llvm.loop !3

for.end38.7.27.loopexit:                          ; preds = %for.inc36.7.27
  %partial_sum.3.7.27.lcssa = phi float [ %partial_sum.3.7.27, %for.inc36.7.27 ]
  br label %for.end38.7.27

for.end38.7.27:                                   ; preds = %for.end38.7.27.loopexit, %for.inc53.6.27
  %partial_sum.0.lcssa.7.27 = phi float [ 0.000000e+00, %for.inc53.6.27 ], [ %partial_sum.3.7.27.lcssa, %for.end38.7.27.loopexit ]
  br i1 %tobool39, label %if.else.7.27, label %if.then40.7.27

if.then40.7.27:                                   ; preds = %for.end38.7.27
  %cmp41.7.27 = fcmp olt float %partial_sum.0.lcssa.7.27, 0.000000e+00
  %sub42.7.27 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.27
  %cond.7.27 = select i1 %cmp41.7.27, float %sub42.7.27, float %partial_sum.0.lcssa.7.27
  %conv.7.27 = fptoui float %cond.7.27 to i8
  %conv43.7.27 = uitofp i8 %conv.7.27 to float
  %1977 = add nsw i64 %indvars.iv.next21.6.27, %1915
  %arrayidx47.7.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1977
  store float %conv43.7.27, float* %arrayidx47.7.27, align 4
  br label %for.inc53.7.27

if.else.7.27:                                     ; preds = %for.end38.7.27
  %1978 = add nsw i64 %indvars.iv.next21.6.27, %1914
  %arrayidx51.7.27 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1978
  store float %partial_sum.0.lcssa.7.27, float* %arrayidx51.7.27, align 4
  br label %for.inc53.7.27

for.inc53.7.27:                                   ; preds = %if.else.7.27, %if.then40.7.27
  %inc54.7.27 = add nsw i32 %in_j.011.27, 8
  %indvars.iv.next21.7.27 = add nsw i64 %indvars.iv20.27, 8
  %lftr.wideiv24.7.27 = trunc i64 %indvars.iv.next21.7.27 to i32
  %exitcond25.7.27 = icmp eq i32 %lftr.wideiv24.7.27, %img_width
  br i1 %exitcond25.7.27, label %for.inc57.27.loopexit, label %for.cond8.preheader.27, !llvm.loop !5

for.inc57.27.loopexit:                            ; preds = %for.inc53.7.27
  br label %for.inc57.27

for.inc57.27:                                     ; preds = %for.inc57.27.loopexit, %for.cond8.preheader.lr.ph.split.27
  %inc58.27 = add nsw i32 %in_i.015, 28
  %indvars.iv.next27.27 = add nsw i64 %indvars.iv26, 28
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.28

for.cond8.preheader.lr.ph.28:                     ; preds = %for.inc57.27
  %1979 = trunc i64 %indvars.iv.next27.27 to i32
  %mul48.28 = shl i32 %1979, 7
  %1980 = trunc i64 %indvars.iv.next27.27 to i32
  %mul44.28 = shl i32 %1980, 7
  %1981 = sext i32 %mul48.28 to i64
  %1982 = sext i32 %mul44.28 to i64
  br i1 %lcmp.mod.28, label %for.cond8.preheader.lr.ph.split.28, label %for.cond8.preheader.prol.28.preheader

for.cond8.preheader.prol.28.preheader:            ; preds = %for.cond8.preheader.lr.ph.28
  br label %for.cond8.preheader.prol.28

for.cond8.preheader.prol.28:                      ; preds = %for.cond8.preheader.prol.28.preheader, %for.inc53.prol.28
  %indvars.iv20.prol.28 = phi i64 [ %indvars.iv.next21.prol.28, %for.inc53.prol.28 ], [ 0, %for.cond8.preheader.prol.28.preheader ]
  %in_j.011.prol.28 = phi i32 [ %inc54.prol.28, %for.inc53.prol.28 ], [ %sub4, %for.cond8.preheader.prol.28.preheader ]
  %prol.iter.28 = phi i32 [ %prol.iter.sub.28, %for.inc53.prol.28 ], [ %xtraiter.28, %for.cond8.preheader.prol.28.preheader ]
  br i1 %cmp94, label %for.end38.prol.28, label %for.body10.prol.28.preheader

for.body10.prol.28.preheader:                     ; preds = %for.cond8.preheader.prol.28
  br label %for.body10.prol.28

for.body10.prol.28:                               ; preds = %for.body10.prol.28.preheader, %for.inc36.prol.28
  %ki.06.prol.28 = phi i32 [ %inc37.prol.28, %for.inc36.prol.28 ], [ 0, %for.body10.prol.28.preheader ]
  %partial_sum.05.prol.28 = phi float [ %partial_sum.3.prol.28, %for.inc36.prol.28 ], [ 0.000000e+00, %for.body10.prol.28.preheader ]
  %add.prol.28 = add nsw i32 %ki.06.prol.28, %inc58.27
  %notlhs.prol.28 = icmp slt i32 %add.prol.28, 0
  %notrhs.prol.28 = icmp uge i32 %add.prol.28, %img_height
  %.not.prol.28 = or i1 %notrhs.prol.28, %notlhs.prol.28
  %brmerge.prol.28 = or i1 %.not.prol.28, %cmp151.not.prol.28
  br i1 %brmerge.prol.28, label %for.inc36.prol.28, label %for.body16.lr.ph.prol.28

for.body16.lr.ph.prol.28:                         ; preds = %for.body10.prol.28
  %mul.prol.28 = shl i32 %add.prol.28, 7
  %mul30.prol.28 = mul i32 %ki.06.prol.28, %kern_width
  br label %for.body16.prol.28

for.body16.prol.28:                               ; preds = %for.inc.prol.28, %for.body16.lr.ph.prol.28
  %indvars.iv.prol.28 = phi i64 [ 0, %for.body16.lr.ph.prol.28 ], [ %indvars.iv.next.prol.28, %for.inc.prol.28 ]
  %partial_sum.12.prol.28 = phi float [ %partial_sum.05.prol.28, %for.body16.lr.ph.prol.28 ], [ %partial_sum.2.prol.28, %for.inc.prol.28 ]
  %1983 = trunc i64 %indvars.iv.prol.28 to i32
  %add17.prol.28 = add nsw i32 %1983, %in_j.011.prol.28
  %cmp18.prol.28 = icmp sgt i32 %add17.prol.28, -1
  %cmp21.prol.28 = icmp ult i32 %add17.prol.28, %img_width
  %1984 = and i1 %cmp18.prol.28, %cmp21.prol.28
  br i1 %1984, label %if.end26.prol.28, label %for.inc.prol.28

if.end26.prol.28:                                 ; preds = %for.body16.prol.28
  %add29.prol.28 = add nsw i32 %add17.prol.28, %mul.prol.28
  %idxprom.prol.28 = sext i32 %add29.prol.28 to i64
  %arrayidx.prol.28 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.28
  %1985 = load float, float* %arrayidx.prol.28, align 4
  %1986 = trunc i64 %indvars.iv.prol.28 to i32
  %add31.prol.28 = add i32 %1986, %mul30.prol.28
  %idxprom32.prol.28 = zext i32 %add31.prol.28 to i64
  %arrayidx33.prol.28 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.28
  %1987 = load float, float* %arrayidx33.prol.28, align 4
  %mul34.prol.28 = fmul float %1985, %1987
  %add35.prol.28 = fadd float %partial_sum.12.prol.28, %mul34.prol.28
  br label %for.inc.prol.28

for.inc.prol.28:                                  ; preds = %if.end26.prol.28, %for.body16.prol.28
  %partial_sum.2.prol.28 = phi float [ %add35.prol.28, %if.end26.prol.28 ], [ %partial_sum.12.prol.28, %for.body16.prol.28 ]
  %indvars.iv.next.prol.28 = add nuw nsw i64 %indvars.iv.prol.28, 1
  %lftr.wideiv.prol.28 = trunc i64 %indvars.iv.next.prol.28 to i32
  %exitcond.prol.28 = icmp eq i32 %lftr.wideiv.prol.28, %kern_width
  br i1 %exitcond.prol.28, label %for.inc36.prol.28.loopexit, label %for.body16.prol.28, !llvm.loop !1

for.inc36.prol.28.loopexit:                       ; preds = %for.inc.prol.28
  %partial_sum.2.prol.28.lcssa = phi float [ %partial_sum.2.prol.28, %for.inc.prol.28 ]
  br label %for.inc36.prol.28

for.inc36.prol.28:                                ; preds = %for.inc36.prol.28.loopexit, %for.body10.prol.28
  %partial_sum.3.prol.28 = phi float [ %partial_sum.05.prol.28, %for.body10.prol.28 ], [ %partial_sum.2.prol.28.lcssa, %for.inc36.prol.28.loopexit ]
  %inc37.prol.28 = add nuw nsw i32 %ki.06.prol.28, 1
  %exitcond19.prol.28 = icmp eq i32 %inc37.prol.28, %kern_height
  br i1 %exitcond19.prol.28, label %for.end38.prol.28.loopexit, label %for.body10.prol.28, !llvm.loop !3

for.end38.prol.28.loopexit:                       ; preds = %for.inc36.prol.28
  %partial_sum.3.prol.28.lcssa = phi float [ %partial_sum.3.prol.28, %for.inc36.prol.28 ]
  br label %for.end38.prol.28

for.end38.prol.28:                                ; preds = %for.end38.prol.28.loopexit, %for.cond8.preheader.prol.28
  %partial_sum.0.lcssa.prol.28 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.28 ], [ %partial_sum.3.prol.28.lcssa, %for.end38.prol.28.loopexit ]
  br i1 %tobool39, label %if.else.prol.28, label %if.then40.prol.28

if.then40.prol.28:                                ; preds = %for.end38.prol.28
  %cmp41.prol.28 = fcmp olt float %partial_sum.0.lcssa.prol.28, 0.000000e+00
  %sub42.prol.28 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.28
  %cond.prol.28 = select i1 %cmp41.prol.28, float %sub42.prol.28, float %partial_sum.0.lcssa.prol.28
  %conv.prol.28 = fptoui float %cond.prol.28 to i8
  %conv43.prol.28 = uitofp i8 %conv.prol.28 to float
  %1988 = add nsw i64 %indvars.iv20.prol.28, %1982
  %arrayidx47.prol.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1988
  store float %conv43.prol.28, float* %arrayidx47.prol.28, align 4
  br label %for.inc53.prol.28

if.else.prol.28:                                  ; preds = %for.end38.prol.28
  %1989 = add nsw i64 %indvars.iv20.prol.28, %1981
  %arrayidx51.prol.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1989
  store float %partial_sum.0.lcssa.prol.28, float* %arrayidx51.prol.28, align 4
  br label %for.inc53.prol.28

for.inc53.prol.28:                                ; preds = %if.else.prol.28, %if.then40.prol.28
  %inc54.prol.28 = add nsw i32 %in_j.011.prol.28, 1
  %indvars.iv.next21.prol.28 = add nuw nsw i64 %indvars.iv20.prol.28, 1
  %prol.iter.sub.28 = add i32 %prol.iter.28, -1
  %prol.iter.cmp.28 = icmp eq i32 %prol.iter.sub.28, 0
  br i1 %prol.iter.cmp.28, label %for.cond8.preheader.lr.ph.split.28.loopexit, label %for.cond8.preheader.prol.28, !llvm.loop !4

for.cond8.preheader.lr.ph.split.28.loopexit:      ; preds = %for.inc53.prol.28
  %indvars.iv.next21.prol.28.lcssa = phi i64 [ %indvars.iv.next21.prol.28, %for.inc53.prol.28 ]
  %inc54.prol.28.lcssa = phi i32 [ %inc54.prol.28, %for.inc53.prol.28 ]
  br label %for.cond8.preheader.lr.ph.split.28

for.cond8.preheader.lr.ph.split.28:               ; preds = %for.cond8.preheader.lr.ph.split.28.loopexit, %for.cond8.preheader.lr.ph.28
  %indvars.iv20.unr.28 = phi i64 [ 0, %for.cond8.preheader.lr.ph.28 ], [ %indvars.iv.next21.prol.28.lcssa, %for.cond8.preheader.lr.ph.split.28.loopexit ]
  %in_j.011.unr.28 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.28 ], [ %inc54.prol.28.lcssa, %for.cond8.preheader.lr.ph.split.28.loopexit ]
  br i1 %99, label %for.inc57.28, label %for.cond8.preheader.28.preheader

for.cond8.preheader.28.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.28
  br label %for.cond8.preheader.28

for.cond8.preheader.28:                           ; preds = %for.cond8.preheader.28.preheader, %for.inc53.7.28
  %indvars.iv20.28 = phi i64 [ %indvars.iv.next21.7.28, %for.inc53.7.28 ], [ %indvars.iv20.unr.28, %for.cond8.preheader.28.preheader ]
  %in_j.011.28 = phi i32 [ %inc54.7.28, %for.inc53.7.28 ], [ %in_j.011.unr.28, %for.cond8.preheader.28.preheader ]
  br i1 %cmp94, label %for.end38.28, label %for.body10.28.preheader

for.body10.28.preheader:                          ; preds = %for.cond8.preheader.28
  br label %for.body10.28

for.body10.28:                                    ; preds = %for.body10.28.preheader, %for.inc36.28
  %ki.06.28 = phi i32 [ %inc37.28, %for.inc36.28 ], [ 0, %for.body10.28.preheader ]
  %partial_sum.05.28 = phi float [ %partial_sum.3.28, %for.inc36.28 ], [ 0.000000e+00, %for.body10.28.preheader ]
  %add.28 = add nsw i32 %ki.06.28, %inc58.27
  %notlhs.28 = icmp slt i32 %add.28, 0
  %notrhs.28 = icmp uge i32 %add.28, %img_height
  %.not.28 = or i1 %notrhs.28, %notlhs.28
  %brmerge.28 = or i1 %.not.28, %cmp151.not.28
  br i1 %brmerge.28, label %for.inc36.28, label %for.body16.lr.ph.28

for.body16.lr.ph.28:                              ; preds = %for.body10.28
  %mul.28 = shl i32 %add.28, 7
  %mul30.28 = mul i32 %ki.06.28, %kern_width
  br label %for.body16.28

for.body16.28:                                    ; preds = %for.inc.28, %for.body16.lr.ph.28
  %indvars.iv.28 = phi i64 [ 0, %for.body16.lr.ph.28 ], [ %indvars.iv.next.28, %for.inc.28 ]
  %partial_sum.12.28 = phi float [ %partial_sum.05.28, %for.body16.lr.ph.28 ], [ %partial_sum.2.28, %for.inc.28 ]
  %1990 = trunc i64 %indvars.iv.28 to i32
  %add17.28 = add nsw i32 %1990, %in_j.011.28
  %cmp18.28 = icmp sgt i32 %add17.28, -1
  %cmp21.28 = icmp ult i32 %add17.28, %img_width
  %1991 = and i1 %cmp18.28, %cmp21.28
  br i1 %1991, label %if.end26.28, label %for.inc.28

if.end26.28:                                      ; preds = %for.body16.28
  %add29.28 = add nsw i32 %add17.28, %mul.28
  %idxprom.28 = sext i32 %add29.28 to i64
  %arrayidx.28 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.28
  %1992 = load float, float* %arrayidx.28, align 4
  %1993 = trunc i64 %indvars.iv.28 to i32
  %add31.28 = add i32 %1993, %mul30.28
  %idxprom32.28 = zext i32 %add31.28 to i64
  %arrayidx33.28 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.28
  %1994 = load float, float* %arrayidx33.28, align 4
  %mul34.28 = fmul float %1992, %1994
  %add35.28 = fadd float %partial_sum.12.28, %mul34.28
  br label %for.inc.28

for.inc.28:                                       ; preds = %if.end26.28, %for.body16.28
  %partial_sum.2.28 = phi float [ %add35.28, %if.end26.28 ], [ %partial_sum.12.28, %for.body16.28 ]
  %indvars.iv.next.28 = add nuw nsw i64 %indvars.iv.28, 1
  %lftr.wideiv.28 = trunc i64 %indvars.iv.next.28 to i32
  %exitcond.28 = icmp eq i32 %lftr.wideiv.28, %kern_width
  br i1 %exitcond.28, label %for.inc36.28.loopexit, label %for.body16.28, !llvm.loop !1

for.inc36.28.loopexit:                            ; preds = %for.inc.28
  %partial_sum.2.28.lcssa = phi float [ %partial_sum.2.28, %for.inc.28 ]
  br label %for.inc36.28

for.inc36.28:                                     ; preds = %for.inc36.28.loopexit, %for.body10.28
  %partial_sum.3.28 = phi float [ %partial_sum.05.28, %for.body10.28 ], [ %partial_sum.2.28.lcssa, %for.inc36.28.loopexit ]
  %inc37.28 = add nuw nsw i32 %ki.06.28, 1
  %exitcond19.28 = icmp eq i32 %inc37.28, %kern_height
  br i1 %exitcond19.28, label %for.end38.28.loopexit, label %for.body10.28, !llvm.loop !3

for.end38.28.loopexit:                            ; preds = %for.inc36.28
  %partial_sum.3.28.lcssa = phi float [ %partial_sum.3.28, %for.inc36.28 ]
  br label %for.end38.28

for.end38.28:                                     ; preds = %for.end38.28.loopexit, %for.cond8.preheader.28
  %partial_sum.0.lcssa.28 = phi float [ 0.000000e+00, %for.cond8.preheader.28 ], [ %partial_sum.3.28.lcssa, %for.end38.28.loopexit ]
  br i1 %tobool39, label %if.else.28, label %if.then40.28

if.then40.28:                                     ; preds = %for.end38.28
  %cmp41.28 = fcmp olt float %partial_sum.0.lcssa.28, 0.000000e+00
  %sub42.28 = fsub float -0.000000e+00, %partial_sum.0.lcssa.28
  %cond.28 = select i1 %cmp41.28, float %sub42.28, float %partial_sum.0.lcssa.28
  %conv.28 = fptoui float %cond.28 to i8
  %conv43.28 = uitofp i8 %conv.28 to float
  %1995 = add nsw i64 %indvars.iv20.28, %1982
  %arrayidx47.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1995
  store float %conv43.28, float* %arrayidx47.28, align 4
  br label %for.inc53.28

if.else.28:                                       ; preds = %for.end38.28
  %1996 = add nsw i64 %indvars.iv20.28, %1981
  %arrayidx51.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %1996
  store float %partial_sum.0.lcssa.28, float* %arrayidx51.28, align 4
  br label %for.inc53.28

for.inc53.28:                                     ; preds = %if.else.28, %if.then40.28
  %inc54.28 = add nsw i32 %in_j.011.28, 1
  %indvars.iv.next21.28 = add nuw nsw i64 %indvars.iv20.28, 1
  br i1 %cmp94, label %for.end38.1.28, label %for.body10.1.28.preheader

for.body10.1.28.preheader:                        ; preds = %for.inc53.28
  br label %for.body10.1.28

for.body10.1.28:                                  ; preds = %for.body10.1.28.preheader, %for.inc36.1.28
  %ki.06.1.28 = phi i32 [ %inc37.1.28, %for.inc36.1.28 ], [ 0, %for.body10.1.28.preheader ]
  %partial_sum.05.1.28 = phi float [ %partial_sum.3.1.28, %for.inc36.1.28 ], [ 0.000000e+00, %for.body10.1.28.preheader ]
  %add.1.28 = add nsw i32 %ki.06.1.28, %inc58.27
  %notlhs.1.28 = icmp slt i32 %add.1.28, 0
  %notrhs.1.28 = icmp uge i32 %add.1.28, %img_height
  %.not.1.28 = or i1 %notrhs.1.28, %notlhs.1.28
  %brmerge.1.28 = or i1 %.not.1.28, %cmp151.not.1.28
  br i1 %brmerge.1.28, label %for.inc36.1.28, label %for.body16.lr.ph.1.28

for.body16.lr.ph.1.28:                            ; preds = %for.body10.1.28
  %mul.1.28 = shl i32 %add.1.28, 7
  %mul30.1.28 = mul i32 %ki.06.1.28, %kern_width
  br label %for.body16.1.28

for.body16.1.28:                                  ; preds = %for.inc.1.28, %for.body16.lr.ph.1.28
  %indvars.iv.1.28 = phi i64 [ 0, %for.body16.lr.ph.1.28 ], [ %indvars.iv.next.1.28, %for.inc.1.28 ]
  %partial_sum.12.1.28 = phi float [ %partial_sum.05.1.28, %for.body16.lr.ph.1.28 ], [ %partial_sum.2.1.28, %for.inc.1.28 ]
  %1997 = trunc i64 %indvars.iv.1.28 to i32
  %add17.1.28 = add nsw i32 %1997, %inc54.28
  %cmp18.1.28 = icmp sgt i32 %add17.1.28, -1
  %cmp21.1.28 = icmp ult i32 %add17.1.28, %img_width
  %1998 = and i1 %cmp18.1.28, %cmp21.1.28
  br i1 %1998, label %if.end26.1.28, label %for.inc.1.28

if.end26.1.28:                                    ; preds = %for.body16.1.28
  %add29.1.28 = add nsw i32 %add17.1.28, %mul.1.28
  %idxprom.1.28 = sext i32 %add29.1.28 to i64
  %arrayidx.1.28 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.28
  %1999 = load float, float* %arrayidx.1.28, align 4
  %2000 = trunc i64 %indvars.iv.1.28 to i32
  %add31.1.28 = add i32 %2000, %mul30.1.28
  %idxprom32.1.28 = zext i32 %add31.1.28 to i64
  %arrayidx33.1.28 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.28
  %2001 = load float, float* %arrayidx33.1.28, align 4
  %mul34.1.28 = fmul float %1999, %2001
  %add35.1.28 = fadd float %partial_sum.12.1.28, %mul34.1.28
  br label %for.inc.1.28

for.inc.1.28:                                     ; preds = %if.end26.1.28, %for.body16.1.28
  %partial_sum.2.1.28 = phi float [ %add35.1.28, %if.end26.1.28 ], [ %partial_sum.12.1.28, %for.body16.1.28 ]
  %indvars.iv.next.1.28 = add nuw nsw i64 %indvars.iv.1.28, 1
  %lftr.wideiv.1.28 = trunc i64 %indvars.iv.next.1.28 to i32
  %exitcond.1.28 = icmp eq i32 %lftr.wideiv.1.28, %kern_width
  br i1 %exitcond.1.28, label %for.inc36.1.28.loopexit, label %for.body16.1.28, !llvm.loop !1

for.inc36.1.28.loopexit:                          ; preds = %for.inc.1.28
  %partial_sum.2.1.28.lcssa = phi float [ %partial_sum.2.1.28, %for.inc.1.28 ]
  br label %for.inc36.1.28

for.inc36.1.28:                                   ; preds = %for.inc36.1.28.loopexit, %for.body10.1.28
  %partial_sum.3.1.28 = phi float [ %partial_sum.05.1.28, %for.body10.1.28 ], [ %partial_sum.2.1.28.lcssa, %for.inc36.1.28.loopexit ]
  %inc37.1.28 = add nuw nsw i32 %ki.06.1.28, 1
  %exitcond19.1.28 = icmp eq i32 %inc37.1.28, %kern_height
  br i1 %exitcond19.1.28, label %for.end38.1.28.loopexit, label %for.body10.1.28, !llvm.loop !3

for.end38.1.28.loopexit:                          ; preds = %for.inc36.1.28
  %partial_sum.3.1.28.lcssa = phi float [ %partial_sum.3.1.28, %for.inc36.1.28 ]
  br label %for.end38.1.28

for.end38.1.28:                                   ; preds = %for.end38.1.28.loopexit, %for.inc53.28
  %partial_sum.0.lcssa.1.28 = phi float [ 0.000000e+00, %for.inc53.28 ], [ %partial_sum.3.1.28.lcssa, %for.end38.1.28.loopexit ]
  br i1 %tobool39, label %if.else.1.28, label %if.then40.1.28

if.then40.1.28:                                   ; preds = %for.end38.1.28
  %cmp41.1.28 = fcmp olt float %partial_sum.0.lcssa.1.28, 0.000000e+00
  %sub42.1.28 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.28
  %cond.1.28 = select i1 %cmp41.1.28, float %sub42.1.28, float %partial_sum.0.lcssa.1.28
  %conv.1.28 = fptoui float %cond.1.28 to i8
  %conv43.1.28 = uitofp i8 %conv.1.28 to float
  %2002 = add nsw i64 %indvars.iv.next21.28, %1982
  %arrayidx47.1.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2002
  store float %conv43.1.28, float* %arrayidx47.1.28, align 4
  br label %for.inc53.1.28

if.else.1.28:                                     ; preds = %for.end38.1.28
  %2003 = add nsw i64 %indvars.iv.next21.28, %1981
  %arrayidx51.1.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2003
  store float %partial_sum.0.lcssa.1.28, float* %arrayidx51.1.28, align 4
  br label %for.inc53.1.28

for.inc53.1.28:                                   ; preds = %if.else.1.28, %if.then40.1.28
  %inc54.1.28 = add nsw i32 %in_j.011.28, 2
  %indvars.iv.next21.1.28 = add nsw i64 %indvars.iv20.28, 2
  br i1 %cmp94, label %for.end38.2.28, label %for.body10.2.28.preheader

for.body10.2.28.preheader:                        ; preds = %for.inc53.1.28
  br label %for.body10.2.28

for.body10.2.28:                                  ; preds = %for.body10.2.28.preheader, %for.inc36.2.28
  %ki.06.2.28 = phi i32 [ %inc37.2.28, %for.inc36.2.28 ], [ 0, %for.body10.2.28.preheader ]
  %partial_sum.05.2.28 = phi float [ %partial_sum.3.2.28, %for.inc36.2.28 ], [ 0.000000e+00, %for.body10.2.28.preheader ]
  %add.2.28 = add nsw i32 %ki.06.2.28, %inc58.27
  %notlhs.2.28 = icmp slt i32 %add.2.28, 0
  %notrhs.2.28 = icmp uge i32 %add.2.28, %img_height
  %.not.2.28 = or i1 %notrhs.2.28, %notlhs.2.28
  %brmerge.2.28 = or i1 %.not.2.28, %cmp151.not.2.28
  br i1 %brmerge.2.28, label %for.inc36.2.28, label %for.body16.lr.ph.2.28

for.body16.lr.ph.2.28:                            ; preds = %for.body10.2.28
  %mul.2.28 = shl i32 %add.2.28, 7
  %mul30.2.28 = mul i32 %ki.06.2.28, %kern_width
  br label %for.body16.2.28

for.body16.2.28:                                  ; preds = %for.inc.2.28, %for.body16.lr.ph.2.28
  %indvars.iv.2.28 = phi i64 [ 0, %for.body16.lr.ph.2.28 ], [ %indvars.iv.next.2.28, %for.inc.2.28 ]
  %partial_sum.12.2.28 = phi float [ %partial_sum.05.2.28, %for.body16.lr.ph.2.28 ], [ %partial_sum.2.2.28, %for.inc.2.28 ]
  %2004 = trunc i64 %indvars.iv.2.28 to i32
  %add17.2.28 = add nsw i32 %2004, %inc54.1.28
  %cmp18.2.28 = icmp sgt i32 %add17.2.28, -1
  %cmp21.2.28 = icmp ult i32 %add17.2.28, %img_width
  %2005 = and i1 %cmp18.2.28, %cmp21.2.28
  br i1 %2005, label %if.end26.2.28, label %for.inc.2.28

if.end26.2.28:                                    ; preds = %for.body16.2.28
  %add29.2.28 = add nsw i32 %add17.2.28, %mul.2.28
  %idxprom.2.28 = sext i32 %add29.2.28 to i64
  %arrayidx.2.28 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.28
  %2006 = load float, float* %arrayidx.2.28, align 4
  %2007 = trunc i64 %indvars.iv.2.28 to i32
  %add31.2.28 = add i32 %2007, %mul30.2.28
  %idxprom32.2.28 = zext i32 %add31.2.28 to i64
  %arrayidx33.2.28 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.28
  %2008 = load float, float* %arrayidx33.2.28, align 4
  %mul34.2.28 = fmul float %2006, %2008
  %add35.2.28 = fadd float %partial_sum.12.2.28, %mul34.2.28
  br label %for.inc.2.28

for.inc.2.28:                                     ; preds = %if.end26.2.28, %for.body16.2.28
  %partial_sum.2.2.28 = phi float [ %add35.2.28, %if.end26.2.28 ], [ %partial_sum.12.2.28, %for.body16.2.28 ]
  %indvars.iv.next.2.28 = add nuw nsw i64 %indvars.iv.2.28, 1
  %lftr.wideiv.2.28 = trunc i64 %indvars.iv.next.2.28 to i32
  %exitcond.2.28 = icmp eq i32 %lftr.wideiv.2.28, %kern_width
  br i1 %exitcond.2.28, label %for.inc36.2.28.loopexit, label %for.body16.2.28, !llvm.loop !1

for.inc36.2.28.loopexit:                          ; preds = %for.inc.2.28
  %partial_sum.2.2.28.lcssa = phi float [ %partial_sum.2.2.28, %for.inc.2.28 ]
  br label %for.inc36.2.28

for.inc36.2.28:                                   ; preds = %for.inc36.2.28.loopexit, %for.body10.2.28
  %partial_sum.3.2.28 = phi float [ %partial_sum.05.2.28, %for.body10.2.28 ], [ %partial_sum.2.2.28.lcssa, %for.inc36.2.28.loopexit ]
  %inc37.2.28 = add nuw nsw i32 %ki.06.2.28, 1
  %exitcond19.2.28 = icmp eq i32 %inc37.2.28, %kern_height
  br i1 %exitcond19.2.28, label %for.end38.2.28.loopexit, label %for.body10.2.28, !llvm.loop !3

for.end38.2.28.loopexit:                          ; preds = %for.inc36.2.28
  %partial_sum.3.2.28.lcssa = phi float [ %partial_sum.3.2.28, %for.inc36.2.28 ]
  br label %for.end38.2.28

for.end38.2.28:                                   ; preds = %for.end38.2.28.loopexit, %for.inc53.1.28
  %partial_sum.0.lcssa.2.28 = phi float [ 0.000000e+00, %for.inc53.1.28 ], [ %partial_sum.3.2.28.lcssa, %for.end38.2.28.loopexit ]
  br i1 %tobool39, label %if.else.2.28, label %if.then40.2.28

if.then40.2.28:                                   ; preds = %for.end38.2.28
  %cmp41.2.28 = fcmp olt float %partial_sum.0.lcssa.2.28, 0.000000e+00
  %sub42.2.28 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.28
  %cond.2.28 = select i1 %cmp41.2.28, float %sub42.2.28, float %partial_sum.0.lcssa.2.28
  %conv.2.28 = fptoui float %cond.2.28 to i8
  %conv43.2.28 = uitofp i8 %conv.2.28 to float
  %2009 = add nsw i64 %indvars.iv.next21.1.28, %1982
  %arrayidx47.2.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2009
  store float %conv43.2.28, float* %arrayidx47.2.28, align 4
  br label %for.inc53.2.28

if.else.2.28:                                     ; preds = %for.end38.2.28
  %2010 = add nsw i64 %indvars.iv.next21.1.28, %1981
  %arrayidx51.2.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2010
  store float %partial_sum.0.lcssa.2.28, float* %arrayidx51.2.28, align 4
  br label %for.inc53.2.28

for.inc53.2.28:                                   ; preds = %if.else.2.28, %if.then40.2.28
  %inc54.2.28 = add nsw i32 %in_j.011.28, 3
  %indvars.iv.next21.2.28 = add nsw i64 %indvars.iv20.28, 3
  br i1 %cmp94, label %for.end38.3.28, label %for.body10.3.28.preheader

for.body10.3.28.preheader:                        ; preds = %for.inc53.2.28
  br label %for.body10.3.28

for.body10.3.28:                                  ; preds = %for.body10.3.28.preheader, %for.inc36.3.28
  %ki.06.3.28 = phi i32 [ %inc37.3.28, %for.inc36.3.28 ], [ 0, %for.body10.3.28.preheader ]
  %partial_sum.05.3.28 = phi float [ %partial_sum.3.3.28, %for.inc36.3.28 ], [ 0.000000e+00, %for.body10.3.28.preheader ]
  %add.3.28 = add nsw i32 %ki.06.3.28, %inc58.27
  %notlhs.3.28 = icmp slt i32 %add.3.28, 0
  %notrhs.3.28 = icmp uge i32 %add.3.28, %img_height
  %.not.3.28 = or i1 %notrhs.3.28, %notlhs.3.28
  %brmerge.3.28 = or i1 %.not.3.28, %cmp151.not.3.28
  br i1 %brmerge.3.28, label %for.inc36.3.28, label %for.body16.lr.ph.3.28

for.body16.lr.ph.3.28:                            ; preds = %for.body10.3.28
  %mul.3.28 = shl i32 %add.3.28, 7
  %mul30.3.28 = mul i32 %ki.06.3.28, %kern_width
  br label %for.body16.3.28

for.body16.3.28:                                  ; preds = %for.inc.3.28, %for.body16.lr.ph.3.28
  %indvars.iv.3.28 = phi i64 [ 0, %for.body16.lr.ph.3.28 ], [ %indvars.iv.next.3.28, %for.inc.3.28 ]
  %partial_sum.12.3.28 = phi float [ %partial_sum.05.3.28, %for.body16.lr.ph.3.28 ], [ %partial_sum.2.3.28, %for.inc.3.28 ]
  %2011 = trunc i64 %indvars.iv.3.28 to i32
  %add17.3.28 = add nsw i32 %2011, %inc54.2.28
  %cmp18.3.28 = icmp sgt i32 %add17.3.28, -1
  %cmp21.3.28 = icmp ult i32 %add17.3.28, %img_width
  %2012 = and i1 %cmp18.3.28, %cmp21.3.28
  br i1 %2012, label %if.end26.3.28, label %for.inc.3.28

if.end26.3.28:                                    ; preds = %for.body16.3.28
  %add29.3.28 = add nsw i32 %add17.3.28, %mul.3.28
  %idxprom.3.28 = sext i32 %add29.3.28 to i64
  %arrayidx.3.28 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.28
  %2013 = load float, float* %arrayidx.3.28, align 4
  %2014 = trunc i64 %indvars.iv.3.28 to i32
  %add31.3.28 = add i32 %2014, %mul30.3.28
  %idxprom32.3.28 = zext i32 %add31.3.28 to i64
  %arrayidx33.3.28 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.28
  %2015 = load float, float* %arrayidx33.3.28, align 4
  %mul34.3.28 = fmul float %2013, %2015
  %add35.3.28 = fadd float %partial_sum.12.3.28, %mul34.3.28
  br label %for.inc.3.28

for.inc.3.28:                                     ; preds = %if.end26.3.28, %for.body16.3.28
  %partial_sum.2.3.28 = phi float [ %add35.3.28, %if.end26.3.28 ], [ %partial_sum.12.3.28, %for.body16.3.28 ]
  %indvars.iv.next.3.28 = add nuw nsw i64 %indvars.iv.3.28, 1
  %lftr.wideiv.3.28 = trunc i64 %indvars.iv.next.3.28 to i32
  %exitcond.3.28 = icmp eq i32 %lftr.wideiv.3.28, %kern_width
  br i1 %exitcond.3.28, label %for.inc36.3.28.loopexit, label %for.body16.3.28, !llvm.loop !1

for.inc36.3.28.loopexit:                          ; preds = %for.inc.3.28
  %partial_sum.2.3.28.lcssa = phi float [ %partial_sum.2.3.28, %for.inc.3.28 ]
  br label %for.inc36.3.28

for.inc36.3.28:                                   ; preds = %for.inc36.3.28.loopexit, %for.body10.3.28
  %partial_sum.3.3.28 = phi float [ %partial_sum.05.3.28, %for.body10.3.28 ], [ %partial_sum.2.3.28.lcssa, %for.inc36.3.28.loopexit ]
  %inc37.3.28 = add nuw nsw i32 %ki.06.3.28, 1
  %exitcond19.3.28 = icmp eq i32 %inc37.3.28, %kern_height
  br i1 %exitcond19.3.28, label %for.end38.3.28.loopexit, label %for.body10.3.28, !llvm.loop !3

for.end38.3.28.loopexit:                          ; preds = %for.inc36.3.28
  %partial_sum.3.3.28.lcssa = phi float [ %partial_sum.3.3.28, %for.inc36.3.28 ]
  br label %for.end38.3.28

for.end38.3.28:                                   ; preds = %for.end38.3.28.loopexit, %for.inc53.2.28
  %partial_sum.0.lcssa.3.28 = phi float [ 0.000000e+00, %for.inc53.2.28 ], [ %partial_sum.3.3.28.lcssa, %for.end38.3.28.loopexit ]
  br i1 %tobool39, label %if.else.3.28, label %if.then40.3.28

if.then40.3.28:                                   ; preds = %for.end38.3.28
  %cmp41.3.28 = fcmp olt float %partial_sum.0.lcssa.3.28, 0.000000e+00
  %sub42.3.28 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.28
  %cond.3.28 = select i1 %cmp41.3.28, float %sub42.3.28, float %partial_sum.0.lcssa.3.28
  %conv.3.28 = fptoui float %cond.3.28 to i8
  %conv43.3.28 = uitofp i8 %conv.3.28 to float
  %2016 = add nsw i64 %indvars.iv.next21.2.28, %1982
  %arrayidx47.3.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2016
  store float %conv43.3.28, float* %arrayidx47.3.28, align 4
  br label %for.inc53.3.28

if.else.3.28:                                     ; preds = %for.end38.3.28
  %2017 = add nsw i64 %indvars.iv.next21.2.28, %1981
  %arrayidx51.3.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2017
  store float %partial_sum.0.lcssa.3.28, float* %arrayidx51.3.28, align 4
  br label %for.inc53.3.28

for.inc53.3.28:                                   ; preds = %if.else.3.28, %if.then40.3.28
  %inc54.3.28 = add nsw i32 %in_j.011.28, 4
  %indvars.iv.next21.3.28 = add nsw i64 %indvars.iv20.28, 4
  br i1 %cmp94, label %for.end38.4.28, label %for.body10.4.28.preheader

for.body10.4.28.preheader:                        ; preds = %for.inc53.3.28
  br label %for.body10.4.28

for.body10.4.28:                                  ; preds = %for.body10.4.28.preheader, %for.inc36.4.28
  %ki.06.4.28 = phi i32 [ %inc37.4.28, %for.inc36.4.28 ], [ 0, %for.body10.4.28.preheader ]
  %partial_sum.05.4.28 = phi float [ %partial_sum.3.4.28, %for.inc36.4.28 ], [ 0.000000e+00, %for.body10.4.28.preheader ]
  %add.4.28 = add nsw i32 %ki.06.4.28, %inc58.27
  %notlhs.4.28 = icmp slt i32 %add.4.28, 0
  %notrhs.4.28 = icmp uge i32 %add.4.28, %img_height
  %.not.4.28 = or i1 %notrhs.4.28, %notlhs.4.28
  %brmerge.4.28 = or i1 %.not.4.28, %cmp151.not.4.28
  br i1 %brmerge.4.28, label %for.inc36.4.28, label %for.body16.lr.ph.4.28

for.body16.lr.ph.4.28:                            ; preds = %for.body10.4.28
  %mul.4.28 = shl i32 %add.4.28, 7
  %mul30.4.28 = mul i32 %ki.06.4.28, %kern_width
  br label %for.body16.4.28

for.body16.4.28:                                  ; preds = %for.inc.4.28, %for.body16.lr.ph.4.28
  %indvars.iv.4.28 = phi i64 [ 0, %for.body16.lr.ph.4.28 ], [ %indvars.iv.next.4.28, %for.inc.4.28 ]
  %partial_sum.12.4.28 = phi float [ %partial_sum.05.4.28, %for.body16.lr.ph.4.28 ], [ %partial_sum.2.4.28, %for.inc.4.28 ]
  %2018 = trunc i64 %indvars.iv.4.28 to i32
  %add17.4.28 = add nsw i32 %2018, %inc54.3.28
  %cmp18.4.28 = icmp sgt i32 %add17.4.28, -1
  %cmp21.4.28 = icmp ult i32 %add17.4.28, %img_width
  %2019 = and i1 %cmp18.4.28, %cmp21.4.28
  br i1 %2019, label %if.end26.4.28, label %for.inc.4.28

if.end26.4.28:                                    ; preds = %for.body16.4.28
  %add29.4.28 = add nsw i32 %add17.4.28, %mul.4.28
  %idxprom.4.28 = sext i32 %add29.4.28 to i64
  %arrayidx.4.28 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.28
  %2020 = load float, float* %arrayidx.4.28, align 4
  %2021 = trunc i64 %indvars.iv.4.28 to i32
  %add31.4.28 = add i32 %2021, %mul30.4.28
  %idxprom32.4.28 = zext i32 %add31.4.28 to i64
  %arrayidx33.4.28 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.28
  %2022 = load float, float* %arrayidx33.4.28, align 4
  %mul34.4.28 = fmul float %2020, %2022
  %add35.4.28 = fadd float %partial_sum.12.4.28, %mul34.4.28
  br label %for.inc.4.28

for.inc.4.28:                                     ; preds = %if.end26.4.28, %for.body16.4.28
  %partial_sum.2.4.28 = phi float [ %add35.4.28, %if.end26.4.28 ], [ %partial_sum.12.4.28, %for.body16.4.28 ]
  %indvars.iv.next.4.28 = add nuw nsw i64 %indvars.iv.4.28, 1
  %lftr.wideiv.4.28 = trunc i64 %indvars.iv.next.4.28 to i32
  %exitcond.4.28 = icmp eq i32 %lftr.wideiv.4.28, %kern_width
  br i1 %exitcond.4.28, label %for.inc36.4.28.loopexit, label %for.body16.4.28, !llvm.loop !1

for.inc36.4.28.loopexit:                          ; preds = %for.inc.4.28
  %partial_sum.2.4.28.lcssa = phi float [ %partial_sum.2.4.28, %for.inc.4.28 ]
  br label %for.inc36.4.28

for.inc36.4.28:                                   ; preds = %for.inc36.4.28.loopexit, %for.body10.4.28
  %partial_sum.3.4.28 = phi float [ %partial_sum.05.4.28, %for.body10.4.28 ], [ %partial_sum.2.4.28.lcssa, %for.inc36.4.28.loopexit ]
  %inc37.4.28 = add nuw nsw i32 %ki.06.4.28, 1
  %exitcond19.4.28 = icmp eq i32 %inc37.4.28, %kern_height
  br i1 %exitcond19.4.28, label %for.end38.4.28.loopexit, label %for.body10.4.28, !llvm.loop !3

for.end38.4.28.loopexit:                          ; preds = %for.inc36.4.28
  %partial_sum.3.4.28.lcssa = phi float [ %partial_sum.3.4.28, %for.inc36.4.28 ]
  br label %for.end38.4.28

for.end38.4.28:                                   ; preds = %for.end38.4.28.loopexit, %for.inc53.3.28
  %partial_sum.0.lcssa.4.28 = phi float [ 0.000000e+00, %for.inc53.3.28 ], [ %partial_sum.3.4.28.lcssa, %for.end38.4.28.loopexit ]
  br i1 %tobool39, label %if.else.4.28, label %if.then40.4.28

if.then40.4.28:                                   ; preds = %for.end38.4.28
  %cmp41.4.28 = fcmp olt float %partial_sum.0.lcssa.4.28, 0.000000e+00
  %sub42.4.28 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.28
  %cond.4.28 = select i1 %cmp41.4.28, float %sub42.4.28, float %partial_sum.0.lcssa.4.28
  %conv.4.28 = fptoui float %cond.4.28 to i8
  %conv43.4.28 = uitofp i8 %conv.4.28 to float
  %2023 = add nsw i64 %indvars.iv.next21.3.28, %1982
  %arrayidx47.4.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2023
  store float %conv43.4.28, float* %arrayidx47.4.28, align 4
  br label %for.inc53.4.28

if.else.4.28:                                     ; preds = %for.end38.4.28
  %2024 = add nsw i64 %indvars.iv.next21.3.28, %1981
  %arrayidx51.4.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2024
  store float %partial_sum.0.lcssa.4.28, float* %arrayidx51.4.28, align 4
  br label %for.inc53.4.28

for.inc53.4.28:                                   ; preds = %if.else.4.28, %if.then40.4.28
  %inc54.4.28 = add nsw i32 %in_j.011.28, 5
  %indvars.iv.next21.4.28 = add nsw i64 %indvars.iv20.28, 5
  br i1 %cmp94, label %for.end38.5.28, label %for.body10.5.28.preheader

for.body10.5.28.preheader:                        ; preds = %for.inc53.4.28
  br label %for.body10.5.28

for.body10.5.28:                                  ; preds = %for.body10.5.28.preheader, %for.inc36.5.28
  %ki.06.5.28 = phi i32 [ %inc37.5.28, %for.inc36.5.28 ], [ 0, %for.body10.5.28.preheader ]
  %partial_sum.05.5.28 = phi float [ %partial_sum.3.5.28, %for.inc36.5.28 ], [ 0.000000e+00, %for.body10.5.28.preheader ]
  %add.5.28 = add nsw i32 %ki.06.5.28, %inc58.27
  %notlhs.5.28 = icmp slt i32 %add.5.28, 0
  %notrhs.5.28 = icmp uge i32 %add.5.28, %img_height
  %.not.5.28 = or i1 %notrhs.5.28, %notlhs.5.28
  %brmerge.5.28 = or i1 %.not.5.28, %cmp151.not.5.28
  br i1 %brmerge.5.28, label %for.inc36.5.28, label %for.body16.lr.ph.5.28

for.body16.lr.ph.5.28:                            ; preds = %for.body10.5.28
  %mul.5.28 = shl i32 %add.5.28, 7
  %mul30.5.28 = mul i32 %ki.06.5.28, %kern_width
  br label %for.body16.5.28

for.body16.5.28:                                  ; preds = %for.inc.5.28, %for.body16.lr.ph.5.28
  %indvars.iv.5.28 = phi i64 [ 0, %for.body16.lr.ph.5.28 ], [ %indvars.iv.next.5.28, %for.inc.5.28 ]
  %partial_sum.12.5.28 = phi float [ %partial_sum.05.5.28, %for.body16.lr.ph.5.28 ], [ %partial_sum.2.5.28, %for.inc.5.28 ]
  %2025 = trunc i64 %indvars.iv.5.28 to i32
  %add17.5.28 = add nsw i32 %2025, %inc54.4.28
  %cmp18.5.28 = icmp sgt i32 %add17.5.28, -1
  %cmp21.5.28 = icmp ult i32 %add17.5.28, %img_width
  %2026 = and i1 %cmp18.5.28, %cmp21.5.28
  br i1 %2026, label %if.end26.5.28, label %for.inc.5.28

if.end26.5.28:                                    ; preds = %for.body16.5.28
  %add29.5.28 = add nsw i32 %add17.5.28, %mul.5.28
  %idxprom.5.28 = sext i32 %add29.5.28 to i64
  %arrayidx.5.28 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.28
  %2027 = load float, float* %arrayidx.5.28, align 4
  %2028 = trunc i64 %indvars.iv.5.28 to i32
  %add31.5.28 = add i32 %2028, %mul30.5.28
  %idxprom32.5.28 = zext i32 %add31.5.28 to i64
  %arrayidx33.5.28 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.28
  %2029 = load float, float* %arrayidx33.5.28, align 4
  %mul34.5.28 = fmul float %2027, %2029
  %add35.5.28 = fadd float %partial_sum.12.5.28, %mul34.5.28
  br label %for.inc.5.28

for.inc.5.28:                                     ; preds = %if.end26.5.28, %for.body16.5.28
  %partial_sum.2.5.28 = phi float [ %add35.5.28, %if.end26.5.28 ], [ %partial_sum.12.5.28, %for.body16.5.28 ]
  %indvars.iv.next.5.28 = add nuw nsw i64 %indvars.iv.5.28, 1
  %lftr.wideiv.5.28 = trunc i64 %indvars.iv.next.5.28 to i32
  %exitcond.5.28 = icmp eq i32 %lftr.wideiv.5.28, %kern_width
  br i1 %exitcond.5.28, label %for.inc36.5.28.loopexit, label %for.body16.5.28, !llvm.loop !1

for.inc36.5.28.loopexit:                          ; preds = %for.inc.5.28
  %partial_sum.2.5.28.lcssa = phi float [ %partial_sum.2.5.28, %for.inc.5.28 ]
  br label %for.inc36.5.28

for.inc36.5.28:                                   ; preds = %for.inc36.5.28.loopexit, %for.body10.5.28
  %partial_sum.3.5.28 = phi float [ %partial_sum.05.5.28, %for.body10.5.28 ], [ %partial_sum.2.5.28.lcssa, %for.inc36.5.28.loopexit ]
  %inc37.5.28 = add nuw nsw i32 %ki.06.5.28, 1
  %exitcond19.5.28 = icmp eq i32 %inc37.5.28, %kern_height
  br i1 %exitcond19.5.28, label %for.end38.5.28.loopexit, label %for.body10.5.28, !llvm.loop !3

for.end38.5.28.loopexit:                          ; preds = %for.inc36.5.28
  %partial_sum.3.5.28.lcssa = phi float [ %partial_sum.3.5.28, %for.inc36.5.28 ]
  br label %for.end38.5.28

for.end38.5.28:                                   ; preds = %for.end38.5.28.loopexit, %for.inc53.4.28
  %partial_sum.0.lcssa.5.28 = phi float [ 0.000000e+00, %for.inc53.4.28 ], [ %partial_sum.3.5.28.lcssa, %for.end38.5.28.loopexit ]
  br i1 %tobool39, label %if.else.5.28, label %if.then40.5.28

if.then40.5.28:                                   ; preds = %for.end38.5.28
  %cmp41.5.28 = fcmp olt float %partial_sum.0.lcssa.5.28, 0.000000e+00
  %sub42.5.28 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.28
  %cond.5.28 = select i1 %cmp41.5.28, float %sub42.5.28, float %partial_sum.0.lcssa.5.28
  %conv.5.28 = fptoui float %cond.5.28 to i8
  %conv43.5.28 = uitofp i8 %conv.5.28 to float
  %2030 = add nsw i64 %indvars.iv.next21.4.28, %1982
  %arrayidx47.5.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2030
  store float %conv43.5.28, float* %arrayidx47.5.28, align 4
  br label %for.inc53.5.28

if.else.5.28:                                     ; preds = %for.end38.5.28
  %2031 = add nsw i64 %indvars.iv.next21.4.28, %1981
  %arrayidx51.5.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2031
  store float %partial_sum.0.lcssa.5.28, float* %arrayidx51.5.28, align 4
  br label %for.inc53.5.28

for.inc53.5.28:                                   ; preds = %if.else.5.28, %if.then40.5.28
  %inc54.5.28 = add nsw i32 %in_j.011.28, 6
  %indvars.iv.next21.5.28 = add nsw i64 %indvars.iv20.28, 6
  br i1 %cmp94, label %for.end38.6.28, label %for.body10.6.28.preheader

for.body10.6.28.preheader:                        ; preds = %for.inc53.5.28
  br label %for.body10.6.28

for.body10.6.28:                                  ; preds = %for.body10.6.28.preheader, %for.inc36.6.28
  %ki.06.6.28 = phi i32 [ %inc37.6.28, %for.inc36.6.28 ], [ 0, %for.body10.6.28.preheader ]
  %partial_sum.05.6.28 = phi float [ %partial_sum.3.6.28, %for.inc36.6.28 ], [ 0.000000e+00, %for.body10.6.28.preheader ]
  %add.6.28 = add nsw i32 %ki.06.6.28, %inc58.27
  %notlhs.6.28 = icmp slt i32 %add.6.28, 0
  %notrhs.6.28 = icmp uge i32 %add.6.28, %img_height
  %.not.6.28 = or i1 %notrhs.6.28, %notlhs.6.28
  %brmerge.6.28 = or i1 %.not.6.28, %cmp151.not.6.28
  br i1 %brmerge.6.28, label %for.inc36.6.28, label %for.body16.lr.ph.6.28

for.body16.lr.ph.6.28:                            ; preds = %for.body10.6.28
  %mul.6.28 = shl i32 %add.6.28, 7
  %mul30.6.28 = mul i32 %ki.06.6.28, %kern_width
  br label %for.body16.6.28

for.body16.6.28:                                  ; preds = %for.inc.6.28, %for.body16.lr.ph.6.28
  %indvars.iv.6.28 = phi i64 [ 0, %for.body16.lr.ph.6.28 ], [ %indvars.iv.next.6.28, %for.inc.6.28 ]
  %partial_sum.12.6.28 = phi float [ %partial_sum.05.6.28, %for.body16.lr.ph.6.28 ], [ %partial_sum.2.6.28, %for.inc.6.28 ]
  %2032 = trunc i64 %indvars.iv.6.28 to i32
  %add17.6.28 = add nsw i32 %2032, %inc54.5.28
  %cmp18.6.28 = icmp sgt i32 %add17.6.28, -1
  %cmp21.6.28 = icmp ult i32 %add17.6.28, %img_width
  %2033 = and i1 %cmp18.6.28, %cmp21.6.28
  br i1 %2033, label %if.end26.6.28, label %for.inc.6.28

if.end26.6.28:                                    ; preds = %for.body16.6.28
  %add29.6.28 = add nsw i32 %add17.6.28, %mul.6.28
  %idxprom.6.28 = sext i32 %add29.6.28 to i64
  %arrayidx.6.28 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.28
  %2034 = load float, float* %arrayidx.6.28, align 4
  %2035 = trunc i64 %indvars.iv.6.28 to i32
  %add31.6.28 = add i32 %2035, %mul30.6.28
  %idxprom32.6.28 = zext i32 %add31.6.28 to i64
  %arrayidx33.6.28 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.28
  %2036 = load float, float* %arrayidx33.6.28, align 4
  %mul34.6.28 = fmul float %2034, %2036
  %add35.6.28 = fadd float %partial_sum.12.6.28, %mul34.6.28
  br label %for.inc.6.28

for.inc.6.28:                                     ; preds = %if.end26.6.28, %for.body16.6.28
  %partial_sum.2.6.28 = phi float [ %add35.6.28, %if.end26.6.28 ], [ %partial_sum.12.6.28, %for.body16.6.28 ]
  %indvars.iv.next.6.28 = add nuw nsw i64 %indvars.iv.6.28, 1
  %lftr.wideiv.6.28 = trunc i64 %indvars.iv.next.6.28 to i32
  %exitcond.6.28 = icmp eq i32 %lftr.wideiv.6.28, %kern_width
  br i1 %exitcond.6.28, label %for.inc36.6.28.loopexit, label %for.body16.6.28, !llvm.loop !1

for.inc36.6.28.loopexit:                          ; preds = %for.inc.6.28
  %partial_sum.2.6.28.lcssa = phi float [ %partial_sum.2.6.28, %for.inc.6.28 ]
  br label %for.inc36.6.28

for.inc36.6.28:                                   ; preds = %for.inc36.6.28.loopexit, %for.body10.6.28
  %partial_sum.3.6.28 = phi float [ %partial_sum.05.6.28, %for.body10.6.28 ], [ %partial_sum.2.6.28.lcssa, %for.inc36.6.28.loopexit ]
  %inc37.6.28 = add nuw nsw i32 %ki.06.6.28, 1
  %exitcond19.6.28 = icmp eq i32 %inc37.6.28, %kern_height
  br i1 %exitcond19.6.28, label %for.end38.6.28.loopexit, label %for.body10.6.28, !llvm.loop !3

for.end38.6.28.loopexit:                          ; preds = %for.inc36.6.28
  %partial_sum.3.6.28.lcssa = phi float [ %partial_sum.3.6.28, %for.inc36.6.28 ]
  br label %for.end38.6.28

for.end38.6.28:                                   ; preds = %for.end38.6.28.loopexit, %for.inc53.5.28
  %partial_sum.0.lcssa.6.28 = phi float [ 0.000000e+00, %for.inc53.5.28 ], [ %partial_sum.3.6.28.lcssa, %for.end38.6.28.loopexit ]
  br i1 %tobool39, label %if.else.6.28, label %if.then40.6.28

if.then40.6.28:                                   ; preds = %for.end38.6.28
  %cmp41.6.28 = fcmp olt float %partial_sum.0.lcssa.6.28, 0.000000e+00
  %sub42.6.28 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.28
  %cond.6.28 = select i1 %cmp41.6.28, float %sub42.6.28, float %partial_sum.0.lcssa.6.28
  %conv.6.28 = fptoui float %cond.6.28 to i8
  %conv43.6.28 = uitofp i8 %conv.6.28 to float
  %2037 = add nsw i64 %indvars.iv.next21.5.28, %1982
  %arrayidx47.6.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2037
  store float %conv43.6.28, float* %arrayidx47.6.28, align 4
  br label %for.inc53.6.28

if.else.6.28:                                     ; preds = %for.end38.6.28
  %2038 = add nsw i64 %indvars.iv.next21.5.28, %1981
  %arrayidx51.6.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2038
  store float %partial_sum.0.lcssa.6.28, float* %arrayidx51.6.28, align 4
  br label %for.inc53.6.28

for.inc53.6.28:                                   ; preds = %if.else.6.28, %if.then40.6.28
  %inc54.6.28 = add nsw i32 %in_j.011.28, 7
  %indvars.iv.next21.6.28 = add nsw i64 %indvars.iv20.28, 7
  br i1 %cmp94, label %for.end38.7.28, label %for.body10.7.28.preheader

for.body10.7.28.preheader:                        ; preds = %for.inc53.6.28
  br label %for.body10.7.28

for.body10.7.28:                                  ; preds = %for.body10.7.28.preheader, %for.inc36.7.28
  %ki.06.7.28 = phi i32 [ %inc37.7.28, %for.inc36.7.28 ], [ 0, %for.body10.7.28.preheader ]
  %partial_sum.05.7.28 = phi float [ %partial_sum.3.7.28, %for.inc36.7.28 ], [ 0.000000e+00, %for.body10.7.28.preheader ]
  %add.7.28 = add nsw i32 %ki.06.7.28, %inc58.27
  %notlhs.7.28 = icmp slt i32 %add.7.28, 0
  %notrhs.7.28 = icmp uge i32 %add.7.28, %img_height
  %.not.7.28 = or i1 %notrhs.7.28, %notlhs.7.28
  %brmerge.7.28 = or i1 %.not.7.28, %cmp151.not.7.28
  br i1 %brmerge.7.28, label %for.inc36.7.28, label %for.body16.lr.ph.7.28

for.body16.lr.ph.7.28:                            ; preds = %for.body10.7.28
  %mul.7.28 = shl i32 %add.7.28, 7
  %mul30.7.28 = mul i32 %ki.06.7.28, %kern_width
  br label %for.body16.7.28

for.body16.7.28:                                  ; preds = %for.inc.7.28, %for.body16.lr.ph.7.28
  %indvars.iv.7.28 = phi i64 [ 0, %for.body16.lr.ph.7.28 ], [ %indvars.iv.next.7.28, %for.inc.7.28 ]
  %partial_sum.12.7.28 = phi float [ %partial_sum.05.7.28, %for.body16.lr.ph.7.28 ], [ %partial_sum.2.7.28, %for.inc.7.28 ]
  %2039 = trunc i64 %indvars.iv.7.28 to i32
  %add17.7.28 = add nsw i32 %2039, %inc54.6.28
  %cmp18.7.28 = icmp sgt i32 %add17.7.28, -1
  %cmp21.7.28 = icmp ult i32 %add17.7.28, %img_width
  %2040 = and i1 %cmp18.7.28, %cmp21.7.28
  br i1 %2040, label %if.end26.7.28, label %for.inc.7.28

if.end26.7.28:                                    ; preds = %for.body16.7.28
  %add29.7.28 = add nsw i32 %add17.7.28, %mul.7.28
  %idxprom.7.28 = sext i32 %add29.7.28 to i64
  %arrayidx.7.28 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.28
  %2041 = load float, float* %arrayidx.7.28, align 4
  %2042 = trunc i64 %indvars.iv.7.28 to i32
  %add31.7.28 = add i32 %2042, %mul30.7.28
  %idxprom32.7.28 = zext i32 %add31.7.28 to i64
  %arrayidx33.7.28 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.28
  %2043 = load float, float* %arrayidx33.7.28, align 4
  %mul34.7.28 = fmul float %2041, %2043
  %add35.7.28 = fadd float %partial_sum.12.7.28, %mul34.7.28
  br label %for.inc.7.28

for.inc.7.28:                                     ; preds = %if.end26.7.28, %for.body16.7.28
  %partial_sum.2.7.28 = phi float [ %add35.7.28, %if.end26.7.28 ], [ %partial_sum.12.7.28, %for.body16.7.28 ]
  %indvars.iv.next.7.28 = add nuw nsw i64 %indvars.iv.7.28, 1
  %lftr.wideiv.7.28 = trunc i64 %indvars.iv.next.7.28 to i32
  %exitcond.7.28 = icmp eq i32 %lftr.wideiv.7.28, %kern_width
  br i1 %exitcond.7.28, label %for.inc36.7.28.loopexit, label %for.body16.7.28, !llvm.loop !1

for.inc36.7.28.loopexit:                          ; preds = %for.inc.7.28
  %partial_sum.2.7.28.lcssa = phi float [ %partial_sum.2.7.28, %for.inc.7.28 ]
  br label %for.inc36.7.28

for.inc36.7.28:                                   ; preds = %for.inc36.7.28.loopexit, %for.body10.7.28
  %partial_sum.3.7.28 = phi float [ %partial_sum.05.7.28, %for.body10.7.28 ], [ %partial_sum.2.7.28.lcssa, %for.inc36.7.28.loopexit ]
  %inc37.7.28 = add nuw nsw i32 %ki.06.7.28, 1
  %exitcond19.7.28 = icmp eq i32 %inc37.7.28, %kern_height
  br i1 %exitcond19.7.28, label %for.end38.7.28.loopexit, label %for.body10.7.28, !llvm.loop !3

for.end38.7.28.loopexit:                          ; preds = %for.inc36.7.28
  %partial_sum.3.7.28.lcssa = phi float [ %partial_sum.3.7.28, %for.inc36.7.28 ]
  br label %for.end38.7.28

for.end38.7.28:                                   ; preds = %for.end38.7.28.loopexit, %for.inc53.6.28
  %partial_sum.0.lcssa.7.28 = phi float [ 0.000000e+00, %for.inc53.6.28 ], [ %partial_sum.3.7.28.lcssa, %for.end38.7.28.loopexit ]
  br i1 %tobool39, label %if.else.7.28, label %if.then40.7.28

if.then40.7.28:                                   ; preds = %for.end38.7.28
  %cmp41.7.28 = fcmp olt float %partial_sum.0.lcssa.7.28, 0.000000e+00
  %sub42.7.28 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.28
  %cond.7.28 = select i1 %cmp41.7.28, float %sub42.7.28, float %partial_sum.0.lcssa.7.28
  %conv.7.28 = fptoui float %cond.7.28 to i8
  %conv43.7.28 = uitofp i8 %conv.7.28 to float
  %2044 = add nsw i64 %indvars.iv.next21.6.28, %1982
  %arrayidx47.7.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2044
  store float %conv43.7.28, float* %arrayidx47.7.28, align 4
  br label %for.inc53.7.28

if.else.7.28:                                     ; preds = %for.end38.7.28
  %2045 = add nsw i64 %indvars.iv.next21.6.28, %1981
  %arrayidx51.7.28 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2045
  store float %partial_sum.0.lcssa.7.28, float* %arrayidx51.7.28, align 4
  br label %for.inc53.7.28

for.inc53.7.28:                                   ; preds = %if.else.7.28, %if.then40.7.28
  %inc54.7.28 = add nsw i32 %in_j.011.28, 8
  %indvars.iv.next21.7.28 = add nsw i64 %indvars.iv20.28, 8
  %lftr.wideiv24.7.28 = trunc i64 %indvars.iv.next21.7.28 to i32
  %exitcond25.7.28 = icmp eq i32 %lftr.wideiv24.7.28, %img_width
  br i1 %exitcond25.7.28, label %for.inc57.28.loopexit, label %for.cond8.preheader.28, !llvm.loop !5

for.inc57.28.loopexit:                            ; preds = %for.inc53.7.28
  br label %for.inc57.28

for.inc57.28:                                     ; preds = %for.inc57.28.loopexit, %for.cond8.preheader.lr.ph.split.28
  %inc58.28 = add nsw i32 %in_i.015, 29
  %indvars.iv.next27.28 = add nsw i64 %indvars.iv26, 29
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.29

for.cond8.preheader.lr.ph.29:                     ; preds = %for.inc57.28
  %2046 = trunc i64 %indvars.iv.next27.28 to i32
  %mul48.29 = shl i32 %2046, 7
  %2047 = trunc i64 %indvars.iv.next27.28 to i32
  %mul44.29 = shl i32 %2047, 7
  %2048 = sext i32 %mul48.29 to i64
  %2049 = sext i32 %mul44.29 to i64
  br i1 %lcmp.mod.29, label %for.cond8.preheader.lr.ph.split.29, label %for.cond8.preheader.prol.29.preheader

for.cond8.preheader.prol.29.preheader:            ; preds = %for.cond8.preheader.lr.ph.29
  br label %for.cond8.preheader.prol.29

for.cond8.preheader.prol.29:                      ; preds = %for.cond8.preheader.prol.29.preheader, %for.inc53.prol.29
  %indvars.iv20.prol.29 = phi i64 [ %indvars.iv.next21.prol.29, %for.inc53.prol.29 ], [ 0, %for.cond8.preheader.prol.29.preheader ]
  %in_j.011.prol.29 = phi i32 [ %inc54.prol.29, %for.inc53.prol.29 ], [ %sub4, %for.cond8.preheader.prol.29.preheader ]
  %prol.iter.29 = phi i32 [ %prol.iter.sub.29, %for.inc53.prol.29 ], [ %xtraiter.29, %for.cond8.preheader.prol.29.preheader ]
  br i1 %cmp94, label %for.end38.prol.29, label %for.body10.prol.29.preheader

for.body10.prol.29.preheader:                     ; preds = %for.cond8.preheader.prol.29
  br label %for.body10.prol.29

for.body10.prol.29:                               ; preds = %for.body10.prol.29.preheader, %for.inc36.prol.29
  %ki.06.prol.29 = phi i32 [ %inc37.prol.29, %for.inc36.prol.29 ], [ 0, %for.body10.prol.29.preheader ]
  %partial_sum.05.prol.29 = phi float [ %partial_sum.3.prol.29, %for.inc36.prol.29 ], [ 0.000000e+00, %for.body10.prol.29.preheader ]
  %add.prol.29 = add nsw i32 %ki.06.prol.29, %inc58.28
  %notlhs.prol.29 = icmp slt i32 %add.prol.29, 0
  %notrhs.prol.29 = icmp uge i32 %add.prol.29, %img_height
  %.not.prol.29 = or i1 %notrhs.prol.29, %notlhs.prol.29
  %brmerge.prol.29 = or i1 %.not.prol.29, %cmp151.not.prol.29
  br i1 %brmerge.prol.29, label %for.inc36.prol.29, label %for.body16.lr.ph.prol.29

for.body16.lr.ph.prol.29:                         ; preds = %for.body10.prol.29
  %mul.prol.29 = shl i32 %add.prol.29, 7
  %mul30.prol.29 = mul i32 %ki.06.prol.29, %kern_width
  br label %for.body16.prol.29

for.body16.prol.29:                               ; preds = %for.inc.prol.29, %for.body16.lr.ph.prol.29
  %indvars.iv.prol.29 = phi i64 [ 0, %for.body16.lr.ph.prol.29 ], [ %indvars.iv.next.prol.29, %for.inc.prol.29 ]
  %partial_sum.12.prol.29 = phi float [ %partial_sum.05.prol.29, %for.body16.lr.ph.prol.29 ], [ %partial_sum.2.prol.29, %for.inc.prol.29 ]
  %2050 = trunc i64 %indvars.iv.prol.29 to i32
  %add17.prol.29 = add nsw i32 %2050, %in_j.011.prol.29
  %cmp18.prol.29 = icmp sgt i32 %add17.prol.29, -1
  %cmp21.prol.29 = icmp ult i32 %add17.prol.29, %img_width
  %2051 = and i1 %cmp18.prol.29, %cmp21.prol.29
  br i1 %2051, label %if.end26.prol.29, label %for.inc.prol.29

if.end26.prol.29:                                 ; preds = %for.body16.prol.29
  %add29.prol.29 = add nsw i32 %add17.prol.29, %mul.prol.29
  %idxprom.prol.29 = sext i32 %add29.prol.29 to i64
  %arrayidx.prol.29 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.29
  %2052 = load float, float* %arrayidx.prol.29, align 4
  %2053 = trunc i64 %indvars.iv.prol.29 to i32
  %add31.prol.29 = add i32 %2053, %mul30.prol.29
  %idxprom32.prol.29 = zext i32 %add31.prol.29 to i64
  %arrayidx33.prol.29 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.29
  %2054 = load float, float* %arrayidx33.prol.29, align 4
  %mul34.prol.29 = fmul float %2052, %2054
  %add35.prol.29 = fadd float %partial_sum.12.prol.29, %mul34.prol.29
  br label %for.inc.prol.29

for.inc.prol.29:                                  ; preds = %if.end26.prol.29, %for.body16.prol.29
  %partial_sum.2.prol.29 = phi float [ %add35.prol.29, %if.end26.prol.29 ], [ %partial_sum.12.prol.29, %for.body16.prol.29 ]
  %indvars.iv.next.prol.29 = add nuw nsw i64 %indvars.iv.prol.29, 1
  %lftr.wideiv.prol.29 = trunc i64 %indvars.iv.next.prol.29 to i32
  %exitcond.prol.29 = icmp eq i32 %lftr.wideiv.prol.29, %kern_width
  br i1 %exitcond.prol.29, label %for.inc36.prol.29.loopexit, label %for.body16.prol.29, !llvm.loop !1

for.inc36.prol.29.loopexit:                       ; preds = %for.inc.prol.29
  %partial_sum.2.prol.29.lcssa = phi float [ %partial_sum.2.prol.29, %for.inc.prol.29 ]
  br label %for.inc36.prol.29

for.inc36.prol.29:                                ; preds = %for.inc36.prol.29.loopexit, %for.body10.prol.29
  %partial_sum.3.prol.29 = phi float [ %partial_sum.05.prol.29, %for.body10.prol.29 ], [ %partial_sum.2.prol.29.lcssa, %for.inc36.prol.29.loopexit ]
  %inc37.prol.29 = add nuw nsw i32 %ki.06.prol.29, 1
  %exitcond19.prol.29 = icmp eq i32 %inc37.prol.29, %kern_height
  br i1 %exitcond19.prol.29, label %for.end38.prol.29.loopexit, label %for.body10.prol.29, !llvm.loop !3

for.end38.prol.29.loopexit:                       ; preds = %for.inc36.prol.29
  %partial_sum.3.prol.29.lcssa = phi float [ %partial_sum.3.prol.29, %for.inc36.prol.29 ]
  br label %for.end38.prol.29

for.end38.prol.29:                                ; preds = %for.end38.prol.29.loopexit, %for.cond8.preheader.prol.29
  %partial_sum.0.lcssa.prol.29 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.29 ], [ %partial_sum.3.prol.29.lcssa, %for.end38.prol.29.loopexit ]
  br i1 %tobool39, label %if.else.prol.29, label %if.then40.prol.29

if.then40.prol.29:                                ; preds = %for.end38.prol.29
  %cmp41.prol.29 = fcmp olt float %partial_sum.0.lcssa.prol.29, 0.000000e+00
  %sub42.prol.29 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.29
  %cond.prol.29 = select i1 %cmp41.prol.29, float %sub42.prol.29, float %partial_sum.0.lcssa.prol.29
  %conv.prol.29 = fptoui float %cond.prol.29 to i8
  %conv43.prol.29 = uitofp i8 %conv.prol.29 to float
  %2055 = add nsw i64 %indvars.iv20.prol.29, %2049
  %arrayidx47.prol.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2055
  store float %conv43.prol.29, float* %arrayidx47.prol.29, align 4
  br label %for.inc53.prol.29

if.else.prol.29:                                  ; preds = %for.end38.prol.29
  %2056 = add nsw i64 %indvars.iv20.prol.29, %2048
  %arrayidx51.prol.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2056
  store float %partial_sum.0.lcssa.prol.29, float* %arrayidx51.prol.29, align 4
  br label %for.inc53.prol.29

for.inc53.prol.29:                                ; preds = %if.else.prol.29, %if.then40.prol.29
  %inc54.prol.29 = add nsw i32 %in_j.011.prol.29, 1
  %indvars.iv.next21.prol.29 = add nuw nsw i64 %indvars.iv20.prol.29, 1
  %prol.iter.sub.29 = add i32 %prol.iter.29, -1
  %prol.iter.cmp.29 = icmp eq i32 %prol.iter.sub.29, 0
  br i1 %prol.iter.cmp.29, label %for.cond8.preheader.lr.ph.split.29.loopexit, label %for.cond8.preheader.prol.29, !llvm.loop !4

for.cond8.preheader.lr.ph.split.29.loopexit:      ; preds = %for.inc53.prol.29
  %indvars.iv.next21.prol.29.lcssa = phi i64 [ %indvars.iv.next21.prol.29, %for.inc53.prol.29 ]
  %inc54.prol.29.lcssa = phi i32 [ %inc54.prol.29, %for.inc53.prol.29 ]
  br label %for.cond8.preheader.lr.ph.split.29

for.cond8.preheader.lr.ph.split.29:               ; preds = %for.cond8.preheader.lr.ph.split.29.loopexit, %for.cond8.preheader.lr.ph.29
  %indvars.iv20.unr.29 = phi i64 [ 0, %for.cond8.preheader.lr.ph.29 ], [ %indvars.iv.next21.prol.29.lcssa, %for.cond8.preheader.lr.ph.split.29.loopexit ]
  %in_j.011.unr.29 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.29 ], [ %inc54.prol.29.lcssa, %for.cond8.preheader.lr.ph.split.29.loopexit ]
  br i1 %100, label %for.inc57.29, label %for.cond8.preheader.29.preheader

for.cond8.preheader.29.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.29
  br label %for.cond8.preheader.29

for.cond8.preheader.29:                           ; preds = %for.cond8.preheader.29.preheader, %for.inc53.7.29
  %indvars.iv20.29 = phi i64 [ %indvars.iv.next21.7.29, %for.inc53.7.29 ], [ %indvars.iv20.unr.29, %for.cond8.preheader.29.preheader ]
  %in_j.011.29 = phi i32 [ %inc54.7.29, %for.inc53.7.29 ], [ %in_j.011.unr.29, %for.cond8.preheader.29.preheader ]
  br i1 %cmp94, label %for.end38.29, label %for.body10.29.preheader

for.body10.29.preheader:                          ; preds = %for.cond8.preheader.29
  br label %for.body10.29

for.body10.29:                                    ; preds = %for.body10.29.preheader, %for.inc36.29
  %ki.06.29 = phi i32 [ %inc37.29, %for.inc36.29 ], [ 0, %for.body10.29.preheader ]
  %partial_sum.05.29 = phi float [ %partial_sum.3.29, %for.inc36.29 ], [ 0.000000e+00, %for.body10.29.preheader ]
  %add.29 = add nsw i32 %ki.06.29, %inc58.28
  %notlhs.29 = icmp slt i32 %add.29, 0
  %notrhs.29 = icmp uge i32 %add.29, %img_height
  %.not.29 = or i1 %notrhs.29, %notlhs.29
  %brmerge.29 = or i1 %.not.29, %cmp151.not.29
  br i1 %brmerge.29, label %for.inc36.29, label %for.body16.lr.ph.29

for.body16.lr.ph.29:                              ; preds = %for.body10.29
  %mul.29 = shl i32 %add.29, 7
  %mul30.29 = mul i32 %ki.06.29, %kern_width
  br label %for.body16.29

for.body16.29:                                    ; preds = %for.inc.29, %for.body16.lr.ph.29
  %indvars.iv.29 = phi i64 [ 0, %for.body16.lr.ph.29 ], [ %indvars.iv.next.29, %for.inc.29 ]
  %partial_sum.12.29 = phi float [ %partial_sum.05.29, %for.body16.lr.ph.29 ], [ %partial_sum.2.29, %for.inc.29 ]
  %2057 = trunc i64 %indvars.iv.29 to i32
  %add17.29 = add nsw i32 %2057, %in_j.011.29
  %cmp18.29 = icmp sgt i32 %add17.29, -1
  %cmp21.29 = icmp ult i32 %add17.29, %img_width
  %2058 = and i1 %cmp18.29, %cmp21.29
  br i1 %2058, label %if.end26.29, label %for.inc.29

if.end26.29:                                      ; preds = %for.body16.29
  %add29.29 = add nsw i32 %add17.29, %mul.29
  %idxprom.29 = sext i32 %add29.29 to i64
  %arrayidx.29 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.29
  %2059 = load float, float* %arrayidx.29, align 4
  %2060 = trunc i64 %indvars.iv.29 to i32
  %add31.29 = add i32 %2060, %mul30.29
  %idxprom32.29 = zext i32 %add31.29 to i64
  %arrayidx33.29 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.29
  %2061 = load float, float* %arrayidx33.29, align 4
  %mul34.29 = fmul float %2059, %2061
  %add35.29 = fadd float %partial_sum.12.29, %mul34.29
  br label %for.inc.29

for.inc.29:                                       ; preds = %if.end26.29, %for.body16.29
  %partial_sum.2.29 = phi float [ %add35.29, %if.end26.29 ], [ %partial_sum.12.29, %for.body16.29 ]
  %indvars.iv.next.29 = add nuw nsw i64 %indvars.iv.29, 1
  %lftr.wideiv.29 = trunc i64 %indvars.iv.next.29 to i32
  %exitcond.29 = icmp eq i32 %lftr.wideiv.29, %kern_width
  br i1 %exitcond.29, label %for.inc36.29.loopexit, label %for.body16.29, !llvm.loop !1

for.inc36.29.loopexit:                            ; preds = %for.inc.29
  %partial_sum.2.29.lcssa = phi float [ %partial_sum.2.29, %for.inc.29 ]
  br label %for.inc36.29

for.inc36.29:                                     ; preds = %for.inc36.29.loopexit, %for.body10.29
  %partial_sum.3.29 = phi float [ %partial_sum.05.29, %for.body10.29 ], [ %partial_sum.2.29.lcssa, %for.inc36.29.loopexit ]
  %inc37.29 = add nuw nsw i32 %ki.06.29, 1
  %exitcond19.29 = icmp eq i32 %inc37.29, %kern_height
  br i1 %exitcond19.29, label %for.end38.29.loopexit, label %for.body10.29, !llvm.loop !3

for.end38.29.loopexit:                            ; preds = %for.inc36.29
  %partial_sum.3.29.lcssa = phi float [ %partial_sum.3.29, %for.inc36.29 ]
  br label %for.end38.29

for.end38.29:                                     ; preds = %for.end38.29.loopexit, %for.cond8.preheader.29
  %partial_sum.0.lcssa.29 = phi float [ 0.000000e+00, %for.cond8.preheader.29 ], [ %partial_sum.3.29.lcssa, %for.end38.29.loopexit ]
  br i1 %tobool39, label %if.else.29, label %if.then40.29

if.then40.29:                                     ; preds = %for.end38.29
  %cmp41.29 = fcmp olt float %partial_sum.0.lcssa.29, 0.000000e+00
  %sub42.29 = fsub float -0.000000e+00, %partial_sum.0.lcssa.29
  %cond.29 = select i1 %cmp41.29, float %sub42.29, float %partial_sum.0.lcssa.29
  %conv.29 = fptoui float %cond.29 to i8
  %conv43.29 = uitofp i8 %conv.29 to float
  %2062 = add nsw i64 %indvars.iv20.29, %2049
  %arrayidx47.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2062
  store float %conv43.29, float* %arrayidx47.29, align 4
  br label %for.inc53.29

if.else.29:                                       ; preds = %for.end38.29
  %2063 = add nsw i64 %indvars.iv20.29, %2048
  %arrayidx51.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2063
  store float %partial_sum.0.lcssa.29, float* %arrayidx51.29, align 4
  br label %for.inc53.29

for.inc53.29:                                     ; preds = %if.else.29, %if.then40.29
  %inc54.29 = add nsw i32 %in_j.011.29, 1
  %indvars.iv.next21.29 = add nuw nsw i64 %indvars.iv20.29, 1
  br i1 %cmp94, label %for.end38.1.29, label %for.body10.1.29.preheader

for.body10.1.29.preheader:                        ; preds = %for.inc53.29
  br label %for.body10.1.29

for.body10.1.29:                                  ; preds = %for.body10.1.29.preheader, %for.inc36.1.29
  %ki.06.1.29 = phi i32 [ %inc37.1.29, %for.inc36.1.29 ], [ 0, %for.body10.1.29.preheader ]
  %partial_sum.05.1.29 = phi float [ %partial_sum.3.1.29, %for.inc36.1.29 ], [ 0.000000e+00, %for.body10.1.29.preheader ]
  %add.1.29 = add nsw i32 %ki.06.1.29, %inc58.28
  %notlhs.1.29 = icmp slt i32 %add.1.29, 0
  %notrhs.1.29 = icmp uge i32 %add.1.29, %img_height
  %.not.1.29 = or i1 %notrhs.1.29, %notlhs.1.29
  %brmerge.1.29 = or i1 %.not.1.29, %cmp151.not.1.29
  br i1 %brmerge.1.29, label %for.inc36.1.29, label %for.body16.lr.ph.1.29

for.body16.lr.ph.1.29:                            ; preds = %for.body10.1.29
  %mul.1.29 = shl i32 %add.1.29, 7
  %mul30.1.29 = mul i32 %ki.06.1.29, %kern_width
  br label %for.body16.1.29

for.body16.1.29:                                  ; preds = %for.inc.1.29, %for.body16.lr.ph.1.29
  %indvars.iv.1.29 = phi i64 [ 0, %for.body16.lr.ph.1.29 ], [ %indvars.iv.next.1.29, %for.inc.1.29 ]
  %partial_sum.12.1.29 = phi float [ %partial_sum.05.1.29, %for.body16.lr.ph.1.29 ], [ %partial_sum.2.1.29, %for.inc.1.29 ]
  %2064 = trunc i64 %indvars.iv.1.29 to i32
  %add17.1.29 = add nsw i32 %2064, %inc54.29
  %cmp18.1.29 = icmp sgt i32 %add17.1.29, -1
  %cmp21.1.29 = icmp ult i32 %add17.1.29, %img_width
  %2065 = and i1 %cmp18.1.29, %cmp21.1.29
  br i1 %2065, label %if.end26.1.29, label %for.inc.1.29

if.end26.1.29:                                    ; preds = %for.body16.1.29
  %add29.1.29 = add nsw i32 %add17.1.29, %mul.1.29
  %idxprom.1.29 = sext i32 %add29.1.29 to i64
  %arrayidx.1.29 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.29
  %2066 = load float, float* %arrayidx.1.29, align 4
  %2067 = trunc i64 %indvars.iv.1.29 to i32
  %add31.1.29 = add i32 %2067, %mul30.1.29
  %idxprom32.1.29 = zext i32 %add31.1.29 to i64
  %arrayidx33.1.29 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.29
  %2068 = load float, float* %arrayidx33.1.29, align 4
  %mul34.1.29 = fmul float %2066, %2068
  %add35.1.29 = fadd float %partial_sum.12.1.29, %mul34.1.29
  br label %for.inc.1.29

for.inc.1.29:                                     ; preds = %if.end26.1.29, %for.body16.1.29
  %partial_sum.2.1.29 = phi float [ %add35.1.29, %if.end26.1.29 ], [ %partial_sum.12.1.29, %for.body16.1.29 ]
  %indvars.iv.next.1.29 = add nuw nsw i64 %indvars.iv.1.29, 1
  %lftr.wideiv.1.29 = trunc i64 %indvars.iv.next.1.29 to i32
  %exitcond.1.29 = icmp eq i32 %lftr.wideiv.1.29, %kern_width
  br i1 %exitcond.1.29, label %for.inc36.1.29.loopexit, label %for.body16.1.29, !llvm.loop !1

for.inc36.1.29.loopexit:                          ; preds = %for.inc.1.29
  %partial_sum.2.1.29.lcssa = phi float [ %partial_sum.2.1.29, %for.inc.1.29 ]
  br label %for.inc36.1.29

for.inc36.1.29:                                   ; preds = %for.inc36.1.29.loopexit, %for.body10.1.29
  %partial_sum.3.1.29 = phi float [ %partial_sum.05.1.29, %for.body10.1.29 ], [ %partial_sum.2.1.29.lcssa, %for.inc36.1.29.loopexit ]
  %inc37.1.29 = add nuw nsw i32 %ki.06.1.29, 1
  %exitcond19.1.29 = icmp eq i32 %inc37.1.29, %kern_height
  br i1 %exitcond19.1.29, label %for.end38.1.29.loopexit, label %for.body10.1.29, !llvm.loop !3

for.end38.1.29.loopexit:                          ; preds = %for.inc36.1.29
  %partial_sum.3.1.29.lcssa = phi float [ %partial_sum.3.1.29, %for.inc36.1.29 ]
  br label %for.end38.1.29

for.end38.1.29:                                   ; preds = %for.end38.1.29.loopexit, %for.inc53.29
  %partial_sum.0.lcssa.1.29 = phi float [ 0.000000e+00, %for.inc53.29 ], [ %partial_sum.3.1.29.lcssa, %for.end38.1.29.loopexit ]
  br i1 %tobool39, label %if.else.1.29, label %if.then40.1.29

if.then40.1.29:                                   ; preds = %for.end38.1.29
  %cmp41.1.29 = fcmp olt float %partial_sum.0.lcssa.1.29, 0.000000e+00
  %sub42.1.29 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.29
  %cond.1.29 = select i1 %cmp41.1.29, float %sub42.1.29, float %partial_sum.0.lcssa.1.29
  %conv.1.29 = fptoui float %cond.1.29 to i8
  %conv43.1.29 = uitofp i8 %conv.1.29 to float
  %2069 = add nsw i64 %indvars.iv.next21.29, %2049
  %arrayidx47.1.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2069
  store float %conv43.1.29, float* %arrayidx47.1.29, align 4
  br label %for.inc53.1.29

if.else.1.29:                                     ; preds = %for.end38.1.29
  %2070 = add nsw i64 %indvars.iv.next21.29, %2048
  %arrayidx51.1.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2070
  store float %partial_sum.0.lcssa.1.29, float* %arrayidx51.1.29, align 4
  br label %for.inc53.1.29

for.inc53.1.29:                                   ; preds = %if.else.1.29, %if.then40.1.29
  %inc54.1.29 = add nsw i32 %in_j.011.29, 2
  %indvars.iv.next21.1.29 = add nsw i64 %indvars.iv20.29, 2
  br i1 %cmp94, label %for.end38.2.29, label %for.body10.2.29.preheader

for.body10.2.29.preheader:                        ; preds = %for.inc53.1.29
  br label %for.body10.2.29

for.body10.2.29:                                  ; preds = %for.body10.2.29.preheader, %for.inc36.2.29
  %ki.06.2.29 = phi i32 [ %inc37.2.29, %for.inc36.2.29 ], [ 0, %for.body10.2.29.preheader ]
  %partial_sum.05.2.29 = phi float [ %partial_sum.3.2.29, %for.inc36.2.29 ], [ 0.000000e+00, %for.body10.2.29.preheader ]
  %add.2.29 = add nsw i32 %ki.06.2.29, %inc58.28
  %notlhs.2.29 = icmp slt i32 %add.2.29, 0
  %notrhs.2.29 = icmp uge i32 %add.2.29, %img_height
  %.not.2.29 = or i1 %notrhs.2.29, %notlhs.2.29
  %brmerge.2.29 = or i1 %.not.2.29, %cmp151.not.2.29
  br i1 %brmerge.2.29, label %for.inc36.2.29, label %for.body16.lr.ph.2.29

for.body16.lr.ph.2.29:                            ; preds = %for.body10.2.29
  %mul.2.29 = shl i32 %add.2.29, 7
  %mul30.2.29 = mul i32 %ki.06.2.29, %kern_width
  br label %for.body16.2.29

for.body16.2.29:                                  ; preds = %for.inc.2.29, %for.body16.lr.ph.2.29
  %indvars.iv.2.29 = phi i64 [ 0, %for.body16.lr.ph.2.29 ], [ %indvars.iv.next.2.29, %for.inc.2.29 ]
  %partial_sum.12.2.29 = phi float [ %partial_sum.05.2.29, %for.body16.lr.ph.2.29 ], [ %partial_sum.2.2.29, %for.inc.2.29 ]
  %2071 = trunc i64 %indvars.iv.2.29 to i32
  %add17.2.29 = add nsw i32 %2071, %inc54.1.29
  %cmp18.2.29 = icmp sgt i32 %add17.2.29, -1
  %cmp21.2.29 = icmp ult i32 %add17.2.29, %img_width
  %2072 = and i1 %cmp18.2.29, %cmp21.2.29
  br i1 %2072, label %if.end26.2.29, label %for.inc.2.29

if.end26.2.29:                                    ; preds = %for.body16.2.29
  %add29.2.29 = add nsw i32 %add17.2.29, %mul.2.29
  %idxprom.2.29 = sext i32 %add29.2.29 to i64
  %arrayidx.2.29 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.29
  %2073 = load float, float* %arrayidx.2.29, align 4
  %2074 = trunc i64 %indvars.iv.2.29 to i32
  %add31.2.29 = add i32 %2074, %mul30.2.29
  %idxprom32.2.29 = zext i32 %add31.2.29 to i64
  %arrayidx33.2.29 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.29
  %2075 = load float, float* %arrayidx33.2.29, align 4
  %mul34.2.29 = fmul float %2073, %2075
  %add35.2.29 = fadd float %partial_sum.12.2.29, %mul34.2.29
  br label %for.inc.2.29

for.inc.2.29:                                     ; preds = %if.end26.2.29, %for.body16.2.29
  %partial_sum.2.2.29 = phi float [ %add35.2.29, %if.end26.2.29 ], [ %partial_sum.12.2.29, %for.body16.2.29 ]
  %indvars.iv.next.2.29 = add nuw nsw i64 %indvars.iv.2.29, 1
  %lftr.wideiv.2.29 = trunc i64 %indvars.iv.next.2.29 to i32
  %exitcond.2.29 = icmp eq i32 %lftr.wideiv.2.29, %kern_width
  br i1 %exitcond.2.29, label %for.inc36.2.29.loopexit, label %for.body16.2.29, !llvm.loop !1

for.inc36.2.29.loopexit:                          ; preds = %for.inc.2.29
  %partial_sum.2.2.29.lcssa = phi float [ %partial_sum.2.2.29, %for.inc.2.29 ]
  br label %for.inc36.2.29

for.inc36.2.29:                                   ; preds = %for.inc36.2.29.loopexit, %for.body10.2.29
  %partial_sum.3.2.29 = phi float [ %partial_sum.05.2.29, %for.body10.2.29 ], [ %partial_sum.2.2.29.lcssa, %for.inc36.2.29.loopexit ]
  %inc37.2.29 = add nuw nsw i32 %ki.06.2.29, 1
  %exitcond19.2.29 = icmp eq i32 %inc37.2.29, %kern_height
  br i1 %exitcond19.2.29, label %for.end38.2.29.loopexit, label %for.body10.2.29, !llvm.loop !3

for.end38.2.29.loopexit:                          ; preds = %for.inc36.2.29
  %partial_sum.3.2.29.lcssa = phi float [ %partial_sum.3.2.29, %for.inc36.2.29 ]
  br label %for.end38.2.29

for.end38.2.29:                                   ; preds = %for.end38.2.29.loopexit, %for.inc53.1.29
  %partial_sum.0.lcssa.2.29 = phi float [ 0.000000e+00, %for.inc53.1.29 ], [ %partial_sum.3.2.29.lcssa, %for.end38.2.29.loopexit ]
  br i1 %tobool39, label %if.else.2.29, label %if.then40.2.29

if.then40.2.29:                                   ; preds = %for.end38.2.29
  %cmp41.2.29 = fcmp olt float %partial_sum.0.lcssa.2.29, 0.000000e+00
  %sub42.2.29 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.29
  %cond.2.29 = select i1 %cmp41.2.29, float %sub42.2.29, float %partial_sum.0.lcssa.2.29
  %conv.2.29 = fptoui float %cond.2.29 to i8
  %conv43.2.29 = uitofp i8 %conv.2.29 to float
  %2076 = add nsw i64 %indvars.iv.next21.1.29, %2049
  %arrayidx47.2.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2076
  store float %conv43.2.29, float* %arrayidx47.2.29, align 4
  br label %for.inc53.2.29

if.else.2.29:                                     ; preds = %for.end38.2.29
  %2077 = add nsw i64 %indvars.iv.next21.1.29, %2048
  %arrayidx51.2.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2077
  store float %partial_sum.0.lcssa.2.29, float* %arrayidx51.2.29, align 4
  br label %for.inc53.2.29

for.inc53.2.29:                                   ; preds = %if.else.2.29, %if.then40.2.29
  %inc54.2.29 = add nsw i32 %in_j.011.29, 3
  %indvars.iv.next21.2.29 = add nsw i64 %indvars.iv20.29, 3
  br i1 %cmp94, label %for.end38.3.29, label %for.body10.3.29.preheader

for.body10.3.29.preheader:                        ; preds = %for.inc53.2.29
  br label %for.body10.3.29

for.body10.3.29:                                  ; preds = %for.body10.3.29.preheader, %for.inc36.3.29
  %ki.06.3.29 = phi i32 [ %inc37.3.29, %for.inc36.3.29 ], [ 0, %for.body10.3.29.preheader ]
  %partial_sum.05.3.29 = phi float [ %partial_sum.3.3.29, %for.inc36.3.29 ], [ 0.000000e+00, %for.body10.3.29.preheader ]
  %add.3.29 = add nsw i32 %ki.06.3.29, %inc58.28
  %notlhs.3.29 = icmp slt i32 %add.3.29, 0
  %notrhs.3.29 = icmp uge i32 %add.3.29, %img_height
  %.not.3.29 = or i1 %notrhs.3.29, %notlhs.3.29
  %brmerge.3.29 = or i1 %.not.3.29, %cmp151.not.3.29
  br i1 %brmerge.3.29, label %for.inc36.3.29, label %for.body16.lr.ph.3.29

for.body16.lr.ph.3.29:                            ; preds = %for.body10.3.29
  %mul.3.29 = shl i32 %add.3.29, 7
  %mul30.3.29 = mul i32 %ki.06.3.29, %kern_width
  br label %for.body16.3.29

for.body16.3.29:                                  ; preds = %for.inc.3.29, %for.body16.lr.ph.3.29
  %indvars.iv.3.29 = phi i64 [ 0, %for.body16.lr.ph.3.29 ], [ %indvars.iv.next.3.29, %for.inc.3.29 ]
  %partial_sum.12.3.29 = phi float [ %partial_sum.05.3.29, %for.body16.lr.ph.3.29 ], [ %partial_sum.2.3.29, %for.inc.3.29 ]
  %2078 = trunc i64 %indvars.iv.3.29 to i32
  %add17.3.29 = add nsw i32 %2078, %inc54.2.29
  %cmp18.3.29 = icmp sgt i32 %add17.3.29, -1
  %cmp21.3.29 = icmp ult i32 %add17.3.29, %img_width
  %2079 = and i1 %cmp18.3.29, %cmp21.3.29
  br i1 %2079, label %if.end26.3.29, label %for.inc.3.29

if.end26.3.29:                                    ; preds = %for.body16.3.29
  %add29.3.29 = add nsw i32 %add17.3.29, %mul.3.29
  %idxprom.3.29 = sext i32 %add29.3.29 to i64
  %arrayidx.3.29 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.29
  %2080 = load float, float* %arrayidx.3.29, align 4
  %2081 = trunc i64 %indvars.iv.3.29 to i32
  %add31.3.29 = add i32 %2081, %mul30.3.29
  %idxprom32.3.29 = zext i32 %add31.3.29 to i64
  %arrayidx33.3.29 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.29
  %2082 = load float, float* %arrayidx33.3.29, align 4
  %mul34.3.29 = fmul float %2080, %2082
  %add35.3.29 = fadd float %partial_sum.12.3.29, %mul34.3.29
  br label %for.inc.3.29

for.inc.3.29:                                     ; preds = %if.end26.3.29, %for.body16.3.29
  %partial_sum.2.3.29 = phi float [ %add35.3.29, %if.end26.3.29 ], [ %partial_sum.12.3.29, %for.body16.3.29 ]
  %indvars.iv.next.3.29 = add nuw nsw i64 %indvars.iv.3.29, 1
  %lftr.wideiv.3.29 = trunc i64 %indvars.iv.next.3.29 to i32
  %exitcond.3.29 = icmp eq i32 %lftr.wideiv.3.29, %kern_width
  br i1 %exitcond.3.29, label %for.inc36.3.29.loopexit, label %for.body16.3.29, !llvm.loop !1

for.inc36.3.29.loopexit:                          ; preds = %for.inc.3.29
  %partial_sum.2.3.29.lcssa = phi float [ %partial_sum.2.3.29, %for.inc.3.29 ]
  br label %for.inc36.3.29

for.inc36.3.29:                                   ; preds = %for.inc36.3.29.loopexit, %for.body10.3.29
  %partial_sum.3.3.29 = phi float [ %partial_sum.05.3.29, %for.body10.3.29 ], [ %partial_sum.2.3.29.lcssa, %for.inc36.3.29.loopexit ]
  %inc37.3.29 = add nuw nsw i32 %ki.06.3.29, 1
  %exitcond19.3.29 = icmp eq i32 %inc37.3.29, %kern_height
  br i1 %exitcond19.3.29, label %for.end38.3.29.loopexit, label %for.body10.3.29, !llvm.loop !3

for.end38.3.29.loopexit:                          ; preds = %for.inc36.3.29
  %partial_sum.3.3.29.lcssa = phi float [ %partial_sum.3.3.29, %for.inc36.3.29 ]
  br label %for.end38.3.29

for.end38.3.29:                                   ; preds = %for.end38.3.29.loopexit, %for.inc53.2.29
  %partial_sum.0.lcssa.3.29 = phi float [ 0.000000e+00, %for.inc53.2.29 ], [ %partial_sum.3.3.29.lcssa, %for.end38.3.29.loopexit ]
  br i1 %tobool39, label %if.else.3.29, label %if.then40.3.29

if.then40.3.29:                                   ; preds = %for.end38.3.29
  %cmp41.3.29 = fcmp olt float %partial_sum.0.lcssa.3.29, 0.000000e+00
  %sub42.3.29 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.29
  %cond.3.29 = select i1 %cmp41.3.29, float %sub42.3.29, float %partial_sum.0.lcssa.3.29
  %conv.3.29 = fptoui float %cond.3.29 to i8
  %conv43.3.29 = uitofp i8 %conv.3.29 to float
  %2083 = add nsw i64 %indvars.iv.next21.2.29, %2049
  %arrayidx47.3.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2083
  store float %conv43.3.29, float* %arrayidx47.3.29, align 4
  br label %for.inc53.3.29

if.else.3.29:                                     ; preds = %for.end38.3.29
  %2084 = add nsw i64 %indvars.iv.next21.2.29, %2048
  %arrayidx51.3.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2084
  store float %partial_sum.0.lcssa.3.29, float* %arrayidx51.3.29, align 4
  br label %for.inc53.3.29

for.inc53.3.29:                                   ; preds = %if.else.3.29, %if.then40.3.29
  %inc54.3.29 = add nsw i32 %in_j.011.29, 4
  %indvars.iv.next21.3.29 = add nsw i64 %indvars.iv20.29, 4
  br i1 %cmp94, label %for.end38.4.29, label %for.body10.4.29.preheader

for.body10.4.29.preheader:                        ; preds = %for.inc53.3.29
  br label %for.body10.4.29

for.body10.4.29:                                  ; preds = %for.body10.4.29.preheader, %for.inc36.4.29
  %ki.06.4.29 = phi i32 [ %inc37.4.29, %for.inc36.4.29 ], [ 0, %for.body10.4.29.preheader ]
  %partial_sum.05.4.29 = phi float [ %partial_sum.3.4.29, %for.inc36.4.29 ], [ 0.000000e+00, %for.body10.4.29.preheader ]
  %add.4.29 = add nsw i32 %ki.06.4.29, %inc58.28
  %notlhs.4.29 = icmp slt i32 %add.4.29, 0
  %notrhs.4.29 = icmp uge i32 %add.4.29, %img_height
  %.not.4.29 = or i1 %notrhs.4.29, %notlhs.4.29
  %brmerge.4.29 = or i1 %.not.4.29, %cmp151.not.4.29
  br i1 %brmerge.4.29, label %for.inc36.4.29, label %for.body16.lr.ph.4.29

for.body16.lr.ph.4.29:                            ; preds = %for.body10.4.29
  %mul.4.29 = shl i32 %add.4.29, 7
  %mul30.4.29 = mul i32 %ki.06.4.29, %kern_width
  br label %for.body16.4.29

for.body16.4.29:                                  ; preds = %for.inc.4.29, %for.body16.lr.ph.4.29
  %indvars.iv.4.29 = phi i64 [ 0, %for.body16.lr.ph.4.29 ], [ %indvars.iv.next.4.29, %for.inc.4.29 ]
  %partial_sum.12.4.29 = phi float [ %partial_sum.05.4.29, %for.body16.lr.ph.4.29 ], [ %partial_sum.2.4.29, %for.inc.4.29 ]
  %2085 = trunc i64 %indvars.iv.4.29 to i32
  %add17.4.29 = add nsw i32 %2085, %inc54.3.29
  %cmp18.4.29 = icmp sgt i32 %add17.4.29, -1
  %cmp21.4.29 = icmp ult i32 %add17.4.29, %img_width
  %2086 = and i1 %cmp18.4.29, %cmp21.4.29
  br i1 %2086, label %if.end26.4.29, label %for.inc.4.29

if.end26.4.29:                                    ; preds = %for.body16.4.29
  %add29.4.29 = add nsw i32 %add17.4.29, %mul.4.29
  %idxprom.4.29 = sext i32 %add29.4.29 to i64
  %arrayidx.4.29 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.29
  %2087 = load float, float* %arrayidx.4.29, align 4
  %2088 = trunc i64 %indvars.iv.4.29 to i32
  %add31.4.29 = add i32 %2088, %mul30.4.29
  %idxprom32.4.29 = zext i32 %add31.4.29 to i64
  %arrayidx33.4.29 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.29
  %2089 = load float, float* %arrayidx33.4.29, align 4
  %mul34.4.29 = fmul float %2087, %2089
  %add35.4.29 = fadd float %partial_sum.12.4.29, %mul34.4.29
  br label %for.inc.4.29

for.inc.4.29:                                     ; preds = %if.end26.4.29, %for.body16.4.29
  %partial_sum.2.4.29 = phi float [ %add35.4.29, %if.end26.4.29 ], [ %partial_sum.12.4.29, %for.body16.4.29 ]
  %indvars.iv.next.4.29 = add nuw nsw i64 %indvars.iv.4.29, 1
  %lftr.wideiv.4.29 = trunc i64 %indvars.iv.next.4.29 to i32
  %exitcond.4.29 = icmp eq i32 %lftr.wideiv.4.29, %kern_width
  br i1 %exitcond.4.29, label %for.inc36.4.29.loopexit, label %for.body16.4.29, !llvm.loop !1

for.inc36.4.29.loopexit:                          ; preds = %for.inc.4.29
  %partial_sum.2.4.29.lcssa = phi float [ %partial_sum.2.4.29, %for.inc.4.29 ]
  br label %for.inc36.4.29

for.inc36.4.29:                                   ; preds = %for.inc36.4.29.loopexit, %for.body10.4.29
  %partial_sum.3.4.29 = phi float [ %partial_sum.05.4.29, %for.body10.4.29 ], [ %partial_sum.2.4.29.lcssa, %for.inc36.4.29.loopexit ]
  %inc37.4.29 = add nuw nsw i32 %ki.06.4.29, 1
  %exitcond19.4.29 = icmp eq i32 %inc37.4.29, %kern_height
  br i1 %exitcond19.4.29, label %for.end38.4.29.loopexit, label %for.body10.4.29, !llvm.loop !3

for.end38.4.29.loopexit:                          ; preds = %for.inc36.4.29
  %partial_sum.3.4.29.lcssa = phi float [ %partial_sum.3.4.29, %for.inc36.4.29 ]
  br label %for.end38.4.29

for.end38.4.29:                                   ; preds = %for.end38.4.29.loopexit, %for.inc53.3.29
  %partial_sum.0.lcssa.4.29 = phi float [ 0.000000e+00, %for.inc53.3.29 ], [ %partial_sum.3.4.29.lcssa, %for.end38.4.29.loopexit ]
  br i1 %tobool39, label %if.else.4.29, label %if.then40.4.29

if.then40.4.29:                                   ; preds = %for.end38.4.29
  %cmp41.4.29 = fcmp olt float %partial_sum.0.lcssa.4.29, 0.000000e+00
  %sub42.4.29 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.29
  %cond.4.29 = select i1 %cmp41.4.29, float %sub42.4.29, float %partial_sum.0.lcssa.4.29
  %conv.4.29 = fptoui float %cond.4.29 to i8
  %conv43.4.29 = uitofp i8 %conv.4.29 to float
  %2090 = add nsw i64 %indvars.iv.next21.3.29, %2049
  %arrayidx47.4.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2090
  store float %conv43.4.29, float* %arrayidx47.4.29, align 4
  br label %for.inc53.4.29

if.else.4.29:                                     ; preds = %for.end38.4.29
  %2091 = add nsw i64 %indvars.iv.next21.3.29, %2048
  %arrayidx51.4.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2091
  store float %partial_sum.0.lcssa.4.29, float* %arrayidx51.4.29, align 4
  br label %for.inc53.4.29

for.inc53.4.29:                                   ; preds = %if.else.4.29, %if.then40.4.29
  %inc54.4.29 = add nsw i32 %in_j.011.29, 5
  %indvars.iv.next21.4.29 = add nsw i64 %indvars.iv20.29, 5
  br i1 %cmp94, label %for.end38.5.29, label %for.body10.5.29.preheader

for.body10.5.29.preheader:                        ; preds = %for.inc53.4.29
  br label %for.body10.5.29

for.body10.5.29:                                  ; preds = %for.body10.5.29.preheader, %for.inc36.5.29
  %ki.06.5.29 = phi i32 [ %inc37.5.29, %for.inc36.5.29 ], [ 0, %for.body10.5.29.preheader ]
  %partial_sum.05.5.29 = phi float [ %partial_sum.3.5.29, %for.inc36.5.29 ], [ 0.000000e+00, %for.body10.5.29.preheader ]
  %add.5.29 = add nsw i32 %ki.06.5.29, %inc58.28
  %notlhs.5.29 = icmp slt i32 %add.5.29, 0
  %notrhs.5.29 = icmp uge i32 %add.5.29, %img_height
  %.not.5.29 = or i1 %notrhs.5.29, %notlhs.5.29
  %brmerge.5.29 = or i1 %.not.5.29, %cmp151.not.5.29
  br i1 %brmerge.5.29, label %for.inc36.5.29, label %for.body16.lr.ph.5.29

for.body16.lr.ph.5.29:                            ; preds = %for.body10.5.29
  %mul.5.29 = shl i32 %add.5.29, 7
  %mul30.5.29 = mul i32 %ki.06.5.29, %kern_width
  br label %for.body16.5.29

for.body16.5.29:                                  ; preds = %for.inc.5.29, %for.body16.lr.ph.5.29
  %indvars.iv.5.29 = phi i64 [ 0, %for.body16.lr.ph.5.29 ], [ %indvars.iv.next.5.29, %for.inc.5.29 ]
  %partial_sum.12.5.29 = phi float [ %partial_sum.05.5.29, %for.body16.lr.ph.5.29 ], [ %partial_sum.2.5.29, %for.inc.5.29 ]
  %2092 = trunc i64 %indvars.iv.5.29 to i32
  %add17.5.29 = add nsw i32 %2092, %inc54.4.29
  %cmp18.5.29 = icmp sgt i32 %add17.5.29, -1
  %cmp21.5.29 = icmp ult i32 %add17.5.29, %img_width
  %2093 = and i1 %cmp18.5.29, %cmp21.5.29
  br i1 %2093, label %if.end26.5.29, label %for.inc.5.29

if.end26.5.29:                                    ; preds = %for.body16.5.29
  %add29.5.29 = add nsw i32 %add17.5.29, %mul.5.29
  %idxprom.5.29 = sext i32 %add29.5.29 to i64
  %arrayidx.5.29 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.29
  %2094 = load float, float* %arrayidx.5.29, align 4
  %2095 = trunc i64 %indvars.iv.5.29 to i32
  %add31.5.29 = add i32 %2095, %mul30.5.29
  %idxprom32.5.29 = zext i32 %add31.5.29 to i64
  %arrayidx33.5.29 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.29
  %2096 = load float, float* %arrayidx33.5.29, align 4
  %mul34.5.29 = fmul float %2094, %2096
  %add35.5.29 = fadd float %partial_sum.12.5.29, %mul34.5.29
  br label %for.inc.5.29

for.inc.5.29:                                     ; preds = %if.end26.5.29, %for.body16.5.29
  %partial_sum.2.5.29 = phi float [ %add35.5.29, %if.end26.5.29 ], [ %partial_sum.12.5.29, %for.body16.5.29 ]
  %indvars.iv.next.5.29 = add nuw nsw i64 %indvars.iv.5.29, 1
  %lftr.wideiv.5.29 = trunc i64 %indvars.iv.next.5.29 to i32
  %exitcond.5.29 = icmp eq i32 %lftr.wideiv.5.29, %kern_width
  br i1 %exitcond.5.29, label %for.inc36.5.29.loopexit, label %for.body16.5.29, !llvm.loop !1

for.inc36.5.29.loopexit:                          ; preds = %for.inc.5.29
  %partial_sum.2.5.29.lcssa = phi float [ %partial_sum.2.5.29, %for.inc.5.29 ]
  br label %for.inc36.5.29

for.inc36.5.29:                                   ; preds = %for.inc36.5.29.loopexit, %for.body10.5.29
  %partial_sum.3.5.29 = phi float [ %partial_sum.05.5.29, %for.body10.5.29 ], [ %partial_sum.2.5.29.lcssa, %for.inc36.5.29.loopexit ]
  %inc37.5.29 = add nuw nsw i32 %ki.06.5.29, 1
  %exitcond19.5.29 = icmp eq i32 %inc37.5.29, %kern_height
  br i1 %exitcond19.5.29, label %for.end38.5.29.loopexit, label %for.body10.5.29, !llvm.loop !3

for.end38.5.29.loopexit:                          ; preds = %for.inc36.5.29
  %partial_sum.3.5.29.lcssa = phi float [ %partial_sum.3.5.29, %for.inc36.5.29 ]
  br label %for.end38.5.29

for.end38.5.29:                                   ; preds = %for.end38.5.29.loopexit, %for.inc53.4.29
  %partial_sum.0.lcssa.5.29 = phi float [ 0.000000e+00, %for.inc53.4.29 ], [ %partial_sum.3.5.29.lcssa, %for.end38.5.29.loopexit ]
  br i1 %tobool39, label %if.else.5.29, label %if.then40.5.29

if.then40.5.29:                                   ; preds = %for.end38.5.29
  %cmp41.5.29 = fcmp olt float %partial_sum.0.lcssa.5.29, 0.000000e+00
  %sub42.5.29 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.29
  %cond.5.29 = select i1 %cmp41.5.29, float %sub42.5.29, float %partial_sum.0.lcssa.5.29
  %conv.5.29 = fptoui float %cond.5.29 to i8
  %conv43.5.29 = uitofp i8 %conv.5.29 to float
  %2097 = add nsw i64 %indvars.iv.next21.4.29, %2049
  %arrayidx47.5.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2097
  store float %conv43.5.29, float* %arrayidx47.5.29, align 4
  br label %for.inc53.5.29

if.else.5.29:                                     ; preds = %for.end38.5.29
  %2098 = add nsw i64 %indvars.iv.next21.4.29, %2048
  %arrayidx51.5.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2098
  store float %partial_sum.0.lcssa.5.29, float* %arrayidx51.5.29, align 4
  br label %for.inc53.5.29

for.inc53.5.29:                                   ; preds = %if.else.5.29, %if.then40.5.29
  %inc54.5.29 = add nsw i32 %in_j.011.29, 6
  %indvars.iv.next21.5.29 = add nsw i64 %indvars.iv20.29, 6
  br i1 %cmp94, label %for.end38.6.29, label %for.body10.6.29.preheader

for.body10.6.29.preheader:                        ; preds = %for.inc53.5.29
  br label %for.body10.6.29

for.body10.6.29:                                  ; preds = %for.body10.6.29.preheader, %for.inc36.6.29
  %ki.06.6.29 = phi i32 [ %inc37.6.29, %for.inc36.6.29 ], [ 0, %for.body10.6.29.preheader ]
  %partial_sum.05.6.29 = phi float [ %partial_sum.3.6.29, %for.inc36.6.29 ], [ 0.000000e+00, %for.body10.6.29.preheader ]
  %add.6.29 = add nsw i32 %ki.06.6.29, %inc58.28
  %notlhs.6.29 = icmp slt i32 %add.6.29, 0
  %notrhs.6.29 = icmp uge i32 %add.6.29, %img_height
  %.not.6.29 = or i1 %notrhs.6.29, %notlhs.6.29
  %brmerge.6.29 = or i1 %.not.6.29, %cmp151.not.6.29
  br i1 %brmerge.6.29, label %for.inc36.6.29, label %for.body16.lr.ph.6.29

for.body16.lr.ph.6.29:                            ; preds = %for.body10.6.29
  %mul.6.29 = shl i32 %add.6.29, 7
  %mul30.6.29 = mul i32 %ki.06.6.29, %kern_width
  br label %for.body16.6.29

for.body16.6.29:                                  ; preds = %for.inc.6.29, %for.body16.lr.ph.6.29
  %indvars.iv.6.29 = phi i64 [ 0, %for.body16.lr.ph.6.29 ], [ %indvars.iv.next.6.29, %for.inc.6.29 ]
  %partial_sum.12.6.29 = phi float [ %partial_sum.05.6.29, %for.body16.lr.ph.6.29 ], [ %partial_sum.2.6.29, %for.inc.6.29 ]
  %2099 = trunc i64 %indvars.iv.6.29 to i32
  %add17.6.29 = add nsw i32 %2099, %inc54.5.29
  %cmp18.6.29 = icmp sgt i32 %add17.6.29, -1
  %cmp21.6.29 = icmp ult i32 %add17.6.29, %img_width
  %2100 = and i1 %cmp18.6.29, %cmp21.6.29
  br i1 %2100, label %if.end26.6.29, label %for.inc.6.29

if.end26.6.29:                                    ; preds = %for.body16.6.29
  %add29.6.29 = add nsw i32 %add17.6.29, %mul.6.29
  %idxprom.6.29 = sext i32 %add29.6.29 to i64
  %arrayidx.6.29 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.29
  %2101 = load float, float* %arrayidx.6.29, align 4
  %2102 = trunc i64 %indvars.iv.6.29 to i32
  %add31.6.29 = add i32 %2102, %mul30.6.29
  %idxprom32.6.29 = zext i32 %add31.6.29 to i64
  %arrayidx33.6.29 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.29
  %2103 = load float, float* %arrayidx33.6.29, align 4
  %mul34.6.29 = fmul float %2101, %2103
  %add35.6.29 = fadd float %partial_sum.12.6.29, %mul34.6.29
  br label %for.inc.6.29

for.inc.6.29:                                     ; preds = %if.end26.6.29, %for.body16.6.29
  %partial_sum.2.6.29 = phi float [ %add35.6.29, %if.end26.6.29 ], [ %partial_sum.12.6.29, %for.body16.6.29 ]
  %indvars.iv.next.6.29 = add nuw nsw i64 %indvars.iv.6.29, 1
  %lftr.wideiv.6.29 = trunc i64 %indvars.iv.next.6.29 to i32
  %exitcond.6.29 = icmp eq i32 %lftr.wideiv.6.29, %kern_width
  br i1 %exitcond.6.29, label %for.inc36.6.29.loopexit, label %for.body16.6.29, !llvm.loop !1

for.inc36.6.29.loopexit:                          ; preds = %for.inc.6.29
  %partial_sum.2.6.29.lcssa = phi float [ %partial_sum.2.6.29, %for.inc.6.29 ]
  br label %for.inc36.6.29

for.inc36.6.29:                                   ; preds = %for.inc36.6.29.loopexit, %for.body10.6.29
  %partial_sum.3.6.29 = phi float [ %partial_sum.05.6.29, %for.body10.6.29 ], [ %partial_sum.2.6.29.lcssa, %for.inc36.6.29.loopexit ]
  %inc37.6.29 = add nuw nsw i32 %ki.06.6.29, 1
  %exitcond19.6.29 = icmp eq i32 %inc37.6.29, %kern_height
  br i1 %exitcond19.6.29, label %for.end38.6.29.loopexit, label %for.body10.6.29, !llvm.loop !3

for.end38.6.29.loopexit:                          ; preds = %for.inc36.6.29
  %partial_sum.3.6.29.lcssa = phi float [ %partial_sum.3.6.29, %for.inc36.6.29 ]
  br label %for.end38.6.29

for.end38.6.29:                                   ; preds = %for.end38.6.29.loopexit, %for.inc53.5.29
  %partial_sum.0.lcssa.6.29 = phi float [ 0.000000e+00, %for.inc53.5.29 ], [ %partial_sum.3.6.29.lcssa, %for.end38.6.29.loopexit ]
  br i1 %tobool39, label %if.else.6.29, label %if.then40.6.29

if.then40.6.29:                                   ; preds = %for.end38.6.29
  %cmp41.6.29 = fcmp olt float %partial_sum.0.lcssa.6.29, 0.000000e+00
  %sub42.6.29 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.29
  %cond.6.29 = select i1 %cmp41.6.29, float %sub42.6.29, float %partial_sum.0.lcssa.6.29
  %conv.6.29 = fptoui float %cond.6.29 to i8
  %conv43.6.29 = uitofp i8 %conv.6.29 to float
  %2104 = add nsw i64 %indvars.iv.next21.5.29, %2049
  %arrayidx47.6.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2104
  store float %conv43.6.29, float* %arrayidx47.6.29, align 4
  br label %for.inc53.6.29

if.else.6.29:                                     ; preds = %for.end38.6.29
  %2105 = add nsw i64 %indvars.iv.next21.5.29, %2048
  %arrayidx51.6.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2105
  store float %partial_sum.0.lcssa.6.29, float* %arrayidx51.6.29, align 4
  br label %for.inc53.6.29

for.inc53.6.29:                                   ; preds = %if.else.6.29, %if.then40.6.29
  %inc54.6.29 = add nsw i32 %in_j.011.29, 7
  %indvars.iv.next21.6.29 = add nsw i64 %indvars.iv20.29, 7
  br i1 %cmp94, label %for.end38.7.29, label %for.body10.7.29.preheader

for.body10.7.29.preheader:                        ; preds = %for.inc53.6.29
  br label %for.body10.7.29

for.body10.7.29:                                  ; preds = %for.body10.7.29.preheader, %for.inc36.7.29
  %ki.06.7.29 = phi i32 [ %inc37.7.29, %for.inc36.7.29 ], [ 0, %for.body10.7.29.preheader ]
  %partial_sum.05.7.29 = phi float [ %partial_sum.3.7.29, %for.inc36.7.29 ], [ 0.000000e+00, %for.body10.7.29.preheader ]
  %add.7.29 = add nsw i32 %ki.06.7.29, %inc58.28
  %notlhs.7.29 = icmp slt i32 %add.7.29, 0
  %notrhs.7.29 = icmp uge i32 %add.7.29, %img_height
  %.not.7.29 = or i1 %notrhs.7.29, %notlhs.7.29
  %brmerge.7.29 = or i1 %.not.7.29, %cmp151.not.7.29
  br i1 %brmerge.7.29, label %for.inc36.7.29, label %for.body16.lr.ph.7.29

for.body16.lr.ph.7.29:                            ; preds = %for.body10.7.29
  %mul.7.29 = shl i32 %add.7.29, 7
  %mul30.7.29 = mul i32 %ki.06.7.29, %kern_width
  br label %for.body16.7.29

for.body16.7.29:                                  ; preds = %for.inc.7.29, %for.body16.lr.ph.7.29
  %indvars.iv.7.29 = phi i64 [ 0, %for.body16.lr.ph.7.29 ], [ %indvars.iv.next.7.29, %for.inc.7.29 ]
  %partial_sum.12.7.29 = phi float [ %partial_sum.05.7.29, %for.body16.lr.ph.7.29 ], [ %partial_sum.2.7.29, %for.inc.7.29 ]
  %2106 = trunc i64 %indvars.iv.7.29 to i32
  %add17.7.29 = add nsw i32 %2106, %inc54.6.29
  %cmp18.7.29 = icmp sgt i32 %add17.7.29, -1
  %cmp21.7.29 = icmp ult i32 %add17.7.29, %img_width
  %2107 = and i1 %cmp18.7.29, %cmp21.7.29
  br i1 %2107, label %if.end26.7.29, label %for.inc.7.29

if.end26.7.29:                                    ; preds = %for.body16.7.29
  %add29.7.29 = add nsw i32 %add17.7.29, %mul.7.29
  %idxprom.7.29 = sext i32 %add29.7.29 to i64
  %arrayidx.7.29 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.29
  %2108 = load float, float* %arrayidx.7.29, align 4
  %2109 = trunc i64 %indvars.iv.7.29 to i32
  %add31.7.29 = add i32 %2109, %mul30.7.29
  %idxprom32.7.29 = zext i32 %add31.7.29 to i64
  %arrayidx33.7.29 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.29
  %2110 = load float, float* %arrayidx33.7.29, align 4
  %mul34.7.29 = fmul float %2108, %2110
  %add35.7.29 = fadd float %partial_sum.12.7.29, %mul34.7.29
  br label %for.inc.7.29

for.inc.7.29:                                     ; preds = %if.end26.7.29, %for.body16.7.29
  %partial_sum.2.7.29 = phi float [ %add35.7.29, %if.end26.7.29 ], [ %partial_sum.12.7.29, %for.body16.7.29 ]
  %indvars.iv.next.7.29 = add nuw nsw i64 %indvars.iv.7.29, 1
  %lftr.wideiv.7.29 = trunc i64 %indvars.iv.next.7.29 to i32
  %exitcond.7.29 = icmp eq i32 %lftr.wideiv.7.29, %kern_width
  br i1 %exitcond.7.29, label %for.inc36.7.29.loopexit, label %for.body16.7.29, !llvm.loop !1

for.inc36.7.29.loopexit:                          ; preds = %for.inc.7.29
  %partial_sum.2.7.29.lcssa = phi float [ %partial_sum.2.7.29, %for.inc.7.29 ]
  br label %for.inc36.7.29

for.inc36.7.29:                                   ; preds = %for.inc36.7.29.loopexit, %for.body10.7.29
  %partial_sum.3.7.29 = phi float [ %partial_sum.05.7.29, %for.body10.7.29 ], [ %partial_sum.2.7.29.lcssa, %for.inc36.7.29.loopexit ]
  %inc37.7.29 = add nuw nsw i32 %ki.06.7.29, 1
  %exitcond19.7.29 = icmp eq i32 %inc37.7.29, %kern_height
  br i1 %exitcond19.7.29, label %for.end38.7.29.loopexit, label %for.body10.7.29, !llvm.loop !3

for.end38.7.29.loopexit:                          ; preds = %for.inc36.7.29
  %partial_sum.3.7.29.lcssa = phi float [ %partial_sum.3.7.29, %for.inc36.7.29 ]
  br label %for.end38.7.29

for.end38.7.29:                                   ; preds = %for.end38.7.29.loopexit, %for.inc53.6.29
  %partial_sum.0.lcssa.7.29 = phi float [ 0.000000e+00, %for.inc53.6.29 ], [ %partial_sum.3.7.29.lcssa, %for.end38.7.29.loopexit ]
  br i1 %tobool39, label %if.else.7.29, label %if.then40.7.29

if.then40.7.29:                                   ; preds = %for.end38.7.29
  %cmp41.7.29 = fcmp olt float %partial_sum.0.lcssa.7.29, 0.000000e+00
  %sub42.7.29 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.29
  %cond.7.29 = select i1 %cmp41.7.29, float %sub42.7.29, float %partial_sum.0.lcssa.7.29
  %conv.7.29 = fptoui float %cond.7.29 to i8
  %conv43.7.29 = uitofp i8 %conv.7.29 to float
  %2111 = add nsw i64 %indvars.iv.next21.6.29, %2049
  %arrayidx47.7.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2111
  store float %conv43.7.29, float* %arrayidx47.7.29, align 4
  br label %for.inc53.7.29

if.else.7.29:                                     ; preds = %for.end38.7.29
  %2112 = add nsw i64 %indvars.iv.next21.6.29, %2048
  %arrayidx51.7.29 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2112
  store float %partial_sum.0.lcssa.7.29, float* %arrayidx51.7.29, align 4
  br label %for.inc53.7.29

for.inc53.7.29:                                   ; preds = %if.else.7.29, %if.then40.7.29
  %inc54.7.29 = add nsw i32 %in_j.011.29, 8
  %indvars.iv.next21.7.29 = add nsw i64 %indvars.iv20.29, 8
  %lftr.wideiv24.7.29 = trunc i64 %indvars.iv.next21.7.29 to i32
  %exitcond25.7.29 = icmp eq i32 %lftr.wideiv24.7.29, %img_width
  br i1 %exitcond25.7.29, label %for.inc57.29.loopexit, label %for.cond8.preheader.29, !llvm.loop !5

for.inc57.29.loopexit:                            ; preds = %for.inc53.7.29
  br label %for.inc57.29

for.inc57.29:                                     ; preds = %for.inc57.29.loopexit, %for.cond8.preheader.lr.ph.split.29
  %inc58.29 = add nsw i32 %in_i.015, 30
  %indvars.iv.next27.29 = add nsw i64 %indvars.iv26, 30
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.30

for.cond8.preheader.lr.ph.30:                     ; preds = %for.inc57.29
  %2113 = trunc i64 %indvars.iv.next27.29 to i32
  %mul48.30 = shl i32 %2113, 7
  %2114 = trunc i64 %indvars.iv.next27.29 to i32
  %mul44.30 = shl i32 %2114, 7
  %2115 = sext i32 %mul48.30 to i64
  %2116 = sext i32 %mul44.30 to i64
  br i1 %lcmp.mod.30, label %for.cond8.preheader.lr.ph.split.30, label %for.cond8.preheader.prol.30.preheader

for.cond8.preheader.prol.30.preheader:            ; preds = %for.cond8.preheader.lr.ph.30
  br label %for.cond8.preheader.prol.30

for.cond8.preheader.prol.30:                      ; preds = %for.cond8.preheader.prol.30.preheader, %for.inc53.prol.30
  %indvars.iv20.prol.30 = phi i64 [ %indvars.iv.next21.prol.30, %for.inc53.prol.30 ], [ 0, %for.cond8.preheader.prol.30.preheader ]
  %in_j.011.prol.30 = phi i32 [ %inc54.prol.30, %for.inc53.prol.30 ], [ %sub4, %for.cond8.preheader.prol.30.preheader ]
  %prol.iter.30 = phi i32 [ %prol.iter.sub.30, %for.inc53.prol.30 ], [ %xtraiter.30, %for.cond8.preheader.prol.30.preheader ]
  br i1 %cmp94, label %for.end38.prol.30, label %for.body10.prol.30.preheader

for.body10.prol.30.preheader:                     ; preds = %for.cond8.preheader.prol.30
  br label %for.body10.prol.30

for.body10.prol.30:                               ; preds = %for.body10.prol.30.preheader, %for.inc36.prol.30
  %ki.06.prol.30 = phi i32 [ %inc37.prol.30, %for.inc36.prol.30 ], [ 0, %for.body10.prol.30.preheader ]
  %partial_sum.05.prol.30 = phi float [ %partial_sum.3.prol.30, %for.inc36.prol.30 ], [ 0.000000e+00, %for.body10.prol.30.preheader ]
  %add.prol.30 = add nsw i32 %ki.06.prol.30, %inc58.29
  %notlhs.prol.30 = icmp slt i32 %add.prol.30, 0
  %notrhs.prol.30 = icmp uge i32 %add.prol.30, %img_height
  %.not.prol.30 = or i1 %notrhs.prol.30, %notlhs.prol.30
  %brmerge.prol.30 = or i1 %.not.prol.30, %cmp151.not.prol.30
  br i1 %brmerge.prol.30, label %for.inc36.prol.30, label %for.body16.lr.ph.prol.30

for.body16.lr.ph.prol.30:                         ; preds = %for.body10.prol.30
  %mul.prol.30 = shl i32 %add.prol.30, 7
  %mul30.prol.30 = mul i32 %ki.06.prol.30, %kern_width
  br label %for.body16.prol.30

for.body16.prol.30:                               ; preds = %for.inc.prol.30, %for.body16.lr.ph.prol.30
  %indvars.iv.prol.30 = phi i64 [ 0, %for.body16.lr.ph.prol.30 ], [ %indvars.iv.next.prol.30, %for.inc.prol.30 ]
  %partial_sum.12.prol.30 = phi float [ %partial_sum.05.prol.30, %for.body16.lr.ph.prol.30 ], [ %partial_sum.2.prol.30, %for.inc.prol.30 ]
  %2117 = trunc i64 %indvars.iv.prol.30 to i32
  %add17.prol.30 = add nsw i32 %2117, %in_j.011.prol.30
  %cmp18.prol.30 = icmp sgt i32 %add17.prol.30, -1
  %cmp21.prol.30 = icmp ult i32 %add17.prol.30, %img_width
  %2118 = and i1 %cmp18.prol.30, %cmp21.prol.30
  br i1 %2118, label %if.end26.prol.30, label %for.inc.prol.30

if.end26.prol.30:                                 ; preds = %for.body16.prol.30
  %add29.prol.30 = add nsw i32 %add17.prol.30, %mul.prol.30
  %idxprom.prol.30 = sext i32 %add29.prol.30 to i64
  %arrayidx.prol.30 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.30
  %2119 = load float, float* %arrayidx.prol.30, align 4
  %2120 = trunc i64 %indvars.iv.prol.30 to i32
  %add31.prol.30 = add i32 %2120, %mul30.prol.30
  %idxprom32.prol.30 = zext i32 %add31.prol.30 to i64
  %arrayidx33.prol.30 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.30
  %2121 = load float, float* %arrayidx33.prol.30, align 4
  %mul34.prol.30 = fmul float %2119, %2121
  %add35.prol.30 = fadd float %partial_sum.12.prol.30, %mul34.prol.30
  br label %for.inc.prol.30

for.inc.prol.30:                                  ; preds = %if.end26.prol.30, %for.body16.prol.30
  %partial_sum.2.prol.30 = phi float [ %add35.prol.30, %if.end26.prol.30 ], [ %partial_sum.12.prol.30, %for.body16.prol.30 ]
  %indvars.iv.next.prol.30 = add nuw nsw i64 %indvars.iv.prol.30, 1
  %lftr.wideiv.prol.30 = trunc i64 %indvars.iv.next.prol.30 to i32
  %exitcond.prol.30 = icmp eq i32 %lftr.wideiv.prol.30, %kern_width
  br i1 %exitcond.prol.30, label %for.inc36.prol.30.loopexit, label %for.body16.prol.30, !llvm.loop !1

for.inc36.prol.30.loopexit:                       ; preds = %for.inc.prol.30
  %partial_sum.2.prol.30.lcssa = phi float [ %partial_sum.2.prol.30, %for.inc.prol.30 ]
  br label %for.inc36.prol.30

for.inc36.prol.30:                                ; preds = %for.inc36.prol.30.loopexit, %for.body10.prol.30
  %partial_sum.3.prol.30 = phi float [ %partial_sum.05.prol.30, %for.body10.prol.30 ], [ %partial_sum.2.prol.30.lcssa, %for.inc36.prol.30.loopexit ]
  %inc37.prol.30 = add nuw nsw i32 %ki.06.prol.30, 1
  %exitcond19.prol.30 = icmp eq i32 %inc37.prol.30, %kern_height
  br i1 %exitcond19.prol.30, label %for.end38.prol.30.loopexit, label %for.body10.prol.30, !llvm.loop !3

for.end38.prol.30.loopexit:                       ; preds = %for.inc36.prol.30
  %partial_sum.3.prol.30.lcssa = phi float [ %partial_sum.3.prol.30, %for.inc36.prol.30 ]
  br label %for.end38.prol.30

for.end38.prol.30:                                ; preds = %for.end38.prol.30.loopexit, %for.cond8.preheader.prol.30
  %partial_sum.0.lcssa.prol.30 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.30 ], [ %partial_sum.3.prol.30.lcssa, %for.end38.prol.30.loopexit ]
  br i1 %tobool39, label %if.else.prol.30, label %if.then40.prol.30

if.then40.prol.30:                                ; preds = %for.end38.prol.30
  %cmp41.prol.30 = fcmp olt float %partial_sum.0.lcssa.prol.30, 0.000000e+00
  %sub42.prol.30 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.30
  %cond.prol.30 = select i1 %cmp41.prol.30, float %sub42.prol.30, float %partial_sum.0.lcssa.prol.30
  %conv.prol.30 = fptoui float %cond.prol.30 to i8
  %conv43.prol.30 = uitofp i8 %conv.prol.30 to float
  %2122 = add nsw i64 %indvars.iv20.prol.30, %2116
  %arrayidx47.prol.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2122
  store float %conv43.prol.30, float* %arrayidx47.prol.30, align 4
  br label %for.inc53.prol.30

if.else.prol.30:                                  ; preds = %for.end38.prol.30
  %2123 = add nsw i64 %indvars.iv20.prol.30, %2115
  %arrayidx51.prol.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2123
  store float %partial_sum.0.lcssa.prol.30, float* %arrayidx51.prol.30, align 4
  br label %for.inc53.prol.30

for.inc53.prol.30:                                ; preds = %if.else.prol.30, %if.then40.prol.30
  %inc54.prol.30 = add nsw i32 %in_j.011.prol.30, 1
  %indvars.iv.next21.prol.30 = add nuw nsw i64 %indvars.iv20.prol.30, 1
  %prol.iter.sub.30 = add i32 %prol.iter.30, -1
  %prol.iter.cmp.30 = icmp eq i32 %prol.iter.sub.30, 0
  br i1 %prol.iter.cmp.30, label %for.cond8.preheader.lr.ph.split.30.loopexit, label %for.cond8.preheader.prol.30, !llvm.loop !4

for.cond8.preheader.lr.ph.split.30.loopexit:      ; preds = %for.inc53.prol.30
  %indvars.iv.next21.prol.30.lcssa = phi i64 [ %indvars.iv.next21.prol.30, %for.inc53.prol.30 ]
  %inc54.prol.30.lcssa = phi i32 [ %inc54.prol.30, %for.inc53.prol.30 ]
  br label %for.cond8.preheader.lr.ph.split.30

for.cond8.preheader.lr.ph.split.30:               ; preds = %for.cond8.preheader.lr.ph.split.30.loopexit, %for.cond8.preheader.lr.ph.30
  %indvars.iv20.unr.30 = phi i64 [ 0, %for.cond8.preheader.lr.ph.30 ], [ %indvars.iv.next21.prol.30.lcssa, %for.cond8.preheader.lr.ph.split.30.loopexit ]
  %in_j.011.unr.30 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.30 ], [ %inc54.prol.30.lcssa, %for.cond8.preheader.lr.ph.split.30.loopexit ]
  br i1 %101, label %for.inc57.30, label %for.cond8.preheader.30.preheader

for.cond8.preheader.30.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.30
  br label %for.cond8.preheader.30

for.cond8.preheader.30:                           ; preds = %for.cond8.preheader.30.preheader, %for.inc53.7.30
  %indvars.iv20.30 = phi i64 [ %indvars.iv.next21.7.30, %for.inc53.7.30 ], [ %indvars.iv20.unr.30, %for.cond8.preheader.30.preheader ]
  %in_j.011.30 = phi i32 [ %inc54.7.30, %for.inc53.7.30 ], [ %in_j.011.unr.30, %for.cond8.preheader.30.preheader ]
  br i1 %cmp94, label %for.end38.30, label %for.body10.30.preheader

for.body10.30.preheader:                          ; preds = %for.cond8.preheader.30
  br label %for.body10.30

for.body10.30:                                    ; preds = %for.body10.30.preheader, %for.inc36.30
  %ki.06.30 = phi i32 [ %inc37.30, %for.inc36.30 ], [ 0, %for.body10.30.preheader ]
  %partial_sum.05.30 = phi float [ %partial_sum.3.30, %for.inc36.30 ], [ 0.000000e+00, %for.body10.30.preheader ]
  %add.30 = add nsw i32 %ki.06.30, %inc58.29
  %notlhs.30 = icmp slt i32 %add.30, 0
  %notrhs.30 = icmp uge i32 %add.30, %img_height
  %.not.30 = or i1 %notrhs.30, %notlhs.30
  %brmerge.30 = or i1 %.not.30, %cmp151.not.30
  br i1 %brmerge.30, label %for.inc36.30, label %for.body16.lr.ph.30

for.body16.lr.ph.30:                              ; preds = %for.body10.30
  %mul.30 = shl i32 %add.30, 7
  %mul30.30 = mul i32 %ki.06.30, %kern_width
  br label %for.body16.30

for.body16.30:                                    ; preds = %for.inc.30, %for.body16.lr.ph.30
  %indvars.iv.30 = phi i64 [ 0, %for.body16.lr.ph.30 ], [ %indvars.iv.next.30, %for.inc.30 ]
  %partial_sum.12.30 = phi float [ %partial_sum.05.30, %for.body16.lr.ph.30 ], [ %partial_sum.2.30, %for.inc.30 ]
  %2124 = trunc i64 %indvars.iv.30 to i32
  %add17.30 = add nsw i32 %2124, %in_j.011.30
  %cmp18.30 = icmp sgt i32 %add17.30, -1
  %cmp21.30 = icmp ult i32 %add17.30, %img_width
  %2125 = and i1 %cmp18.30, %cmp21.30
  br i1 %2125, label %if.end26.30, label %for.inc.30

if.end26.30:                                      ; preds = %for.body16.30
  %add29.30 = add nsw i32 %add17.30, %mul.30
  %idxprom.30 = sext i32 %add29.30 to i64
  %arrayidx.30 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.30
  %2126 = load float, float* %arrayidx.30, align 4
  %2127 = trunc i64 %indvars.iv.30 to i32
  %add31.30 = add i32 %2127, %mul30.30
  %idxprom32.30 = zext i32 %add31.30 to i64
  %arrayidx33.30 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.30
  %2128 = load float, float* %arrayidx33.30, align 4
  %mul34.30 = fmul float %2126, %2128
  %add35.30 = fadd float %partial_sum.12.30, %mul34.30
  br label %for.inc.30

for.inc.30:                                       ; preds = %if.end26.30, %for.body16.30
  %partial_sum.2.30 = phi float [ %add35.30, %if.end26.30 ], [ %partial_sum.12.30, %for.body16.30 ]
  %indvars.iv.next.30 = add nuw nsw i64 %indvars.iv.30, 1
  %lftr.wideiv.30 = trunc i64 %indvars.iv.next.30 to i32
  %exitcond.30 = icmp eq i32 %lftr.wideiv.30, %kern_width
  br i1 %exitcond.30, label %for.inc36.30.loopexit, label %for.body16.30, !llvm.loop !1

for.inc36.30.loopexit:                            ; preds = %for.inc.30
  %partial_sum.2.30.lcssa = phi float [ %partial_sum.2.30, %for.inc.30 ]
  br label %for.inc36.30

for.inc36.30:                                     ; preds = %for.inc36.30.loopexit, %for.body10.30
  %partial_sum.3.30 = phi float [ %partial_sum.05.30, %for.body10.30 ], [ %partial_sum.2.30.lcssa, %for.inc36.30.loopexit ]
  %inc37.30 = add nuw nsw i32 %ki.06.30, 1
  %exitcond19.30 = icmp eq i32 %inc37.30, %kern_height
  br i1 %exitcond19.30, label %for.end38.30.loopexit, label %for.body10.30, !llvm.loop !3

for.end38.30.loopexit:                            ; preds = %for.inc36.30
  %partial_sum.3.30.lcssa = phi float [ %partial_sum.3.30, %for.inc36.30 ]
  br label %for.end38.30

for.end38.30:                                     ; preds = %for.end38.30.loopexit, %for.cond8.preheader.30
  %partial_sum.0.lcssa.30 = phi float [ 0.000000e+00, %for.cond8.preheader.30 ], [ %partial_sum.3.30.lcssa, %for.end38.30.loopexit ]
  br i1 %tobool39, label %if.else.30, label %if.then40.30

if.then40.30:                                     ; preds = %for.end38.30
  %cmp41.30 = fcmp olt float %partial_sum.0.lcssa.30, 0.000000e+00
  %sub42.30 = fsub float -0.000000e+00, %partial_sum.0.lcssa.30
  %cond.30 = select i1 %cmp41.30, float %sub42.30, float %partial_sum.0.lcssa.30
  %conv.30 = fptoui float %cond.30 to i8
  %conv43.30 = uitofp i8 %conv.30 to float
  %2129 = add nsw i64 %indvars.iv20.30, %2116
  %arrayidx47.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2129
  store float %conv43.30, float* %arrayidx47.30, align 4
  br label %for.inc53.30

if.else.30:                                       ; preds = %for.end38.30
  %2130 = add nsw i64 %indvars.iv20.30, %2115
  %arrayidx51.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2130
  store float %partial_sum.0.lcssa.30, float* %arrayidx51.30, align 4
  br label %for.inc53.30

for.inc53.30:                                     ; preds = %if.else.30, %if.then40.30
  %inc54.30 = add nsw i32 %in_j.011.30, 1
  %indvars.iv.next21.30 = add nuw nsw i64 %indvars.iv20.30, 1
  br i1 %cmp94, label %for.end38.1.30, label %for.body10.1.30.preheader

for.body10.1.30.preheader:                        ; preds = %for.inc53.30
  br label %for.body10.1.30

for.body10.1.30:                                  ; preds = %for.body10.1.30.preheader, %for.inc36.1.30
  %ki.06.1.30 = phi i32 [ %inc37.1.30, %for.inc36.1.30 ], [ 0, %for.body10.1.30.preheader ]
  %partial_sum.05.1.30 = phi float [ %partial_sum.3.1.30, %for.inc36.1.30 ], [ 0.000000e+00, %for.body10.1.30.preheader ]
  %add.1.30 = add nsw i32 %ki.06.1.30, %inc58.29
  %notlhs.1.30 = icmp slt i32 %add.1.30, 0
  %notrhs.1.30 = icmp uge i32 %add.1.30, %img_height
  %.not.1.30 = or i1 %notrhs.1.30, %notlhs.1.30
  %brmerge.1.30 = or i1 %.not.1.30, %cmp151.not.1.30
  br i1 %brmerge.1.30, label %for.inc36.1.30, label %for.body16.lr.ph.1.30

for.body16.lr.ph.1.30:                            ; preds = %for.body10.1.30
  %mul.1.30 = shl i32 %add.1.30, 7
  %mul30.1.30 = mul i32 %ki.06.1.30, %kern_width
  br label %for.body16.1.30

for.body16.1.30:                                  ; preds = %for.inc.1.30, %for.body16.lr.ph.1.30
  %indvars.iv.1.30 = phi i64 [ 0, %for.body16.lr.ph.1.30 ], [ %indvars.iv.next.1.30, %for.inc.1.30 ]
  %partial_sum.12.1.30 = phi float [ %partial_sum.05.1.30, %for.body16.lr.ph.1.30 ], [ %partial_sum.2.1.30, %for.inc.1.30 ]
  %2131 = trunc i64 %indvars.iv.1.30 to i32
  %add17.1.30 = add nsw i32 %2131, %inc54.30
  %cmp18.1.30 = icmp sgt i32 %add17.1.30, -1
  %cmp21.1.30 = icmp ult i32 %add17.1.30, %img_width
  %2132 = and i1 %cmp18.1.30, %cmp21.1.30
  br i1 %2132, label %if.end26.1.30, label %for.inc.1.30

if.end26.1.30:                                    ; preds = %for.body16.1.30
  %add29.1.30 = add nsw i32 %add17.1.30, %mul.1.30
  %idxprom.1.30 = sext i32 %add29.1.30 to i64
  %arrayidx.1.30 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.30
  %2133 = load float, float* %arrayidx.1.30, align 4
  %2134 = trunc i64 %indvars.iv.1.30 to i32
  %add31.1.30 = add i32 %2134, %mul30.1.30
  %idxprom32.1.30 = zext i32 %add31.1.30 to i64
  %arrayidx33.1.30 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.30
  %2135 = load float, float* %arrayidx33.1.30, align 4
  %mul34.1.30 = fmul float %2133, %2135
  %add35.1.30 = fadd float %partial_sum.12.1.30, %mul34.1.30
  br label %for.inc.1.30

for.inc.1.30:                                     ; preds = %if.end26.1.30, %for.body16.1.30
  %partial_sum.2.1.30 = phi float [ %add35.1.30, %if.end26.1.30 ], [ %partial_sum.12.1.30, %for.body16.1.30 ]
  %indvars.iv.next.1.30 = add nuw nsw i64 %indvars.iv.1.30, 1
  %lftr.wideiv.1.30 = trunc i64 %indvars.iv.next.1.30 to i32
  %exitcond.1.30 = icmp eq i32 %lftr.wideiv.1.30, %kern_width
  br i1 %exitcond.1.30, label %for.inc36.1.30.loopexit, label %for.body16.1.30, !llvm.loop !1

for.inc36.1.30.loopexit:                          ; preds = %for.inc.1.30
  %partial_sum.2.1.30.lcssa = phi float [ %partial_sum.2.1.30, %for.inc.1.30 ]
  br label %for.inc36.1.30

for.inc36.1.30:                                   ; preds = %for.inc36.1.30.loopexit, %for.body10.1.30
  %partial_sum.3.1.30 = phi float [ %partial_sum.05.1.30, %for.body10.1.30 ], [ %partial_sum.2.1.30.lcssa, %for.inc36.1.30.loopexit ]
  %inc37.1.30 = add nuw nsw i32 %ki.06.1.30, 1
  %exitcond19.1.30 = icmp eq i32 %inc37.1.30, %kern_height
  br i1 %exitcond19.1.30, label %for.end38.1.30.loopexit, label %for.body10.1.30, !llvm.loop !3

for.end38.1.30.loopexit:                          ; preds = %for.inc36.1.30
  %partial_sum.3.1.30.lcssa = phi float [ %partial_sum.3.1.30, %for.inc36.1.30 ]
  br label %for.end38.1.30

for.end38.1.30:                                   ; preds = %for.end38.1.30.loopexit, %for.inc53.30
  %partial_sum.0.lcssa.1.30 = phi float [ 0.000000e+00, %for.inc53.30 ], [ %partial_sum.3.1.30.lcssa, %for.end38.1.30.loopexit ]
  br i1 %tobool39, label %if.else.1.30, label %if.then40.1.30

if.then40.1.30:                                   ; preds = %for.end38.1.30
  %cmp41.1.30 = fcmp olt float %partial_sum.0.lcssa.1.30, 0.000000e+00
  %sub42.1.30 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.30
  %cond.1.30 = select i1 %cmp41.1.30, float %sub42.1.30, float %partial_sum.0.lcssa.1.30
  %conv.1.30 = fptoui float %cond.1.30 to i8
  %conv43.1.30 = uitofp i8 %conv.1.30 to float
  %2136 = add nsw i64 %indvars.iv.next21.30, %2116
  %arrayidx47.1.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2136
  store float %conv43.1.30, float* %arrayidx47.1.30, align 4
  br label %for.inc53.1.30

if.else.1.30:                                     ; preds = %for.end38.1.30
  %2137 = add nsw i64 %indvars.iv.next21.30, %2115
  %arrayidx51.1.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2137
  store float %partial_sum.0.lcssa.1.30, float* %arrayidx51.1.30, align 4
  br label %for.inc53.1.30

for.inc53.1.30:                                   ; preds = %if.else.1.30, %if.then40.1.30
  %inc54.1.30 = add nsw i32 %in_j.011.30, 2
  %indvars.iv.next21.1.30 = add nsw i64 %indvars.iv20.30, 2
  br i1 %cmp94, label %for.end38.2.30, label %for.body10.2.30.preheader

for.body10.2.30.preheader:                        ; preds = %for.inc53.1.30
  br label %for.body10.2.30

for.body10.2.30:                                  ; preds = %for.body10.2.30.preheader, %for.inc36.2.30
  %ki.06.2.30 = phi i32 [ %inc37.2.30, %for.inc36.2.30 ], [ 0, %for.body10.2.30.preheader ]
  %partial_sum.05.2.30 = phi float [ %partial_sum.3.2.30, %for.inc36.2.30 ], [ 0.000000e+00, %for.body10.2.30.preheader ]
  %add.2.30 = add nsw i32 %ki.06.2.30, %inc58.29
  %notlhs.2.30 = icmp slt i32 %add.2.30, 0
  %notrhs.2.30 = icmp uge i32 %add.2.30, %img_height
  %.not.2.30 = or i1 %notrhs.2.30, %notlhs.2.30
  %brmerge.2.30 = or i1 %.not.2.30, %cmp151.not.2.30
  br i1 %brmerge.2.30, label %for.inc36.2.30, label %for.body16.lr.ph.2.30

for.body16.lr.ph.2.30:                            ; preds = %for.body10.2.30
  %mul.2.30 = shl i32 %add.2.30, 7
  %mul30.2.30 = mul i32 %ki.06.2.30, %kern_width
  br label %for.body16.2.30

for.body16.2.30:                                  ; preds = %for.inc.2.30, %for.body16.lr.ph.2.30
  %indvars.iv.2.30 = phi i64 [ 0, %for.body16.lr.ph.2.30 ], [ %indvars.iv.next.2.30, %for.inc.2.30 ]
  %partial_sum.12.2.30 = phi float [ %partial_sum.05.2.30, %for.body16.lr.ph.2.30 ], [ %partial_sum.2.2.30, %for.inc.2.30 ]
  %2138 = trunc i64 %indvars.iv.2.30 to i32
  %add17.2.30 = add nsw i32 %2138, %inc54.1.30
  %cmp18.2.30 = icmp sgt i32 %add17.2.30, -1
  %cmp21.2.30 = icmp ult i32 %add17.2.30, %img_width
  %2139 = and i1 %cmp18.2.30, %cmp21.2.30
  br i1 %2139, label %if.end26.2.30, label %for.inc.2.30

if.end26.2.30:                                    ; preds = %for.body16.2.30
  %add29.2.30 = add nsw i32 %add17.2.30, %mul.2.30
  %idxprom.2.30 = sext i32 %add29.2.30 to i64
  %arrayidx.2.30 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.30
  %2140 = load float, float* %arrayidx.2.30, align 4
  %2141 = trunc i64 %indvars.iv.2.30 to i32
  %add31.2.30 = add i32 %2141, %mul30.2.30
  %idxprom32.2.30 = zext i32 %add31.2.30 to i64
  %arrayidx33.2.30 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.30
  %2142 = load float, float* %arrayidx33.2.30, align 4
  %mul34.2.30 = fmul float %2140, %2142
  %add35.2.30 = fadd float %partial_sum.12.2.30, %mul34.2.30
  br label %for.inc.2.30

for.inc.2.30:                                     ; preds = %if.end26.2.30, %for.body16.2.30
  %partial_sum.2.2.30 = phi float [ %add35.2.30, %if.end26.2.30 ], [ %partial_sum.12.2.30, %for.body16.2.30 ]
  %indvars.iv.next.2.30 = add nuw nsw i64 %indvars.iv.2.30, 1
  %lftr.wideiv.2.30 = trunc i64 %indvars.iv.next.2.30 to i32
  %exitcond.2.30 = icmp eq i32 %lftr.wideiv.2.30, %kern_width
  br i1 %exitcond.2.30, label %for.inc36.2.30.loopexit, label %for.body16.2.30, !llvm.loop !1

for.inc36.2.30.loopexit:                          ; preds = %for.inc.2.30
  %partial_sum.2.2.30.lcssa = phi float [ %partial_sum.2.2.30, %for.inc.2.30 ]
  br label %for.inc36.2.30

for.inc36.2.30:                                   ; preds = %for.inc36.2.30.loopexit, %for.body10.2.30
  %partial_sum.3.2.30 = phi float [ %partial_sum.05.2.30, %for.body10.2.30 ], [ %partial_sum.2.2.30.lcssa, %for.inc36.2.30.loopexit ]
  %inc37.2.30 = add nuw nsw i32 %ki.06.2.30, 1
  %exitcond19.2.30 = icmp eq i32 %inc37.2.30, %kern_height
  br i1 %exitcond19.2.30, label %for.end38.2.30.loopexit, label %for.body10.2.30, !llvm.loop !3

for.end38.2.30.loopexit:                          ; preds = %for.inc36.2.30
  %partial_sum.3.2.30.lcssa = phi float [ %partial_sum.3.2.30, %for.inc36.2.30 ]
  br label %for.end38.2.30

for.end38.2.30:                                   ; preds = %for.end38.2.30.loopexit, %for.inc53.1.30
  %partial_sum.0.lcssa.2.30 = phi float [ 0.000000e+00, %for.inc53.1.30 ], [ %partial_sum.3.2.30.lcssa, %for.end38.2.30.loopexit ]
  br i1 %tobool39, label %if.else.2.30, label %if.then40.2.30

if.then40.2.30:                                   ; preds = %for.end38.2.30
  %cmp41.2.30 = fcmp olt float %partial_sum.0.lcssa.2.30, 0.000000e+00
  %sub42.2.30 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.30
  %cond.2.30 = select i1 %cmp41.2.30, float %sub42.2.30, float %partial_sum.0.lcssa.2.30
  %conv.2.30 = fptoui float %cond.2.30 to i8
  %conv43.2.30 = uitofp i8 %conv.2.30 to float
  %2143 = add nsw i64 %indvars.iv.next21.1.30, %2116
  %arrayidx47.2.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2143
  store float %conv43.2.30, float* %arrayidx47.2.30, align 4
  br label %for.inc53.2.30

if.else.2.30:                                     ; preds = %for.end38.2.30
  %2144 = add nsw i64 %indvars.iv.next21.1.30, %2115
  %arrayidx51.2.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2144
  store float %partial_sum.0.lcssa.2.30, float* %arrayidx51.2.30, align 4
  br label %for.inc53.2.30

for.inc53.2.30:                                   ; preds = %if.else.2.30, %if.then40.2.30
  %inc54.2.30 = add nsw i32 %in_j.011.30, 3
  %indvars.iv.next21.2.30 = add nsw i64 %indvars.iv20.30, 3
  br i1 %cmp94, label %for.end38.3.30, label %for.body10.3.30.preheader

for.body10.3.30.preheader:                        ; preds = %for.inc53.2.30
  br label %for.body10.3.30

for.body10.3.30:                                  ; preds = %for.body10.3.30.preheader, %for.inc36.3.30
  %ki.06.3.30 = phi i32 [ %inc37.3.30, %for.inc36.3.30 ], [ 0, %for.body10.3.30.preheader ]
  %partial_sum.05.3.30 = phi float [ %partial_sum.3.3.30, %for.inc36.3.30 ], [ 0.000000e+00, %for.body10.3.30.preheader ]
  %add.3.30 = add nsw i32 %ki.06.3.30, %inc58.29
  %notlhs.3.30 = icmp slt i32 %add.3.30, 0
  %notrhs.3.30 = icmp uge i32 %add.3.30, %img_height
  %.not.3.30 = or i1 %notrhs.3.30, %notlhs.3.30
  %brmerge.3.30 = or i1 %.not.3.30, %cmp151.not.3.30
  br i1 %brmerge.3.30, label %for.inc36.3.30, label %for.body16.lr.ph.3.30

for.body16.lr.ph.3.30:                            ; preds = %for.body10.3.30
  %mul.3.30 = shl i32 %add.3.30, 7
  %mul30.3.30 = mul i32 %ki.06.3.30, %kern_width
  br label %for.body16.3.30

for.body16.3.30:                                  ; preds = %for.inc.3.30, %for.body16.lr.ph.3.30
  %indvars.iv.3.30 = phi i64 [ 0, %for.body16.lr.ph.3.30 ], [ %indvars.iv.next.3.30, %for.inc.3.30 ]
  %partial_sum.12.3.30 = phi float [ %partial_sum.05.3.30, %for.body16.lr.ph.3.30 ], [ %partial_sum.2.3.30, %for.inc.3.30 ]
  %2145 = trunc i64 %indvars.iv.3.30 to i32
  %add17.3.30 = add nsw i32 %2145, %inc54.2.30
  %cmp18.3.30 = icmp sgt i32 %add17.3.30, -1
  %cmp21.3.30 = icmp ult i32 %add17.3.30, %img_width
  %2146 = and i1 %cmp18.3.30, %cmp21.3.30
  br i1 %2146, label %if.end26.3.30, label %for.inc.3.30

if.end26.3.30:                                    ; preds = %for.body16.3.30
  %add29.3.30 = add nsw i32 %add17.3.30, %mul.3.30
  %idxprom.3.30 = sext i32 %add29.3.30 to i64
  %arrayidx.3.30 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.30
  %2147 = load float, float* %arrayidx.3.30, align 4
  %2148 = trunc i64 %indvars.iv.3.30 to i32
  %add31.3.30 = add i32 %2148, %mul30.3.30
  %idxprom32.3.30 = zext i32 %add31.3.30 to i64
  %arrayidx33.3.30 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.30
  %2149 = load float, float* %arrayidx33.3.30, align 4
  %mul34.3.30 = fmul float %2147, %2149
  %add35.3.30 = fadd float %partial_sum.12.3.30, %mul34.3.30
  br label %for.inc.3.30

for.inc.3.30:                                     ; preds = %if.end26.3.30, %for.body16.3.30
  %partial_sum.2.3.30 = phi float [ %add35.3.30, %if.end26.3.30 ], [ %partial_sum.12.3.30, %for.body16.3.30 ]
  %indvars.iv.next.3.30 = add nuw nsw i64 %indvars.iv.3.30, 1
  %lftr.wideiv.3.30 = trunc i64 %indvars.iv.next.3.30 to i32
  %exitcond.3.30 = icmp eq i32 %lftr.wideiv.3.30, %kern_width
  br i1 %exitcond.3.30, label %for.inc36.3.30.loopexit, label %for.body16.3.30, !llvm.loop !1

for.inc36.3.30.loopexit:                          ; preds = %for.inc.3.30
  %partial_sum.2.3.30.lcssa = phi float [ %partial_sum.2.3.30, %for.inc.3.30 ]
  br label %for.inc36.3.30

for.inc36.3.30:                                   ; preds = %for.inc36.3.30.loopexit, %for.body10.3.30
  %partial_sum.3.3.30 = phi float [ %partial_sum.05.3.30, %for.body10.3.30 ], [ %partial_sum.2.3.30.lcssa, %for.inc36.3.30.loopexit ]
  %inc37.3.30 = add nuw nsw i32 %ki.06.3.30, 1
  %exitcond19.3.30 = icmp eq i32 %inc37.3.30, %kern_height
  br i1 %exitcond19.3.30, label %for.end38.3.30.loopexit, label %for.body10.3.30, !llvm.loop !3

for.end38.3.30.loopexit:                          ; preds = %for.inc36.3.30
  %partial_sum.3.3.30.lcssa = phi float [ %partial_sum.3.3.30, %for.inc36.3.30 ]
  br label %for.end38.3.30

for.end38.3.30:                                   ; preds = %for.end38.3.30.loopexit, %for.inc53.2.30
  %partial_sum.0.lcssa.3.30 = phi float [ 0.000000e+00, %for.inc53.2.30 ], [ %partial_sum.3.3.30.lcssa, %for.end38.3.30.loopexit ]
  br i1 %tobool39, label %if.else.3.30, label %if.then40.3.30

if.then40.3.30:                                   ; preds = %for.end38.3.30
  %cmp41.3.30 = fcmp olt float %partial_sum.0.lcssa.3.30, 0.000000e+00
  %sub42.3.30 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.30
  %cond.3.30 = select i1 %cmp41.3.30, float %sub42.3.30, float %partial_sum.0.lcssa.3.30
  %conv.3.30 = fptoui float %cond.3.30 to i8
  %conv43.3.30 = uitofp i8 %conv.3.30 to float
  %2150 = add nsw i64 %indvars.iv.next21.2.30, %2116
  %arrayidx47.3.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2150
  store float %conv43.3.30, float* %arrayidx47.3.30, align 4
  br label %for.inc53.3.30

if.else.3.30:                                     ; preds = %for.end38.3.30
  %2151 = add nsw i64 %indvars.iv.next21.2.30, %2115
  %arrayidx51.3.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2151
  store float %partial_sum.0.lcssa.3.30, float* %arrayidx51.3.30, align 4
  br label %for.inc53.3.30

for.inc53.3.30:                                   ; preds = %if.else.3.30, %if.then40.3.30
  %inc54.3.30 = add nsw i32 %in_j.011.30, 4
  %indvars.iv.next21.3.30 = add nsw i64 %indvars.iv20.30, 4
  br i1 %cmp94, label %for.end38.4.30, label %for.body10.4.30.preheader

for.body10.4.30.preheader:                        ; preds = %for.inc53.3.30
  br label %for.body10.4.30

for.body10.4.30:                                  ; preds = %for.body10.4.30.preheader, %for.inc36.4.30
  %ki.06.4.30 = phi i32 [ %inc37.4.30, %for.inc36.4.30 ], [ 0, %for.body10.4.30.preheader ]
  %partial_sum.05.4.30 = phi float [ %partial_sum.3.4.30, %for.inc36.4.30 ], [ 0.000000e+00, %for.body10.4.30.preheader ]
  %add.4.30 = add nsw i32 %ki.06.4.30, %inc58.29
  %notlhs.4.30 = icmp slt i32 %add.4.30, 0
  %notrhs.4.30 = icmp uge i32 %add.4.30, %img_height
  %.not.4.30 = or i1 %notrhs.4.30, %notlhs.4.30
  %brmerge.4.30 = or i1 %.not.4.30, %cmp151.not.4.30
  br i1 %brmerge.4.30, label %for.inc36.4.30, label %for.body16.lr.ph.4.30

for.body16.lr.ph.4.30:                            ; preds = %for.body10.4.30
  %mul.4.30 = shl i32 %add.4.30, 7
  %mul30.4.30 = mul i32 %ki.06.4.30, %kern_width
  br label %for.body16.4.30

for.body16.4.30:                                  ; preds = %for.inc.4.30, %for.body16.lr.ph.4.30
  %indvars.iv.4.30 = phi i64 [ 0, %for.body16.lr.ph.4.30 ], [ %indvars.iv.next.4.30, %for.inc.4.30 ]
  %partial_sum.12.4.30 = phi float [ %partial_sum.05.4.30, %for.body16.lr.ph.4.30 ], [ %partial_sum.2.4.30, %for.inc.4.30 ]
  %2152 = trunc i64 %indvars.iv.4.30 to i32
  %add17.4.30 = add nsw i32 %2152, %inc54.3.30
  %cmp18.4.30 = icmp sgt i32 %add17.4.30, -1
  %cmp21.4.30 = icmp ult i32 %add17.4.30, %img_width
  %2153 = and i1 %cmp18.4.30, %cmp21.4.30
  br i1 %2153, label %if.end26.4.30, label %for.inc.4.30

if.end26.4.30:                                    ; preds = %for.body16.4.30
  %add29.4.30 = add nsw i32 %add17.4.30, %mul.4.30
  %idxprom.4.30 = sext i32 %add29.4.30 to i64
  %arrayidx.4.30 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.30
  %2154 = load float, float* %arrayidx.4.30, align 4
  %2155 = trunc i64 %indvars.iv.4.30 to i32
  %add31.4.30 = add i32 %2155, %mul30.4.30
  %idxprom32.4.30 = zext i32 %add31.4.30 to i64
  %arrayidx33.4.30 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.30
  %2156 = load float, float* %arrayidx33.4.30, align 4
  %mul34.4.30 = fmul float %2154, %2156
  %add35.4.30 = fadd float %partial_sum.12.4.30, %mul34.4.30
  br label %for.inc.4.30

for.inc.4.30:                                     ; preds = %if.end26.4.30, %for.body16.4.30
  %partial_sum.2.4.30 = phi float [ %add35.4.30, %if.end26.4.30 ], [ %partial_sum.12.4.30, %for.body16.4.30 ]
  %indvars.iv.next.4.30 = add nuw nsw i64 %indvars.iv.4.30, 1
  %lftr.wideiv.4.30 = trunc i64 %indvars.iv.next.4.30 to i32
  %exitcond.4.30 = icmp eq i32 %lftr.wideiv.4.30, %kern_width
  br i1 %exitcond.4.30, label %for.inc36.4.30.loopexit, label %for.body16.4.30, !llvm.loop !1

for.inc36.4.30.loopexit:                          ; preds = %for.inc.4.30
  %partial_sum.2.4.30.lcssa = phi float [ %partial_sum.2.4.30, %for.inc.4.30 ]
  br label %for.inc36.4.30

for.inc36.4.30:                                   ; preds = %for.inc36.4.30.loopexit, %for.body10.4.30
  %partial_sum.3.4.30 = phi float [ %partial_sum.05.4.30, %for.body10.4.30 ], [ %partial_sum.2.4.30.lcssa, %for.inc36.4.30.loopexit ]
  %inc37.4.30 = add nuw nsw i32 %ki.06.4.30, 1
  %exitcond19.4.30 = icmp eq i32 %inc37.4.30, %kern_height
  br i1 %exitcond19.4.30, label %for.end38.4.30.loopexit, label %for.body10.4.30, !llvm.loop !3

for.end38.4.30.loopexit:                          ; preds = %for.inc36.4.30
  %partial_sum.3.4.30.lcssa = phi float [ %partial_sum.3.4.30, %for.inc36.4.30 ]
  br label %for.end38.4.30

for.end38.4.30:                                   ; preds = %for.end38.4.30.loopexit, %for.inc53.3.30
  %partial_sum.0.lcssa.4.30 = phi float [ 0.000000e+00, %for.inc53.3.30 ], [ %partial_sum.3.4.30.lcssa, %for.end38.4.30.loopexit ]
  br i1 %tobool39, label %if.else.4.30, label %if.then40.4.30

if.then40.4.30:                                   ; preds = %for.end38.4.30
  %cmp41.4.30 = fcmp olt float %partial_sum.0.lcssa.4.30, 0.000000e+00
  %sub42.4.30 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.30
  %cond.4.30 = select i1 %cmp41.4.30, float %sub42.4.30, float %partial_sum.0.lcssa.4.30
  %conv.4.30 = fptoui float %cond.4.30 to i8
  %conv43.4.30 = uitofp i8 %conv.4.30 to float
  %2157 = add nsw i64 %indvars.iv.next21.3.30, %2116
  %arrayidx47.4.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2157
  store float %conv43.4.30, float* %arrayidx47.4.30, align 4
  br label %for.inc53.4.30

if.else.4.30:                                     ; preds = %for.end38.4.30
  %2158 = add nsw i64 %indvars.iv.next21.3.30, %2115
  %arrayidx51.4.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2158
  store float %partial_sum.0.lcssa.4.30, float* %arrayidx51.4.30, align 4
  br label %for.inc53.4.30

for.inc53.4.30:                                   ; preds = %if.else.4.30, %if.then40.4.30
  %inc54.4.30 = add nsw i32 %in_j.011.30, 5
  %indvars.iv.next21.4.30 = add nsw i64 %indvars.iv20.30, 5
  br i1 %cmp94, label %for.end38.5.30, label %for.body10.5.30.preheader

for.body10.5.30.preheader:                        ; preds = %for.inc53.4.30
  br label %for.body10.5.30

for.body10.5.30:                                  ; preds = %for.body10.5.30.preheader, %for.inc36.5.30
  %ki.06.5.30 = phi i32 [ %inc37.5.30, %for.inc36.5.30 ], [ 0, %for.body10.5.30.preheader ]
  %partial_sum.05.5.30 = phi float [ %partial_sum.3.5.30, %for.inc36.5.30 ], [ 0.000000e+00, %for.body10.5.30.preheader ]
  %add.5.30 = add nsw i32 %ki.06.5.30, %inc58.29
  %notlhs.5.30 = icmp slt i32 %add.5.30, 0
  %notrhs.5.30 = icmp uge i32 %add.5.30, %img_height
  %.not.5.30 = or i1 %notrhs.5.30, %notlhs.5.30
  %brmerge.5.30 = or i1 %.not.5.30, %cmp151.not.5.30
  br i1 %brmerge.5.30, label %for.inc36.5.30, label %for.body16.lr.ph.5.30

for.body16.lr.ph.5.30:                            ; preds = %for.body10.5.30
  %mul.5.30 = shl i32 %add.5.30, 7
  %mul30.5.30 = mul i32 %ki.06.5.30, %kern_width
  br label %for.body16.5.30

for.body16.5.30:                                  ; preds = %for.inc.5.30, %for.body16.lr.ph.5.30
  %indvars.iv.5.30 = phi i64 [ 0, %for.body16.lr.ph.5.30 ], [ %indvars.iv.next.5.30, %for.inc.5.30 ]
  %partial_sum.12.5.30 = phi float [ %partial_sum.05.5.30, %for.body16.lr.ph.5.30 ], [ %partial_sum.2.5.30, %for.inc.5.30 ]
  %2159 = trunc i64 %indvars.iv.5.30 to i32
  %add17.5.30 = add nsw i32 %2159, %inc54.4.30
  %cmp18.5.30 = icmp sgt i32 %add17.5.30, -1
  %cmp21.5.30 = icmp ult i32 %add17.5.30, %img_width
  %2160 = and i1 %cmp18.5.30, %cmp21.5.30
  br i1 %2160, label %if.end26.5.30, label %for.inc.5.30

if.end26.5.30:                                    ; preds = %for.body16.5.30
  %add29.5.30 = add nsw i32 %add17.5.30, %mul.5.30
  %idxprom.5.30 = sext i32 %add29.5.30 to i64
  %arrayidx.5.30 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.30
  %2161 = load float, float* %arrayidx.5.30, align 4
  %2162 = trunc i64 %indvars.iv.5.30 to i32
  %add31.5.30 = add i32 %2162, %mul30.5.30
  %idxprom32.5.30 = zext i32 %add31.5.30 to i64
  %arrayidx33.5.30 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.30
  %2163 = load float, float* %arrayidx33.5.30, align 4
  %mul34.5.30 = fmul float %2161, %2163
  %add35.5.30 = fadd float %partial_sum.12.5.30, %mul34.5.30
  br label %for.inc.5.30

for.inc.5.30:                                     ; preds = %if.end26.5.30, %for.body16.5.30
  %partial_sum.2.5.30 = phi float [ %add35.5.30, %if.end26.5.30 ], [ %partial_sum.12.5.30, %for.body16.5.30 ]
  %indvars.iv.next.5.30 = add nuw nsw i64 %indvars.iv.5.30, 1
  %lftr.wideiv.5.30 = trunc i64 %indvars.iv.next.5.30 to i32
  %exitcond.5.30 = icmp eq i32 %lftr.wideiv.5.30, %kern_width
  br i1 %exitcond.5.30, label %for.inc36.5.30.loopexit, label %for.body16.5.30, !llvm.loop !1

for.inc36.5.30.loopexit:                          ; preds = %for.inc.5.30
  %partial_sum.2.5.30.lcssa = phi float [ %partial_sum.2.5.30, %for.inc.5.30 ]
  br label %for.inc36.5.30

for.inc36.5.30:                                   ; preds = %for.inc36.5.30.loopexit, %for.body10.5.30
  %partial_sum.3.5.30 = phi float [ %partial_sum.05.5.30, %for.body10.5.30 ], [ %partial_sum.2.5.30.lcssa, %for.inc36.5.30.loopexit ]
  %inc37.5.30 = add nuw nsw i32 %ki.06.5.30, 1
  %exitcond19.5.30 = icmp eq i32 %inc37.5.30, %kern_height
  br i1 %exitcond19.5.30, label %for.end38.5.30.loopexit, label %for.body10.5.30, !llvm.loop !3

for.end38.5.30.loopexit:                          ; preds = %for.inc36.5.30
  %partial_sum.3.5.30.lcssa = phi float [ %partial_sum.3.5.30, %for.inc36.5.30 ]
  br label %for.end38.5.30

for.end38.5.30:                                   ; preds = %for.end38.5.30.loopexit, %for.inc53.4.30
  %partial_sum.0.lcssa.5.30 = phi float [ 0.000000e+00, %for.inc53.4.30 ], [ %partial_sum.3.5.30.lcssa, %for.end38.5.30.loopexit ]
  br i1 %tobool39, label %if.else.5.30, label %if.then40.5.30

if.then40.5.30:                                   ; preds = %for.end38.5.30
  %cmp41.5.30 = fcmp olt float %partial_sum.0.lcssa.5.30, 0.000000e+00
  %sub42.5.30 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.30
  %cond.5.30 = select i1 %cmp41.5.30, float %sub42.5.30, float %partial_sum.0.lcssa.5.30
  %conv.5.30 = fptoui float %cond.5.30 to i8
  %conv43.5.30 = uitofp i8 %conv.5.30 to float
  %2164 = add nsw i64 %indvars.iv.next21.4.30, %2116
  %arrayidx47.5.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2164
  store float %conv43.5.30, float* %arrayidx47.5.30, align 4
  br label %for.inc53.5.30

if.else.5.30:                                     ; preds = %for.end38.5.30
  %2165 = add nsw i64 %indvars.iv.next21.4.30, %2115
  %arrayidx51.5.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2165
  store float %partial_sum.0.lcssa.5.30, float* %arrayidx51.5.30, align 4
  br label %for.inc53.5.30

for.inc53.5.30:                                   ; preds = %if.else.5.30, %if.then40.5.30
  %inc54.5.30 = add nsw i32 %in_j.011.30, 6
  %indvars.iv.next21.5.30 = add nsw i64 %indvars.iv20.30, 6
  br i1 %cmp94, label %for.end38.6.30, label %for.body10.6.30.preheader

for.body10.6.30.preheader:                        ; preds = %for.inc53.5.30
  br label %for.body10.6.30

for.body10.6.30:                                  ; preds = %for.body10.6.30.preheader, %for.inc36.6.30
  %ki.06.6.30 = phi i32 [ %inc37.6.30, %for.inc36.6.30 ], [ 0, %for.body10.6.30.preheader ]
  %partial_sum.05.6.30 = phi float [ %partial_sum.3.6.30, %for.inc36.6.30 ], [ 0.000000e+00, %for.body10.6.30.preheader ]
  %add.6.30 = add nsw i32 %ki.06.6.30, %inc58.29
  %notlhs.6.30 = icmp slt i32 %add.6.30, 0
  %notrhs.6.30 = icmp uge i32 %add.6.30, %img_height
  %.not.6.30 = or i1 %notrhs.6.30, %notlhs.6.30
  %brmerge.6.30 = or i1 %.not.6.30, %cmp151.not.6.30
  br i1 %brmerge.6.30, label %for.inc36.6.30, label %for.body16.lr.ph.6.30

for.body16.lr.ph.6.30:                            ; preds = %for.body10.6.30
  %mul.6.30 = shl i32 %add.6.30, 7
  %mul30.6.30 = mul i32 %ki.06.6.30, %kern_width
  br label %for.body16.6.30

for.body16.6.30:                                  ; preds = %for.inc.6.30, %for.body16.lr.ph.6.30
  %indvars.iv.6.30 = phi i64 [ 0, %for.body16.lr.ph.6.30 ], [ %indvars.iv.next.6.30, %for.inc.6.30 ]
  %partial_sum.12.6.30 = phi float [ %partial_sum.05.6.30, %for.body16.lr.ph.6.30 ], [ %partial_sum.2.6.30, %for.inc.6.30 ]
  %2166 = trunc i64 %indvars.iv.6.30 to i32
  %add17.6.30 = add nsw i32 %2166, %inc54.5.30
  %cmp18.6.30 = icmp sgt i32 %add17.6.30, -1
  %cmp21.6.30 = icmp ult i32 %add17.6.30, %img_width
  %2167 = and i1 %cmp18.6.30, %cmp21.6.30
  br i1 %2167, label %if.end26.6.30, label %for.inc.6.30

if.end26.6.30:                                    ; preds = %for.body16.6.30
  %add29.6.30 = add nsw i32 %add17.6.30, %mul.6.30
  %idxprom.6.30 = sext i32 %add29.6.30 to i64
  %arrayidx.6.30 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.30
  %2168 = load float, float* %arrayidx.6.30, align 4
  %2169 = trunc i64 %indvars.iv.6.30 to i32
  %add31.6.30 = add i32 %2169, %mul30.6.30
  %idxprom32.6.30 = zext i32 %add31.6.30 to i64
  %arrayidx33.6.30 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.30
  %2170 = load float, float* %arrayidx33.6.30, align 4
  %mul34.6.30 = fmul float %2168, %2170
  %add35.6.30 = fadd float %partial_sum.12.6.30, %mul34.6.30
  br label %for.inc.6.30

for.inc.6.30:                                     ; preds = %if.end26.6.30, %for.body16.6.30
  %partial_sum.2.6.30 = phi float [ %add35.6.30, %if.end26.6.30 ], [ %partial_sum.12.6.30, %for.body16.6.30 ]
  %indvars.iv.next.6.30 = add nuw nsw i64 %indvars.iv.6.30, 1
  %lftr.wideiv.6.30 = trunc i64 %indvars.iv.next.6.30 to i32
  %exitcond.6.30 = icmp eq i32 %lftr.wideiv.6.30, %kern_width
  br i1 %exitcond.6.30, label %for.inc36.6.30.loopexit, label %for.body16.6.30, !llvm.loop !1

for.inc36.6.30.loopexit:                          ; preds = %for.inc.6.30
  %partial_sum.2.6.30.lcssa = phi float [ %partial_sum.2.6.30, %for.inc.6.30 ]
  br label %for.inc36.6.30

for.inc36.6.30:                                   ; preds = %for.inc36.6.30.loopexit, %for.body10.6.30
  %partial_sum.3.6.30 = phi float [ %partial_sum.05.6.30, %for.body10.6.30 ], [ %partial_sum.2.6.30.lcssa, %for.inc36.6.30.loopexit ]
  %inc37.6.30 = add nuw nsw i32 %ki.06.6.30, 1
  %exitcond19.6.30 = icmp eq i32 %inc37.6.30, %kern_height
  br i1 %exitcond19.6.30, label %for.end38.6.30.loopexit, label %for.body10.6.30, !llvm.loop !3

for.end38.6.30.loopexit:                          ; preds = %for.inc36.6.30
  %partial_sum.3.6.30.lcssa = phi float [ %partial_sum.3.6.30, %for.inc36.6.30 ]
  br label %for.end38.6.30

for.end38.6.30:                                   ; preds = %for.end38.6.30.loopexit, %for.inc53.5.30
  %partial_sum.0.lcssa.6.30 = phi float [ 0.000000e+00, %for.inc53.5.30 ], [ %partial_sum.3.6.30.lcssa, %for.end38.6.30.loopexit ]
  br i1 %tobool39, label %if.else.6.30, label %if.then40.6.30

if.then40.6.30:                                   ; preds = %for.end38.6.30
  %cmp41.6.30 = fcmp olt float %partial_sum.0.lcssa.6.30, 0.000000e+00
  %sub42.6.30 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.30
  %cond.6.30 = select i1 %cmp41.6.30, float %sub42.6.30, float %partial_sum.0.lcssa.6.30
  %conv.6.30 = fptoui float %cond.6.30 to i8
  %conv43.6.30 = uitofp i8 %conv.6.30 to float
  %2171 = add nsw i64 %indvars.iv.next21.5.30, %2116
  %arrayidx47.6.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2171
  store float %conv43.6.30, float* %arrayidx47.6.30, align 4
  br label %for.inc53.6.30

if.else.6.30:                                     ; preds = %for.end38.6.30
  %2172 = add nsw i64 %indvars.iv.next21.5.30, %2115
  %arrayidx51.6.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2172
  store float %partial_sum.0.lcssa.6.30, float* %arrayidx51.6.30, align 4
  br label %for.inc53.6.30

for.inc53.6.30:                                   ; preds = %if.else.6.30, %if.then40.6.30
  %inc54.6.30 = add nsw i32 %in_j.011.30, 7
  %indvars.iv.next21.6.30 = add nsw i64 %indvars.iv20.30, 7
  br i1 %cmp94, label %for.end38.7.30, label %for.body10.7.30.preheader

for.body10.7.30.preheader:                        ; preds = %for.inc53.6.30
  br label %for.body10.7.30

for.body10.7.30:                                  ; preds = %for.body10.7.30.preheader, %for.inc36.7.30
  %ki.06.7.30 = phi i32 [ %inc37.7.30, %for.inc36.7.30 ], [ 0, %for.body10.7.30.preheader ]
  %partial_sum.05.7.30 = phi float [ %partial_sum.3.7.30, %for.inc36.7.30 ], [ 0.000000e+00, %for.body10.7.30.preheader ]
  %add.7.30 = add nsw i32 %ki.06.7.30, %inc58.29
  %notlhs.7.30 = icmp slt i32 %add.7.30, 0
  %notrhs.7.30 = icmp uge i32 %add.7.30, %img_height
  %.not.7.30 = or i1 %notrhs.7.30, %notlhs.7.30
  %brmerge.7.30 = or i1 %.not.7.30, %cmp151.not.7.30
  br i1 %brmerge.7.30, label %for.inc36.7.30, label %for.body16.lr.ph.7.30

for.body16.lr.ph.7.30:                            ; preds = %for.body10.7.30
  %mul.7.30 = shl i32 %add.7.30, 7
  %mul30.7.30 = mul i32 %ki.06.7.30, %kern_width
  br label %for.body16.7.30

for.body16.7.30:                                  ; preds = %for.inc.7.30, %for.body16.lr.ph.7.30
  %indvars.iv.7.30 = phi i64 [ 0, %for.body16.lr.ph.7.30 ], [ %indvars.iv.next.7.30, %for.inc.7.30 ]
  %partial_sum.12.7.30 = phi float [ %partial_sum.05.7.30, %for.body16.lr.ph.7.30 ], [ %partial_sum.2.7.30, %for.inc.7.30 ]
  %2173 = trunc i64 %indvars.iv.7.30 to i32
  %add17.7.30 = add nsw i32 %2173, %inc54.6.30
  %cmp18.7.30 = icmp sgt i32 %add17.7.30, -1
  %cmp21.7.30 = icmp ult i32 %add17.7.30, %img_width
  %2174 = and i1 %cmp18.7.30, %cmp21.7.30
  br i1 %2174, label %if.end26.7.30, label %for.inc.7.30

if.end26.7.30:                                    ; preds = %for.body16.7.30
  %add29.7.30 = add nsw i32 %add17.7.30, %mul.7.30
  %idxprom.7.30 = sext i32 %add29.7.30 to i64
  %arrayidx.7.30 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.30
  %2175 = load float, float* %arrayidx.7.30, align 4
  %2176 = trunc i64 %indvars.iv.7.30 to i32
  %add31.7.30 = add i32 %2176, %mul30.7.30
  %idxprom32.7.30 = zext i32 %add31.7.30 to i64
  %arrayidx33.7.30 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.30
  %2177 = load float, float* %arrayidx33.7.30, align 4
  %mul34.7.30 = fmul float %2175, %2177
  %add35.7.30 = fadd float %partial_sum.12.7.30, %mul34.7.30
  br label %for.inc.7.30

for.inc.7.30:                                     ; preds = %if.end26.7.30, %for.body16.7.30
  %partial_sum.2.7.30 = phi float [ %add35.7.30, %if.end26.7.30 ], [ %partial_sum.12.7.30, %for.body16.7.30 ]
  %indvars.iv.next.7.30 = add nuw nsw i64 %indvars.iv.7.30, 1
  %lftr.wideiv.7.30 = trunc i64 %indvars.iv.next.7.30 to i32
  %exitcond.7.30 = icmp eq i32 %lftr.wideiv.7.30, %kern_width
  br i1 %exitcond.7.30, label %for.inc36.7.30.loopexit, label %for.body16.7.30, !llvm.loop !1

for.inc36.7.30.loopexit:                          ; preds = %for.inc.7.30
  %partial_sum.2.7.30.lcssa = phi float [ %partial_sum.2.7.30, %for.inc.7.30 ]
  br label %for.inc36.7.30

for.inc36.7.30:                                   ; preds = %for.inc36.7.30.loopexit, %for.body10.7.30
  %partial_sum.3.7.30 = phi float [ %partial_sum.05.7.30, %for.body10.7.30 ], [ %partial_sum.2.7.30.lcssa, %for.inc36.7.30.loopexit ]
  %inc37.7.30 = add nuw nsw i32 %ki.06.7.30, 1
  %exitcond19.7.30 = icmp eq i32 %inc37.7.30, %kern_height
  br i1 %exitcond19.7.30, label %for.end38.7.30.loopexit, label %for.body10.7.30, !llvm.loop !3

for.end38.7.30.loopexit:                          ; preds = %for.inc36.7.30
  %partial_sum.3.7.30.lcssa = phi float [ %partial_sum.3.7.30, %for.inc36.7.30 ]
  br label %for.end38.7.30

for.end38.7.30:                                   ; preds = %for.end38.7.30.loopexit, %for.inc53.6.30
  %partial_sum.0.lcssa.7.30 = phi float [ 0.000000e+00, %for.inc53.6.30 ], [ %partial_sum.3.7.30.lcssa, %for.end38.7.30.loopexit ]
  br i1 %tobool39, label %if.else.7.30, label %if.then40.7.30

if.then40.7.30:                                   ; preds = %for.end38.7.30
  %cmp41.7.30 = fcmp olt float %partial_sum.0.lcssa.7.30, 0.000000e+00
  %sub42.7.30 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.30
  %cond.7.30 = select i1 %cmp41.7.30, float %sub42.7.30, float %partial_sum.0.lcssa.7.30
  %conv.7.30 = fptoui float %cond.7.30 to i8
  %conv43.7.30 = uitofp i8 %conv.7.30 to float
  %2178 = add nsw i64 %indvars.iv.next21.6.30, %2116
  %arrayidx47.7.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2178
  store float %conv43.7.30, float* %arrayidx47.7.30, align 4
  br label %for.inc53.7.30

if.else.7.30:                                     ; preds = %for.end38.7.30
  %2179 = add nsw i64 %indvars.iv.next21.6.30, %2115
  %arrayidx51.7.30 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2179
  store float %partial_sum.0.lcssa.7.30, float* %arrayidx51.7.30, align 4
  br label %for.inc53.7.30

for.inc53.7.30:                                   ; preds = %if.else.7.30, %if.then40.7.30
  %inc54.7.30 = add nsw i32 %in_j.011.30, 8
  %indvars.iv.next21.7.30 = add nsw i64 %indvars.iv20.30, 8
  %lftr.wideiv24.7.30 = trunc i64 %indvars.iv.next21.7.30 to i32
  %exitcond25.7.30 = icmp eq i32 %lftr.wideiv24.7.30, %img_width
  br i1 %exitcond25.7.30, label %for.inc57.30.loopexit, label %for.cond8.preheader.30, !llvm.loop !5

for.inc57.30.loopexit:                            ; preds = %for.inc53.7.30
  br label %for.inc57.30

for.inc57.30:                                     ; preds = %for.inc57.30.loopexit, %for.cond8.preheader.lr.ph.split.30
  %inc58.30 = add nsw i32 %in_i.015, 31
  %indvars.iv.next27.30 = add nsw i64 %indvars.iv26, 31
  br i1 %cmp610, label %for.inc57.31, label %for.cond8.preheader.lr.ph.31

for.cond8.preheader.lr.ph.31:                     ; preds = %for.inc57.30
  %2180 = trunc i64 %indvars.iv.next27.30 to i32
  %mul48.31 = shl i32 %2180, 7
  %2181 = trunc i64 %indvars.iv.next27.30 to i32
  %mul44.31 = shl i32 %2181, 7
  %2182 = sext i32 %mul48.31 to i64
  %2183 = sext i32 %mul44.31 to i64
  br i1 %lcmp.mod.31, label %for.cond8.preheader.lr.ph.split.31, label %for.cond8.preheader.prol.31.preheader

for.cond8.preheader.prol.31.preheader:            ; preds = %for.cond8.preheader.lr.ph.31
  br label %for.cond8.preheader.prol.31

for.cond8.preheader.prol.31:                      ; preds = %for.cond8.preheader.prol.31.preheader, %for.inc53.prol.31
  %indvars.iv20.prol.31 = phi i64 [ %indvars.iv.next21.prol.31, %for.inc53.prol.31 ], [ 0, %for.cond8.preheader.prol.31.preheader ]
  %in_j.011.prol.31 = phi i32 [ %inc54.prol.31, %for.inc53.prol.31 ], [ %sub4, %for.cond8.preheader.prol.31.preheader ]
  %prol.iter.31 = phi i32 [ %prol.iter.sub.31, %for.inc53.prol.31 ], [ %xtraiter.31, %for.cond8.preheader.prol.31.preheader ]
  br i1 %cmp94, label %for.end38.prol.31, label %for.body10.prol.31.preheader

for.body10.prol.31.preheader:                     ; preds = %for.cond8.preheader.prol.31
  br label %for.body10.prol.31

for.body10.prol.31:                               ; preds = %for.body10.prol.31.preheader, %for.inc36.prol.31
  %ki.06.prol.31 = phi i32 [ %inc37.prol.31, %for.inc36.prol.31 ], [ 0, %for.body10.prol.31.preheader ]
  %partial_sum.05.prol.31 = phi float [ %partial_sum.3.prol.31, %for.inc36.prol.31 ], [ 0.000000e+00, %for.body10.prol.31.preheader ]
  %add.prol.31 = add nsw i32 %ki.06.prol.31, %inc58.30
  %notlhs.prol.31 = icmp slt i32 %add.prol.31, 0
  %notrhs.prol.31 = icmp uge i32 %add.prol.31, %img_height
  %.not.prol.31 = or i1 %notrhs.prol.31, %notlhs.prol.31
  %brmerge.prol.31 = or i1 %.not.prol.31, %cmp151.not.prol.31
  br i1 %brmerge.prol.31, label %for.inc36.prol.31, label %for.body16.lr.ph.prol.31

for.body16.lr.ph.prol.31:                         ; preds = %for.body10.prol.31
  %mul.prol.31 = shl i32 %add.prol.31, 7
  %mul30.prol.31 = mul i32 %ki.06.prol.31, %kern_width
  br label %for.body16.prol.31

for.body16.prol.31:                               ; preds = %for.inc.prol.31, %for.body16.lr.ph.prol.31
  %indvars.iv.prol.31 = phi i64 [ 0, %for.body16.lr.ph.prol.31 ], [ %indvars.iv.next.prol.31, %for.inc.prol.31 ]
  %partial_sum.12.prol.31 = phi float [ %partial_sum.05.prol.31, %for.body16.lr.ph.prol.31 ], [ %partial_sum.2.prol.31, %for.inc.prol.31 ]
  %2184 = trunc i64 %indvars.iv.prol.31 to i32
  %add17.prol.31 = add nsw i32 %2184, %in_j.011.prol.31
  %cmp18.prol.31 = icmp sgt i32 %add17.prol.31, -1
  %cmp21.prol.31 = icmp ult i32 %add17.prol.31, %img_width
  %2185 = and i1 %cmp18.prol.31, %cmp21.prol.31
  br i1 %2185, label %if.end26.prol.31, label %for.inc.prol.31

if.end26.prol.31:                                 ; preds = %for.body16.prol.31
  %add29.prol.31 = add nsw i32 %add17.prol.31, %mul.prol.31
  %idxprom.prol.31 = sext i32 %add29.prol.31 to i64
  %arrayidx.prol.31 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.prol.31
  %2186 = load float, float* %arrayidx.prol.31, align 4
  %2187 = trunc i64 %indvars.iv.prol.31 to i32
  %add31.prol.31 = add i32 %2187, %mul30.prol.31
  %idxprom32.prol.31 = zext i32 %add31.prol.31 to i64
  %arrayidx33.prol.31 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.prol.31
  %2188 = load float, float* %arrayidx33.prol.31, align 4
  %mul34.prol.31 = fmul float %2186, %2188
  %add35.prol.31 = fadd float %partial_sum.12.prol.31, %mul34.prol.31
  br label %for.inc.prol.31

for.inc.prol.31:                                  ; preds = %if.end26.prol.31, %for.body16.prol.31
  %partial_sum.2.prol.31 = phi float [ %add35.prol.31, %if.end26.prol.31 ], [ %partial_sum.12.prol.31, %for.body16.prol.31 ]
  %indvars.iv.next.prol.31 = add nuw nsw i64 %indvars.iv.prol.31, 1
  %lftr.wideiv.prol.31 = trunc i64 %indvars.iv.next.prol.31 to i32
  %exitcond.prol.31 = icmp eq i32 %lftr.wideiv.prol.31, %kern_width
  br i1 %exitcond.prol.31, label %for.inc36.prol.31.loopexit, label %for.body16.prol.31, !llvm.loop !1

for.inc36.prol.31.loopexit:                       ; preds = %for.inc.prol.31
  %partial_sum.2.prol.31.lcssa = phi float [ %partial_sum.2.prol.31, %for.inc.prol.31 ]
  br label %for.inc36.prol.31

for.inc36.prol.31:                                ; preds = %for.inc36.prol.31.loopexit, %for.body10.prol.31
  %partial_sum.3.prol.31 = phi float [ %partial_sum.05.prol.31, %for.body10.prol.31 ], [ %partial_sum.2.prol.31.lcssa, %for.inc36.prol.31.loopexit ]
  %inc37.prol.31 = add nuw nsw i32 %ki.06.prol.31, 1
  %exitcond19.prol.31 = icmp eq i32 %inc37.prol.31, %kern_height
  br i1 %exitcond19.prol.31, label %for.end38.prol.31.loopexit, label %for.body10.prol.31, !llvm.loop !3

for.end38.prol.31.loopexit:                       ; preds = %for.inc36.prol.31
  %partial_sum.3.prol.31.lcssa = phi float [ %partial_sum.3.prol.31, %for.inc36.prol.31 ]
  br label %for.end38.prol.31

for.end38.prol.31:                                ; preds = %for.end38.prol.31.loopexit, %for.cond8.preheader.prol.31
  %partial_sum.0.lcssa.prol.31 = phi float [ 0.000000e+00, %for.cond8.preheader.prol.31 ], [ %partial_sum.3.prol.31.lcssa, %for.end38.prol.31.loopexit ]
  br i1 %tobool39, label %if.else.prol.31, label %if.then40.prol.31

if.then40.prol.31:                                ; preds = %for.end38.prol.31
  %cmp41.prol.31 = fcmp olt float %partial_sum.0.lcssa.prol.31, 0.000000e+00
  %sub42.prol.31 = fsub float -0.000000e+00, %partial_sum.0.lcssa.prol.31
  %cond.prol.31 = select i1 %cmp41.prol.31, float %sub42.prol.31, float %partial_sum.0.lcssa.prol.31
  %conv.prol.31 = fptoui float %cond.prol.31 to i8
  %conv43.prol.31 = uitofp i8 %conv.prol.31 to float
  %2189 = add nsw i64 %indvars.iv20.prol.31, %2183
  %arrayidx47.prol.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2189
  store float %conv43.prol.31, float* %arrayidx47.prol.31, align 4
  br label %for.inc53.prol.31

if.else.prol.31:                                  ; preds = %for.end38.prol.31
  %2190 = add nsw i64 %indvars.iv20.prol.31, %2182
  %arrayidx51.prol.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2190
  store float %partial_sum.0.lcssa.prol.31, float* %arrayidx51.prol.31, align 4
  br label %for.inc53.prol.31

for.inc53.prol.31:                                ; preds = %if.else.prol.31, %if.then40.prol.31
  %inc54.prol.31 = add nsw i32 %in_j.011.prol.31, 1
  %indvars.iv.next21.prol.31 = add nuw nsw i64 %indvars.iv20.prol.31, 1
  %prol.iter.sub.31 = add i32 %prol.iter.31, -1
  %prol.iter.cmp.31 = icmp eq i32 %prol.iter.sub.31, 0
  br i1 %prol.iter.cmp.31, label %for.cond8.preheader.lr.ph.split.31.loopexit, label %for.cond8.preheader.prol.31, !llvm.loop !4

for.cond8.preheader.lr.ph.split.31.loopexit:      ; preds = %for.inc53.prol.31
  %indvars.iv.next21.prol.31.lcssa = phi i64 [ %indvars.iv.next21.prol.31, %for.inc53.prol.31 ]
  %inc54.prol.31.lcssa = phi i32 [ %inc54.prol.31, %for.inc53.prol.31 ]
  br label %for.cond8.preheader.lr.ph.split.31

for.cond8.preheader.lr.ph.split.31:               ; preds = %for.cond8.preheader.lr.ph.split.31.loopexit, %for.cond8.preheader.lr.ph.31
  %indvars.iv20.unr.31 = phi i64 [ 0, %for.cond8.preheader.lr.ph.31 ], [ %indvars.iv.next21.prol.31.lcssa, %for.cond8.preheader.lr.ph.split.31.loopexit ]
  %in_j.011.unr.31 = phi i32 [ %sub4, %for.cond8.preheader.lr.ph.31 ], [ %inc54.prol.31.lcssa, %for.cond8.preheader.lr.ph.split.31.loopexit ]
  br i1 %102, label %for.inc57.31, label %for.cond8.preheader.31.preheader

for.cond8.preheader.31.preheader:                 ; preds = %for.cond8.preheader.lr.ph.split.31
  br label %for.cond8.preheader.31

for.cond8.preheader.31:                           ; preds = %for.cond8.preheader.31.preheader, %for.inc53.7.31
  %indvars.iv20.31 = phi i64 [ %indvars.iv.next21.7.31, %for.inc53.7.31 ], [ %indvars.iv20.unr.31, %for.cond8.preheader.31.preheader ]
  %in_j.011.31 = phi i32 [ %inc54.7.31, %for.inc53.7.31 ], [ %in_j.011.unr.31, %for.cond8.preheader.31.preheader ]
  br i1 %cmp94, label %for.end38.31, label %for.body10.31.preheader

for.body10.31.preheader:                          ; preds = %for.cond8.preheader.31
  br label %for.body10.31

for.body10.31:                                    ; preds = %for.body10.31.preheader, %for.inc36.31
  %ki.06.31 = phi i32 [ %inc37.31, %for.inc36.31 ], [ 0, %for.body10.31.preheader ]
  %partial_sum.05.31 = phi float [ %partial_sum.3.31, %for.inc36.31 ], [ 0.000000e+00, %for.body10.31.preheader ]
  %add.31 = add nsw i32 %ki.06.31, %inc58.30
  %notlhs.31 = icmp slt i32 %add.31, 0
  %notrhs.31 = icmp uge i32 %add.31, %img_height
  %.not.31 = or i1 %notrhs.31, %notlhs.31
  %brmerge.31 = or i1 %.not.31, %cmp151.not.31
  br i1 %brmerge.31, label %for.inc36.31, label %for.body16.lr.ph.31

for.body16.lr.ph.31:                              ; preds = %for.body10.31
  %mul.31 = shl i32 %add.31, 7
  %mul30.31 = mul i32 %ki.06.31, %kern_width
  br label %for.body16.31

for.body16.31:                                    ; preds = %for.inc.31, %for.body16.lr.ph.31
  %indvars.iv.31 = phi i64 [ 0, %for.body16.lr.ph.31 ], [ %indvars.iv.next.31, %for.inc.31 ]
  %partial_sum.12.31 = phi float [ %partial_sum.05.31, %for.body16.lr.ph.31 ], [ %partial_sum.2.31, %for.inc.31 ]
  %2191 = trunc i64 %indvars.iv.31 to i32
  %add17.31 = add nsw i32 %2191, %in_j.011.31
  %cmp18.31 = icmp sgt i32 %add17.31, -1
  %cmp21.31 = icmp ult i32 %add17.31, %img_width
  %2192 = and i1 %cmp18.31, %cmp21.31
  br i1 %2192, label %if.end26.31, label %for.inc.31

if.end26.31:                                      ; preds = %for.body16.31
  %add29.31 = add nsw i32 %add17.31, %mul.31
  %idxprom.31 = sext i32 %add29.31 to i64
  %arrayidx.31 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.31
  %2193 = load float, float* %arrayidx.31, align 4
  %2194 = trunc i64 %indvars.iv.31 to i32
  %add31.31 = add i32 %2194, %mul30.31
  %idxprom32.31 = zext i32 %add31.31 to i64
  %arrayidx33.31 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.31
  %2195 = load float, float* %arrayidx33.31, align 4
  %mul34.31 = fmul float %2193, %2195
  %add35.31 = fadd float %partial_sum.12.31, %mul34.31
  br label %for.inc.31

for.inc.31:                                       ; preds = %if.end26.31, %for.body16.31
  %partial_sum.2.31 = phi float [ %add35.31, %if.end26.31 ], [ %partial_sum.12.31, %for.body16.31 ]
  %indvars.iv.next.31 = add nuw nsw i64 %indvars.iv.31, 1
  %lftr.wideiv.31 = trunc i64 %indvars.iv.next.31 to i32
  %exitcond.31 = icmp eq i32 %lftr.wideiv.31, %kern_width
  br i1 %exitcond.31, label %for.inc36.31.loopexit, label %for.body16.31, !llvm.loop !1

for.inc36.31.loopexit:                            ; preds = %for.inc.31
  %partial_sum.2.31.lcssa = phi float [ %partial_sum.2.31, %for.inc.31 ]
  br label %for.inc36.31

for.inc36.31:                                     ; preds = %for.inc36.31.loopexit, %for.body10.31
  %partial_sum.3.31 = phi float [ %partial_sum.05.31, %for.body10.31 ], [ %partial_sum.2.31.lcssa, %for.inc36.31.loopexit ]
  %inc37.31 = add nuw nsw i32 %ki.06.31, 1
  %exitcond19.31 = icmp eq i32 %inc37.31, %kern_height
  br i1 %exitcond19.31, label %for.end38.31.loopexit, label %for.body10.31, !llvm.loop !3

for.end38.31.loopexit:                            ; preds = %for.inc36.31
  %partial_sum.3.31.lcssa = phi float [ %partial_sum.3.31, %for.inc36.31 ]
  br label %for.end38.31

for.end38.31:                                     ; preds = %for.end38.31.loopexit, %for.cond8.preheader.31
  %partial_sum.0.lcssa.31 = phi float [ 0.000000e+00, %for.cond8.preheader.31 ], [ %partial_sum.3.31.lcssa, %for.end38.31.loopexit ]
  br i1 %tobool39, label %if.else.31, label %if.then40.31

if.then40.31:                                     ; preds = %for.end38.31
  %cmp41.31 = fcmp olt float %partial_sum.0.lcssa.31, 0.000000e+00
  %sub42.31 = fsub float -0.000000e+00, %partial_sum.0.lcssa.31
  %cond.31 = select i1 %cmp41.31, float %sub42.31, float %partial_sum.0.lcssa.31
  %conv.31 = fptoui float %cond.31 to i8
  %conv43.31 = uitofp i8 %conv.31 to float
  %2196 = add nsw i64 %indvars.iv20.31, %2183
  %arrayidx47.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2196
  store float %conv43.31, float* %arrayidx47.31, align 4
  br label %for.inc53.31

if.else.31:                                       ; preds = %for.end38.31
  %2197 = add nsw i64 %indvars.iv20.31, %2182
  %arrayidx51.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2197
  store float %partial_sum.0.lcssa.31, float* %arrayidx51.31, align 4
  br label %for.inc53.31

for.inc53.31:                                     ; preds = %if.else.31, %if.then40.31
  %inc54.31 = add nsw i32 %in_j.011.31, 1
  %indvars.iv.next21.31 = add nuw nsw i64 %indvars.iv20.31, 1
  br i1 %cmp94, label %for.end38.1.31, label %for.body10.1.31.preheader

for.body10.1.31.preheader:                        ; preds = %for.inc53.31
  br label %for.body10.1.31

for.body10.1.31:                                  ; preds = %for.body10.1.31.preheader, %for.inc36.1.31
  %ki.06.1.31 = phi i32 [ %inc37.1.31, %for.inc36.1.31 ], [ 0, %for.body10.1.31.preheader ]
  %partial_sum.05.1.31 = phi float [ %partial_sum.3.1.31, %for.inc36.1.31 ], [ 0.000000e+00, %for.body10.1.31.preheader ]
  %add.1.31 = add nsw i32 %ki.06.1.31, %inc58.30
  %notlhs.1.31 = icmp slt i32 %add.1.31, 0
  %notrhs.1.31 = icmp uge i32 %add.1.31, %img_height
  %.not.1.31 = or i1 %notrhs.1.31, %notlhs.1.31
  %brmerge.1.31 = or i1 %.not.1.31, %cmp151.not.1.31
  br i1 %brmerge.1.31, label %for.inc36.1.31, label %for.body16.lr.ph.1.31

for.body16.lr.ph.1.31:                            ; preds = %for.body10.1.31
  %mul.1.31 = shl i32 %add.1.31, 7
  %mul30.1.31 = mul i32 %ki.06.1.31, %kern_width
  br label %for.body16.1.31

for.body16.1.31:                                  ; preds = %for.inc.1.31, %for.body16.lr.ph.1.31
  %indvars.iv.1.31 = phi i64 [ 0, %for.body16.lr.ph.1.31 ], [ %indvars.iv.next.1.31, %for.inc.1.31 ]
  %partial_sum.12.1.31 = phi float [ %partial_sum.05.1.31, %for.body16.lr.ph.1.31 ], [ %partial_sum.2.1.31, %for.inc.1.31 ]
  %2198 = trunc i64 %indvars.iv.1.31 to i32
  %add17.1.31 = add nsw i32 %2198, %inc54.31
  %cmp18.1.31 = icmp sgt i32 %add17.1.31, -1
  %cmp21.1.31 = icmp ult i32 %add17.1.31, %img_width
  %2199 = and i1 %cmp18.1.31, %cmp21.1.31
  br i1 %2199, label %if.end26.1.31, label %for.inc.1.31

if.end26.1.31:                                    ; preds = %for.body16.1.31
  %add29.1.31 = add nsw i32 %add17.1.31, %mul.1.31
  %idxprom.1.31 = sext i32 %add29.1.31 to i64
  %arrayidx.1.31 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.1.31
  %2200 = load float, float* %arrayidx.1.31, align 4
  %2201 = trunc i64 %indvars.iv.1.31 to i32
  %add31.1.31 = add i32 %2201, %mul30.1.31
  %idxprom32.1.31 = zext i32 %add31.1.31 to i64
  %arrayidx33.1.31 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.1.31
  %2202 = load float, float* %arrayidx33.1.31, align 4
  %mul34.1.31 = fmul float %2200, %2202
  %add35.1.31 = fadd float %partial_sum.12.1.31, %mul34.1.31
  br label %for.inc.1.31

for.inc.1.31:                                     ; preds = %if.end26.1.31, %for.body16.1.31
  %partial_sum.2.1.31 = phi float [ %add35.1.31, %if.end26.1.31 ], [ %partial_sum.12.1.31, %for.body16.1.31 ]
  %indvars.iv.next.1.31 = add nuw nsw i64 %indvars.iv.1.31, 1
  %lftr.wideiv.1.31 = trunc i64 %indvars.iv.next.1.31 to i32
  %exitcond.1.31 = icmp eq i32 %lftr.wideiv.1.31, %kern_width
  br i1 %exitcond.1.31, label %for.inc36.1.31.loopexit, label %for.body16.1.31, !llvm.loop !1

for.inc36.1.31.loopexit:                          ; preds = %for.inc.1.31
  %partial_sum.2.1.31.lcssa = phi float [ %partial_sum.2.1.31, %for.inc.1.31 ]
  br label %for.inc36.1.31

for.inc36.1.31:                                   ; preds = %for.inc36.1.31.loopexit, %for.body10.1.31
  %partial_sum.3.1.31 = phi float [ %partial_sum.05.1.31, %for.body10.1.31 ], [ %partial_sum.2.1.31.lcssa, %for.inc36.1.31.loopexit ]
  %inc37.1.31 = add nuw nsw i32 %ki.06.1.31, 1
  %exitcond19.1.31 = icmp eq i32 %inc37.1.31, %kern_height
  br i1 %exitcond19.1.31, label %for.end38.1.31.loopexit, label %for.body10.1.31, !llvm.loop !3

for.end38.1.31.loopexit:                          ; preds = %for.inc36.1.31
  %partial_sum.3.1.31.lcssa = phi float [ %partial_sum.3.1.31, %for.inc36.1.31 ]
  br label %for.end38.1.31

for.end38.1.31:                                   ; preds = %for.end38.1.31.loopexit, %for.inc53.31
  %partial_sum.0.lcssa.1.31 = phi float [ 0.000000e+00, %for.inc53.31 ], [ %partial_sum.3.1.31.lcssa, %for.end38.1.31.loopexit ]
  br i1 %tobool39, label %if.else.1.31, label %if.then40.1.31

if.then40.1.31:                                   ; preds = %for.end38.1.31
  %cmp41.1.31 = fcmp olt float %partial_sum.0.lcssa.1.31, 0.000000e+00
  %sub42.1.31 = fsub float -0.000000e+00, %partial_sum.0.lcssa.1.31
  %cond.1.31 = select i1 %cmp41.1.31, float %sub42.1.31, float %partial_sum.0.lcssa.1.31
  %conv.1.31 = fptoui float %cond.1.31 to i8
  %conv43.1.31 = uitofp i8 %conv.1.31 to float
  %2203 = add nsw i64 %indvars.iv.next21.31, %2183
  %arrayidx47.1.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2203
  store float %conv43.1.31, float* %arrayidx47.1.31, align 4
  br label %for.inc53.1.31

if.else.1.31:                                     ; preds = %for.end38.1.31
  %2204 = add nsw i64 %indvars.iv.next21.31, %2182
  %arrayidx51.1.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2204
  store float %partial_sum.0.lcssa.1.31, float* %arrayidx51.1.31, align 4
  br label %for.inc53.1.31

for.inc53.1.31:                                   ; preds = %if.else.1.31, %if.then40.1.31
  %inc54.1.31 = add nsw i32 %in_j.011.31, 2
  %indvars.iv.next21.1.31 = add nsw i64 %indvars.iv20.31, 2
  br i1 %cmp94, label %for.end38.2.31, label %for.body10.2.31.preheader

for.body10.2.31.preheader:                        ; preds = %for.inc53.1.31
  br label %for.body10.2.31

for.body10.2.31:                                  ; preds = %for.body10.2.31.preheader, %for.inc36.2.31
  %ki.06.2.31 = phi i32 [ %inc37.2.31, %for.inc36.2.31 ], [ 0, %for.body10.2.31.preheader ]
  %partial_sum.05.2.31 = phi float [ %partial_sum.3.2.31, %for.inc36.2.31 ], [ 0.000000e+00, %for.body10.2.31.preheader ]
  %add.2.31 = add nsw i32 %ki.06.2.31, %inc58.30
  %notlhs.2.31 = icmp slt i32 %add.2.31, 0
  %notrhs.2.31 = icmp uge i32 %add.2.31, %img_height
  %.not.2.31 = or i1 %notrhs.2.31, %notlhs.2.31
  %brmerge.2.31 = or i1 %.not.2.31, %cmp151.not.2.31
  br i1 %brmerge.2.31, label %for.inc36.2.31, label %for.body16.lr.ph.2.31

for.body16.lr.ph.2.31:                            ; preds = %for.body10.2.31
  %mul.2.31 = shl i32 %add.2.31, 7
  %mul30.2.31 = mul i32 %ki.06.2.31, %kern_width
  br label %for.body16.2.31

for.body16.2.31:                                  ; preds = %for.inc.2.31, %for.body16.lr.ph.2.31
  %indvars.iv.2.31 = phi i64 [ 0, %for.body16.lr.ph.2.31 ], [ %indvars.iv.next.2.31, %for.inc.2.31 ]
  %partial_sum.12.2.31 = phi float [ %partial_sum.05.2.31, %for.body16.lr.ph.2.31 ], [ %partial_sum.2.2.31, %for.inc.2.31 ]
  %2205 = trunc i64 %indvars.iv.2.31 to i32
  %add17.2.31 = add nsw i32 %2205, %inc54.1.31
  %cmp18.2.31 = icmp sgt i32 %add17.2.31, -1
  %cmp21.2.31 = icmp ult i32 %add17.2.31, %img_width
  %2206 = and i1 %cmp18.2.31, %cmp21.2.31
  br i1 %2206, label %if.end26.2.31, label %for.inc.2.31

if.end26.2.31:                                    ; preds = %for.body16.2.31
  %add29.2.31 = add nsw i32 %add17.2.31, %mul.2.31
  %idxprom.2.31 = sext i32 %add29.2.31 to i64
  %arrayidx.2.31 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.2.31
  %2207 = load float, float* %arrayidx.2.31, align 4
  %2208 = trunc i64 %indvars.iv.2.31 to i32
  %add31.2.31 = add i32 %2208, %mul30.2.31
  %idxprom32.2.31 = zext i32 %add31.2.31 to i64
  %arrayidx33.2.31 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.2.31
  %2209 = load float, float* %arrayidx33.2.31, align 4
  %mul34.2.31 = fmul float %2207, %2209
  %add35.2.31 = fadd float %partial_sum.12.2.31, %mul34.2.31
  br label %for.inc.2.31

for.inc.2.31:                                     ; preds = %if.end26.2.31, %for.body16.2.31
  %partial_sum.2.2.31 = phi float [ %add35.2.31, %if.end26.2.31 ], [ %partial_sum.12.2.31, %for.body16.2.31 ]
  %indvars.iv.next.2.31 = add nuw nsw i64 %indvars.iv.2.31, 1
  %lftr.wideiv.2.31 = trunc i64 %indvars.iv.next.2.31 to i32
  %exitcond.2.31 = icmp eq i32 %lftr.wideiv.2.31, %kern_width
  br i1 %exitcond.2.31, label %for.inc36.2.31.loopexit, label %for.body16.2.31, !llvm.loop !1

for.inc36.2.31.loopexit:                          ; preds = %for.inc.2.31
  %partial_sum.2.2.31.lcssa = phi float [ %partial_sum.2.2.31, %for.inc.2.31 ]
  br label %for.inc36.2.31

for.inc36.2.31:                                   ; preds = %for.inc36.2.31.loopexit, %for.body10.2.31
  %partial_sum.3.2.31 = phi float [ %partial_sum.05.2.31, %for.body10.2.31 ], [ %partial_sum.2.2.31.lcssa, %for.inc36.2.31.loopexit ]
  %inc37.2.31 = add nuw nsw i32 %ki.06.2.31, 1
  %exitcond19.2.31 = icmp eq i32 %inc37.2.31, %kern_height
  br i1 %exitcond19.2.31, label %for.end38.2.31.loopexit, label %for.body10.2.31, !llvm.loop !3

for.end38.2.31.loopexit:                          ; preds = %for.inc36.2.31
  %partial_sum.3.2.31.lcssa = phi float [ %partial_sum.3.2.31, %for.inc36.2.31 ]
  br label %for.end38.2.31

for.end38.2.31:                                   ; preds = %for.end38.2.31.loopexit, %for.inc53.1.31
  %partial_sum.0.lcssa.2.31 = phi float [ 0.000000e+00, %for.inc53.1.31 ], [ %partial_sum.3.2.31.lcssa, %for.end38.2.31.loopexit ]
  br i1 %tobool39, label %if.else.2.31, label %if.then40.2.31

if.then40.2.31:                                   ; preds = %for.end38.2.31
  %cmp41.2.31 = fcmp olt float %partial_sum.0.lcssa.2.31, 0.000000e+00
  %sub42.2.31 = fsub float -0.000000e+00, %partial_sum.0.lcssa.2.31
  %cond.2.31 = select i1 %cmp41.2.31, float %sub42.2.31, float %partial_sum.0.lcssa.2.31
  %conv.2.31 = fptoui float %cond.2.31 to i8
  %conv43.2.31 = uitofp i8 %conv.2.31 to float
  %2210 = add nsw i64 %indvars.iv.next21.1.31, %2183
  %arrayidx47.2.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2210
  store float %conv43.2.31, float* %arrayidx47.2.31, align 4
  br label %for.inc53.2.31

if.else.2.31:                                     ; preds = %for.end38.2.31
  %2211 = add nsw i64 %indvars.iv.next21.1.31, %2182
  %arrayidx51.2.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2211
  store float %partial_sum.0.lcssa.2.31, float* %arrayidx51.2.31, align 4
  br label %for.inc53.2.31

for.inc53.2.31:                                   ; preds = %if.else.2.31, %if.then40.2.31
  %inc54.2.31 = add nsw i32 %in_j.011.31, 3
  %indvars.iv.next21.2.31 = add nsw i64 %indvars.iv20.31, 3
  br i1 %cmp94, label %for.end38.3.31, label %for.body10.3.31.preheader

for.body10.3.31.preheader:                        ; preds = %for.inc53.2.31
  br label %for.body10.3.31

for.body10.3.31:                                  ; preds = %for.body10.3.31.preheader, %for.inc36.3.31
  %ki.06.3.31 = phi i32 [ %inc37.3.31, %for.inc36.3.31 ], [ 0, %for.body10.3.31.preheader ]
  %partial_sum.05.3.31 = phi float [ %partial_sum.3.3.31, %for.inc36.3.31 ], [ 0.000000e+00, %for.body10.3.31.preheader ]
  %add.3.31 = add nsw i32 %ki.06.3.31, %inc58.30
  %notlhs.3.31 = icmp slt i32 %add.3.31, 0
  %notrhs.3.31 = icmp uge i32 %add.3.31, %img_height
  %.not.3.31 = or i1 %notrhs.3.31, %notlhs.3.31
  %brmerge.3.31 = or i1 %.not.3.31, %cmp151.not.3.31
  br i1 %brmerge.3.31, label %for.inc36.3.31, label %for.body16.lr.ph.3.31

for.body16.lr.ph.3.31:                            ; preds = %for.body10.3.31
  %mul.3.31 = shl i32 %add.3.31, 7
  %mul30.3.31 = mul i32 %ki.06.3.31, %kern_width
  br label %for.body16.3.31

for.body16.3.31:                                  ; preds = %for.inc.3.31, %for.body16.lr.ph.3.31
  %indvars.iv.3.31 = phi i64 [ 0, %for.body16.lr.ph.3.31 ], [ %indvars.iv.next.3.31, %for.inc.3.31 ]
  %partial_sum.12.3.31 = phi float [ %partial_sum.05.3.31, %for.body16.lr.ph.3.31 ], [ %partial_sum.2.3.31, %for.inc.3.31 ]
  %2212 = trunc i64 %indvars.iv.3.31 to i32
  %add17.3.31 = add nsw i32 %2212, %inc54.2.31
  %cmp18.3.31 = icmp sgt i32 %add17.3.31, -1
  %cmp21.3.31 = icmp ult i32 %add17.3.31, %img_width
  %2213 = and i1 %cmp18.3.31, %cmp21.3.31
  br i1 %2213, label %if.end26.3.31, label %for.inc.3.31

if.end26.3.31:                                    ; preds = %for.body16.3.31
  %add29.3.31 = add nsw i32 %add17.3.31, %mul.3.31
  %idxprom.3.31 = sext i32 %add29.3.31 to i64
  %arrayidx.3.31 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.3.31
  %2214 = load float, float* %arrayidx.3.31, align 4
  %2215 = trunc i64 %indvars.iv.3.31 to i32
  %add31.3.31 = add i32 %2215, %mul30.3.31
  %idxprom32.3.31 = zext i32 %add31.3.31 to i64
  %arrayidx33.3.31 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.3.31
  %2216 = load float, float* %arrayidx33.3.31, align 4
  %mul34.3.31 = fmul float %2214, %2216
  %add35.3.31 = fadd float %partial_sum.12.3.31, %mul34.3.31
  br label %for.inc.3.31

for.inc.3.31:                                     ; preds = %if.end26.3.31, %for.body16.3.31
  %partial_sum.2.3.31 = phi float [ %add35.3.31, %if.end26.3.31 ], [ %partial_sum.12.3.31, %for.body16.3.31 ]
  %indvars.iv.next.3.31 = add nuw nsw i64 %indvars.iv.3.31, 1
  %lftr.wideiv.3.31 = trunc i64 %indvars.iv.next.3.31 to i32
  %exitcond.3.31 = icmp eq i32 %lftr.wideiv.3.31, %kern_width
  br i1 %exitcond.3.31, label %for.inc36.3.31.loopexit, label %for.body16.3.31, !llvm.loop !1

for.inc36.3.31.loopexit:                          ; preds = %for.inc.3.31
  %partial_sum.2.3.31.lcssa = phi float [ %partial_sum.2.3.31, %for.inc.3.31 ]
  br label %for.inc36.3.31

for.inc36.3.31:                                   ; preds = %for.inc36.3.31.loopexit, %for.body10.3.31
  %partial_sum.3.3.31 = phi float [ %partial_sum.05.3.31, %for.body10.3.31 ], [ %partial_sum.2.3.31.lcssa, %for.inc36.3.31.loopexit ]
  %inc37.3.31 = add nuw nsw i32 %ki.06.3.31, 1
  %exitcond19.3.31 = icmp eq i32 %inc37.3.31, %kern_height
  br i1 %exitcond19.3.31, label %for.end38.3.31.loopexit, label %for.body10.3.31, !llvm.loop !3

for.end38.3.31.loopexit:                          ; preds = %for.inc36.3.31
  %partial_sum.3.3.31.lcssa = phi float [ %partial_sum.3.3.31, %for.inc36.3.31 ]
  br label %for.end38.3.31

for.end38.3.31:                                   ; preds = %for.end38.3.31.loopexit, %for.inc53.2.31
  %partial_sum.0.lcssa.3.31 = phi float [ 0.000000e+00, %for.inc53.2.31 ], [ %partial_sum.3.3.31.lcssa, %for.end38.3.31.loopexit ]
  br i1 %tobool39, label %if.else.3.31, label %if.then40.3.31

if.then40.3.31:                                   ; preds = %for.end38.3.31
  %cmp41.3.31 = fcmp olt float %partial_sum.0.lcssa.3.31, 0.000000e+00
  %sub42.3.31 = fsub float -0.000000e+00, %partial_sum.0.lcssa.3.31
  %cond.3.31 = select i1 %cmp41.3.31, float %sub42.3.31, float %partial_sum.0.lcssa.3.31
  %conv.3.31 = fptoui float %cond.3.31 to i8
  %conv43.3.31 = uitofp i8 %conv.3.31 to float
  %2217 = add nsw i64 %indvars.iv.next21.2.31, %2183
  %arrayidx47.3.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2217
  store float %conv43.3.31, float* %arrayidx47.3.31, align 4
  br label %for.inc53.3.31

if.else.3.31:                                     ; preds = %for.end38.3.31
  %2218 = add nsw i64 %indvars.iv.next21.2.31, %2182
  %arrayidx51.3.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2218
  store float %partial_sum.0.lcssa.3.31, float* %arrayidx51.3.31, align 4
  br label %for.inc53.3.31

for.inc53.3.31:                                   ; preds = %if.else.3.31, %if.then40.3.31
  %inc54.3.31 = add nsw i32 %in_j.011.31, 4
  %indvars.iv.next21.3.31 = add nsw i64 %indvars.iv20.31, 4
  br i1 %cmp94, label %for.end38.4.31, label %for.body10.4.31.preheader

for.body10.4.31.preheader:                        ; preds = %for.inc53.3.31
  br label %for.body10.4.31

for.body10.4.31:                                  ; preds = %for.body10.4.31.preheader, %for.inc36.4.31
  %ki.06.4.31 = phi i32 [ %inc37.4.31, %for.inc36.4.31 ], [ 0, %for.body10.4.31.preheader ]
  %partial_sum.05.4.31 = phi float [ %partial_sum.3.4.31, %for.inc36.4.31 ], [ 0.000000e+00, %for.body10.4.31.preheader ]
  %add.4.31 = add nsw i32 %ki.06.4.31, %inc58.30
  %notlhs.4.31 = icmp slt i32 %add.4.31, 0
  %notrhs.4.31 = icmp uge i32 %add.4.31, %img_height
  %.not.4.31 = or i1 %notrhs.4.31, %notlhs.4.31
  %brmerge.4.31 = or i1 %.not.4.31, %cmp151.not.4.31
  br i1 %brmerge.4.31, label %for.inc36.4.31, label %for.body16.lr.ph.4.31

for.body16.lr.ph.4.31:                            ; preds = %for.body10.4.31
  %mul.4.31 = shl i32 %add.4.31, 7
  %mul30.4.31 = mul i32 %ki.06.4.31, %kern_width
  br label %for.body16.4.31

for.body16.4.31:                                  ; preds = %for.inc.4.31, %for.body16.lr.ph.4.31
  %indvars.iv.4.31 = phi i64 [ 0, %for.body16.lr.ph.4.31 ], [ %indvars.iv.next.4.31, %for.inc.4.31 ]
  %partial_sum.12.4.31 = phi float [ %partial_sum.05.4.31, %for.body16.lr.ph.4.31 ], [ %partial_sum.2.4.31, %for.inc.4.31 ]
  %2219 = trunc i64 %indvars.iv.4.31 to i32
  %add17.4.31 = add nsw i32 %2219, %inc54.3.31
  %cmp18.4.31 = icmp sgt i32 %add17.4.31, -1
  %cmp21.4.31 = icmp ult i32 %add17.4.31, %img_width
  %2220 = and i1 %cmp18.4.31, %cmp21.4.31
  br i1 %2220, label %if.end26.4.31, label %for.inc.4.31

if.end26.4.31:                                    ; preds = %for.body16.4.31
  %add29.4.31 = add nsw i32 %add17.4.31, %mul.4.31
  %idxprom.4.31 = sext i32 %add29.4.31 to i64
  %arrayidx.4.31 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.4.31
  %2221 = load float, float* %arrayidx.4.31, align 4
  %2222 = trunc i64 %indvars.iv.4.31 to i32
  %add31.4.31 = add i32 %2222, %mul30.4.31
  %idxprom32.4.31 = zext i32 %add31.4.31 to i64
  %arrayidx33.4.31 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.4.31
  %2223 = load float, float* %arrayidx33.4.31, align 4
  %mul34.4.31 = fmul float %2221, %2223
  %add35.4.31 = fadd float %partial_sum.12.4.31, %mul34.4.31
  br label %for.inc.4.31

for.inc.4.31:                                     ; preds = %if.end26.4.31, %for.body16.4.31
  %partial_sum.2.4.31 = phi float [ %add35.4.31, %if.end26.4.31 ], [ %partial_sum.12.4.31, %for.body16.4.31 ]
  %indvars.iv.next.4.31 = add nuw nsw i64 %indvars.iv.4.31, 1
  %lftr.wideiv.4.31 = trunc i64 %indvars.iv.next.4.31 to i32
  %exitcond.4.31 = icmp eq i32 %lftr.wideiv.4.31, %kern_width
  br i1 %exitcond.4.31, label %for.inc36.4.31.loopexit, label %for.body16.4.31, !llvm.loop !1

for.inc36.4.31.loopexit:                          ; preds = %for.inc.4.31
  %partial_sum.2.4.31.lcssa = phi float [ %partial_sum.2.4.31, %for.inc.4.31 ]
  br label %for.inc36.4.31

for.inc36.4.31:                                   ; preds = %for.inc36.4.31.loopexit, %for.body10.4.31
  %partial_sum.3.4.31 = phi float [ %partial_sum.05.4.31, %for.body10.4.31 ], [ %partial_sum.2.4.31.lcssa, %for.inc36.4.31.loopexit ]
  %inc37.4.31 = add nuw nsw i32 %ki.06.4.31, 1
  %exitcond19.4.31 = icmp eq i32 %inc37.4.31, %kern_height
  br i1 %exitcond19.4.31, label %for.end38.4.31.loopexit, label %for.body10.4.31, !llvm.loop !3

for.end38.4.31.loopexit:                          ; preds = %for.inc36.4.31
  %partial_sum.3.4.31.lcssa = phi float [ %partial_sum.3.4.31, %for.inc36.4.31 ]
  br label %for.end38.4.31

for.end38.4.31:                                   ; preds = %for.end38.4.31.loopexit, %for.inc53.3.31
  %partial_sum.0.lcssa.4.31 = phi float [ 0.000000e+00, %for.inc53.3.31 ], [ %partial_sum.3.4.31.lcssa, %for.end38.4.31.loopexit ]
  br i1 %tobool39, label %if.else.4.31, label %if.then40.4.31

if.then40.4.31:                                   ; preds = %for.end38.4.31
  %cmp41.4.31 = fcmp olt float %partial_sum.0.lcssa.4.31, 0.000000e+00
  %sub42.4.31 = fsub float -0.000000e+00, %partial_sum.0.lcssa.4.31
  %cond.4.31 = select i1 %cmp41.4.31, float %sub42.4.31, float %partial_sum.0.lcssa.4.31
  %conv.4.31 = fptoui float %cond.4.31 to i8
  %conv43.4.31 = uitofp i8 %conv.4.31 to float
  %2224 = add nsw i64 %indvars.iv.next21.3.31, %2183
  %arrayidx47.4.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2224
  store float %conv43.4.31, float* %arrayidx47.4.31, align 4
  br label %for.inc53.4.31

if.else.4.31:                                     ; preds = %for.end38.4.31
  %2225 = add nsw i64 %indvars.iv.next21.3.31, %2182
  %arrayidx51.4.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2225
  store float %partial_sum.0.lcssa.4.31, float* %arrayidx51.4.31, align 4
  br label %for.inc53.4.31

for.inc53.4.31:                                   ; preds = %if.else.4.31, %if.then40.4.31
  %inc54.4.31 = add nsw i32 %in_j.011.31, 5
  %indvars.iv.next21.4.31 = add nsw i64 %indvars.iv20.31, 5
  br i1 %cmp94, label %for.end38.5.31, label %for.body10.5.31.preheader

for.body10.5.31.preheader:                        ; preds = %for.inc53.4.31
  br label %for.body10.5.31

for.body10.5.31:                                  ; preds = %for.body10.5.31.preheader, %for.inc36.5.31
  %ki.06.5.31 = phi i32 [ %inc37.5.31, %for.inc36.5.31 ], [ 0, %for.body10.5.31.preheader ]
  %partial_sum.05.5.31 = phi float [ %partial_sum.3.5.31, %for.inc36.5.31 ], [ 0.000000e+00, %for.body10.5.31.preheader ]
  %add.5.31 = add nsw i32 %ki.06.5.31, %inc58.30
  %notlhs.5.31 = icmp slt i32 %add.5.31, 0
  %notrhs.5.31 = icmp uge i32 %add.5.31, %img_height
  %.not.5.31 = or i1 %notrhs.5.31, %notlhs.5.31
  %brmerge.5.31 = or i1 %.not.5.31, %cmp151.not.5.31
  br i1 %brmerge.5.31, label %for.inc36.5.31, label %for.body16.lr.ph.5.31

for.body16.lr.ph.5.31:                            ; preds = %for.body10.5.31
  %mul.5.31 = shl i32 %add.5.31, 7
  %mul30.5.31 = mul i32 %ki.06.5.31, %kern_width
  br label %for.body16.5.31

for.body16.5.31:                                  ; preds = %for.inc.5.31, %for.body16.lr.ph.5.31
  %indvars.iv.5.31 = phi i64 [ 0, %for.body16.lr.ph.5.31 ], [ %indvars.iv.next.5.31, %for.inc.5.31 ]
  %partial_sum.12.5.31 = phi float [ %partial_sum.05.5.31, %for.body16.lr.ph.5.31 ], [ %partial_sum.2.5.31, %for.inc.5.31 ]
  %2226 = trunc i64 %indvars.iv.5.31 to i32
  %add17.5.31 = add nsw i32 %2226, %inc54.4.31
  %cmp18.5.31 = icmp sgt i32 %add17.5.31, -1
  %cmp21.5.31 = icmp ult i32 %add17.5.31, %img_width
  %2227 = and i1 %cmp18.5.31, %cmp21.5.31
  br i1 %2227, label %if.end26.5.31, label %for.inc.5.31

if.end26.5.31:                                    ; preds = %for.body16.5.31
  %add29.5.31 = add nsw i32 %add17.5.31, %mul.5.31
  %idxprom.5.31 = sext i32 %add29.5.31 to i64
  %arrayidx.5.31 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.5.31
  %2228 = load float, float* %arrayidx.5.31, align 4
  %2229 = trunc i64 %indvars.iv.5.31 to i32
  %add31.5.31 = add i32 %2229, %mul30.5.31
  %idxprom32.5.31 = zext i32 %add31.5.31 to i64
  %arrayidx33.5.31 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.5.31
  %2230 = load float, float* %arrayidx33.5.31, align 4
  %mul34.5.31 = fmul float %2228, %2230
  %add35.5.31 = fadd float %partial_sum.12.5.31, %mul34.5.31
  br label %for.inc.5.31

for.inc.5.31:                                     ; preds = %if.end26.5.31, %for.body16.5.31
  %partial_sum.2.5.31 = phi float [ %add35.5.31, %if.end26.5.31 ], [ %partial_sum.12.5.31, %for.body16.5.31 ]
  %indvars.iv.next.5.31 = add nuw nsw i64 %indvars.iv.5.31, 1
  %lftr.wideiv.5.31 = trunc i64 %indvars.iv.next.5.31 to i32
  %exitcond.5.31 = icmp eq i32 %lftr.wideiv.5.31, %kern_width
  br i1 %exitcond.5.31, label %for.inc36.5.31.loopexit, label %for.body16.5.31, !llvm.loop !1

for.inc36.5.31.loopexit:                          ; preds = %for.inc.5.31
  %partial_sum.2.5.31.lcssa = phi float [ %partial_sum.2.5.31, %for.inc.5.31 ]
  br label %for.inc36.5.31

for.inc36.5.31:                                   ; preds = %for.inc36.5.31.loopexit, %for.body10.5.31
  %partial_sum.3.5.31 = phi float [ %partial_sum.05.5.31, %for.body10.5.31 ], [ %partial_sum.2.5.31.lcssa, %for.inc36.5.31.loopexit ]
  %inc37.5.31 = add nuw nsw i32 %ki.06.5.31, 1
  %exitcond19.5.31 = icmp eq i32 %inc37.5.31, %kern_height
  br i1 %exitcond19.5.31, label %for.end38.5.31.loopexit, label %for.body10.5.31, !llvm.loop !3

for.end38.5.31.loopexit:                          ; preds = %for.inc36.5.31
  %partial_sum.3.5.31.lcssa = phi float [ %partial_sum.3.5.31, %for.inc36.5.31 ]
  br label %for.end38.5.31

for.end38.5.31:                                   ; preds = %for.end38.5.31.loopexit, %for.inc53.4.31
  %partial_sum.0.lcssa.5.31 = phi float [ 0.000000e+00, %for.inc53.4.31 ], [ %partial_sum.3.5.31.lcssa, %for.end38.5.31.loopexit ]
  br i1 %tobool39, label %if.else.5.31, label %if.then40.5.31

if.then40.5.31:                                   ; preds = %for.end38.5.31
  %cmp41.5.31 = fcmp olt float %partial_sum.0.lcssa.5.31, 0.000000e+00
  %sub42.5.31 = fsub float -0.000000e+00, %partial_sum.0.lcssa.5.31
  %cond.5.31 = select i1 %cmp41.5.31, float %sub42.5.31, float %partial_sum.0.lcssa.5.31
  %conv.5.31 = fptoui float %cond.5.31 to i8
  %conv43.5.31 = uitofp i8 %conv.5.31 to float
  %2231 = add nsw i64 %indvars.iv.next21.4.31, %2183
  %arrayidx47.5.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2231
  store float %conv43.5.31, float* %arrayidx47.5.31, align 4
  br label %for.inc53.5.31

if.else.5.31:                                     ; preds = %for.end38.5.31
  %2232 = add nsw i64 %indvars.iv.next21.4.31, %2182
  %arrayidx51.5.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2232
  store float %partial_sum.0.lcssa.5.31, float* %arrayidx51.5.31, align 4
  br label %for.inc53.5.31

for.inc53.5.31:                                   ; preds = %if.else.5.31, %if.then40.5.31
  %inc54.5.31 = add nsw i32 %in_j.011.31, 6
  %indvars.iv.next21.5.31 = add nsw i64 %indvars.iv20.31, 6
  br i1 %cmp94, label %for.end38.6.31, label %for.body10.6.31.preheader

for.body10.6.31.preheader:                        ; preds = %for.inc53.5.31
  br label %for.body10.6.31

for.body10.6.31:                                  ; preds = %for.body10.6.31.preheader, %for.inc36.6.31
  %ki.06.6.31 = phi i32 [ %inc37.6.31, %for.inc36.6.31 ], [ 0, %for.body10.6.31.preheader ]
  %partial_sum.05.6.31 = phi float [ %partial_sum.3.6.31, %for.inc36.6.31 ], [ 0.000000e+00, %for.body10.6.31.preheader ]
  %add.6.31 = add nsw i32 %ki.06.6.31, %inc58.30
  %notlhs.6.31 = icmp slt i32 %add.6.31, 0
  %notrhs.6.31 = icmp uge i32 %add.6.31, %img_height
  %.not.6.31 = or i1 %notrhs.6.31, %notlhs.6.31
  %brmerge.6.31 = or i1 %.not.6.31, %cmp151.not.6.31
  br i1 %brmerge.6.31, label %for.inc36.6.31, label %for.body16.lr.ph.6.31

for.body16.lr.ph.6.31:                            ; preds = %for.body10.6.31
  %mul.6.31 = shl i32 %add.6.31, 7
  %mul30.6.31 = mul i32 %ki.06.6.31, %kern_width
  br label %for.body16.6.31

for.body16.6.31:                                  ; preds = %for.inc.6.31, %for.body16.lr.ph.6.31
  %indvars.iv.6.31 = phi i64 [ 0, %for.body16.lr.ph.6.31 ], [ %indvars.iv.next.6.31, %for.inc.6.31 ]
  %partial_sum.12.6.31 = phi float [ %partial_sum.05.6.31, %for.body16.lr.ph.6.31 ], [ %partial_sum.2.6.31, %for.inc.6.31 ]
  %2233 = trunc i64 %indvars.iv.6.31 to i32
  %add17.6.31 = add nsw i32 %2233, %inc54.5.31
  %cmp18.6.31 = icmp sgt i32 %add17.6.31, -1
  %cmp21.6.31 = icmp ult i32 %add17.6.31, %img_width
  %2234 = and i1 %cmp18.6.31, %cmp21.6.31
  br i1 %2234, label %if.end26.6.31, label %for.inc.6.31

if.end26.6.31:                                    ; preds = %for.body16.6.31
  %add29.6.31 = add nsw i32 %add17.6.31, %mul.6.31
  %idxprom.6.31 = sext i32 %add29.6.31 to i64
  %arrayidx.6.31 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.6.31
  %2235 = load float, float* %arrayidx.6.31, align 4
  %2236 = trunc i64 %indvars.iv.6.31 to i32
  %add31.6.31 = add i32 %2236, %mul30.6.31
  %idxprom32.6.31 = zext i32 %add31.6.31 to i64
  %arrayidx33.6.31 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.6.31
  %2237 = load float, float* %arrayidx33.6.31, align 4
  %mul34.6.31 = fmul float %2235, %2237
  %add35.6.31 = fadd float %partial_sum.12.6.31, %mul34.6.31
  br label %for.inc.6.31

for.inc.6.31:                                     ; preds = %if.end26.6.31, %for.body16.6.31
  %partial_sum.2.6.31 = phi float [ %add35.6.31, %if.end26.6.31 ], [ %partial_sum.12.6.31, %for.body16.6.31 ]
  %indvars.iv.next.6.31 = add nuw nsw i64 %indvars.iv.6.31, 1
  %lftr.wideiv.6.31 = trunc i64 %indvars.iv.next.6.31 to i32
  %exitcond.6.31 = icmp eq i32 %lftr.wideiv.6.31, %kern_width
  br i1 %exitcond.6.31, label %for.inc36.6.31.loopexit, label %for.body16.6.31, !llvm.loop !1

for.inc36.6.31.loopexit:                          ; preds = %for.inc.6.31
  %partial_sum.2.6.31.lcssa = phi float [ %partial_sum.2.6.31, %for.inc.6.31 ]
  br label %for.inc36.6.31

for.inc36.6.31:                                   ; preds = %for.inc36.6.31.loopexit, %for.body10.6.31
  %partial_sum.3.6.31 = phi float [ %partial_sum.05.6.31, %for.body10.6.31 ], [ %partial_sum.2.6.31.lcssa, %for.inc36.6.31.loopexit ]
  %inc37.6.31 = add nuw nsw i32 %ki.06.6.31, 1
  %exitcond19.6.31 = icmp eq i32 %inc37.6.31, %kern_height
  br i1 %exitcond19.6.31, label %for.end38.6.31.loopexit, label %for.body10.6.31, !llvm.loop !3

for.end38.6.31.loopexit:                          ; preds = %for.inc36.6.31
  %partial_sum.3.6.31.lcssa = phi float [ %partial_sum.3.6.31, %for.inc36.6.31 ]
  br label %for.end38.6.31

for.end38.6.31:                                   ; preds = %for.end38.6.31.loopexit, %for.inc53.5.31
  %partial_sum.0.lcssa.6.31 = phi float [ 0.000000e+00, %for.inc53.5.31 ], [ %partial_sum.3.6.31.lcssa, %for.end38.6.31.loopexit ]
  br i1 %tobool39, label %if.else.6.31, label %if.then40.6.31

if.then40.6.31:                                   ; preds = %for.end38.6.31
  %cmp41.6.31 = fcmp olt float %partial_sum.0.lcssa.6.31, 0.000000e+00
  %sub42.6.31 = fsub float -0.000000e+00, %partial_sum.0.lcssa.6.31
  %cond.6.31 = select i1 %cmp41.6.31, float %sub42.6.31, float %partial_sum.0.lcssa.6.31
  %conv.6.31 = fptoui float %cond.6.31 to i8
  %conv43.6.31 = uitofp i8 %conv.6.31 to float
  %2238 = add nsw i64 %indvars.iv.next21.5.31, %2183
  %arrayidx47.6.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2238
  store float %conv43.6.31, float* %arrayidx47.6.31, align 4
  br label %for.inc53.6.31

if.else.6.31:                                     ; preds = %for.end38.6.31
  %2239 = add nsw i64 %indvars.iv.next21.5.31, %2182
  %arrayidx51.6.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2239
  store float %partial_sum.0.lcssa.6.31, float* %arrayidx51.6.31, align 4
  br label %for.inc53.6.31

for.inc53.6.31:                                   ; preds = %if.else.6.31, %if.then40.6.31
  %inc54.6.31 = add nsw i32 %in_j.011.31, 7
  %indvars.iv.next21.6.31 = add nsw i64 %indvars.iv20.31, 7
  br i1 %cmp94, label %for.end38.7.31, label %for.body10.7.31.preheader

for.body10.7.31.preheader:                        ; preds = %for.inc53.6.31
  br label %for.body10.7.31

for.body10.7.31:                                  ; preds = %for.body10.7.31.preheader, %for.inc36.7.31
  %ki.06.7.31 = phi i32 [ %inc37.7.31, %for.inc36.7.31 ], [ 0, %for.body10.7.31.preheader ]
  %partial_sum.05.7.31 = phi float [ %partial_sum.3.7.31, %for.inc36.7.31 ], [ 0.000000e+00, %for.body10.7.31.preheader ]
  %add.7.31 = add nsw i32 %ki.06.7.31, %inc58.30
  %notlhs.7.31 = icmp slt i32 %add.7.31, 0
  %notrhs.7.31 = icmp uge i32 %add.7.31, %img_height
  %.not.7.31 = or i1 %notrhs.7.31, %notlhs.7.31
  %brmerge.7.31 = or i1 %.not.7.31, %cmp151.not.7.31
  br i1 %brmerge.7.31, label %for.inc36.7.31, label %for.body16.lr.ph.7.31

for.body16.lr.ph.7.31:                            ; preds = %for.body10.7.31
  %mul.7.31 = shl i32 %add.7.31, 7
  %mul30.7.31 = mul i32 %ki.06.7.31, %kern_width
  br label %for.body16.7.31

for.body16.7.31:                                  ; preds = %for.inc.7.31, %for.body16.lr.ph.7.31
  %indvars.iv.7.31 = phi i64 [ 0, %for.body16.lr.ph.7.31 ], [ %indvars.iv.next.7.31, %for.inc.7.31 ]
  %partial_sum.12.7.31 = phi float [ %partial_sum.05.7.31, %for.body16.lr.ph.7.31 ], [ %partial_sum.2.7.31, %for.inc.7.31 ]
  %2240 = trunc i64 %indvars.iv.7.31 to i32
  %add17.7.31 = add nsw i32 %2240, %inc54.6.31
  %cmp18.7.31 = icmp sgt i32 %add17.7.31, -1
  %cmp21.7.31 = icmp ult i32 %add17.7.31, %img_width
  %2241 = and i1 %cmp18.7.31, %cmp21.7.31
  br i1 %2241, label %if.end26.7.31, label %for.inc.7.31

if.end26.7.31:                                    ; preds = %for.body16.7.31
  %add29.7.31 = add nsw i32 %add17.7.31, %mul.7.31
  %idxprom.7.31 = sext i32 %add29.7.31 to i64
  %arrayidx.7.31 = getelementptr inbounds float, float* inttoptr (i64 570425376 to float*), i64 %idxprom.7.31
  %2242 = load float, float* %arrayidx.7.31, align 4
  %2243 = trunc i64 %indvars.iv.7.31 to i32
  %add31.7.31 = add i32 %2243, %mul30.7.31
  %idxprom32.7.31 = zext i32 %add31.7.31 to i64
  %arrayidx33.7.31 = getelementptr inbounds float, float* inttoptr (i64 570556448 to float*), i64 %idxprom32.7.31
  %2244 = load float, float* %arrayidx33.7.31, align 4
  %mul34.7.31 = fmul float %2242, %2244
  %add35.7.31 = fadd float %partial_sum.12.7.31, %mul34.7.31
  br label %for.inc.7.31

for.inc.7.31:                                     ; preds = %if.end26.7.31, %for.body16.7.31
  %partial_sum.2.7.31 = phi float [ %add35.7.31, %if.end26.7.31 ], [ %partial_sum.12.7.31, %for.body16.7.31 ]
  %indvars.iv.next.7.31 = add nuw nsw i64 %indvars.iv.7.31, 1
  %lftr.wideiv.7.31 = trunc i64 %indvars.iv.next.7.31 to i32
  %exitcond.7.31 = icmp eq i32 %lftr.wideiv.7.31, %kern_width
  br i1 %exitcond.7.31, label %for.inc36.7.31.loopexit, label %for.body16.7.31, !llvm.loop !1

for.inc36.7.31.loopexit:                          ; preds = %for.inc.7.31
  %partial_sum.2.7.31.lcssa = phi float [ %partial_sum.2.7.31, %for.inc.7.31 ]
  br label %for.inc36.7.31

for.inc36.7.31:                                   ; preds = %for.inc36.7.31.loopexit, %for.body10.7.31
  %partial_sum.3.7.31 = phi float [ %partial_sum.05.7.31, %for.body10.7.31 ], [ %partial_sum.2.7.31.lcssa, %for.inc36.7.31.loopexit ]
  %inc37.7.31 = add nuw nsw i32 %ki.06.7.31, 1
  %exitcond19.7.31 = icmp eq i32 %inc37.7.31, %kern_height
  br i1 %exitcond19.7.31, label %for.end38.7.31.loopexit, label %for.body10.7.31, !llvm.loop !3

for.end38.7.31.loopexit:                          ; preds = %for.inc36.7.31
  %partial_sum.3.7.31.lcssa = phi float [ %partial_sum.3.7.31, %for.inc36.7.31 ]
  br label %for.end38.7.31

for.end38.7.31:                                   ; preds = %for.end38.7.31.loopexit, %for.inc53.6.31
  %partial_sum.0.lcssa.7.31 = phi float [ 0.000000e+00, %for.inc53.6.31 ], [ %partial_sum.3.7.31.lcssa, %for.end38.7.31.loopexit ]
  br i1 %tobool39, label %if.else.7.31, label %if.then40.7.31

if.then40.7.31:                                   ; preds = %for.end38.7.31
  %cmp41.7.31 = fcmp olt float %partial_sum.0.lcssa.7.31, 0.000000e+00
  %sub42.7.31 = fsub float -0.000000e+00, %partial_sum.0.lcssa.7.31
  %cond.7.31 = select i1 %cmp41.7.31, float %sub42.7.31, float %partial_sum.0.lcssa.7.31
  %conv.7.31 = fptoui float %cond.7.31 to i8
  %conv43.7.31 = uitofp i8 %conv.7.31 to float
  %2245 = add nsw i64 %indvars.iv.next21.6.31, %2183
  %arrayidx47.7.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2245
  store float %conv43.7.31, float* %arrayidx47.7.31, align 4
  br label %for.inc53.7.31

if.else.7.31:                                     ; preds = %for.end38.7.31
  %2246 = add nsw i64 %indvars.iv.next21.6.31, %2182
  %arrayidx51.7.31 = getelementptr inbounds float, float* inttoptr (i64 570490912 to float*), i64 %2246
  store float %partial_sum.0.lcssa.7.31, float* %arrayidx51.7.31, align 4
  br label %for.inc53.7.31

for.inc53.7.31:                                   ; preds = %if.else.7.31, %if.then40.7.31
  %inc54.7.31 = add nsw i32 %in_j.011.31, 8
  %indvars.iv.next21.7.31 = add nsw i64 %indvars.iv20.31, 8
  %lftr.wideiv24.7.31 = trunc i64 %indvars.iv.next21.7.31 to i32
  %exitcond25.7.31 = icmp eq i32 %lftr.wideiv24.7.31, %img_width
  br i1 %exitcond25.7.31, label %for.inc57.31.loopexit, label %for.cond8.preheader.31, !llvm.loop !5

for.inc57.31.loopexit:                            ; preds = %for.inc53.7.31
  br label %for.inc57.31

for.inc57.31:                                     ; preds = %for.inc57.31.loopexit, %for.cond5.preheader, %for.inc57, %for.inc57.1, %for.inc57.2, %for.inc57.3, %for.inc57.4, %for.inc57.5, %for.inc57.6, %for.inc57.7, %for.inc57.8, %for.inc57.9, %for.inc57.10, %for.inc57.11, %for.inc57.12, %for.inc57.13, %for.inc57.14, %for.inc57.15, %for.inc57.16, %for.inc57.17, %for.inc57.18, %for.inc57.19, %for.inc57.20, %for.inc57.21, %for.inc57.22, %for.inc57.23, %for.inc57.24, %for.inc57.25, %for.inc57.26, %for.inc57.27, %for.inc57.28, %for.inc57.29, %for.cond8.preheader.lr.ph.split.31, %for.inc57.30
  %inc58.31 = add nsw i32 %in_i.015, 32
  %indvars.iv.next27.31 = add nsw i64 %indvars.iv26, 32
  %lftr.wideiv28.31 = trunc i64 %indvars.iv.next27.31 to i32
  %exitcond29.31 = icmp eq i32 %lftr.wideiv28.31, %img_height
  br i1 %exitcond29.31, label %for.end60.loopexit, label %for.cond5.preheader, !llvm.loop !7
}

attributes #0 = { norecurse nounwind uwtable "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="true" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+fxsr,+mmx,+sse,+sse2" "unsafe-fp-math"="false" "use-soft-float"="false" }

!llvm.ident = !{!0}

!0 = !{!"clang version 3.8.1 "}
!1 = distinct !{!1, !2}
!2 = !{!"llvm.loop.unroll.disable"}
!3 = distinct !{!3, !2}
!4 = distinct !{!4, !2}
!5 = distinct !{!5, !2}
!6 = distinct !{!6, !2}
!7 = distinct !{!7, !2}
